#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace HR_TOOL.CodeGroup
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HOLYHRDB")]
	public partial class CodeDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertDEPT(DEPT instance);
    partial void UpdateDEPT(DEPT instance);
    partial void DeleteDEPT(DEPT instance);
    partial void InsertDEPTA(DEPTA instance);
    partial void UpdateDEPTA(DEPTA instance);
    partial void DeleteDEPTA(DEPTA instance);
    partial void InsertDEPTS(DEPTS instance);
    partial void UpdateDEPTS(DEPTS instance);
    partial void DeleteDEPTS(DEPTS instance);
    partial void InsertCOMP_DATAGROUP(COMP_DATAGROUP instance);
    partial void UpdateCOMP_DATAGROUP(COMP_DATAGROUP instance);
    partial void DeleteCOMP_DATAGROUP(COMP_DATAGROUP instance);
    partial void InsertCODE_FILTER(CODE_FILTER instance);
    partial void UpdateCODE_FILTER(CODE_FILTER instance);
    partial void DeleteCODE_FILTER(CODE_FILTER instance);
    partial void InsertHCODE(HCODE instance);
    partial void UpdateHCODE(HCODE instance);
    partial void DeleteHCODE(HCODE instance);
    partial void InsertROTE(ROTE instance);
    partial void UpdateROTE(ROTE instance);
    partial void DeleteROTE(ROTE instance);
    partial void InsertSALCODE(SALCODE instance);
    partial void UpdateSALCODE(SALCODE instance);
    partial void DeleteSALCODE(SALCODE instance);
    partial void InsertACCCD(ACCCD instance);
    partial void UpdateACCCD(ACCCD instance);
    partial void DeleteACCCD(ACCCD instance);
    partial void InsertJOB(JOB instance);
    partial void UpdateJOB(JOB instance);
    partial void DeleteJOB(JOB instance);
    partial void InsertJOBS(JOBS instance);
    partial void UpdateJOBS(JOBS instance);
    partial void DeleteJOBS(JOBS instance);
    partial void InsertJOBL(JOBL instance);
    partial void UpdateJOBL(JOBL instance);
    partial void DeleteJOBL(JOBL instance);
    partial void InsertROTET(ROTET instance);
    partial void UpdateROTET(ROTET instance);
    partial void DeleteROTET(ROTET instance);
    partial void InsertSTATION(STATION instance);
    partial void UpdateSTATION(STATION instance);
    partial void DeleteSTATION(STATION instance);
    partial void InsertTTSCD(TTSCD instance);
    partial void UpdateTTSCD(TTSCD instance);
    partial void DeleteTTSCD(TTSCD instance);
    partial void InsertOTRCD(OTRCD instance);
    partial void UpdateOTRCD(OTRCD instance);
    partial void DeleteOTRCD(OTRCD instance);
    partial void InsertWORKCD(WORKCD instance);
    partial void UpdateWORKCD(WORKCD instance);
    partial void DeleteWORKCD(WORKCD instance);
    partial void InsertINSCOMP(INSCOMP instance);
    partial void UpdateINSCOMP(INSCOMP instance);
    partial void DeleteINSCOMP(INSCOMP instance);
    partial void InsertHOLICD(HOLICD instance);
    partial void UpdateHOLICD(HOLICD instance);
    partial void DeleteHOLICD(HOLICD instance);
    partial void InsertAWARDCD(AWARDCD instance);
    partial void UpdateAWARDCD(AWARDCD instance);
    partial void DeleteAWARDCD(AWARDCD instance);
    partial void InsertBankCode(BankCode instance);
    partial void UpdateBankCode(BankCode instance);
    partial void DeleteBankCode(BankCode instance);
    partial void InsertGiftVoucher(GiftVoucher instance);
    partial void UpdateGiftVoucher(GiftVoucher instance);
    partial void DeleteGiftVoucher(GiftVoucher instance);
    partial void InsertOutPost(OutPost instance);
    partial void UpdateOutPost(OutPost instance);
    partial void DeleteOutPost(OutPost instance);
    partial void InsertOTRATECD(OTRATECD instance);
    partial void UpdateOTRATECD(OTRATECD instance);
    partial void DeleteOTRATECD(OTRATECD instance);
    #endregion
		
		public CodeDataDataContext() : 
				base(global::HR_TOOL.Properties.Settings.Default.HrDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CodeDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CodeDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CodeDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CodeDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DEPT> DEPT
		{
			get
			{
				return this.GetTable<DEPT>();
			}
		}
		
		public System.Data.Linq.Table<DEPTA> DEPTA
		{
			get
			{
				return this.GetTable<DEPTA>();
			}
		}
		
		public System.Data.Linq.Table<DEPTS> DEPTS
		{
			get
			{
				return this.GetTable<DEPTS>();
			}
		}
		
		public System.Data.Linq.Table<COMP_DATAGROUP> COMP_DATAGROUP
		{
			get
			{
				return this.GetTable<COMP_DATAGROUP>();
			}
		}
		
		public System.Data.Linq.Table<CODE_FILTER> CODE_FILTER
		{
			get
			{
				return this.GetTable<CODE_FILTER>();
			}
		}
		
		public System.Data.Linq.Table<HCODE> HCODE
		{
			get
			{
				return this.GetTable<HCODE>();
			}
		}
		
		public System.Data.Linq.Table<ROTE> ROTE
		{
			get
			{
				return this.GetTable<ROTE>();
			}
		}
		
		public System.Data.Linq.Table<SALCODE> SALCODE
		{
			get
			{
				return this.GetTable<SALCODE>();
			}
		}
		
		public System.Data.Linq.Table<ACCCD> ACCCD
		{
			get
			{
				return this.GetTable<ACCCD>();
			}
		}
		
		public System.Data.Linq.Table<JOB> JOB
		{
			get
			{
				return this.GetTable<JOB>();
			}
		}
		
		public System.Data.Linq.Table<JOBS> JOBS
		{
			get
			{
				return this.GetTable<JOBS>();
			}
		}
		
		public System.Data.Linq.Table<JOBL> JOBL
		{
			get
			{
				return this.GetTable<JOBL>();
			}
		}
		
		public System.Data.Linq.Table<ROTET> ROTET
		{
			get
			{
				return this.GetTable<ROTET>();
			}
		}
		
		public System.Data.Linq.Table<STATION> STATION
		{
			get
			{
				return this.GetTable<STATION>();
			}
		}
		
		public System.Data.Linq.Table<TTSCD> TTSCD
		{
			get
			{
				return this.GetTable<TTSCD>();
			}
		}
		
		public System.Data.Linq.Table<OTRCD> OTRCD
		{
			get
			{
				return this.GetTable<OTRCD>();
			}
		}
		
		public System.Data.Linq.Table<WORKCD> WORKCD
		{
			get
			{
				return this.GetTable<WORKCD>();
			}
		}
		
		public System.Data.Linq.Table<INSCOMP> INSCOMP
		{
			get
			{
				return this.GetTable<INSCOMP>();
			}
		}
		
		public System.Data.Linq.Table<HOLICD> HOLICD
		{
			get
			{
				return this.GetTable<HOLICD>();
			}
		}
		
		public System.Data.Linq.Table<AWARDCD> AWARDCD
		{
			get
			{
				return this.GetTable<AWARDCD>();
			}
		}
		
		public System.Data.Linq.Table<BankCode> BankCode
		{
			get
			{
				return this.GetTable<BankCode>();
			}
		}
		
		public System.Data.Linq.Table<GiftVoucher> GiftVoucher
		{
			get
			{
				return this.GetTable<GiftVoucher>();
			}
		}
		
		public System.Data.Linq.Table<OutPost> OutPost
		{
			get
			{
				return this.GetTable<OutPost>();
			}
		}
		
		public System.Data.Linq.Table<OTRATECD> OTRATECD
		{
			get
			{
				return this.GetTable<OTRATECD>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPT")]
	public partial class DEPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _D_NO;
		
		private string _D_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnD_NOChanging(string value);
    partial void OnD_NOChanged();
    partial void OnD_NAMEChanging(string value);
    partial void OnD_NAMEChanged();
    #endregion
		
		public DEPT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string D_NO
		{
			get
			{
				return this._D_NO;
			}
			set
			{
				if ((this._D_NO != value))
				{
					this.OnD_NOChanging(value);
					this.SendPropertyChanging();
					this._D_NO = value;
					this.SendPropertyChanged("D_NO");
					this.OnD_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string D_NAME
		{
			get
			{
				return this._D_NAME;
			}
			set
			{
				if ((this._D_NAME != value))
				{
					this.OnD_NAMEChanging(value);
					this.SendPropertyChanging();
					this._D_NAME = value;
					this.SendPropertyChanged("D_NAME");
					this.OnD_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPTA")]
	public partial class DEPTA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _D_NO;
		
		private string _D_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnD_NOChanging(string value);
    partial void OnD_NOChanged();
    partial void OnD_NAMEChanging(string value);
    partial void OnD_NAMEChanged();
    #endregion
		
		public DEPTA()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string D_NO
		{
			get
			{
				return this._D_NO;
			}
			set
			{
				if ((this._D_NO != value))
				{
					this.OnD_NOChanging(value);
					this.SendPropertyChanging();
					this._D_NO = value;
					this.SendPropertyChanged("D_NO");
					this.OnD_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string D_NAME
		{
			get
			{
				return this._D_NAME;
			}
			set
			{
				if ((this._D_NAME != value))
				{
					this.OnD_NAMEChanging(value);
					this.SendPropertyChanging();
					this._D_NAME = value;
					this.SendPropertyChanged("D_NAME");
					this.OnD_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DEPTS")]
	public partial class DEPTS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _D_NO;
		
		private string _D_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnD_NOChanging(string value);
    partial void OnD_NOChanged();
    partial void OnD_NAMEChanging(string value);
    partial void OnD_NAMEChanged();
    #endregion
		
		public DEPTS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string D_NO
		{
			get
			{
				return this._D_NO;
			}
			set
			{
				if ((this._D_NO != value))
				{
					this.OnD_NOChanging(value);
					this.SendPropertyChanging();
					this._D_NO = value;
					this.SendPropertyChanged("D_NO");
					this.OnD_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_D_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string D_NAME
		{
			get
			{
				return this._D_NAME;
			}
			set
			{
				if ((this._D_NAME != value))
				{
					this.OnD_NAMEChanging(value);
					this.SendPropertyChanging();
					this._D_NAME = value;
					this.SendPropertyChanged("D_NAME");
					this.OnD_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMP_DATAGROUP")]
	public partial class COMP_DATAGROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _COMP;
		
		private string _DATAGROUP;
		
		private string _NOTE;
		
		private System.DateTime _KEY_DATE;
		
		private string _KEY_MAN;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCOMPChanging(string value);
    partial void OnCOMPChanged();
    partial void OnDATAGROUPChanging(string value);
    partial void OnDATAGROUPChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnKEY_DATEChanging(System.DateTime value);
    partial void OnKEY_DATEChanged();
    partial void OnKEY_MANChanging(string value);
    partial void OnKEY_MANChanged();
    #endregion
		
		public COMP_DATAGROUP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string COMP
		{
			get
			{
				return this._COMP;
			}
			set
			{
				if ((this._COMP != value))
				{
					this.OnCOMPChanging(value);
					this.SendPropertyChanging();
					this._COMP = value;
					this.SendPropertyChanged("COMP");
					this.OnCOMPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATAGROUP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DATAGROUP
		{
			get
			{
				return this._DATAGROUP;
			}
			set
			{
				if ((this._DATAGROUP != value))
				{
					this.OnDATAGROUPChanging(value);
					this.SendPropertyChanging();
					this._DATAGROUP = value;
					this.SendPropertyChanged("DATAGROUP");
					this.OnDATAGROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KEY_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime KEY_DATE
		{
			get
			{
				return this._KEY_DATE;
			}
			set
			{
				if ((this._KEY_DATE != value))
				{
					this.OnKEY_DATEChanging(value);
					this.SendPropertyChanging();
					this._KEY_DATE = value;
					this.SendPropertyChanged("KEY_DATE");
					this.OnKEY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KEY_MAN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KEY_MAN
		{
			get
			{
				return this._KEY_MAN;
			}
			set
			{
				if ((this._KEY_MAN != value))
				{
					this.OnKEY_MANChanging(value);
					this.SendPropertyChanging();
					this._KEY_MAN = value;
					this.SendPropertyChanged("KEY_MAN");
					this.OnKEY_MANChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CODE_FILTER")]
	public partial class CODE_FILTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SOURCE;
		
		private string _CODE;
		
		private string _CODEGROUP;
		
		private string _NOTE;
		
		private System.DateTime _KEY_DATE;
		
		private string _KEY_MAN;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSOURCEChanging(string value);
    partial void OnSOURCEChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnCODEGROUPChanging(string value);
    partial void OnCODEGROUPChanged();
    partial void OnNOTEChanging(string value);
    partial void OnNOTEChanged();
    partial void OnKEY_DATEChanging(System.DateTime value);
    partial void OnKEY_DATEChanged();
    partial void OnKEY_MANChanging(string value);
    partial void OnKEY_MANChanged();
    #endregion
		
		public CODE_FILTER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOURCE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SOURCE
		{
			get
			{
				return this._SOURCE;
			}
			set
			{
				if ((this._SOURCE != value))
				{
					this.OnSOURCEChanging(value);
					this.SendPropertyChanging();
					this._SOURCE = value;
					this.SendPropertyChanged("SOURCE");
					this.OnSOURCEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODEGROUP", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CODEGROUP
		{
			get
			{
				return this._CODEGROUP;
			}
			set
			{
				if ((this._CODEGROUP != value))
				{
					this.OnCODEGROUPChanging(value);
					this.SendPropertyChanging();
					this._CODEGROUP = value;
					this.SendPropertyChanged("CODEGROUP");
					this.OnCODEGROUPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string NOTE
		{
			get
			{
				return this._NOTE;
			}
			set
			{
				if ((this._NOTE != value))
				{
					this.OnNOTEChanging(value);
					this.SendPropertyChanging();
					this._NOTE = value;
					this.SendPropertyChanged("NOTE");
					this.OnNOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KEY_DATE", DbType="DateTime NOT NULL")]
		public System.DateTime KEY_DATE
		{
			get
			{
				return this._KEY_DATE;
			}
			set
			{
				if ((this._KEY_DATE != value))
				{
					this.OnKEY_DATEChanging(value);
					this.SendPropertyChanging();
					this._KEY_DATE = value;
					this.SendPropertyChanged("KEY_DATE");
					this.OnKEY_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KEY_MAN", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KEY_MAN
		{
			get
			{
				return this._KEY_MAN;
			}
			set
			{
				if ((this._KEY_MAN != value))
				{
					this.OnKEY_MANChanging(value);
					this.SendPropertyChanging();
					this._KEY_MAN = value;
					this.SendPropertyChanged("KEY_MAN");
					this.OnKEY_MANChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HCODE")]
	public partial class HCODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _H_CODE;
		
		private string _H_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnH_CODEChanging(string value);
    partial void OnH_CODEChanged();
    partial void OnH_NAMEChanging(string value);
    partial void OnH_NAMEChanged();
    #endregion
		
		public HCODE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_CODE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string H_CODE
		{
			get
			{
				return this._H_CODE;
			}
			set
			{
				if ((this._H_CODE != value))
				{
					this.OnH_CODEChanging(value);
					this.SendPropertyChanging();
					this._H_CODE = value;
					this.SendPropertyChanged("H_CODE");
					this.OnH_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_H_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string H_NAME
		{
			get
			{
				return this._H_NAME;
			}
			set
			{
				if ((this._H_NAME != value))
				{
					this.OnH_NAMEChanging(value);
					this.SendPropertyChanging();
					this._H_NAME = value;
					this.SendPropertyChanged("H_NAME");
					this.OnH_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROTE")]
	public partial class ROTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ROTE1;
		
		private string _ROTENAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROTE1Changing(string value);
    partial void OnROTE1Changed();
    partial void OnROTENAMEChanging(string value);
    partial void OnROTENAMEChanged();
    #endregion
		
		public ROTE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ROTE", Storage="_ROTE1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ROTE1
		{
			get
			{
				return this._ROTE1;
			}
			set
			{
				if ((this._ROTE1 != value))
				{
					this.OnROTE1Changing(value);
					this.SendPropertyChanging();
					this._ROTE1 = value;
					this.SendPropertyChanged("ROTE1");
					this.OnROTE1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROTENAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ROTENAME
		{
			get
			{
				return this._ROTENAME;
			}
			set
			{
				if ((this._ROTENAME != value))
				{
					this.OnROTENAMEChanging(value);
					this.SendPropertyChanging();
					this._ROTENAME = value;
					this.SendPropertyChanged("ROTENAME");
					this.OnROTENAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SALCODE")]
	public partial class SALCODE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SAL_CODE;
		
		private string _SAL_NAME;
		
		private string _SAL_CODE_DISP;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSAL_CODEChanging(string value);
    partial void OnSAL_CODEChanged();
    partial void OnSAL_NAMEChanging(string value);
    partial void OnSAL_NAMEChanged();
    partial void OnSAL_CODE_DISPChanging(string value);
    partial void OnSAL_CODE_DISPChanged();
    #endregion
		
		public SALCODE()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAL_CODE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SAL_CODE
		{
			get
			{
				return this._SAL_CODE;
			}
			set
			{
				if ((this._SAL_CODE != value))
				{
					this.OnSAL_CODEChanging(value);
					this.SendPropertyChanging();
					this._SAL_CODE = value;
					this.SendPropertyChanged("SAL_CODE");
					this.OnSAL_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAL_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SAL_NAME
		{
			get
			{
				return this._SAL_NAME;
			}
			set
			{
				if ((this._SAL_NAME != value))
				{
					this.OnSAL_NAMEChanging(value);
					this.SendPropertyChanging();
					this._SAL_NAME = value;
					this.SendPropertyChanged("SAL_NAME");
					this.OnSAL_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SAL_CODE_DISP", DbType="NVarChar(50)")]
		public string SAL_CODE_DISP
		{
			get
			{
				return this._SAL_CODE_DISP;
			}
			set
			{
				if ((this._SAL_CODE_DISP != value))
				{
					this.OnSAL_CODE_DISPChanging(value);
					this.SendPropertyChanging();
					this._SAL_CODE_DISP = value;
					this.SendPropertyChanged("SAL_CODE_DISP");
					this.OnSAL_CODE_DISPChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCCD")]
	public partial class ACCCD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ACCCD1;
		
		private string _ACCNAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACCCD1Changing(string value);
    partial void OnACCCD1Changed();
    partial void OnACCNAMEChanging(string value);
    partial void OnACCNAMEChanged();
    #endregion
		
		public ACCCD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ACCCD", Storage="_ACCCD1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ACCCD1
		{
			get
			{
				return this._ACCCD1;
			}
			set
			{
				if ((this._ACCCD1 != value))
				{
					this.OnACCCD1Changing(value);
					this.SendPropertyChanging();
					this._ACCCD1 = value;
					this.SendPropertyChanged("ACCCD1");
					this.OnACCCD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACCNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ACCNAME
		{
			get
			{
				return this._ACCNAME;
			}
			set
			{
				if ((this._ACCNAME != value))
				{
					this.OnACCNAMEChanging(value);
					this.SendPropertyChanging();
					this._ACCNAME = value;
					this.SendPropertyChanged("ACCNAME");
					this.OnACCNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOB")]
	public partial class JOB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOB1;
		
		private string _JOB_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOB1Changing(string value);
    partial void OnJOB1Changed();
    partial void OnJOB_NAMEChanging(string value);
    partial void OnJOB_NAMEChanged();
    #endregion
		
		public JOB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="JOB", Storage="_JOB1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOB1
		{
			get
			{
				return this._JOB1;
			}
			set
			{
				if ((this._JOB1 != value))
				{
					this.OnJOB1Changing(value);
					this.SendPropertyChanging();
					this._JOB1 = value;
					this.SendPropertyChanged("JOB1");
					this.OnJOB1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JOB_NAME
		{
			get
			{
				return this._JOB_NAME;
			}
			set
			{
				if ((this._JOB_NAME != value))
				{
					this.OnJOB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_NAME = value;
					this.SendPropertyChanged("JOB_NAME");
					this.OnJOB_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOBS")]
	public partial class JOBS : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOBS1;
		
		private string _JOB_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOBS1Changing(string value);
    partial void OnJOBS1Changed();
    partial void OnJOB_NAMEChanging(string value);
    partial void OnJOB_NAMEChanged();
    #endregion
		
		public JOBS()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="JOBS", Storage="_JOBS1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOBS1
		{
			get
			{
				return this._JOBS1;
			}
			set
			{
				if ((this._JOBS1 != value))
				{
					this.OnJOBS1Changing(value);
					this.SendPropertyChanging();
					this._JOBS1 = value;
					this.SendPropertyChanged("JOBS1");
					this.OnJOBS1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JOB_NAME
		{
			get
			{
				return this._JOB_NAME;
			}
			set
			{
				if ((this._JOB_NAME != value))
				{
					this.OnJOB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_NAME = value;
					this.SendPropertyChanged("JOB_NAME");
					this.OnJOB_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.JOBL")]
	public partial class JOBL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _JOBL1;
		
		private string _JOB_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJOBL1Changing(string value);
    partial void OnJOBL1Changed();
    partial void OnJOB_NAMEChanging(string value);
    partial void OnJOB_NAMEChanged();
    #endregion
		
		public JOBL()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="JOBL", Storage="_JOBL1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string JOBL1
		{
			get
			{
				return this._JOBL1;
			}
			set
			{
				if ((this._JOBL1 != value))
				{
					this.OnJOBL1Changing(value);
					this.SendPropertyChanging();
					this._JOBL1 = value;
					this.SendPropertyChanged("JOBL1");
					this.OnJOBL1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JOB_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JOB_NAME
		{
			get
			{
				return this._JOB_NAME;
			}
			set
			{
				if ((this._JOB_NAME != value))
				{
					this.OnJOB_NAMEChanging(value);
					this.SendPropertyChanging();
					this._JOB_NAME = value;
					this.SendPropertyChanged("JOB_NAME");
					this.OnJOB_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ROTET")]
	public partial class ROTET : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ROTET1;
		
		private string _ROTETNAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnROTET1Changing(string value);
    partial void OnROTET1Changed();
    partial void OnROTETNAMEChanging(string value);
    partial void OnROTETNAMEChanged();
    #endregion
		
		public ROTET()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ROTET", Storage="_ROTET1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ROTET1
		{
			get
			{
				return this._ROTET1;
			}
			set
			{
				if ((this._ROTET1 != value))
				{
					this.OnROTET1Changing(value);
					this.SendPropertyChanging();
					this._ROTET1 = value;
					this.SendPropertyChanged("ROTET1");
					this.OnROTET1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROTETNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ROTETNAME
		{
			get
			{
				return this._ROTETNAME;
			}
			set
			{
				if ((this._ROTETNAME != value))
				{
					this.OnROTETNAMEChanging(value);
					this.SendPropertyChanging();
					this._ROTETNAME = value;
					this.SendPropertyChanged("ROTETNAME");
					this.OnROTETNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STATION")]
	public partial class STATION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _StationName;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStationNameChanging(string value);
    partial void OnStationNameChanged();
    #endregion
		
		public STATION()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StationName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string StationName
		{
			get
			{
				return this._StationName;
			}
			set
			{
				if ((this._StationName != value))
				{
					this.OnStationNameChanging(value);
					this.SendPropertyChanging();
					this._StationName = value;
					this.SendPropertyChanged("StationName");
					this.OnStationNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TTSCD")]
	public partial class TTSCD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TTSCD1;
		
		private string _TTSNAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTTSCD1Changing(string value);
    partial void OnTTSCD1Changed();
    partial void OnTTSNAMEChanging(string value);
    partial void OnTTSNAMEChanged();
    #endregion
		
		public TTSCD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="TTSCD", Storage="_TTSCD1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TTSCD1
		{
			get
			{
				return this._TTSCD1;
			}
			set
			{
				if ((this._TTSCD1 != value))
				{
					this.OnTTSCD1Changing(value);
					this.SendPropertyChanging();
					this._TTSCD1 = value;
					this.SendPropertyChanged("TTSCD1");
					this.OnTTSCD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TTSNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TTSNAME
		{
			get
			{
				return this._TTSNAME;
			}
			set
			{
				if ((this._TTSNAME != value))
				{
					this.OnTTSNAMEChanging(value);
					this.SendPropertyChanging();
					this._TTSNAME = value;
					this.SendPropertyChanged("TTSNAME");
					this.OnTTSNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OTRCD")]
	public partial class OTRCD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OTRCD1;
		
		private string _OTRNAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOTRCD1Changing(string value);
    partial void OnOTRCD1Changed();
    partial void OnOTRNAMEChanging(string value);
    partial void OnOTRNAMEChanged();
    #endregion
		
		public OTRCD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="OTRCD", Storage="_OTRCD1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OTRCD1
		{
			get
			{
				return this._OTRCD1;
			}
			set
			{
				if ((this._OTRCD1 != value))
				{
					this.OnOTRCD1Changing(value);
					this.SendPropertyChanging();
					this._OTRCD1 = value;
					this.SendPropertyChanged("OTRCD1");
					this.OnOTRCD1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTRNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OTRNAME
		{
			get
			{
				return this._OTRNAME;
			}
			set
			{
				if ((this._OTRNAME != value))
				{
					this.OnOTRNAMEChanging(value);
					this.SendPropertyChanging();
					this._OTRNAME = value;
					this.SendPropertyChanged("OTRNAME");
					this.OnOTRNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WORKCD")]
	public partial class WORKCD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WORK_CODE;
		
		private string _WORK_ADDR;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWORK_CODEChanging(string value);
    partial void OnWORK_CODEChanged();
    partial void OnWORK_ADDRChanging(string value);
    partial void OnWORK_ADDRChanged();
    #endregion
		
		public WORKCD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WORK_CODE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WORK_CODE
		{
			get
			{
				return this._WORK_CODE;
			}
			set
			{
				if ((this._WORK_CODE != value))
				{
					this.OnWORK_CODEChanging(value);
					this.SendPropertyChanging();
					this._WORK_CODE = value;
					this.SendPropertyChanged("WORK_CODE");
					this.OnWORK_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WORK_ADDR", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WORK_ADDR
		{
			get
			{
				return this._WORK_ADDR;
			}
			set
			{
				if ((this._WORK_ADDR != value))
				{
					this.OnWORK_ADDRChanging(value);
					this.SendPropertyChanging();
					this._WORK_ADDR = value;
					this.SendPropertyChanged("WORK_ADDR");
					this.OnWORK_ADDRChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.INSCOMP")]
	public partial class INSCOMP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _S_NO;
		
		private string _INSNAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_NOChanging(string value);
    partial void OnS_NOChanged();
    partial void OnINSNAMEChanging(string value);
    partial void OnINSNAMEChanged();
    #endregion
		
		public INSCOMP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_NO", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string S_NO
		{
			get
			{
				return this._S_NO;
			}
			set
			{
				if ((this._S_NO != value))
				{
					this.OnS_NOChanging(value);
					this.SendPropertyChanging();
					this._S_NO = value;
					this.SendPropertyChanged("S_NO");
					this.OnS_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INSNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string INSNAME
		{
			get
			{
				return this._INSNAME;
			}
			set
			{
				if ((this._INSNAME != value))
				{
					this.OnINSNAMEChanging(value);
					this.SendPropertyChanging();
					this._INSNAME = value;
					this.SendPropertyChanged("INSNAME");
					this.OnINSNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOLICD")]
	public partial class HOLICD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _HOLI_CODE;
		
		private string _HOLI_NAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOLI_CODEChanging(string value);
    partial void OnHOLI_CODEChanged();
    partial void OnHOLI_NAMEChanging(string value);
    partial void OnHOLI_NAMEChanged();
    #endregion
		
		public HOLICD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOLI_CODE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string HOLI_CODE
		{
			get
			{
				return this._HOLI_CODE;
			}
			set
			{
				if ((this._HOLI_CODE != value))
				{
					this.OnHOLI_CODEChanging(value);
					this.SendPropertyChanging();
					this._HOLI_CODE = value;
					this.SendPropertyChanged("HOLI_CODE");
					this.OnHOLI_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOLI_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HOLI_NAME
		{
			get
			{
				return this._HOLI_NAME;
			}
			set
			{
				if ((this._HOLI_NAME != value))
				{
					this.OnHOLI_NAMEChanging(value);
					this.SendPropertyChanging();
					this._HOLI_NAME = value;
					this.SendPropertyChanged("HOLI_NAME");
					this.OnHOLI_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AWARDCD")]
	public partial class AWARDCD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AWARD_CODE;
		
		private string _DESCR;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAWARD_CODEChanging(string value);
    partial void OnAWARD_CODEChanged();
    partial void OnDESCRChanging(string value);
    partial void OnDESCRChanged();
    #endregion
		
		public AWARDCD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AWARD_CODE", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AWARD_CODE
		{
			get
			{
				return this._AWARD_CODE;
			}
			set
			{
				if ((this._AWARD_CODE != value))
				{
					this.OnAWARD_CODEChanging(value);
					this.SendPropertyChanging();
					this._AWARD_CODE = value;
					this.SendPropertyChanged("AWARD_CODE");
					this.OnAWARD_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCR", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DESCR
		{
			get
			{
				return this._DESCR;
			}
			set
			{
				if ((this._DESCR != value))
				{
					this.OnDESCRChanging(value);
					this.SendPropertyChanging();
					this._DESCR = value;
					this.SendPropertyChanged("DESCR");
					this.OnDESCRChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BankCode")]
	public partial class BankCode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _BankName;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnBankNameChanging(string value);
    partial void OnBankNameChanged();
    #endregion
		
		public BankCode()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BankName
		{
			get
			{
				return this._BankName;
			}
			set
			{
				if ((this._BankName != value))
				{
					this.OnBankNameChanging(value);
					this.SendPropertyChanging();
					this._BankName = value;
					this.SendPropertyChanged("BankName");
					this.OnBankNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GiftVoucher")]
	public partial class GiftVoucher : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _GiftName;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnGiftNameChanging(string value);
    partial void OnGiftNameChanged();
    #endregion
		
		public GiftVoucher()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiftName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string GiftName
		{
			get
			{
				return this._GiftName;
			}
			set
			{
				if ((this._GiftName != value))
				{
					this.OnGiftNameChanging(value);
					this.SendPropertyChanging();
					this._GiftName = value;
					this.SendPropertyChanged("GiftName");
					this.OnGiftNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OutPost")]
	public partial class OutPost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _OutPostName;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnOutPostNameChanging(string value);
    partial void OnOutPostNameChanged();
    #endregion
		
		public OutPost()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OutPostName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OutPostName
		{
			get
			{
				return this._OutPostName;
			}
			set
			{
				if ((this._OutPostName != value))
				{
					this.OnOutPostNameChanging(value);
					this.SendPropertyChanging();
					this._OutPostName = value;
					this.SendPropertyChanged("OutPostName");
					this.OnOutPostNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OTRATECD")]
	public partial class OTRATECD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OTRCD1;
		
		private string _OTRNAME;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOTRATE_CODEChanging(string value);
    partial void OnOTRATE_CODEChanged();
    partial void OnOTRATE_NAMEChanging(string value);
    partial void OnOTRATE_NAMEChanged();
    #endregion
		
		public OTRATECD()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTRCD1", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OTRATE_CODE
		{
			get
			{
				return this._OTRCD1;
			}
			set
			{
				if ((this._OTRCD1 != value))
				{
					this.OnOTRATE_CODEChanging(value);
					this.SendPropertyChanging();
					this._OTRCD1 = value;
					this.SendPropertyChanged("OTRATE_CODE");
					this.OnOTRATE_CODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OTRNAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string OTRATE_NAME
		{
			get
			{
				return this._OTRNAME;
			}
			set
			{
				if ((this._OTRNAME != value))
				{
					this.OnOTRATE_NAMEChanging(value);
					this.SendPropertyChanging();
					this._OTRNAME = value;
					this.SendPropertyChanged("OTRATE_NAME");
					this.OnOTRATE_NAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
