//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JBHR.Sal {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("SalaryDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class SalaryDS : global::System.Data.DataSet {
        
        private ACCCDDataTable tableACCCD;
        
        private SALTYCDDataTable tableSALTYCD;
        
        private SALATTRDataTable tableSALATTR;
        
        private SALCODEDataTable tableSALCODE;
        
        private SALADRDataTable tableSALADR;
        
        private WAGEDataTable tableWAGE;
        
        private WAGEDDataTable tableWAGED;
        
        private SALBASDDataTable tableSALBASD;
        
        private SALBASTDDataTable tableSALBASTD;
        
        private TAXLVLDataTable tableTAXLVL;
        
        private MA_FOODDataTable tableMA_FOOD;
        
        private WAGEDDDataTable tableWAGEDD;
        
        private SALABSDataTable tableSALABS;
        
        private OTDataTable tableOT;
        
        private BASEDataTable tableBASE;
        
        private BASETTSDataTable tableBASETTS;
        
        private INSGLVDataTable tableINSGLV;
        
        private FRM47DataTable tableFRM47;
        
        private ENRICHDataTable tableENRICH;
        
        private SALBASD1DataTable tableSALBASD1;
        
        private EXPLABDataTable tableEXPLAB;
        
        private SALBASD_TMPDataTable tableSALBASD_TMP;
        
        private ExplabCNDataTable tableExplabCN;
        
        private EXPSUPDataTable tableEXPSUP;
        
        private SALBASEDataTable tableSALBASE;
        
        private SALFUNCTIONDataTable tableSALFUNCTION;
        
        private SALBASNDDataTable tableSALBASND;
        
        private SALENRICHDataTable tableSALENRICH;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SalaryDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected SalaryDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ACCCD"] != null)) {
                    base.Tables.Add(new ACCCDDataTable(ds.Tables["ACCCD"]));
                }
                if ((ds.Tables["SALTYCD"] != null)) {
                    base.Tables.Add(new SALTYCDDataTable(ds.Tables["SALTYCD"]));
                }
                if ((ds.Tables["SALATTR"] != null)) {
                    base.Tables.Add(new SALATTRDataTable(ds.Tables["SALATTR"]));
                }
                if ((ds.Tables["SALCODE"] != null)) {
                    base.Tables.Add(new SALCODEDataTable(ds.Tables["SALCODE"]));
                }
                if ((ds.Tables["SALADR"] != null)) {
                    base.Tables.Add(new SALADRDataTable(ds.Tables["SALADR"]));
                }
                if ((ds.Tables["WAGE"] != null)) {
                    base.Tables.Add(new WAGEDataTable(ds.Tables["WAGE"]));
                }
                if ((ds.Tables["WAGED"] != null)) {
                    base.Tables.Add(new WAGEDDataTable(ds.Tables["WAGED"]));
                }
                if ((ds.Tables["SALBASD"] != null)) {
                    base.Tables.Add(new SALBASDDataTable(ds.Tables["SALBASD"]));
                }
                if ((ds.Tables["SALBASTD"] != null)) {
                    base.Tables.Add(new SALBASTDDataTable(ds.Tables["SALBASTD"]));
                }
                if ((ds.Tables["TAXLVL"] != null)) {
                    base.Tables.Add(new TAXLVLDataTable(ds.Tables["TAXLVL"]));
                }
                if ((ds.Tables["MA_FOOD"] != null)) {
                    base.Tables.Add(new MA_FOODDataTable(ds.Tables["MA_FOOD"]));
                }
                if ((ds.Tables["WAGEDD"] != null)) {
                    base.Tables.Add(new WAGEDDDataTable(ds.Tables["WAGEDD"]));
                }
                if ((ds.Tables["SALABS"] != null)) {
                    base.Tables.Add(new SALABSDataTable(ds.Tables["SALABS"]));
                }
                if ((ds.Tables["OT"] != null)) {
                    base.Tables.Add(new OTDataTable(ds.Tables["OT"]));
                }
                if ((ds.Tables["BASE"] != null)) {
                    base.Tables.Add(new BASEDataTable(ds.Tables["BASE"]));
                }
                if ((ds.Tables["BASETTS"] != null)) {
                    base.Tables.Add(new BASETTSDataTable(ds.Tables["BASETTS"]));
                }
                if ((ds.Tables["INSGLV"] != null)) {
                    base.Tables.Add(new INSGLVDataTable(ds.Tables["INSGLV"]));
                }
                if ((ds.Tables["FRM47"] != null)) {
                    base.Tables.Add(new FRM47DataTable(ds.Tables["FRM47"]));
                }
                if ((ds.Tables["ENRICH"] != null)) {
                    base.Tables.Add(new ENRICHDataTable(ds.Tables["ENRICH"]));
                }
                if ((ds.Tables["SALBASD1"] != null)) {
                    base.Tables.Add(new SALBASD1DataTable(ds.Tables["SALBASD1"]));
                }
                if ((ds.Tables["EXPLAB"] != null)) {
                    base.Tables.Add(new EXPLABDataTable(ds.Tables["EXPLAB"]));
                }
                if ((ds.Tables["SALBASD_TMP"] != null)) {
                    base.Tables.Add(new SALBASD_TMPDataTable(ds.Tables["SALBASD_TMP"]));
                }
                if ((ds.Tables["ExplabCN"] != null)) {
                    base.Tables.Add(new ExplabCNDataTable(ds.Tables["ExplabCN"]));
                }
                if ((ds.Tables["EXPSUP"] != null)) {
                    base.Tables.Add(new EXPSUPDataTable(ds.Tables["EXPSUP"]));
                }
                if ((ds.Tables["SALBASE"] != null)) {
                    base.Tables.Add(new SALBASEDataTable(ds.Tables["SALBASE"]));
                }
                if ((ds.Tables["SALFUNCTION"] != null)) {
                    base.Tables.Add(new SALFUNCTIONDataTable(ds.Tables["SALFUNCTION"]));
                }
                if ((ds.Tables["SALBASND"] != null)) {
                    base.Tables.Add(new SALBASNDDataTable(ds.Tables["SALBASND"]));
                }
                if ((ds.Tables["SALENRICH"] != null)) {
                    base.Tables.Add(new SALENRICHDataTable(ds.Tables["SALENRICH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ACCCDDataTable ACCCD {
            get {
                return this.tableACCCD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALTYCDDataTable SALTYCD {
            get {
                return this.tableSALTYCD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALATTRDataTable SALATTR {
            get {
                return this.tableSALATTR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALCODEDataTable SALCODE {
            get {
                return this.tableSALCODE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALADRDataTable SALADR {
            get {
                return this.tableSALADR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WAGEDataTable WAGE {
            get {
                return this.tableWAGE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WAGEDDataTable WAGED {
            get {
                return this.tableWAGED;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALBASDDataTable SALBASD {
            get {
                return this.tableSALBASD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALBASTDDataTable SALBASTD {
            get {
                return this.tableSALBASTD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TAXLVLDataTable TAXLVL {
            get {
                return this.tableTAXLVL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MA_FOODDataTable MA_FOOD {
            get {
                return this.tableMA_FOOD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WAGEDDDataTable WAGEDD {
            get {
                return this.tableWAGEDD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALABSDataTable SALABS {
            get {
                return this.tableSALABS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OTDataTable OT {
            get {
                return this.tableOT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BASEDataTable BASE {
            get {
                return this.tableBASE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BASETTSDataTable BASETTS {
            get {
                return this.tableBASETTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSGLVDataTable INSGLV {
            get {
                return this.tableINSGLV;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRM47DataTable FRM47 {
            get {
                return this.tableFRM47;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ENRICHDataTable ENRICH {
            get {
                return this.tableENRICH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALBASD1DataTable SALBASD1 {
            get {
                return this.tableSALBASD1;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXPLABDataTable EXPLAB {
            get {
                return this.tableEXPLAB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALBASD_TMPDataTable SALBASD_TMP {
            get {
                return this.tableSALBASD_TMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ExplabCNDataTable ExplabCN {
            get {
                return this.tableExplabCN;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EXPSUPDataTable EXPSUP {
            get {
                return this.tableEXPSUP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALBASEDataTable SALBASE {
            get {
                return this.tableSALBASE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALFUNCTIONDataTable SALFUNCTION {
            get {
                return this.tableSALFUNCTION;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALBASNDDataTable SALBASND {
            get {
                return this.tableSALBASND;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALENRICHDataTable SALENRICH {
            get {
                return this.tableSALENRICH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            SalaryDS cln = ((SalaryDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ACCCD"] != null)) {
                    base.Tables.Add(new ACCCDDataTable(ds.Tables["ACCCD"]));
                }
                if ((ds.Tables["SALTYCD"] != null)) {
                    base.Tables.Add(new SALTYCDDataTable(ds.Tables["SALTYCD"]));
                }
                if ((ds.Tables["SALATTR"] != null)) {
                    base.Tables.Add(new SALATTRDataTable(ds.Tables["SALATTR"]));
                }
                if ((ds.Tables["SALCODE"] != null)) {
                    base.Tables.Add(new SALCODEDataTable(ds.Tables["SALCODE"]));
                }
                if ((ds.Tables["SALADR"] != null)) {
                    base.Tables.Add(new SALADRDataTable(ds.Tables["SALADR"]));
                }
                if ((ds.Tables["WAGE"] != null)) {
                    base.Tables.Add(new WAGEDataTable(ds.Tables["WAGE"]));
                }
                if ((ds.Tables["WAGED"] != null)) {
                    base.Tables.Add(new WAGEDDataTable(ds.Tables["WAGED"]));
                }
                if ((ds.Tables["SALBASD"] != null)) {
                    base.Tables.Add(new SALBASDDataTable(ds.Tables["SALBASD"]));
                }
                if ((ds.Tables["SALBASTD"] != null)) {
                    base.Tables.Add(new SALBASTDDataTable(ds.Tables["SALBASTD"]));
                }
                if ((ds.Tables["TAXLVL"] != null)) {
                    base.Tables.Add(new TAXLVLDataTable(ds.Tables["TAXLVL"]));
                }
                if ((ds.Tables["MA_FOOD"] != null)) {
                    base.Tables.Add(new MA_FOODDataTable(ds.Tables["MA_FOOD"]));
                }
                if ((ds.Tables["WAGEDD"] != null)) {
                    base.Tables.Add(new WAGEDDDataTable(ds.Tables["WAGEDD"]));
                }
                if ((ds.Tables["SALABS"] != null)) {
                    base.Tables.Add(new SALABSDataTable(ds.Tables["SALABS"]));
                }
                if ((ds.Tables["OT"] != null)) {
                    base.Tables.Add(new OTDataTable(ds.Tables["OT"]));
                }
                if ((ds.Tables["BASE"] != null)) {
                    base.Tables.Add(new BASEDataTable(ds.Tables["BASE"]));
                }
                if ((ds.Tables["BASETTS"] != null)) {
                    base.Tables.Add(new BASETTSDataTable(ds.Tables["BASETTS"]));
                }
                if ((ds.Tables["INSGLV"] != null)) {
                    base.Tables.Add(new INSGLVDataTable(ds.Tables["INSGLV"]));
                }
                if ((ds.Tables["FRM47"] != null)) {
                    base.Tables.Add(new FRM47DataTable(ds.Tables["FRM47"]));
                }
                if ((ds.Tables["ENRICH"] != null)) {
                    base.Tables.Add(new ENRICHDataTable(ds.Tables["ENRICH"]));
                }
                if ((ds.Tables["SALBASD1"] != null)) {
                    base.Tables.Add(new SALBASD1DataTable(ds.Tables["SALBASD1"]));
                }
                if ((ds.Tables["EXPLAB"] != null)) {
                    base.Tables.Add(new EXPLABDataTable(ds.Tables["EXPLAB"]));
                }
                if ((ds.Tables["SALBASD_TMP"] != null)) {
                    base.Tables.Add(new SALBASD_TMPDataTable(ds.Tables["SALBASD_TMP"]));
                }
                if ((ds.Tables["ExplabCN"] != null)) {
                    base.Tables.Add(new ExplabCNDataTable(ds.Tables["ExplabCN"]));
                }
                if ((ds.Tables["EXPSUP"] != null)) {
                    base.Tables.Add(new EXPSUPDataTable(ds.Tables["EXPSUP"]));
                }
                if ((ds.Tables["SALBASE"] != null)) {
                    base.Tables.Add(new SALBASEDataTable(ds.Tables["SALBASE"]));
                }
                if ((ds.Tables["SALFUNCTION"] != null)) {
                    base.Tables.Add(new SALFUNCTIONDataTable(ds.Tables["SALFUNCTION"]));
                }
                if ((ds.Tables["SALBASND"] != null)) {
                    base.Tables.Add(new SALBASNDDataTable(ds.Tables["SALBASND"]));
                }
                if ((ds.Tables["SALENRICH"] != null)) {
                    base.Tables.Add(new SALENRICHDataTable(ds.Tables["SALENRICH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableACCCD = ((ACCCDDataTable)(base.Tables["ACCCD"]));
            if ((initTable == true)) {
                if ((this.tableACCCD != null)) {
                    this.tableACCCD.InitVars();
                }
            }
            this.tableSALTYCD = ((SALTYCDDataTable)(base.Tables["SALTYCD"]));
            if ((initTable == true)) {
                if ((this.tableSALTYCD != null)) {
                    this.tableSALTYCD.InitVars();
                }
            }
            this.tableSALATTR = ((SALATTRDataTable)(base.Tables["SALATTR"]));
            if ((initTable == true)) {
                if ((this.tableSALATTR != null)) {
                    this.tableSALATTR.InitVars();
                }
            }
            this.tableSALCODE = ((SALCODEDataTable)(base.Tables["SALCODE"]));
            if ((initTable == true)) {
                if ((this.tableSALCODE != null)) {
                    this.tableSALCODE.InitVars();
                }
            }
            this.tableSALADR = ((SALADRDataTable)(base.Tables["SALADR"]));
            if ((initTable == true)) {
                if ((this.tableSALADR != null)) {
                    this.tableSALADR.InitVars();
                }
            }
            this.tableWAGE = ((WAGEDataTable)(base.Tables["WAGE"]));
            if ((initTable == true)) {
                if ((this.tableWAGE != null)) {
                    this.tableWAGE.InitVars();
                }
            }
            this.tableWAGED = ((WAGEDDataTable)(base.Tables["WAGED"]));
            if ((initTable == true)) {
                if ((this.tableWAGED != null)) {
                    this.tableWAGED.InitVars();
                }
            }
            this.tableSALBASD = ((SALBASDDataTable)(base.Tables["SALBASD"]));
            if ((initTable == true)) {
                if ((this.tableSALBASD != null)) {
                    this.tableSALBASD.InitVars();
                }
            }
            this.tableSALBASTD = ((SALBASTDDataTable)(base.Tables["SALBASTD"]));
            if ((initTable == true)) {
                if ((this.tableSALBASTD != null)) {
                    this.tableSALBASTD.InitVars();
                }
            }
            this.tableTAXLVL = ((TAXLVLDataTable)(base.Tables["TAXLVL"]));
            if ((initTable == true)) {
                if ((this.tableTAXLVL != null)) {
                    this.tableTAXLVL.InitVars();
                }
            }
            this.tableMA_FOOD = ((MA_FOODDataTable)(base.Tables["MA_FOOD"]));
            if ((initTable == true)) {
                if ((this.tableMA_FOOD != null)) {
                    this.tableMA_FOOD.InitVars();
                }
            }
            this.tableWAGEDD = ((WAGEDDDataTable)(base.Tables["WAGEDD"]));
            if ((initTable == true)) {
                if ((this.tableWAGEDD != null)) {
                    this.tableWAGEDD.InitVars();
                }
            }
            this.tableSALABS = ((SALABSDataTable)(base.Tables["SALABS"]));
            if ((initTable == true)) {
                if ((this.tableSALABS != null)) {
                    this.tableSALABS.InitVars();
                }
            }
            this.tableOT = ((OTDataTable)(base.Tables["OT"]));
            if ((initTable == true)) {
                if ((this.tableOT != null)) {
                    this.tableOT.InitVars();
                }
            }
            this.tableBASE = ((BASEDataTable)(base.Tables["BASE"]));
            if ((initTable == true)) {
                if ((this.tableBASE != null)) {
                    this.tableBASE.InitVars();
                }
            }
            this.tableBASETTS = ((BASETTSDataTable)(base.Tables["BASETTS"]));
            if ((initTable == true)) {
                if ((this.tableBASETTS != null)) {
                    this.tableBASETTS.InitVars();
                }
            }
            this.tableINSGLV = ((INSGLVDataTable)(base.Tables["INSGLV"]));
            if ((initTable == true)) {
                if ((this.tableINSGLV != null)) {
                    this.tableINSGLV.InitVars();
                }
            }
            this.tableFRM47 = ((FRM47DataTable)(base.Tables["FRM47"]));
            if ((initTable == true)) {
                if ((this.tableFRM47 != null)) {
                    this.tableFRM47.InitVars();
                }
            }
            this.tableENRICH = ((ENRICHDataTable)(base.Tables["ENRICH"]));
            if ((initTable == true)) {
                if ((this.tableENRICH != null)) {
                    this.tableENRICH.InitVars();
                }
            }
            this.tableSALBASD1 = ((SALBASD1DataTable)(base.Tables["SALBASD1"]));
            if ((initTable == true)) {
                if ((this.tableSALBASD1 != null)) {
                    this.tableSALBASD1.InitVars();
                }
            }
            this.tableEXPLAB = ((EXPLABDataTable)(base.Tables["EXPLAB"]));
            if ((initTable == true)) {
                if ((this.tableEXPLAB != null)) {
                    this.tableEXPLAB.InitVars();
                }
            }
            this.tableSALBASD_TMP = ((SALBASD_TMPDataTable)(base.Tables["SALBASD_TMP"]));
            if ((initTable == true)) {
                if ((this.tableSALBASD_TMP != null)) {
                    this.tableSALBASD_TMP.InitVars();
                }
            }
            this.tableExplabCN = ((ExplabCNDataTable)(base.Tables["ExplabCN"]));
            if ((initTable == true)) {
                if ((this.tableExplabCN != null)) {
                    this.tableExplabCN.InitVars();
                }
            }
            this.tableEXPSUP = ((EXPSUPDataTable)(base.Tables["EXPSUP"]));
            if ((initTable == true)) {
                if ((this.tableEXPSUP != null)) {
                    this.tableEXPSUP.InitVars();
                }
            }
            this.tableSALBASE = ((SALBASEDataTable)(base.Tables["SALBASE"]));
            if ((initTable == true)) {
                if ((this.tableSALBASE != null)) {
                    this.tableSALBASE.InitVars();
                }
            }
            this.tableSALFUNCTION = ((SALFUNCTIONDataTable)(base.Tables["SALFUNCTION"]));
            if ((initTable == true)) {
                if ((this.tableSALFUNCTION != null)) {
                    this.tableSALFUNCTION.InitVars();
                }
            }
            this.tableSALBASND = ((SALBASNDDataTable)(base.Tables["SALBASND"]));
            if ((initTable == true)) {
                if ((this.tableSALBASND != null)) {
                    this.tableSALBASND.InitVars();
                }
            }
            this.tableSALENRICH = ((SALENRICHDataTable)(base.Tables["SALENRICH"]));
            if ((initTable == true)) {
                if ((this.tableSALENRICH != null)) {
                    this.tableSALENRICH.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "SalaryDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/SalaryDS.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("zh-TW");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableACCCD = new ACCCDDataTable();
            base.Tables.Add(this.tableACCCD);
            this.tableSALTYCD = new SALTYCDDataTable();
            base.Tables.Add(this.tableSALTYCD);
            this.tableSALATTR = new SALATTRDataTable();
            base.Tables.Add(this.tableSALATTR);
            this.tableSALCODE = new SALCODEDataTable();
            base.Tables.Add(this.tableSALCODE);
            this.tableSALADR = new SALADRDataTable();
            base.Tables.Add(this.tableSALADR);
            this.tableWAGE = new WAGEDataTable();
            base.Tables.Add(this.tableWAGE);
            this.tableWAGED = new WAGEDDataTable();
            base.Tables.Add(this.tableWAGED);
            this.tableSALBASD = new SALBASDDataTable();
            base.Tables.Add(this.tableSALBASD);
            this.tableSALBASTD = new SALBASTDDataTable();
            base.Tables.Add(this.tableSALBASTD);
            this.tableTAXLVL = new TAXLVLDataTable();
            base.Tables.Add(this.tableTAXLVL);
            this.tableMA_FOOD = new MA_FOODDataTable();
            base.Tables.Add(this.tableMA_FOOD);
            this.tableWAGEDD = new WAGEDDDataTable();
            base.Tables.Add(this.tableWAGEDD);
            this.tableSALABS = new SALABSDataTable();
            base.Tables.Add(this.tableSALABS);
            this.tableOT = new OTDataTable();
            base.Tables.Add(this.tableOT);
            this.tableBASE = new BASEDataTable();
            base.Tables.Add(this.tableBASE);
            this.tableBASETTS = new BASETTSDataTable();
            base.Tables.Add(this.tableBASETTS);
            this.tableINSGLV = new INSGLVDataTable();
            base.Tables.Add(this.tableINSGLV);
            this.tableFRM47 = new FRM47DataTable();
            base.Tables.Add(this.tableFRM47);
            this.tableENRICH = new ENRICHDataTable();
            base.Tables.Add(this.tableENRICH);
            this.tableSALBASD1 = new SALBASD1DataTable();
            base.Tables.Add(this.tableSALBASD1);
            this.tableEXPLAB = new EXPLABDataTable();
            base.Tables.Add(this.tableEXPLAB);
            this.tableSALBASD_TMP = new SALBASD_TMPDataTable();
            base.Tables.Add(this.tableSALBASD_TMP);
            this.tableExplabCN = new ExplabCNDataTable();
            base.Tables.Add(this.tableExplabCN);
            this.tableEXPSUP = new EXPSUPDataTable();
            base.Tables.Add(this.tableEXPSUP);
            this.tableSALBASE = new SALBASEDataTable();
            base.Tables.Add(this.tableSALBASE);
            this.tableSALFUNCTION = new SALFUNCTIONDataTable();
            base.Tables.Add(this.tableSALFUNCTION);
            this.tableSALBASND = new SALBASNDDataTable();
            base.Tables.Add(this.tableSALBASND);
            this.tableSALENRICH = new SALENRICHDataTable();
            base.Tables.Add(this.tableSALENRICH);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeACCCD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALTYCD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALATTR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALCODE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALADR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeWAGE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeWAGED() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALBASD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALBASTD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeTAXLVL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeMA_FOOD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeWAGEDD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALABS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeOT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBASE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeBASETTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeINSGLV() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFRM47() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeENRICH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALBASD1() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEXPLAB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALBASD_TMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeExplabCN() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeEXPSUP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALBASE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALFUNCTION() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALBASND() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALENRICH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            SalaryDS ds = new SalaryDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ACCCDRowChangeEventHandler(object sender, ACCCDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALTYCDRowChangeEventHandler(object sender, SALTYCDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALATTRRowChangeEventHandler(object sender, SALATTRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALCODERowChangeEventHandler(object sender, SALCODERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALADRRowChangeEventHandler(object sender, SALADRRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void WAGERowChangeEventHandler(object sender, WAGERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void WAGEDRowChangeEventHandler(object sender, WAGEDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALBASDRowChangeEventHandler(object sender, SALBASDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALBASTDRowChangeEventHandler(object sender, SALBASTDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void TAXLVLRowChangeEventHandler(object sender, TAXLVLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void MA_FOODRowChangeEventHandler(object sender, MA_FOODRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void WAGEDDRowChangeEventHandler(object sender, WAGEDDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALABSRowChangeEventHandler(object sender, SALABSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void OTRowChangeEventHandler(object sender, OTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BASERowChangeEventHandler(object sender, BASERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void BASETTSRowChangeEventHandler(object sender, BASETTSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void INSGLVRowChangeEventHandler(object sender, INSGLVRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FRM47RowChangeEventHandler(object sender, FRM47RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ENRICHRowChangeEventHandler(object sender, ENRICHRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALBASD1RowChangeEventHandler(object sender, SALBASD1RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EXPLABRowChangeEventHandler(object sender, EXPLABRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALBASD_TMPRowChangeEventHandler(object sender, SALBASD_TMPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ExplabCNRowChangeEventHandler(object sender, ExplabCNRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void EXPSUPRowChangeEventHandler(object sender, EXPSUPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALBASERowChangeEventHandler(object sender, SALBASERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALFUNCTIONRowChangeEventHandler(object sender, SALFUNCTIONRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALBASNDRowChangeEventHandler(object sender, SALBASNDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALENRICHRowChangeEventHandler(object sender, SALENRICHRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ACCCDDataTable : global::System.Data.TypedTableBase<ACCCDRow> {
            
            private global::System.Data.DataColumn columnACCCD;
            
            private global::System.Data.DataColumn columnACCNAME;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnACC_TR;
            
            private global::System.Data.DataColumn columnACCCR;
            
            private global::System.Data.DataColumn columnACCDR;
            
            private global::System.Data.DataColumn columnACC_TRNAME;
            
            private global::System.Data.DataColumn columnACCNAME_E;
            
            private global::System.Data.DataColumn columnACCCD_DISP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCCDDataTable() {
                this.TableName = "ACCCD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ACCCDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ACCCDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCCDColumn {
                get {
                    return this.columnACCCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCNAMEColumn {
                get {
                    return this.columnACCNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACC_TRColumn {
                get {
                    return this.columnACC_TR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCCRColumn {
                get {
                    return this.columnACCCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCDRColumn {
                get {
                    return this.columnACCDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACC_TRNAMEColumn {
                get {
                    return this.columnACC_TRNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCNAME_EColumn {
                get {
                    return this.columnACCNAME_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCCD_DISPColumn {
                get {
                    return this.columnACCCD_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCCDRow this[int index] {
                get {
                    return ((ACCCDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCCDRowChangeEventHandler ACCCDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCCDRowChangeEventHandler ACCCDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCCDRowChangeEventHandler ACCCDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ACCCDRowChangeEventHandler ACCCDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddACCCDRow(ACCCDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCCDRow AddACCCDRow(string ACCCD, string ACCNAME, string KEY_MAN, System.DateTime KEY_DATE, string ACC_TR, string ACCCR, string ACCDR, string ACC_TRNAME, string ACCNAME_E, string ACCCD_DISP) {
                ACCCDRow rowACCCDRow = ((ACCCDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ACCCD,
                        ACCNAME,
                        KEY_MAN,
                        KEY_DATE,
                        ACC_TR,
                        ACCCR,
                        ACCDR,
                        ACC_TRNAME,
                        ACCNAME_E,
                        ACCCD_DISP};
                rowACCCDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowACCCDRow);
                return rowACCCDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCCDRow FindByACCCD(string ACCCD) {
                return ((ACCCDRow)(this.Rows.Find(new object[] {
                            ACCCD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ACCCDDataTable cln = ((ACCCDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ACCCDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnACCCD = base.Columns["ACCCD"];
                this.columnACCNAME = base.Columns["ACCNAME"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnACC_TR = base.Columns["ACC_TR"];
                this.columnACCCR = base.Columns["ACCCR"];
                this.columnACCDR = base.Columns["ACCDR"];
                this.columnACC_TRNAME = base.Columns["ACC_TRNAME"];
                this.columnACCNAME_E = base.Columns["ACCNAME_E"];
                this.columnACCCD_DISP = base.Columns["ACCCD_DISP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnACCCD = new global::System.Data.DataColumn("ACCCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCCD);
                this.columnACCNAME = new global::System.Data.DataColumn("ACCNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCNAME);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnACC_TR = new global::System.Data.DataColumn("ACC_TR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACC_TR);
                this.columnACCCR = new global::System.Data.DataColumn("ACCCR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCCR);
                this.columnACCDR = new global::System.Data.DataColumn("ACCDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCDR);
                this.columnACC_TRNAME = new global::System.Data.DataColumn("ACC_TRNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACC_TRNAME);
                this.columnACCNAME_E = new global::System.Data.DataColumn("ACCNAME_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCNAME_E);
                this.columnACCCD_DISP = new global::System.Data.DataColumn("ACCCD_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCCD_DISP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnACCCD}, true));
                this.columnACCCD.AllowDBNull = false;
                this.columnACCCD.Unique = true;
                this.columnACCCD.Caption = "科目代碼";
                this.columnACCCD.MaxLength = 50;
                this.columnACCNAME.AllowDBNull = false;
                this.columnACCNAME.Caption = "科目名稱";
                this.columnACCNAME.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄時間";
                this.columnACC_TR.AllowDBNull = false;
                this.columnACC_TR.Caption = "屬性";
                this.columnACC_TR.MaxLength = 50;
                this.columnACCCR.AllowDBNull = false;
                this.columnACCCR.Caption = "貸方科目";
                this.columnACCCR.MaxLength = 50;
                this.columnACCDR.AllowDBNull = false;
                this.columnACCDR.Caption = "借方科目";
                this.columnACCDR.MaxLength = 50;
                this.columnACC_TRNAME.AllowDBNull = false;
                this.columnACC_TRNAME.Caption = "屬性";
                this.columnACC_TRNAME.MaxLength = 200;
                this.columnACCNAME_E.AllowDBNull = false;
                this.columnACCNAME_E.Caption = "科目英文名稱";
                this.columnACCNAME_E.MaxLength = 50;
                this.columnACCCD_DISP.Caption = "科目代碼";
                this.columnACCCD_DISP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCCDRow NewACCCDRow() {
                return ((ACCCDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ACCCDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ACCCDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ACCCDRowChanged != null)) {
                    this.ACCCDRowChanged(this, new ACCCDRowChangeEvent(((ACCCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ACCCDRowChanging != null)) {
                    this.ACCCDRowChanging(this, new ACCCDRowChangeEvent(((ACCCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ACCCDRowDeleted != null)) {
                    this.ACCCDRowDeleted(this, new ACCCDRowChangeEvent(((ACCCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ACCCDRowDeleting != null)) {
                    this.ACCCDRowDeleting(this, new ACCCDRowChangeEvent(((ACCCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveACCCDRow(ACCCDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ACCCDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALTYCDDataTable : global::System.Data.TypedTableBase<SALTYCDRow> {
            
            private global::System.Data.DataColumn columnSALTYCD;
            
            private global::System.Data.DataColumn columnSALTYNAME;
            
            private global::System.Data.DataColumn columnPARA1;
            
            private global::System.Data.DataColumn columnDEFINE1;
            
            private global::System.Data.DataColumn columnPARA2;
            
            private global::System.Data.DataColumn columnDEFINE2;
            
            private global::System.Data.DataColumn columnPARA3;
            
            private global::System.Data.DataColumn columnDEFINE3;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALTYCDDataTable() {
                this.TableName = "SALTYCD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALTYCDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALTYCDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALTYCDColumn {
                get {
                    return this.columnSALTYCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALTYNAMEColumn {
                get {
                    return this.columnSALTYNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PARA1Column {
                get {
                    return this.columnPARA1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEFINE1Column {
                get {
                    return this.columnDEFINE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PARA2Column {
                get {
                    return this.columnPARA2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEFINE2Column {
                get {
                    return this.columnDEFINE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PARA3Column {
                get {
                    return this.columnPARA3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEFINE3Column {
                get {
                    return this.columnDEFINE3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALTYCDRow this[int index] {
                get {
                    return ((SALTYCDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALTYCDRowChangeEventHandler SALTYCDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALTYCDRowChangeEventHandler SALTYCDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALTYCDRowChangeEventHandler SALTYCDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALTYCDRowChangeEventHandler SALTYCDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALTYCDRow(SALTYCDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALTYCDRow AddSALTYCDRow(string SALTYCD, string SALTYNAME, string PARA1, decimal DEFINE1, string PARA2, decimal DEFINE2, string PARA3, decimal DEFINE3, System.DateTime KEY_DATE, string KEY_MAN) {
                SALTYCDRow rowSALTYCDRow = ((SALTYCDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SALTYCD,
                        SALTYNAME,
                        PARA1,
                        DEFINE1,
                        PARA2,
                        DEFINE2,
                        PARA3,
                        DEFINE3,
                        KEY_DATE,
                        KEY_MAN};
                rowSALTYCDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALTYCDRow);
                return rowSALTYCDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALTYCDRow FindBySALTYCD(string SALTYCD) {
                return ((SALTYCDRow)(this.Rows.Find(new object[] {
                            SALTYCD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALTYCDDataTable cln = ((SALTYCDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALTYCDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSALTYCD = base.Columns["SALTYCD"];
                this.columnSALTYNAME = base.Columns["SALTYNAME"];
                this.columnPARA1 = base.Columns["PARA1"];
                this.columnDEFINE1 = base.Columns["DEFINE1"];
                this.columnPARA2 = base.Columns["PARA2"];
                this.columnDEFINE2 = base.Columns["DEFINE2"];
                this.columnPARA3 = base.Columns["PARA3"];
                this.columnDEFINE3 = base.Columns["DEFINE3"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSALTYCD = new global::System.Data.DataColumn("SALTYCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALTYCD);
                this.columnSALTYNAME = new global::System.Data.DataColumn("SALTYNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALTYNAME);
                this.columnPARA1 = new global::System.Data.DataColumn("PARA1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA1);
                this.columnDEFINE1 = new global::System.Data.DataColumn("DEFINE1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFINE1);
                this.columnPARA2 = new global::System.Data.DataColumn("PARA2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA2);
                this.columnDEFINE2 = new global::System.Data.DataColumn("DEFINE2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFINE2);
                this.columnPARA3 = new global::System.Data.DataColumn("PARA3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARA3);
                this.columnDEFINE3 = new global::System.Data.DataColumn("DEFINE3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFINE3);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSALTYCD}, true));
                this.columnSALTYCD.AllowDBNull = false;
                this.columnSALTYCD.Unique = true;
                this.columnSALTYCD.Caption = "薪別代碼";
                this.columnSALTYCD.MaxLength = 50;
                this.columnSALTYNAME.AllowDBNull = false;
                this.columnSALTYNAME.Caption = "薪別名稱";
                this.columnSALTYNAME.MaxLength = 50;
                this.columnPARA1.AllowDBNull = false;
                this.columnPARA1.Caption = "分母";
                this.columnPARA1.MaxLength = 50;
                this.columnDEFINE1.AllowDBNull = false;
                this.columnPARA2.AllowDBNull = false;
                this.columnPARA2.Caption = "天數";
                this.columnPARA2.MaxLength = 50;
                this.columnDEFINE2.AllowDBNull = false;
                this.columnDEFINE2.Caption = "自訂";
                this.columnPARA3.AllowDBNull = false;
                this.columnPARA3.Caption = "時數";
                this.columnPARA3.MaxLength = 50;
                this.columnDEFINE3.AllowDBNull = false;
                this.columnDEFINE3.Caption = "自訂";
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄時間";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALTYCDRow NewSALTYCDRow() {
                return ((SALTYCDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALTYCDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALTYCDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALTYCDRowChanged != null)) {
                    this.SALTYCDRowChanged(this, new SALTYCDRowChangeEvent(((SALTYCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALTYCDRowChanging != null)) {
                    this.SALTYCDRowChanging(this, new SALTYCDRowChangeEvent(((SALTYCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALTYCDRowDeleted != null)) {
                    this.SALTYCDRowDeleted(this, new SALTYCDRowChangeEvent(((SALTYCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALTYCDRowDeleting != null)) {
                    this.SALTYCDRowDeleting(this, new SALTYCDRowChangeEvent(((SALTYCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALTYCDRow(SALTYCDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALTYCDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALATTRDataTable : global::System.Data.TypedTableBase<SALATTRRow> {
            
            private global::System.Data.DataColumn columnSALATTR;
            
            private global::System.Data.DataColumn columnATTR_NAME;
            
            private global::System.Data.DataColumn columnNOT_DISP;
            
            private global::System.Data.DataColumn columnBASIC;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnFLAG;
            
            private global::System.Data.DataColumn columnTAX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALATTRDataTable() {
                this.TableName = "SALATTR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALATTRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALATTRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALATTRColumn {
                get {
                    return this.columnSALATTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ATTR_NAMEColumn {
                get {
                    return this.columnATTR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_DISPColumn {
                get {
                    return this.columnNOT_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BASICColumn {
                get {
                    return this.columnBASIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FLAGColumn {
                get {
                    return this.columnFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXColumn {
                get {
                    return this.columnTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALATTRRow this[int index] {
                get {
                    return ((SALATTRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALATTRRow(SALATTRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALATTRRow AddSALATTRRow(string SALATTR, string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX) {
                SALATTRRow rowSALATTRRow = ((SALATTRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SALATTR,
                        ATTR_NAME,
                        NOT_DISP,
                        BASIC,
                        TYPE,
                        FLAG,
                        TAX};
                rowSALATTRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALATTRRow);
                return rowSALATTRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALATTRRow FindBySALATTR(string SALATTR) {
                return ((SALATTRRow)(this.Rows.Find(new object[] {
                            SALATTR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALATTRDataTable cln = ((SALATTRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALATTRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSALATTR = base.Columns["SALATTR"];
                this.columnATTR_NAME = base.Columns["ATTR_NAME"];
                this.columnNOT_DISP = base.Columns["NOT_DISP"];
                this.columnBASIC = base.Columns["BASIC"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnFLAG = base.Columns["FLAG"];
                this.columnTAX = base.Columns["TAX"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSALATTR = new global::System.Data.DataColumn("SALATTR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALATTR);
                this.columnATTR_NAME = new global::System.Data.DataColumn("ATTR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTR_NAME);
                this.columnNOT_DISP = new global::System.Data.DataColumn("NOT_DISP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_DISP);
                this.columnBASIC = new global::System.Data.DataColumn("BASIC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASIC);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnFLAG = new global::System.Data.DataColumn("FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLAG);
                this.columnTAX = new global::System.Data.DataColumn("TAX", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSALATTR}, true));
                this.columnSALATTR.AllowDBNull = false;
                this.columnSALATTR.Unique = true;
                this.columnSALATTR.MaxLength = 50;
                this.columnATTR_NAME.AllowDBNull = false;
                this.columnATTR_NAME.MaxLength = 50;
                this.columnNOT_DISP.AllowDBNull = false;
                this.columnBASIC.AllowDBNull = false;
                this.columnTYPE.AllowDBNull = false;
                this.columnTYPE.MaxLength = 50;
                this.columnFLAG.AllowDBNull = false;
                this.columnFLAG.MaxLength = 50;
                this.columnTAX.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALATTRRow NewSALATTRRow() {
                return ((SALATTRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALATTRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALATTRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALATTRRowChanged != null)) {
                    this.SALATTRRowChanged(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALATTRRowChanging != null)) {
                    this.SALATTRRowChanging(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALATTRRowDeleted != null)) {
                    this.SALATTRRowDeleted(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALATTRRowDeleting != null)) {
                    this.SALATTRRowDeleting(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALATTRRow(SALATTRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALATTRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALCODEDataTable : global::System.Data.TypedTableBase<SALCODERow> {
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnSAL_ATTR;
            
            private global::System.Data.DataColumn columnSOS_ID;
            
            private global::System.Data.DataColumn columnWEL;
            
            private global::System.Data.DataColumn columnOT;
            
            private global::System.Data.DataColumn columnMAX_AMT;
            
            private global::System.Data.DataColumn columnMIN_AMT;
            
            private global::System.Data.DataColumn columnCAL_FREQ;
            
            private global::System.Data.DataColumn columnCAL_TYPE;
            
            private global::System.Data.DataColumn columnHRS;
            
            private global::System.Data.DataColumn columnMONTHTYPE;
            
            private global::System.Data.DataColumn columnDEFINEDAYS;
            
            private global::System.Data.DataColumn columnADVPAY;
            
            private global::System.Data.DataColumn columnACCCD;
            
            private global::System.Data.DataColumn columnATT;
            
            private global::System.Data.DataColumn columnDAILY;
            
            private global::System.Data.DataColumn columnRETIRE;
            
            private global::System.Data.DataColumn columnFORBANK;
            
            private global::System.Data.DataColumn columnFORCASH;
            
            private global::System.Data.DataColumn columnNOTFREQ;
            
            private global::System.Data.DataColumn columnTAXRATE;
            
            private global::System.Data.DataColumn columnYEARPAY;
            
            private global::System.Data.DataColumn columnABSPAY;
            
            private global::System.Data.DataColumn columnINSLAB;
            
            private global::System.Data.DataColumn columnLATER;
            
            private global::System.Data.DataColumn columnSAL_ENAME;
            
            private global::System.Data.DataColumn columnOLDRETIRE;
            
            private global::System.Data.DataColumn columnSALBASD1;
            
            private global::System.Data.DataColumn columnSAL_CODE_DISP;
            
            private global::System.Data.DataColumn columnSUP;
            
            private global::System.Data.DataColumn columnSAL_NAME_VN;
            
            private global::System.Data.DataColumn columnSALCODE_GROUP;
            
            private global::System.Data.DataColumn columnSALBASE;
            
            private global::System.Data.DataColumn columnNOTFREQSEQ;
            
            private global::System.Data.DataColumn columnSORT;
            
            private global::System.Data.DataColumn columnSALSEQ;
            
            private global::System.Data.DataColumn columnImportSEQ2;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODEDataTable() {
                this.TableName = "SALCODE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALCODEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALCODEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_ATTRColumn {
                get {
                    return this.columnSAL_ATTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SOS_IDColumn {
                get {
                    return this.columnSOS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WELColumn {
                get {
                    return this.columnWEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTColumn {
                get {
                    return this.columnOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MAX_AMTColumn {
                get {
                    return this.columnMAX_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MIN_AMTColumn {
                get {
                    return this.columnMIN_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CAL_FREQColumn {
                get {
                    return this.columnCAL_FREQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CAL_TYPEColumn {
                get {
                    return this.columnCAL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HRSColumn {
                get {
                    return this.columnHRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MONTHTYPEColumn {
                get {
                    return this.columnMONTHTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEFINEDAYSColumn {
                get {
                    return this.columnDEFINEDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADVPAYColumn {
                get {
                    return this.columnADVPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCCDColumn {
                get {
                    return this.columnACCCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ATTColumn {
                get {
                    return this.columnATT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DAILYColumn {
                get {
                    return this.columnDAILY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RETIREColumn {
                get {
                    return this.columnRETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FORBANKColumn {
                get {
                    return this.columnFORBANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FORCASHColumn {
                get {
                    return this.columnFORCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTFREQColumn {
                get {
                    return this.columnNOTFREQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXRATEColumn {
                get {
                    return this.columnTAXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YEARPAYColumn {
                get {
                    return this.columnYEARPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABSPAYColumn {
                get {
                    return this.columnABSPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSLABColumn {
                get {
                    return this.columnINSLAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LATERColumn {
                get {
                    return this.columnLATER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_ENAMEColumn {
                get {
                    return this.columnSAL_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OLDRETIREColumn {
                get {
                    return this.columnOLDRETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALBASD1Column {
                get {
                    return this.columnSALBASD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODE_DISPColumn {
                get {
                    return this.columnSAL_CODE_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUPColumn {
                get {
                    return this.columnSUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAME_VNColumn {
                get {
                    return this.columnSAL_NAME_VN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALCODE_GROUPColumn {
                get {
                    return this.columnSALCODE_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALBASEColumn {
                get {
                    return this.columnSALBASE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTFREQSEQColumn {
                get {
                    return this.columnNOTFREQSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SORTColumn {
                get {
                    return this.columnSORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALSEQColumn {
                get {
                    return this.columnSALSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ImportSEQ2Column {
                get {
                    return this.columnImportSEQ2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow this[int index] {
                get {
                    return ((SALCODERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALCODERow(SALCODERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow AddSALCODERow(
                        string SAL_CODE, 
                        string SAL_NAME, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string SAL_ATTR, 
                        string SOS_ID, 
                        bool WEL, 
                        bool OT, 
                        decimal MAX_AMT, 
                        decimal MIN_AMT, 
                        string CAL_FREQ, 
                        string CAL_TYPE, 
                        decimal HRS, 
                        string MONTHTYPE, 
                        decimal DEFINEDAYS, 
                        bool ADVPAY, 
                        string ACCCD, 
                        bool ATT, 
                        bool DAILY, 
                        bool RETIRE, 
                        bool FORBANK, 
                        bool FORCASH, 
                        bool NOTFREQ, 
                        decimal TAXRATE, 
                        bool YEARPAY, 
                        bool ABSPAY, 
                        bool INSLAB, 
                        bool LATER, 
                        string SAL_ENAME, 
                        bool OLDRETIRE, 
                        bool SALBASD1, 
                        string SAL_CODE_DISP, 
                        bool SUP, 
                        string SAL_NAME_VN, 
                        string SALCODE_GROUP, 
                        string SALBASE, 
                        bool NOTFREQSEQ, 
                        int SORT, 
                        string SALSEQ, 
                        bool ImportSEQ2) {
                SALCODERow rowSALCODERow = ((SALCODERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SAL_CODE,
                        SAL_NAME,
                        KEY_MAN,
                        KEY_DATE,
                        SAL_ATTR,
                        SOS_ID,
                        WEL,
                        OT,
                        MAX_AMT,
                        MIN_AMT,
                        CAL_FREQ,
                        CAL_TYPE,
                        HRS,
                        MONTHTYPE,
                        DEFINEDAYS,
                        ADVPAY,
                        ACCCD,
                        ATT,
                        DAILY,
                        RETIRE,
                        FORBANK,
                        FORCASH,
                        NOTFREQ,
                        TAXRATE,
                        YEARPAY,
                        ABSPAY,
                        INSLAB,
                        LATER,
                        SAL_ENAME,
                        OLDRETIRE,
                        SALBASD1,
                        SAL_CODE_DISP,
                        SUP,
                        SAL_NAME_VN,
                        SALCODE_GROUP,
                        SALBASE,
                        NOTFREQSEQ,
                        SORT,
                        SALSEQ,
                        ImportSEQ2};
                rowSALCODERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALCODERow);
                return rowSALCODERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow FindBySAL_CODE(string SAL_CODE) {
                return ((SALCODERow)(this.Rows.Find(new object[] {
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALCODEDataTable cln = ((SALCODEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALCODEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnSAL_ATTR = base.Columns["SAL_ATTR"];
                this.columnSOS_ID = base.Columns["SOS_ID"];
                this.columnWEL = base.Columns["WEL"];
                this.columnOT = base.Columns["OT"];
                this.columnMAX_AMT = base.Columns["MAX_AMT"];
                this.columnMIN_AMT = base.Columns["MIN_AMT"];
                this.columnCAL_FREQ = base.Columns["CAL_FREQ"];
                this.columnCAL_TYPE = base.Columns["CAL_TYPE"];
                this.columnHRS = base.Columns["HRS"];
                this.columnMONTHTYPE = base.Columns["MONTHTYPE"];
                this.columnDEFINEDAYS = base.Columns["DEFINEDAYS"];
                this.columnADVPAY = base.Columns["ADVPAY"];
                this.columnACCCD = base.Columns["ACCCD"];
                this.columnATT = base.Columns["ATT"];
                this.columnDAILY = base.Columns["DAILY"];
                this.columnRETIRE = base.Columns["RETIRE"];
                this.columnFORBANK = base.Columns["FORBANK"];
                this.columnFORCASH = base.Columns["FORCASH"];
                this.columnNOTFREQ = base.Columns["NOTFREQ"];
                this.columnTAXRATE = base.Columns["TAXRATE"];
                this.columnYEARPAY = base.Columns["YEARPAY"];
                this.columnABSPAY = base.Columns["ABSPAY"];
                this.columnINSLAB = base.Columns["INSLAB"];
                this.columnLATER = base.Columns["LATER"];
                this.columnSAL_ENAME = base.Columns["SAL_ENAME"];
                this.columnOLDRETIRE = base.Columns["OLDRETIRE"];
                this.columnSALBASD1 = base.Columns["SALBASD1"];
                this.columnSAL_CODE_DISP = base.Columns["SAL_CODE_DISP"];
                this.columnSUP = base.Columns["SUP"];
                this.columnSAL_NAME_VN = base.Columns["SAL_NAME_VN"];
                this.columnSALCODE_GROUP = base.Columns["SALCODE_GROUP"];
                this.columnSALBASE = base.Columns["SALBASE"];
                this.columnNOTFREQSEQ = base.Columns["NOTFREQSEQ"];
                this.columnSORT = base.Columns["SORT"];
                this.columnSALSEQ = base.Columns["SALSEQ"];
                this.columnImportSEQ2 = base.Columns["ImportSEQ2"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnSAL_ATTR = new global::System.Data.DataColumn("SAL_ATTR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_ATTR);
                this.columnSOS_ID = new global::System.Data.DataColumn("SOS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOS_ID);
                this.columnWEL = new global::System.Data.DataColumn("WEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEL);
                this.columnOT = new global::System.Data.DataColumn("OT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT);
                this.columnMAX_AMT = new global::System.Data.DataColumn("MAX_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_AMT);
                this.columnMIN_AMT = new global::System.Data.DataColumn("MIN_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIN_AMT);
                this.columnCAL_FREQ = new global::System.Data.DataColumn("CAL_FREQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAL_FREQ);
                this.columnCAL_TYPE = new global::System.Data.DataColumn("CAL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAL_TYPE);
                this.columnHRS = new global::System.Data.DataColumn("HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRS);
                this.columnMONTHTYPE = new global::System.Data.DataColumn("MONTHTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTHTYPE);
                this.columnDEFINEDAYS = new global::System.Data.DataColumn("DEFINEDAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFINEDAYS);
                this.columnADVPAY = new global::System.Data.DataColumn("ADVPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADVPAY);
                this.columnACCCD = new global::System.Data.DataColumn("ACCCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCCD);
                this.columnATT = new global::System.Data.DataColumn("ATT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATT);
                this.columnDAILY = new global::System.Data.DataColumn("DAILY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAILY);
                this.columnRETIRE = new global::System.Data.DataColumn("RETIRE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETIRE);
                this.columnFORBANK = new global::System.Data.DataColumn("FORBANK", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORBANK);
                this.columnFORCASH = new global::System.Data.DataColumn("FORCASH", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCASH);
                this.columnNOTFREQ = new global::System.Data.DataColumn("NOTFREQ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTFREQ);
                this.columnTAXRATE = new global::System.Data.DataColumn("TAXRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRATE);
                this.columnYEARPAY = new global::System.Data.DataColumn("YEARPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEARPAY);
                this.columnABSPAY = new global::System.Data.DataColumn("ABSPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABSPAY);
                this.columnINSLAB = new global::System.Data.DataColumn("INSLAB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSLAB);
                this.columnLATER = new global::System.Data.DataColumn("LATER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATER);
                this.columnSAL_ENAME = new global::System.Data.DataColumn("SAL_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_ENAME);
                this.columnOLDRETIRE = new global::System.Data.DataColumn("OLDRETIRE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLDRETIRE);
                this.columnSALBASD1 = new global::System.Data.DataColumn("SALBASD1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALBASD1);
                this.columnSAL_CODE_DISP = new global::System.Data.DataColumn("SAL_CODE_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE_DISP);
                this.columnSUP = new global::System.Data.DataColumn("SUP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUP);
                this.columnSAL_NAME_VN = new global::System.Data.DataColumn("SAL_NAME_VN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME_VN);
                this.columnSALCODE_GROUP = new global::System.Data.DataColumn("SALCODE_GROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALCODE_GROUP);
                this.columnSALBASE = new global::System.Data.DataColumn("SALBASE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALBASE);
                this.columnNOTFREQSEQ = new global::System.Data.DataColumn("NOTFREQSEQ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTFREQSEQ);
                this.columnSORT = new global::System.Data.DataColumn("SORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT);
                this.columnSALSEQ = new global::System.Data.DataColumn("SALSEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALSEQ);
                this.columnImportSEQ2 = new global::System.Data.DataColumn("ImportSEQ2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImportSEQ2);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSAL_CODE}, true));
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Unique = true;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.Caption = "薪資名稱";
                this.columnSAL_NAME.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnSAL_ATTR.AllowDBNull = false;
                this.columnSAL_ATTR.Caption = "薪資屬性";
                this.columnSAL_ATTR.MaxLength = 50;
                this.columnSOS_ID.AllowDBNull = false;
                this.columnSOS_ID.Caption = "計算方式";
                this.columnSOS_ID.MaxLength = 50;
                this.columnWEL.AllowDBNull = false;
                this.columnWEL.Caption = "福利金";
                this.columnWEL.DefaultValue = ((bool)(false));
                this.columnOT.AllowDBNull = false;
                this.columnOT.Caption = "加班";
                this.columnOT.DefaultValue = ((bool)(false));
                this.columnMAX_AMT.AllowDBNull = false;
                this.columnMAX_AMT.Caption = "最大金額";
                this.columnMIN_AMT.AllowDBNull = false;
                this.columnMIN_AMT.Caption = "最小金額";
                this.columnCAL_FREQ.AllowDBNull = false;
                this.columnCAL_FREQ.Caption = "計算單位";
                this.columnCAL_FREQ.MaxLength = 50;
                this.columnCAL_TYPE.AllowDBNull = false;
                this.columnCAL_TYPE.Caption = "計算公式";
                this.columnCAL_TYPE.MaxLength = 50;
                this.columnHRS.AllowDBNull = false;
                this.columnHRS.Caption = "請假時數";
                this.columnMONTHTYPE.AllowDBNull = false;
                this.columnMONTHTYPE.Caption = "月給總額";
                this.columnMONTHTYPE.MaxLength = 50;
                this.columnDEFINEDAYS.AllowDBNull = false;
                this.columnDEFINEDAYS.Caption = "自訂天數";
                this.columnADVPAY.AllowDBNull = false;
                this.columnADVPAY.Caption = "借支";
                this.columnADVPAY.DefaultValue = ((bool)(false));
                this.columnACCCD.AllowDBNull = false;
                this.columnACCCD.Caption = "會計科目";
                this.columnACCCD.MaxLength = 50;
                this.columnATT.AllowDBNull = false;
                this.columnATT.Caption = "全勤";
                this.columnATT.DefaultValue = ((bool)(false));
                this.columnDAILY.AllowDBNull = false;
                this.columnDAILY.Caption = "日薪";
                this.columnDAILY.DefaultValue = ((bool)(false));
                this.columnRETIRE.AllowDBNull = false;
                this.columnRETIRE.Caption = "退休金提撥";
                this.columnRETIRE.DefaultValue = ((bool)(false));
                this.columnFORBANK.AllowDBNull = false;
                this.columnFORBANK.Caption = "外勞轉帳";
                this.columnFORBANK.DefaultValue = ((bool)(false));
                this.columnFORCASH.AllowDBNull = false;
                this.columnFORCASH.Caption = "外勞現金";
                this.columnFORCASH.DefaultValue = ((bool)(false));
                this.columnNOTFREQ.AllowDBNull = false;
                this.columnNOTFREQ.Caption = "非經常性薪資";
                this.columnNOTFREQ.DefaultValue = ((bool)(false));
                this.columnTAXRATE.AllowDBNull = false;
                this.columnTAXRATE.Caption = "固定稅率";
                this.columnYEARPAY.AllowDBNull = false;
                this.columnYEARPAY.Caption = "年終獎金提撥";
                this.columnYEARPAY.DefaultValue = ((bool)(false));
                this.columnABSPAY.AllowDBNull = false;
                this.columnABSPAY.Caption = "不休假獎金";
                this.columnABSPAY.DefaultValue = ((bool)(false));
                this.columnINSLAB.AllowDBNull = false;
                this.columnINSLAB.Caption = "勞健保投保額";
                this.columnINSLAB.DefaultValue = ((bool)(false));
                this.columnLATER.AllowDBNull = false;
                this.columnLATER.DefaultValue = ((bool)(false));
                this.columnSAL_ENAME.AllowDBNull = false;
                this.columnSAL_ENAME.Caption = "英文薪資名稱";
                this.columnSAL_ENAME.MaxLength = 60;
                this.columnOLDRETIRE.AllowDBNull = false;
                this.columnOLDRETIRE.Caption = "勞退舊制提撥";
                this.columnSALBASD1.AllowDBNull = false;
                this.columnSALBASD1.Caption = "變動薪資基礎";
                this.columnSAL_CODE_DISP.Caption = "薪資代碼";
                this.columnSAL_CODE_DISP.MaxLength = 50;
                this.columnSUP.AllowDBNull = false;
                this.columnSUP.Caption = "補充保費";
                this.columnSAL_NAME_VN.AllowDBNull = false;
                this.columnSAL_NAME_VN.Caption = "越文薪資名稱";
                this.columnSAL_NAME_VN.MaxLength = 50;
                this.columnSALCODE_GROUP.Caption = "薪資代碼群組";
                this.columnSALCODE_GROUP.MaxLength = 50;
                this.columnSALBASE.Caption = "計算參數類別";
                this.columnSALBASE.MaxLength = 50;
                this.columnNOTFREQSEQ.AllowDBNull = false;
                this.columnNOTFREQSEQ.Caption = "非經常性期別";
                this.columnSALSEQ.AllowDBNull = false;
                this.columnSALSEQ.MaxLength = 50;
                this.columnImportSEQ2.AllowDBNull = false;
                this.columnImportSEQ2.Caption = "轉至B帳";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow NewSALCODERow() {
                return ((SALCODERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALCODERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALCODERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALCODERowChanged != null)) {
                    this.SALCODERowChanged(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALCODERowChanging != null)) {
                    this.SALCODERowChanging(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALCODERowDeleted != null)) {
                    this.SALCODERowDeleted(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALCODERowDeleting != null)) {
                    this.SALCODERowDeleting(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALCODERow(SALCODERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALCODEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALADRDataTable : global::System.Data.TypedTableBase<SALADRRow> {
            
            private global::System.Data.DataColumn columnSALADR;
            
            private global::System.Data.DataColumn columnSALNAME;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALADRDataTable() {
                this.TableName = "SALADR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALADRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALADRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALADRColumn {
                get {
                    return this.columnSALADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALNAMEColumn {
                get {
                    return this.columnSALNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALADRRow this[int index] {
                get {
                    return ((SALADRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALADRRowChangeEventHandler SALADRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALADRRowChangeEventHandler SALADRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALADRRowChangeEventHandler SALADRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALADRRowChangeEventHandler SALADRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALADRRow(SALADRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALADRRow AddSALADRRow(string SALADR, string SALNAME, System.DateTime KEY_DATE, string KEY_MAN) {
                SALADRRow rowSALADRRow = ((SALADRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SALADR,
                        SALNAME,
                        KEY_DATE,
                        KEY_MAN};
                rowSALADRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALADRRow);
                return rowSALADRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALADRRow FindBySALADR(string SALADR) {
                return ((SALADRRow)(this.Rows.Find(new object[] {
                            SALADR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALADRDataTable cln = ((SALADRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALADRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSALADR = base.Columns["SALADR"];
                this.columnSALNAME = base.Columns["SALNAME"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSALADR = new global::System.Data.DataColumn("SALADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALADR);
                this.columnSALNAME = new global::System.Data.DataColumn("SALNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALNAME);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSALADR}, true));
                this.columnSALADR.AllowDBNull = false;
                this.columnSALADR.Unique = true;
                this.columnSALADR.Caption = "資料群組代號";
                this.columnSALADR.MaxLength = 50;
                this.columnSALNAME.AllowDBNull = false;
                this.columnSALNAME.Caption = "資料群組名稱";
                this.columnSALNAME.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALADRRow NewSALADRRow() {
                return ((SALADRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALADRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALADRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALADRRowChanged != null)) {
                    this.SALADRRowChanged(this, new SALADRRowChangeEvent(((SALADRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALADRRowChanging != null)) {
                    this.SALADRRowChanging(this, new SALADRRowChangeEvent(((SALADRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALADRRowDeleted != null)) {
                    this.SALADRRowDeleted(this, new SALADRRowChangeEvent(((SALADRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALADRRowDeleting != null)) {
                    this.SALADRRowDeleting(this, new SALADRRowChangeEvent(((SALADRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALADRRow(SALADRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALADRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WAGEDataTable : global::System.Data.TypedTableBase<WAGERow> {
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnBANKNO;
            
            private global::System.Data.DataColumn columnACCOUNT_NO;
            
            private global::System.Data.DataColumn columnWK_DAYS;
            
            private global::System.Data.DataColumn columnCASH;
            
            private global::System.Data.DataColumn columnNOTE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnDATE_B;
            
            private global::System.Data.DataColumn columnDATE_E;
            
            private global::System.Data.DataColumn columnFORMAT;
            
            private global::System.Data.DataColumn columnTAXRATE;
            
            private global::System.Data.DataColumn columnSALADR;
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnATT_DATEB;
            
            private global::System.Data.DataColumn columnATT_DATEE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDataTable() {
                this.TableName = "WAGE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WAGEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected WAGEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BANKNOColumn {
                get {
                    return this.columnBANKNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_NOColumn {
                get {
                    return this.columnACCOUNT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WK_DAYSColumn {
                get {
                    return this.columnWK_DAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CASHColumn {
                get {
                    return this.columnCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTEColumn {
                get {
                    return this.columnNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_BColumn {
                get {
                    return this.columnDATE_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DATE_EColumn {
                get {
                    return this.columnDATE_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FORMATColumn {
                get {
                    return this.columnFORMAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXRATEColumn {
                get {
                    return this.columnTAXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALADRColumn {
                get {
                    return this.columnSALADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ATT_DATEBColumn {
                get {
                    return this.columnATT_DATEB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ATT_DATEEColumn {
                get {
                    return this.columnATT_DATEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGERow this[int index] {
                get {
                    return ((WAGERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGERowChangeEventHandler WAGERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGERowChangeEventHandler WAGERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGERowChangeEventHandler WAGERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGERowChangeEventHandler WAGERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddWAGERow(WAGERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGERow AddWAGERow(
                        string YYMM, 
                        string SEQ, 
                        string NOBR, 
                        System.DateTime ADATE, 
                        string BANKNO, 
                        string ACCOUNT_NO, 
                        decimal WK_DAYS, 
                        bool CASH, 
                        string NOTE, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        System.DateTime DATE_B, 
                        System.DateTime DATE_E, 
                        string FORMAT, 
                        decimal TAXRATE, 
                        string SALADR, 
                        string COMP, 
                        System.DateTime ATT_DATEB, 
                        System.DateTime ATT_DATEE) {
                WAGERow rowWAGERow = ((WAGERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YYMM,
                        SEQ,
                        NOBR,
                        ADATE,
                        BANKNO,
                        ACCOUNT_NO,
                        WK_DAYS,
                        CASH,
                        NOTE,
                        KEY_MAN,
                        KEY_DATE,
                        DATE_B,
                        DATE_E,
                        FORMAT,
                        TAXRATE,
                        SALADR,
                        COMP,
                        ATT_DATEB,
                        ATT_DATEE};
                rowWAGERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWAGERow);
                return rowWAGERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGERow FindByYYMMSEQNOBR(string YYMM, string SEQ, string NOBR) {
                return ((WAGERow)(this.Rows.Find(new object[] {
                            YYMM,
                            SEQ,
                            NOBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WAGEDataTable cln = ((WAGEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WAGEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnYYMM = base.Columns["YYMM"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnBANKNO = base.Columns["BANKNO"];
                this.columnACCOUNT_NO = base.Columns["ACCOUNT_NO"];
                this.columnWK_DAYS = base.Columns["WK_DAYS"];
                this.columnCASH = base.Columns["CASH"];
                this.columnNOTE = base.Columns["NOTE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnDATE_B = base.Columns["DATE_B"];
                this.columnDATE_E = base.Columns["DATE_E"];
                this.columnFORMAT = base.Columns["FORMAT"];
                this.columnTAXRATE = base.Columns["TAXRATE"];
                this.columnSALADR = base.Columns["SALADR"];
                this.columnCOMP = base.Columns["COMP"];
                this.columnATT_DATEB = base.Columns["ATT_DATEB"];
                this.columnATT_DATEE = base.Columns["ATT_DATEE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnBANKNO = new global::System.Data.DataColumn("BANKNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANKNO);
                this.columnACCOUNT_NO = new global::System.Data.DataColumn("ACCOUNT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NO);
                this.columnWK_DAYS = new global::System.Data.DataColumn("WK_DAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWK_DAYS);
                this.columnCASH = new global::System.Data.DataColumn("CASH", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCASH);
                this.columnNOTE = new global::System.Data.DataColumn("NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnDATE_B = new global::System.Data.DataColumn("DATE_B", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_B);
                this.columnDATE_E = new global::System.Data.DataColumn("DATE_E", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_E);
                this.columnFORMAT = new global::System.Data.DataColumn("FORMAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMAT);
                this.columnTAXRATE = new global::System.Data.DataColumn("TAXRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRATE);
                this.columnSALADR = new global::System.Data.DataColumn("SALADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALADR);
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnATT_DATEB = new global::System.Data.DataColumn("ATT_DATEB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATT_DATEB);
                this.columnATT_DATEE = new global::System.Data.DataColumn("ATT_DATEE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATT_DATEE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYYMM,
                                this.columnSEQ,
                                this.columnNOBR}, true));
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "發放年月";
                this.columnYYMM.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "發放期別";
                this.columnSEQ.MaxLength = 50;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "轉帳日期";
                this.columnBANKNO.AllowDBNull = false;
                this.columnBANKNO.Caption = "轉帳行號";
                this.columnBANKNO.MaxLength = 50;
                this.columnACCOUNT_NO.AllowDBNull = false;
                this.columnACCOUNT_NO.Caption = "轉帳帳號";
                this.columnACCOUNT_NO.MaxLength = 50;
                this.columnWK_DAYS.AllowDBNull = false;
                this.columnWK_DAYS.Caption = "工作天";
                this.columnCASH.AllowDBNull = false;
                this.columnCASH.Caption = "現金";
                this.columnNOTE.AllowDBNull = false;
                this.columnNOTE.Caption = "備註";
                this.columnNOTE.MaxLength = 500;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnDATE_B.AllowDBNull = false;
                this.columnDATE_B.Caption = "計算起日";
                this.columnDATE_E.AllowDBNull = false;
                this.columnDATE_E.Caption = "計算迄日";
                this.columnFORMAT.AllowDBNull = false;
                this.columnFORMAT.Caption = "媒體格式";
                this.columnFORMAT.MaxLength = 50;
                this.columnTAXRATE.AllowDBNull = false;
                this.columnTAXRATE.Caption = "稅率";
                this.columnSALADR.AllowDBNull = false;
                this.columnSALADR.Caption = "薪資群組";
                this.columnSALADR.MaxLength = 50;
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.Caption = "公司別";
                this.columnCOMP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGERow NewWAGERow() {
                return ((WAGERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WAGERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WAGERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WAGERowChanged != null)) {
                    this.WAGERowChanged(this, new WAGERowChangeEvent(((WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WAGERowChanging != null)) {
                    this.WAGERowChanging(this, new WAGERowChangeEvent(((WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WAGERowDeleted != null)) {
                    this.WAGERowDeleted(this, new WAGERowChangeEvent(((WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WAGERowDeleting != null)) {
                    this.WAGERowDeleting(this, new WAGERowChangeEvent(((WAGERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveWAGERow(WAGERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WAGEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WAGEDDataTable : global::System.Data.TypedTableBase<WAGEDRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDataTable() {
                this.TableName = "WAGED";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WAGEDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected WAGEDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDRow this[int index] {
                get {
                    return ((WAGEDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDRowChangeEventHandler WAGEDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDRowChangeEventHandler WAGEDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDRowChangeEventHandler WAGEDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDRowChangeEventHandler WAGEDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddWAGEDRow(WAGEDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDRow AddWAGEDRow(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT) {
                WAGEDRow rowWAGEDRow = ((WAGEDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        YYMM,
                        SEQ,
                        SAL_CODE,
                        AMT};
                rowWAGEDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWAGEDRow);
                return rowWAGEDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDRow FindByNOBRYYMMSEQSAL_CODE(string NOBR, string YYMM, string SEQ, string SAL_CODE) {
                return ((WAGEDRow)(this.Rows.Find(new object[] {
                            NOBR,
                            YYMM,
                            SEQ,
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WAGEDDataTable cln = ((WAGEDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WAGEDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnYYMM,
                                this.columnSEQ,
                                this.columnSAL_CODE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "期別";
                this.columnSEQ.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDRow NewWAGEDRow() {
                return ((WAGEDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WAGEDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WAGEDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WAGEDRowChanged != null)) {
                    this.WAGEDRowChanged(this, new WAGEDRowChangeEvent(((WAGEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WAGEDRowChanging != null)) {
                    this.WAGEDRowChanging(this, new WAGEDRowChangeEvent(((WAGEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WAGEDRowDeleted != null)) {
                    this.WAGEDRowDeleted(this, new WAGEDRowChangeEvent(((WAGEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WAGEDRowDeleting != null)) {
                    this.WAGEDRowDeleting(this, new WAGEDRowChangeEvent(((WAGEDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveWAGEDRow(WAGEDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WAGEDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALBASDDataTable : global::System.Data.TypedTableBase<SALBASDRow> {
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnAMTB;
            
            private global::System.Data.DataColumn columnMENO;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            private global::System.Data.DataColumn columnSAL_CODE_DISP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASDDataTable() {
                this.TableName = "SALBASD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALBASDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTBColumn {
                get {
                    return this.columnAMTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MENOColumn {
                get {
                    return this.columnMENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODE_DISPColumn {
                get {
                    return this.columnSAL_CODE_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASDRow this[int index] {
                get {
                    return ((SALBASDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASDRowChangeEventHandler SALBASDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASDRowChangeEventHandler SALBASDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASDRowChangeEventHandler SALBASDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASDRowChangeEventHandler SALBASDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALBASDRow(SALBASDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASDRow AddSALBASDRow(System.DateTime ADATE, string NOBR, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, System.DateTime DDATE, string NAME_C, string SAL_NAME, string SAL_CODE_DISP) {
                SALBASDRow rowSALBASDRow = ((SALBASDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ADATE,
                        NOBR,
                        SAL_CODE,
                        AMT,
                        KEY_MAN,
                        KEY_DATE,
                        AMTB,
                        MENO,
                        DDATE,
                        NAME_C,
                        SAL_NAME,
                        SAL_CODE_DISP};
                rowSALBASDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALBASDRow);
                return rowSALBASDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASDRow FindByADATENOBRSAL_CODE(System.DateTime ADATE, string NOBR, string SAL_CODE) {
                return ((SALBASDRow)(this.Rows.Find(new object[] {
                            ADATE,
                            NOBR,
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALBASDDataTable cln = ((SALBASDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALBASDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnADATE = base.Columns["ADATE"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnAMTB = base.Columns["AMTB"];
                this.columnMENO = base.Columns["MENO"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
                this.columnSAL_CODE_DISP = base.Columns["SAL_CODE_DISP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnAMTB = new global::System.Data.DataColumn("AMTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTB);
                this.columnMENO = new global::System.Data.DataColumn("MENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENO);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.columnSAL_CODE_DISP = new global::System.Data.DataColumn("SAL_CODE_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE_DISP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnADATE,
                                this.columnNOBR,
                                this.columnSAL_CODE}, true));
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "異動日期";
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnAMTB.AllowDBNull = false;
                this.columnMENO.AllowDBNull = false;
                this.columnMENO.Caption = "備註";
                this.columnMENO.MaxLength = 50;
                this.columnDDATE.AllowDBNull = false;
                this.columnDDATE.Caption = "失效日期";
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.Caption = "薪資名稱";
                this.columnSAL_NAME.MaxLength = 50;
                this.columnSAL_CODE_DISP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASDRow NewSALBASDRow() {
                return ((SALBASDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALBASDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALBASDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALBASDRowChanged != null)) {
                    this.SALBASDRowChanged(this, new SALBASDRowChangeEvent(((SALBASDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALBASDRowChanging != null)) {
                    this.SALBASDRowChanging(this, new SALBASDRowChangeEvent(((SALBASDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALBASDRowDeleted != null)) {
                    this.SALBASDRowDeleted(this, new SALBASDRowChangeEvent(((SALBASDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALBASDRowDeleting != null)) {
                    this.SALBASDRowDeleting(this, new SALBASDRowChangeEvent(((SALBASDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALBASDRow(SALBASDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALBASDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALBASTDDataTable : global::System.Data.TypedTableBase<SALBASTDRow> {
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnAMTB;
            
            private global::System.Data.DataColumn columnMENO;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASTDDataTable() {
                this.TableName = "SALBASTD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASTDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALBASTDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTBColumn {
                get {
                    return this.columnAMTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MENOColumn {
                get {
                    return this.columnMENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASTDRow this[int index] {
                get {
                    return ((SALBASTDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASTDRowChangeEventHandler SALBASTDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASTDRowChangeEventHandler SALBASTDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASTDRowChangeEventHandler SALBASTDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASTDRowChangeEventHandler SALBASTDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALBASTDRow(SALBASTDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASTDRow AddSALBASTDRow(System.DateTime ADATE, string NOBR, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, System.DateTime DDATE, string NAME_C, string SAL_NAME) {
                SALBASTDRow rowSALBASTDRow = ((SALBASTDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ADATE,
                        NOBR,
                        SAL_CODE,
                        AMT,
                        KEY_MAN,
                        KEY_DATE,
                        AMTB,
                        MENO,
                        DDATE,
                        NAME_C,
                        SAL_NAME};
                rowSALBASTDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALBASTDRow);
                return rowSALBASTDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASTDRow FindByADATENOBRSAL_CODE(System.DateTime ADATE, string NOBR, string SAL_CODE) {
                return ((SALBASTDRow)(this.Rows.Find(new object[] {
                            ADATE,
                            NOBR,
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALBASTDDataTable cln = ((SALBASTDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALBASTDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnADATE = base.Columns["ADATE"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnAMTB = base.Columns["AMTB"];
                this.columnMENO = base.Columns["MENO"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnAMTB = new global::System.Data.DataColumn("AMTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTB);
                this.columnMENO = new global::System.Data.DataColumn("MENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENO);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnADATE,
                                this.columnNOBR,
                                this.columnSAL_CODE}, true));
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "異動日期";
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnAMTB.AllowDBNull = false;
                this.columnMENO.AllowDBNull = false;
                this.columnMENO.Caption = "備註";
                this.columnMENO.MaxLength = 50;
                this.columnDDATE.AllowDBNull = false;
                this.columnDDATE.Caption = "失效日期";
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.Caption = "薪資名稱";
                this.columnSAL_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASTDRow NewSALBASTDRow() {
                return ((SALBASTDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALBASTDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALBASTDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALBASTDRowChanged != null)) {
                    this.SALBASTDRowChanged(this, new SALBASTDRowChangeEvent(((SALBASTDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALBASTDRowChanging != null)) {
                    this.SALBASTDRowChanging(this, new SALBASTDRowChangeEvent(((SALBASTDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALBASTDRowDeleted != null)) {
                    this.SALBASTDRowDeleted(this, new SALBASTDRowChangeEvent(((SALBASTDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALBASTDRowDeleting != null)) {
                    this.SALBASTDRowDeleting(this, new SALBASTDRowChangeEvent(((SALBASTDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALBASTDRow(SALBASTDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALBASTDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TAXLVLDataTable : global::System.Data.TypedTableBase<TAXLVLRow> {
            
            private global::System.Data.DataColumn columnYEAR;
            
            private global::System.Data.DataColumn columnAMT_H;
            
            private global::System.Data.DataColumn columnAMT_L;
            
            private global::System.Data.DataColumn columnPER0;
            
            private global::System.Data.DataColumn columnPER1;
            
            private global::System.Data.DataColumn columnPER2;
            
            private global::System.Data.DataColumn columnPER3;
            
            private global::System.Data.DataColumn columnPER4;
            
            private global::System.Data.DataColumn columnPER5;
            
            private global::System.Data.DataColumn columnPER6;
            
            private global::System.Data.DataColumn columnPER7;
            
            private global::System.Data.DataColumn columnPER8;
            
            private global::System.Data.DataColumn columnPER9;
            
            private global::System.Data.DataColumn columnPER10;
            
            private global::System.Data.DataColumn columnPER11;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TAXLVLDataTable() {
                this.TableName = "TAXLVL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TAXLVLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected TAXLVLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YEARColumn {
                get {
                    return this.columnYEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT_HColumn {
                get {
                    return this.columnAMT_H;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT_LColumn {
                get {
                    return this.columnAMT_L;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER0Column {
                get {
                    return this.columnPER0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER1Column {
                get {
                    return this.columnPER1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER2Column {
                get {
                    return this.columnPER2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER3Column {
                get {
                    return this.columnPER3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER4Column {
                get {
                    return this.columnPER4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER5Column {
                get {
                    return this.columnPER5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER6Column {
                get {
                    return this.columnPER6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER7Column {
                get {
                    return this.columnPER7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER8Column {
                get {
                    return this.columnPER8;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER9Column {
                get {
                    return this.columnPER9;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER10Column {
                get {
                    return this.columnPER10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PER11Column {
                get {
                    return this.columnPER11;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TAXLVLRow this[int index] {
                get {
                    return ((TAXLVLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TAXLVLRowChangeEventHandler TAXLVLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TAXLVLRowChangeEventHandler TAXLVLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TAXLVLRowChangeEventHandler TAXLVLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event TAXLVLRowChangeEventHandler TAXLVLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddTAXLVLRow(TAXLVLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TAXLVLRow AddTAXLVLRow(
                        string YEAR, 
                        decimal AMT_H, 
                        decimal AMT_L, 
                        decimal PER0, 
                        decimal PER1, 
                        decimal PER2, 
                        decimal PER3, 
                        decimal PER4, 
                        decimal PER5, 
                        decimal PER6, 
                        decimal PER7, 
                        decimal PER8, 
                        decimal PER9, 
                        decimal PER10, 
                        decimal PER11, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE) {
                TAXLVLRow rowTAXLVLRow = ((TAXLVLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YEAR,
                        AMT_H,
                        AMT_L,
                        PER0,
                        PER1,
                        PER2,
                        PER3,
                        PER4,
                        PER5,
                        PER6,
                        PER7,
                        PER8,
                        PER9,
                        PER10,
                        PER11,
                        KEY_MAN,
                        KEY_DATE};
                rowTAXLVLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTAXLVLRow);
                return rowTAXLVLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TAXLVLRow FindByYEARAMT_H(string YEAR, decimal AMT_H) {
                return ((TAXLVLRow)(this.Rows.Find(new object[] {
                            YEAR,
                            AMT_H})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TAXLVLDataTable cln = ((TAXLVLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TAXLVLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnYEAR = base.Columns["YEAR"];
                this.columnAMT_H = base.Columns["AMT_H"];
                this.columnAMT_L = base.Columns["AMT_L"];
                this.columnPER0 = base.Columns["PER0"];
                this.columnPER1 = base.Columns["PER1"];
                this.columnPER2 = base.Columns["PER2"];
                this.columnPER3 = base.Columns["PER3"];
                this.columnPER4 = base.Columns["PER4"];
                this.columnPER5 = base.Columns["PER5"];
                this.columnPER6 = base.Columns["PER6"];
                this.columnPER7 = base.Columns["PER7"];
                this.columnPER8 = base.Columns["PER8"];
                this.columnPER9 = base.Columns["PER9"];
                this.columnPER10 = base.Columns["PER10"];
                this.columnPER11 = base.Columns["PER11"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnYEAR = new global::System.Data.DataColumn("YEAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEAR);
                this.columnAMT_H = new global::System.Data.DataColumn("AMT_H", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT_H);
                this.columnAMT_L = new global::System.Data.DataColumn("AMT_L", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT_L);
                this.columnPER0 = new global::System.Data.DataColumn("PER0", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER0);
                this.columnPER1 = new global::System.Data.DataColumn("PER1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER1);
                this.columnPER2 = new global::System.Data.DataColumn("PER2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER2);
                this.columnPER3 = new global::System.Data.DataColumn("PER3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER3);
                this.columnPER4 = new global::System.Data.DataColumn("PER4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER4);
                this.columnPER5 = new global::System.Data.DataColumn("PER5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER5);
                this.columnPER6 = new global::System.Data.DataColumn("PER6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER6);
                this.columnPER7 = new global::System.Data.DataColumn("PER7", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER7);
                this.columnPER8 = new global::System.Data.DataColumn("PER8", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER8);
                this.columnPER9 = new global::System.Data.DataColumn("PER9", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER9);
                this.columnPER10 = new global::System.Data.DataColumn("PER10", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER10);
                this.columnPER11 = new global::System.Data.DataColumn("PER11", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPER11);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYEAR,
                                this.columnAMT_H}, true));
                this.columnYEAR.AllowDBNull = false;
                this.columnYEAR.Caption = "年度";
                this.columnYEAR.MaxLength = 50;
                this.columnAMT_H.AllowDBNull = false;
                this.columnAMT_H.Caption = "薪資上限";
                this.columnAMT_L.AllowDBNull = false;
                this.columnAMT_L.Caption = "薪資下限";
                this.columnPER0.AllowDBNull = false;
                this.columnPER0.Caption = "扶養人數00";
                this.columnPER1.AllowDBNull = false;
                this.columnPER1.Caption = "扶養人數01";
                this.columnPER2.AllowDBNull = false;
                this.columnPER2.Caption = "扶養人數02";
                this.columnPER3.AllowDBNull = false;
                this.columnPER3.Caption = "扶養人數03";
                this.columnPER4.AllowDBNull = false;
                this.columnPER4.Caption = "扶養人數04";
                this.columnPER5.AllowDBNull = false;
                this.columnPER5.Caption = "扶養人數05";
                this.columnPER6.AllowDBNull = false;
                this.columnPER6.Caption = "扶養人數06";
                this.columnPER7.AllowDBNull = false;
                this.columnPER7.Caption = "扶養人數07";
                this.columnPER8.AllowDBNull = false;
                this.columnPER8.Caption = "扶養人數08";
                this.columnPER9.AllowDBNull = false;
                this.columnPER9.Caption = "扶養人數09";
                this.columnPER10.AllowDBNull = false;
                this.columnPER10.Caption = "扶養人數10";
                this.columnPER11.AllowDBNull = false;
                this.columnPER11.Caption = "扶養人數11";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TAXLVLRow NewTAXLVLRow() {
                return ((TAXLVLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TAXLVLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TAXLVLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TAXLVLRowChanged != null)) {
                    this.TAXLVLRowChanged(this, new TAXLVLRowChangeEvent(((TAXLVLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TAXLVLRowChanging != null)) {
                    this.TAXLVLRowChanging(this, new TAXLVLRowChangeEvent(((TAXLVLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TAXLVLRowDeleted != null)) {
                    this.TAXLVLRowDeleted(this, new TAXLVLRowChangeEvent(((TAXLVLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TAXLVLRowDeleting != null)) {
                    this.TAXLVLRowDeleting(this, new TAXLVLRowChangeEvent(((TAXLVLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveTAXLVLRow(TAXLVLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TAXLVLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MA_FOODDataTable : global::System.Data.TypedTableBase<MA_FOODRow> {
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnROTE;
            
            private global::System.Data.DataColumn columnNOT_ROTE;
            
            private global::System.Data.DataColumn columnMA_AMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public MA_FOODDataTable() {
                this.TableName = "MA_FOOD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal MA_FOODDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected MA_FOODDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROTEColumn {
                get {
                    return this.columnROTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_ROTEColumn {
                get {
                    return this.columnNOT_ROTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MA_AMTColumn {
                get {
                    return this.columnMA_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public MA_FOODRow this[int index] {
                get {
                    return ((MA_FOODRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event MA_FOODRowChangeEventHandler MA_FOODRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event MA_FOODRowChangeEventHandler MA_FOODRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event MA_FOODRowChangeEventHandler MA_FOODRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event MA_FOODRowChangeEventHandler MA_FOODRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddMA_FOODRow(MA_FOODRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public MA_FOODRow AddMA_FOODRow(string COMP, string ROTE, bool NOT_ROTE, decimal MA_AMT, string KEY_MAN, System.DateTime KEY_DATE) {
                MA_FOODRow rowMA_FOODRow = ((MA_FOODRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMP,
                        ROTE,
                        NOT_ROTE,
                        MA_AMT,
                        KEY_MAN,
                        KEY_DATE};
                rowMA_FOODRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMA_FOODRow);
                return rowMA_FOODRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public MA_FOODRow FindByCOMP(string COMP) {
                return ((MA_FOODRow)(this.Rows.Find(new object[] {
                            COMP})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MA_FOODDataTable cln = ((MA_FOODDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MA_FOODDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnCOMP = base.Columns["COMP"];
                this.columnROTE = base.Columns["ROTE"];
                this.columnNOT_ROTE = base.Columns["NOT_ROTE"];
                this.columnMA_AMT = base.Columns["MA_AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnROTE = new global::System.Data.DataColumn("ROTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROTE);
                this.columnNOT_ROTE = new global::System.Data.DataColumn("NOT_ROTE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_ROTE);
                this.columnMA_AMT = new global::System.Data.DataColumn("MA_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMA_AMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOMP}, true));
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.Unique = true;
                this.columnCOMP.Caption = "公司別";
                this.columnCOMP.MaxLength = 50;
                this.columnROTE.AllowDBNull = false;
                this.columnROTE.Caption = "班別";
                this.columnROTE.MaxLength = 50;
                this.columnNOT_ROTE.AllowDBNull = false;
                this.columnNOT_ROTE.Caption = "不分班別";
                this.columnMA_AMT.AllowDBNull = false;
                this.columnMA_AMT.Caption = "膳宿費";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public MA_FOODRow NewMA_FOODRow() {
                return ((MA_FOODRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MA_FOODRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MA_FOODRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MA_FOODRowChanged != null)) {
                    this.MA_FOODRowChanged(this, new MA_FOODRowChangeEvent(((MA_FOODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MA_FOODRowChanging != null)) {
                    this.MA_FOODRowChanging(this, new MA_FOODRowChangeEvent(((MA_FOODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MA_FOODRowDeleted != null)) {
                    this.MA_FOODRowDeleted(this, new MA_FOODRowChangeEvent(((MA_FOODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MA_FOODRowDeleting != null)) {
                    this.MA_FOODRowDeleting(this, new MA_FOODRowChangeEvent(((MA_FOODRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveMA_FOODRow(MA_FOODRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MA_FOODDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WAGEDDDataTable : global::System.Data.TypedTableBase<WAGEDDRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnACNO;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            private global::System.Data.DataColumn columnD_NAME;
            
            private global::System.Data.DataColumn columnD_NO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDDataTable() {
                this.TableName = "WAGEDD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WAGEDDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected WAGEDDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACNOColumn {
                get {
                    return this.columnACNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D_NAMEColumn {
                get {
                    return this.columnD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D_NOColumn {
                get {
                    return this.columnD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDRow this[int index] {
                get {
                    return ((WAGEDDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDDRowChangeEventHandler WAGEDDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDDRowChangeEventHandler WAGEDDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDDRowChangeEventHandler WAGEDDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event WAGEDDRowChangeEventHandler WAGEDDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddWAGEDDRow(WAGEDDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDRow AddWAGEDDRow(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT, string ACNO, string KEY_MAN, System.DateTime KEY_DATE, string NAME_C, string SAL_NAME, string D_NAME, string D_NO) {
                WAGEDDRow rowWAGEDDRow = ((WAGEDDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        YYMM,
                        SEQ,
                        SAL_CODE,
                        AMT,
                        ACNO,
                        KEY_MAN,
                        KEY_DATE,
                        NAME_C,
                        SAL_NAME,
                        D_NAME,
                        D_NO};
                rowWAGEDDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWAGEDDRow);
                return rowWAGEDDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDRow FindByNOBRYYMMSEQACNO(string NOBR, string YYMM, string SEQ, string ACNO) {
                return ((WAGEDDRow)(this.Rows.Find(new object[] {
                            NOBR,
                            YYMM,
                            SEQ,
                            ACNO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WAGEDDDataTable cln = ((WAGEDDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WAGEDDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnACNO = base.Columns["ACNO"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
                this.columnD_NAME = base.Columns["D_NAME"];
                this.columnD_NO = base.Columns["D_NO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnACNO = new global::System.Data.DataColumn("ACNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACNO);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.columnD_NAME = new global::System.Data.DataColumn("D_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NAME);
                this.columnD_NO = new global::System.Data.DataColumn("D_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnYYMM,
                                this.columnSEQ,
                                this.columnACNO}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "計薪期別";
                this.columnSEQ.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnACNO.AllowDBNull = false;
                this.columnACNO.Caption = "編碼";
                this.columnACNO.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.Caption = "薪資名稱";
                this.columnSAL_NAME.MaxLength = 50;
                this.columnD_NAME.AllowDBNull = false;
                this.columnD_NAME.Caption = "部門名稱";
                this.columnD_NAME.MaxLength = 50;
                this.columnD_NO.AllowDBNull = false;
                this.columnD_NO.Caption = "部門";
                this.columnD_NO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDRow NewWAGEDDRow() {
                return ((WAGEDDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WAGEDDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WAGEDDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WAGEDDRowChanged != null)) {
                    this.WAGEDDRowChanged(this, new WAGEDDRowChangeEvent(((WAGEDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WAGEDDRowChanging != null)) {
                    this.WAGEDDRowChanging(this, new WAGEDDRowChangeEvent(((WAGEDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WAGEDDRowDeleted != null)) {
                    this.WAGEDDRowDeleted(this, new WAGEDDRowChangeEvent(((WAGEDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WAGEDDRowDeleting != null)) {
                    this.WAGEDDRowDeleting(this, new WAGEDDRowChangeEvent(((WAGEDDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveWAGEDDRow(WAGEDDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WAGEDDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALABSDataTable : global::System.Data.TypedTableBase<SALABSRow> {
            
            private global::System.Data.DataColumn columnSALSEQ;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnADJ_CODE;
            
            private global::System.Data.DataColumn columnMLSSALCODE;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnH_CODE;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnBTIME;
            
            private global::System.Data.DataColumn columnH_NAME;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALABSDataTable() {
                this.TableName = "SALABS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALABSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALABSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALSEQColumn {
                get {
                    return this.columnSALSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADJ_CODEColumn {
                get {
                    return this.columnADJ_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MLSSALCODEColumn {
                get {
                    return this.columnMLSSALCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn H_CODEColumn {
                get {
                    return this.columnH_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BTIMEColumn {
                get {
                    return this.columnBTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn H_NAMEColumn {
                get {
                    return this.columnH_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALABSRow this[int index] {
                get {
                    return ((SALABSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALABSRowChangeEventHandler SALABSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALABSRowChangeEventHandler SALABSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALABSRowChangeEventHandler SALABSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALABSRowChangeEventHandler SALABSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALABSRow(SALABSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALABSRow AddSALABSRow(string SALSEQ, string SAL_CODE, decimal AMT, string ADJ_CODE, string MLSSALCODE, System.DateTime KEY_DATE, string KEY_MAN, string H_CODE, string NOBR, string YYMM, System.DateTime ADATE, string BTIME, string H_NAME, string NAME_C) {
                SALABSRow rowSALABSRow = ((SALABSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SALSEQ,
                        SAL_CODE,
                        AMT,
                        ADJ_CODE,
                        MLSSALCODE,
                        KEY_DATE,
                        KEY_MAN,
                        H_CODE,
                        NOBR,
                        YYMM,
                        ADATE,
                        BTIME,
                        H_NAME,
                        NAME_C};
                rowSALABSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALABSRow);
                return rowSALABSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALABSRow FindByBTIMEADATENOBRH_CODESAL_CODEMLSSALCODE(string BTIME, System.DateTime ADATE, string NOBR, string H_CODE, string SAL_CODE, string MLSSALCODE) {
                return ((SALABSRow)(this.Rows.Find(new object[] {
                            BTIME,
                            ADATE,
                            NOBR,
                            H_CODE,
                            SAL_CODE,
                            MLSSALCODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALABSDataTable cln = ((SALABSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALABSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSALSEQ = base.Columns["SALSEQ"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnADJ_CODE = base.Columns["ADJ_CODE"];
                this.columnMLSSALCODE = base.Columns["MLSSALCODE"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnH_CODE = base.Columns["H_CODE"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnBTIME = base.Columns["BTIME"];
                this.columnH_NAME = base.Columns["H_NAME"];
                this.columnNAME_C = base.Columns["NAME_C"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSALSEQ = new global::System.Data.DataColumn("SALSEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALSEQ);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnADJ_CODE = new global::System.Data.DataColumn("ADJ_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADJ_CODE);
                this.columnMLSSALCODE = new global::System.Data.DataColumn("MLSSALCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLSSALCODE);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnH_CODE = new global::System.Data.DataColumn("H_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH_CODE);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnBTIME = new global::System.Data.DataColumn("BTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTIME);
                this.columnH_NAME = new global::System.Data.DataColumn("H_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH_NAME);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnBTIME,
                                this.columnADATE,
                                this.columnNOBR,
                                this.columnH_CODE,
                                this.columnSAL_CODE,
                                this.columnMLSSALCODE}, true));
                this.columnSALSEQ.AllowDBNull = false;
                this.columnSALSEQ.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnADJ_CODE.AllowDBNull = false;
                this.columnADJ_CODE.Caption = "判斷碼";
                this.columnADJ_CODE.MaxLength = 50;
                this.columnMLSSALCODE.AllowDBNull = false;
                this.columnMLSSALCODE.Caption = "扣款薪代";
                this.columnMLSSALCODE.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnH_CODE.AllowDBNull = false;
                this.columnH_CODE.Caption = "假別";
                this.columnH_CODE.MaxLength = 50;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "扣款年月";
                this.columnYYMM.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "請假日期";
                this.columnBTIME.AllowDBNull = false;
                this.columnBTIME.Caption = "請假起";
                this.columnBTIME.MaxLength = 50;
                this.columnH_NAME.AllowDBNull = false;
                this.columnH_NAME.Caption = "假別名稱";
                this.columnH_NAME.MaxLength = 50;
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALABSRow NewSALABSRow() {
                return ((SALABSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALABSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALABSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALABSRowChanged != null)) {
                    this.SALABSRowChanged(this, new SALABSRowChangeEvent(((SALABSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALABSRowChanging != null)) {
                    this.SALABSRowChanging(this, new SALABSRowChangeEvent(((SALABSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALABSRowDeleted != null)) {
                    this.SALABSRowDeleted(this, new SALABSRowChangeEvent(((SALABSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALABSRowDeleting != null)) {
                    this.SALABSRowDeleting(this, new SALABSRowChangeEvent(((SALABSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALABSRow(SALABSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALABSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OTDataTable : global::System.Data.TypedTableBase<OTRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnBDATE;
            
            private global::System.Data.DataColumn columnBTIME;
            
            private global::System.Data.DataColumn columnETIME;
            
            private global::System.Data.DataColumn columnTOT_HOURS;
            
            private global::System.Data.DataColumn columnOT_HRS;
            
            private global::System.Data.DataColumn columnREST_HRS;
            
            private global::System.Data.DataColumn columnOT_CAR;
            
            private global::System.Data.DataColumn columnOT_DEPT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnOT_FOOD;
            
            private global::System.Data.DataColumn columnNOTE;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnSER;
            
            private global::System.Data.DataColumn columnNOT_W_133;
            
            private global::System.Data.DataColumn columnNOT_W_167;
            
            private global::System.Data.DataColumn columnNOT_W_200;
            
            private global::System.Data.DataColumn columnNOT_H_200;
            
            private global::System.Data.DataColumn columnTOT_W_133;
            
            private global::System.Data.DataColumn columnTOT_W_167;
            
            private global::System.Data.DataColumn columnTOT_W_200;
            
            private global::System.Data.DataColumn columnTOT_H_200;
            
            private global::System.Data.DataColumn columnNOT_EXP;
            
            private global::System.Data.DataColumn columnTOT_EXP;
            
            private global::System.Data.DataColumn columnREST_EXP;
            
            private global::System.Data.DataColumn columnFST_HOURS;
            
            private global::System.Data.DataColumn columnSALARY;
            
            private global::System.Data.DataColumn columnNOTMODI;
            
            private global::System.Data.DataColumn columnOTRCD;
            
            private global::System.Data.DataColumn columnNOFOOD;
            
            private global::System.Data.DataColumn columnFIX_AMT;
            
            private global::System.Data.DataColumn columnCANT_ADJ;
            
            private global::System.Data.DataColumn columnOT_EDATE;
            
            private global::System.Data.DataColumn columnOT_ROTE;
            
            private global::System.Data.DataColumn columnOT_FOOD1;
            
            private global::System.Data.DataColumn columnOT_FOODH;
            
            private global::System.Data.DataColumn columnOT_FOODH1;
            
            private global::System.Data.DataColumn columnNOP_W_133;
            
            private global::System.Data.DataColumn columnNOP_W_167;
            
            private global::System.Data.DataColumn columnNOP_W_200;
            
            private global::System.Data.DataColumn columnNOP_H_133;
            
            private global::System.Data.DataColumn columnNOP_H_167;
            
            private global::System.Data.DataColumn columnNOP_H_200;
            
            private global::System.Data.DataColumn columnTOP_W_133;
            
            private global::System.Data.DataColumn columnTOP_W_167;
            
            private global::System.Data.DataColumn columnTOP_W_200;
            
            private global::System.Data.DataColumn columnTOP_H_200;
            
            private global::System.Data.DataColumn columnNOT_H_133;
            
            private global::System.Data.DataColumn columnNOT_H_167;
            
            private global::System.Data.DataColumn columnSYSCREAT;
            
            private global::System.Data.DataColumn columnOTRATE_CODE;
            
            private global::System.Data.DataColumn columnSYS_OT;
            
            private global::System.Data.DataColumn columnSERNO;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnJOB_NAME;
            
            private global::System.Data.DataColumn columnDEPTS_NAME;
            
            private global::System.Data.DataColumn columnDEPT_NAME;
            
            private global::System.Data.DataColumn columnDEPT;
            
            private global::System.Data.DataColumn columnNOFOOD1;
            
            private global::System.Data.DataColumn columnisHoli;
            
            private global::System.Data.DataColumn columnCOUNT_MA;
            
            private global::System.Data.DataColumn columnFOOD_PRI;
            
            private global::System.Data.DataColumn columnFOOD_CNT;
            
            private global::System.Data.DataColumn columnTOT_W_100;
            
            private global::System.Data.DataColumn columnREC;
            
            private global::System.Data.DataColumn columnOTNO;
            
            private global::System.Data.DataColumn columnNOP_H_100;
            
            private global::System.Data.DataColumn columnHOT_133;
            
            private global::System.Data.DataColumn columnHOT_166;
            
            private global::System.Data.DataColumn columnHOT_200;
            
            private global::System.Data.DataColumn columnWOT_133;
            
            private global::System.Data.DataColumn columnWOT_166;
            
            private global::System.Data.DataColumn columnWOT_200;
            
            private global::System.Data.DataColumn columnSUM;
            
            private global::System.Data.DataColumn columnNOT_W_100;
            
            private global::System.Data.DataColumn columnTOP_W_100;
            
            private global::System.Data.DataColumn columnSYSCREAT1;
            
            private global::System.Data.DataColumn columnNOP_W_100;
            
            private global::System.Data.DataColumn columnRES;
            
            private global::System.Data.DataColumn columnEAT;
            
            private global::System.Data.DataColumn columnDIFF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OTDataTable() {
                this.TableName = "OT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected OTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BDATEColumn {
                get {
                    return this.columnBDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BTIMEColumn {
                get {
                    return this.columnBTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ETIMEColumn {
                get {
                    return this.columnETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_HOURSColumn {
                get {
                    return this.columnTOT_HOURS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_HRSColumn {
                get {
                    return this.columnOT_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REST_HRSColumn {
                get {
                    return this.columnREST_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_CARColumn {
                get {
                    return this.columnOT_CAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_DEPTColumn {
                get {
                    return this.columnOT_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOODColumn {
                get {
                    return this.columnOT_FOOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTEColumn {
                get {
                    return this.columnNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERColumn {
                get {
                    return this.columnSER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_W_133Column {
                get {
                    return this.columnNOT_W_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_W_167Column {
                get {
                    return this.columnNOT_W_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_W_200Column {
                get {
                    return this.columnNOT_W_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_H_200Column {
                get {
                    return this.columnNOT_H_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_W_133Column {
                get {
                    return this.columnTOT_W_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_W_167Column {
                get {
                    return this.columnTOT_W_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_W_200Column {
                get {
                    return this.columnTOT_W_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_H_200Column {
                get {
                    return this.columnTOT_H_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_EXPColumn {
                get {
                    return this.columnNOT_EXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_EXPColumn {
                get {
                    return this.columnTOT_EXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REST_EXPColumn {
                get {
                    return this.columnREST_EXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FST_HOURSColumn {
                get {
                    return this.columnFST_HOURS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALARYColumn {
                get {
                    return this.columnSALARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTMODIColumn {
                get {
                    return this.columnNOTMODI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTRCDColumn {
                get {
                    return this.columnOTRCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOFOODColumn {
                get {
                    return this.columnNOFOOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FIX_AMTColumn {
                get {
                    return this.columnFIX_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CANT_ADJColumn {
                get {
                    return this.columnCANT_ADJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_EDATEColumn {
                get {
                    return this.columnOT_EDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_ROTEColumn {
                get {
                    return this.columnOT_ROTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOOD1Column {
                get {
                    return this.columnOT_FOOD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOODHColumn {
                get {
                    return this.columnOT_FOODH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOODH1Column {
                get {
                    return this.columnOT_FOODH1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_W_133Column {
                get {
                    return this.columnNOP_W_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_W_167Column {
                get {
                    return this.columnNOP_W_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_W_200Column {
                get {
                    return this.columnNOP_W_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_H_133Column {
                get {
                    return this.columnNOP_H_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_H_167Column {
                get {
                    return this.columnNOP_H_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_H_200Column {
                get {
                    return this.columnNOP_H_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOP_W_133Column {
                get {
                    return this.columnTOP_W_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOP_W_167Column {
                get {
                    return this.columnTOP_W_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOP_W_200Column {
                get {
                    return this.columnTOP_W_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOP_H_200Column {
                get {
                    return this.columnTOP_H_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_H_133Column {
                get {
                    return this.columnNOT_H_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_H_167Column {
                get {
                    return this.columnNOT_H_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SYSCREATColumn {
                get {
                    return this.columnSYSCREAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTRATE_CODEColumn {
                get {
                    return this.columnOTRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SYS_OTColumn {
                get {
                    return this.columnSYS_OT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERNOColumn {
                get {
                    return this.columnSERNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JOB_NAMEColumn {
                get {
                    return this.columnJOB_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPTS_NAMEColumn {
                get {
                    return this.columnDEPTS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_NAMEColumn {
                get {
                    return this.columnDEPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPTColumn {
                get {
                    return this.columnDEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOFOOD1Column {
                get {
                    return this.columnNOFOOD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn isHoliColumn {
                get {
                    return this.columnisHoli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COUNT_MAColumn {
                get {
                    return this.columnCOUNT_MA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FOOD_PRIColumn {
                get {
                    return this.columnFOOD_PRI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FOOD_CNTColumn {
                get {
                    return this.columnFOOD_CNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_W_100Column {
                get {
                    return this.columnTOT_W_100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RECColumn {
                get {
                    return this.columnREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTNOColumn {
                get {
                    return this.columnOTNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_H_100Column {
                get {
                    return this.columnNOP_H_100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOT_133Column {
                get {
                    return this.columnHOT_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOT_166Column {
                get {
                    return this.columnHOT_166;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOT_200Column {
                get {
                    return this.columnHOT_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WOT_133Column {
                get {
                    return this.columnWOT_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WOT_166Column {
                get {
                    return this.columnWOT_166;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WOT_200Column {
                get {
                    return this.columnWOT_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUMColumn {
                get {
                    return this.columnSUM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_W_100Column {
                get {
                    return this.columnNOT_W_100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOP_W_100Column {
                get {
                    return this.columnTOP_W_100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SYSCREAT1Column {
                get {
                    return this.columnSYSCREAT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOP_W_100Column {
                get {
                    return this.columnNOP_W_100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RESColumn {
                get {
                    return this.columnRES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EATColumn {
                get {
                    return this.columnEAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIFFColumn {
                get {
                    return this.columnDIFF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OTRow this[int index] {
                get {
                    return ((OTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OTRowChangeEventHandler OTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OTRowChangeEventHandler OTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OTRowChangeEventHandler OTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event OTRowChangeEventHandler OTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddOTRow(OTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OTRow AddOTRow(
                        string NOBR, 
                        System.DateTime BDATE, 
                        string BTIME, 
                        string ETIME, 
                        decimal TOT_HOURS, 
                        decimal OT_HRS, 
                        decimal REST_HRS, 
                        decimal OT_CAR, 
                        string OT_DEPT, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        decimal OT_FOOD, 
                        string NOTE, 
                        string YYMM, 
                        string SER, 
                        decimal NOT_W_133, 
                        decimal NOT_W_167, 
                        decimal NOT_W_200, 
                        decimal NOT_H_200, 
                        decimal TOT_W_133, 
                        decimal TOT_W_167, 
                        decimal TOT_W_200, 
                        decimal TOT_H_200, 
                        decimal NOT_EXP, 
                        decimal TOT_EXP, 
                        decimal REST_EXP, 
                        decimal FST_HOURS, 
                        decimal SALARY, 
                        bool NOTMODI, 
                        string OTRCD, 
                        bool NOFOOD, 
                        bool FIX_AMT, 
                        bool CANT_ADJ, 
                        System.DateTime OT_EDATE, 
                        string OT_ROTE, 
                        decimal OT_FOOD1, 
                        decimal OT_FOODH, 
                        decimal OT_FOODH1, 
                        decimal NOP_W_133, 
                        decimal NOP_W_167, 
                        decimal NOP_W_200, 
                        decimal NOP_H_133, 
                        decimal NOP_H_167, 
                        decimal NOP_H_200, 
                        decimal TOP_W_133, 
                        decimal TOP_W_167, 
                        decimal TOP_W_200, 
                        decimal TOP_H_200, 
                        decimal NOT_H_133, 
                        decimal NOT_H_167, 
                        bool SYSCREAT, 
                        string OTRATE_CODE, 
                        bool SYS_OT, 
                        string SERNO, 
                        string NAME_C, 
                        string JOB_NAME, 
                        string DEPTS_NAME, 
                        string DEPT_NAME, 
                        string DEPT, 
                        bool NOFOOD1, 
                        int isHoli, 
                        bool COUNT_MA, 
                        decimal FOOD_PRI, 
                        decimal FOOD_CNT, 
                        decimal TOT_W_100, 
                        decimal REC, 
                        string OTNO, 
                        decimal NOP_H_100, 
                        decimal HOT_133, 
                        decimal HOT_166, 
                        decimal HOT_200, 
                        decimal WOT_133, 
                        decimal WOT_166, 
                        decimal WOT_200, 
                        bool SUM, 
                        decimal NOT_W_100, 
                        decimal TOP_W_100, 
                        bool SYSCREAT1, 
                        decimal NOP_W_100, 
                        bool RES, 
                        bool EAT, 
                        decimal DIFF) {
                OTRow rowOTRow = ((OTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        BDATE,
                        BTIME,
                        ETIME,
                        TOT_HOURS,
                        OT_HRS,
                        REST_HRS,
                        OT_CAR,
                        OT_DEPT,
                        KEY_MAN,
                        KEY_DATE,
                        OT_FOOD,
                        NOTE,
                        YYMM,
                        SER,
                        NOT_W_133,
                        NOT_W_167,
                        NOT_W_200,
                        NOT_H_200,
                        TOT_W_133,
                        TOT_W_167,
                        TOT_W_200,
                        TOT_H_200,
                        NOT_EXP,
                        TOT_EXP,
                        REST_EXP,
                        FST_HOURS,
                        SALARY,
                        NOTMODI,
                        OTRCD,
                        NOFOOD,
                        FIX_AMT,
                        CANT_ADJ,
                        OT_EDATE,
                        OT_ROTE,
                        OT_FOOD1,
                        OT_FOODH,
                        OT_FOODH1,
                        NOP_W_133,
                        NOP_W_167,
                        NOP_W_200,
                        NOP_H_133,
                        NOP_H_167,
                        NOP_H_200,
                        TOP_W_133,
                        TOP_W_167,
                        TOP_W_200,
                        TOP_H_200,
                        NOT_H_133,
                        NOT_H_167,
                        SYSCREAT,
                        OTRATE_CODE,
                        SYS_OT,
                        SERNO,
                        NAME_C,
                        JOB_NAME,
                        DEPTS_NAME,
                        DEPT_NAME,
                        DEPT,
                        NOFOOD1,
                        isHoli,
                        COUNT_MA,
                        FOOD_PRI,
                        FOOD_CNT,
                        TOT_W_100,
                        REC,
                        OTNO,
                        NOP_H_100,
                        HOT_133,
                        HOT_166,
                        HOT_200,
                        WOT_133,
                        WOT_166,
                        WOT_200,
                        SUM,
                        NOT_W_100,
                        TOP_W_100,
                        SYSCREAT1,
                        NOP_W_100,
                        RES,
                        EAT,
                        DIFF};
                rowOTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOTRow);
                return rowOTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OTRow FindByNOBRBTIMEBDATEOTRCD(string NOBR, string BTIME, System.DateTime BDATE, string OTRCD) {
                return ((OTRow)(this.Rows.Find(new object[] {
                            NOBR,
                            BTIME,
                            BDATE,
                            OTRCD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OTDataTable cln = ((OTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnBDATE = base.Columns["BDATE"];
                this.columnBTIME = base.Columns["BTIME"];
                this.columnETIME = base.Columns["ETIME"];
                this.columnTOT_HOURS = base.Columns["TOT_HOURS"];
                this.columnOT_HRS = base.Columns["OT_HRS"];
                this.columnREST_HRS = base.Columns["REST_HRS"];
                this.columnOT_CAR = base.Columns["OT_CAR"];
                this.columnOT_DEPT = base.Columns["OT_DEPT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnOT_FOOD = base.Columns["OT_FOOD"];
                this.columnNOTE = base.Columns["NOTE"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnSER = base.Columns["SER"];
                this.columnNOT_W_133 = base.Columns["NOT_W_133"];
                this.columnNOT_W_167 = base.Columns["NOT_W_167"];
                this.columnNOT_W_200 = base.Columns["NOT_W_200"];
                this.columnNOT_H_200 = base.Columns["NOT_H_200"];
                this.columnTOT_W_133 = base.Columns["TOT_W_133"];
                this.columnTOT_W_167 = base.Columns["TOT_W_167"];
                this.columnTOT_W_200 = base.Columns["TOT_W_200"];
                this.columnTOT_H_200 = base.Columns["TOT_H_200"];
                this.columnNOT_EXP = base.Columns["NOT_EXP"];
                this.columnTOT_EXP = base.Columns["TOT_EXP"];
                this.columnREST_EXP = base.Columns["REST_EXP"];
                this.columnFST_HOURS = base.Columns["FST_HOURS"];
                this.columnSALARY = base.Columns["SALARY"];
                this.columnNOTMODI = base.Columns["NOTMODI"];
                this.columnOTRCD = base.Columns["OTRCD"];
                this.columnNOFOOD = base.Columns["NOFOOD"];
                this.columnFIX_AMT = base.Columns["FIX_AMT"];
                this.columnCANT_ADJ = base.Columns["CANT_ADJ"];
                this.columnOT_EDATE = base.Columns["OT_EDATE"];
                this.columnOT_ROTE = base.Columns["OT_ROTE"];
                this.columnOT_FOOD1 = base.Columns["OT_FOOD1"];
                this.columnOT_FOODH = base.Columns["OT_FOODH"];
                this.columnOT_FOODH1 = base.Columns["OT_FOODH1"];
                this.columnNOP_W_133 = base.Columns["NOP_W_133"];
                this.columnNOP_W_167 = base.Columns["NOP_W_167"];
                this.columnNOP_W_200 = base.Columns["NOP_W_200"];
                this.columnNOP_H_133 = base.Columns["NOP_H_133"];
                this.columnNOP_H_167 = base.Columns["NOP_H_167"];
                this.columnNOP_H_200 = base.Columns["NOP_H_200"];
                this.columnTOP_W_133 = base.Columns["TOP_W_133"];
                this.columnTOP_W_167 = base.Columns["TOP_W_167"];
                this.columnTOP_W_200 = base.Columns["TOP_W_200"];
                this.columnTOP_H_200 = base.Columns["TOP_H_200"];
                this.columnNOT_H_133 = base.Columns["NOT_H_133"];
                this.columnNOT_H_167 = base.Columns["NOT_H_167"];
                this.columnSYSCREAT = base.Columns["SYSCREAT"];
                this.columnOTRATE_CODE = base.Columns["OTRATE_CODE"];
                this.columnSYS_OT = base.Columns["SYS_OT"];
                this.columnSERNO = base.Columns["SERNO"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnJOB_NAME = base.Columns["JOB_NAME"];
                this.columnDEPTS_NAME = base.Columns["DEPTS_NAME"];
                this.columnDEPT_NAME = base.Columns["DEPT_NAME"];
                this.columnDEPT = base.Columns["DEPT"];
                this.columnNOFOOD1 = base.Columns["NOFOOD1"];
                this.columnisHoli = base.Columns["isHoli"];
                this.columnCOUNT_MA = base.Columns["COUNT_MA"];
                this.columnFOOD_PRI = base.Columns["FOOD_PRI"];
                this.columnFOOD_CNT = base.Columns["FOOD_CNT"];
                this.columnTOT_W_100 = base.Columns["TOT_W_100"];
                this.columnREC = base.Columns["REC"];
                this.columnOTNO = base.Columns["OTNO"];
                this.columnNOP_H_100 = base.Columns["NOP_H_100"];
                this.columnHOT_133 = base.Columns["HOT_133"];
                this.columnHOT_166 = base.Columns["HOT_166"];
                this.columnHOT_200 = base.Columns["HOT_200"];
                this.columnWOT_133 = base.Columns["WOT_133"];
                this.columnWOT_166 = base.Columns["WOT_166"];
                this.columnWOT_200 = base.Columns["WOT_200"];
                this.columnSUM = base.Columns["SUM"];
                this.columnNOT_W_100 = base.Columns["NOT_W_100"];
                this.columnTOP_W_100 = base.Columns["TOP_W_100"];
                this.columnSYSCREAT1 = base.Columns["SYSCREAT1"];
                this.columnNOP_W_100 = base.Columns["NOP_W_100"];
                this.columnRES = base.Columns["RES"];
                this.columnEAT = base.Columns["EAT"];
                this.columnDIFF = base.Columns["DIFF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnBDATE = new global::System.Data.DataColumn("BDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBDATE);
                this.columnBTIME = new global::System.Data.DataColumn("BTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTIME);
                this.columnETIME = new global::System.Data.DataColumn("ETIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETIME);
                this.columnTOT_HOURS = new global::System.Data.DataColumn("TOT_HOURS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_HOURS);
                this.columnOT_HRS = new global::System.Data.DataColumn("OT_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_HRS);
                this.columnREST_HRS = new global::System.Data.DataColumn("REST_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREST_HRS);
                this.columnOT_CAR = new global::System.Data.DataColumn("OT_CAR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_CAR);
                this.columnOT_DEPT = new global::System.Data.DataColumn("OT_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_DEPT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnOT_FOOD = new global::System.Data.DataColumn("OT_FOOD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOOD);
                this.columnNOTE = new global::System.Data.DataColumn("NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnSER = new global::System.Data.DataColumn("SER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSER);
                this.columnNOT_W_133 = new global::System.Data.DataColumn("NOT_W_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_W_133);
                this.columnNOT_W_167 = new global::System.Data.DataColumn("NOT_W_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_W_167);
                this.columnNOT_W_200 = new global::System.Data.DataColumn("NOT_W_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_W_200);
                this.columnNOT_H_200 = new global::System.Data.DataColumn("NOT_H_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_H_200);
                this.columnTOT_W_133 = new global::System.Data.DataColumn("TOT_W_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_W_133);
                this.columnTOT_W_167 = new global::System.Data.DataColumn("TOT_W_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_W_167);
                this.columnTOT_W_200 = new global::System.Data.DataColumn("TOT_W_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_W_200);
                this.columnTOT_H_200 = new global::System.Data.DataColumn("TOT_H_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_H_200);
                this.columnNOT_EXP = new global::System.Data.DataColumn("NOT_EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_EXP);
                this.columnTOT_EXP = new global::System.Data.DataColumn("TOT_EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_EXP);
                this.columnREST_EXP = new global::System.Data.DataColumn("REST_EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREST_EXP);
                this.columnFST_HOURS = new global::System.Data.DataColumn("FST_HOURS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFST_HOURS);
                this.columnSALARY = new global::System.Data.DataColumn("SALARY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALARY);
                this.columnNOTMODI = new global::System.Data.DataColumn("NOTMODI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTMODI);
                this.columnOTRCD = new global::System.Data.DataColumn("OTRCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTRCD);
                this.columnNOFOOD = new global::System.Data.DataColumn("NOFOOD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOFOOD);
                this.columnFIX_AMT = new global::System.Data.DataColumn("FIX_AMT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIX_AMT);
                this.columnCANT_ADJ = new global::System.Data.DataColumn("CANT_ADJ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANT_ADJ);
                this.columnOT_EDATE = new global::System.Data.DataColumn("OT_EDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_EDATE);
                this.columnOT_ROTE = new global::System.Data.DataColumn("OT_ROTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_ROTE);
                this.columnOT_FOOD1 = new global::System.Data.DataColumn("OT_FOOD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOOD1);
                this.columnOT_FOODH = new global::System.Data.DataColumn("OT_FOODH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOODH);
                this.columnOT_FOODH1 = new global::System.Data.DataColumn("OT_FOODH1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOODH1);
                this.columnNOP_W_133 = new global::System.Data.DataColumn("NOP_W_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_W_133);
                this.columnNOP_W_167 = new global::System.Data.DataColumn("NOP_W_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_W_167);
                this.columnNOP_W_200 = new global::System.Data.DataColumn("NOP_W_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_W_200);
                this.columnNOP_H_133 = new global::System.Data.DataColumn("NOP_H_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_H_133);
                this.columnNOP_H_167 = new global::System.Data.DataColumn("NOP_H_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_H_167);
                this.columnNOP_H_200 = new global::System.Data.DataColumn("NOP_H_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_H_200);
                this.columnTOP_W_133 = new global::System.Data.DataColumn("TOP_W_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOP_W_133);
                this.columnTOP_W_167 = new global::System.Data.DataColumn("TOP_W_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOP_W_167);
                this.columnTOP_W_200 = new global::System.Data.DataColumn("TOP_W_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOP_W_200);
                this.columnTOP_H_200 = new global::System.Data.DataColumn("TOP_H_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOP_H_200);
                this.columnNOT_H_133 = new global::System.Data.DataColumn("NOT_H_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_H_133);
                this.columnNOT_H_167 = new global::System.Data.DataColumn("NOT_H_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_H_167);
                this.columnSYSCREAT = new global::System.Data.DataColumn("SYSCREAT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSCREAT);
                this.columnOTRATE_CODE = new global::System.Data.DataColumn("OTRATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTRATE_CODE);
                this.columnSYS_OT = new global::System.Data.DataColumn("SYS_OT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS_OT);
                this.columnSERNO = new global::System.Data.DataColumn("SERNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERNO);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnJOB_NAME = new global::System.Data.DataColumn("JOB_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NAME);
                this.columnDEPTS_NAME = new global::System.Data.DataColumn("DEPTS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTS_NAME);
                this.columnDEPT_NAME = new global::System.Data.DataColumn("DEPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAME);
                this.columnDEPT = new global::System.Data.DataColumn("DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT);
                this.columnNOFOOD1 = new global::System.Data.DataColumn("NOFOOD1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOFOOD1);
                this.columnisHoli = new global::System.Data.DataColumn("isHoli", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHoli);
                this.columnCOUNT_MA = new global::System.Data.DataColumn("COUNT_MA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNT_MA);
                this.columnFOOD_PRI = new global::System.Data.DataColumn("FOOD_PRI", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOOD_PRI);
                this.columnFOOD_CNT = new global::System.Data.DataColumn("FOOD_CNT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOOD_CNT);
                this.columnTOT_W_100 = new global::System.Data.DataColumn("TOT_W_100", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_W_100);
                this.columnREC = new global::System.Data.DataColumn("REC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREC);
                this.columnOTNO = new global::System.Data.DataColumn("OTNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTNO);
                this.columnNOP_H_100 = new global::System.Data.DataColumn("NOP_H_100", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_H_100);
                this.columnHOT_133 = new global::System.Data.DataColumn("HOT_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOT_133);
                this.columnHOT_166 = new global::System.Data.DataColumn("HOT_166", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOT_166);
                this.columnHOT_200 = new global::System.Data.DataColumn("HOT_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOT_200);
                this.columnWOT_133 = new global::System.Data.DataColumn("WOT_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOT_133);
                this.columnWOT_166 = new global::System.Data.DataColumn("WOT_166", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOT_166);
                this.columnWOT_200 = new global::System.Data.DataColumn("WOT_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWOT_200);
                this.columnSUM = new global::System.Data.DataColumn("SUM", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUM);
                this.columnNOT_W_100 = new global::System.Data.DataColumn("NOT_W_100", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_W_100);
                this.columnTOP_W_100 = new global::System.Data.DataColumn("TOP_W_100", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOP_W_100);
                this.columnSYSCREAT1 = new global::System.Data.DataColumn("SYSCREAT1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSCREAT1);
                this.columnNOP_W_100 = new global::System.Data.DataColumn("NOP_W_100", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOP_W_100);
                this.columnRES = new global::System.Data.DataColumn("RES", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES);
                this.columnEAT = new global::System.Data.DataColumn("EAT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEAT);
                this.columnDIFF = new global::System.Data.DataColumn("DIFF", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDIFF);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnBTIME,
                                this.columnBDATE,
                                this.columnOTRCD}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnBDATE.AllowDBNull = false;
                this.columnBDATE.Caption = "加班日期";
                this.columnBTIME.AllowDBNull = false;
                this.columnBTIME.Caption = "加起時間";
                this.columnBTIME.MaxLength = 50;
                this.columnETIME.AllowDBNull = false;
                this.columnETIME.Caption = "加迄時間";
                this.columnETIME.MaxLength = 50;
                this.columnTOT_HOURS.AllowDBNull = false;
                this.columnTOT_HOURS.Caption = "總時數";
                this.columnOT_HRS.AllowDBNull = false;
                this.columnOT_HRS.Caption = "加班時數";
                this.columnREST_HRS.AllowDBNull = false;
                this.columnREST_HRS.Caption = "補休時數";
                this.columnOT_CAR.AllowDBNull = false;
                this.columnOT_CAR.Caption = "CallIn津貼";
                this.columnOT_DEPT.AllowDBNull = false;
                this.columnOT_DEPT.Caption = "加班部門";
                this.columnOT_DEPT.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnOT_FOOD.AllowDBNull = false;
                this.columnOT_FOOD.Caption = "輪班津貼";
                this.columnNOTE.AllowDBNull = false;
                this.columnNOTE.Caption = "備註";
                this.columnNOTE.MaxLength = 200;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnSER.AllowDBNull = false;
                this.columnSER.MaxLength = 50;
                this.columnNOT_W_133.AllowDBNull = false;
                this.columnNOT_W_133.Caption = "免稅一段";
                this.columnNOT_W_167.AllowDBNull = false;
                this.columnNOT_W_167.Caption = "免稅二段";
                this.columnNOT_W_200.AllowDBNull = false;
                this.columnNOT_W_200.Caption = "免稅三段";
                this.columnNOT_H_200.AllowDBNull = false;
                this.columnNOT_H_200.Caption = "免稅假三";
                this.columnTOT_W_133.AllowDBNull = false;
                this.columnTOT_W_133.Caption = "應稅一段";
                this.columnTOT_W_167.AllowDBNull = false;
                this.columnTOT_W_167.Caption = "應稅二段";
                this.columnTOT_W_200.AllowDBNull = false;
                this.columnTOT_W_200.Caption = "應稅三段";
                this.columnTOT_H_200.AllowDBNull = false;
                this.columnTOT_H_200.Caption = "假日應稅時數";
                this.columnNOT_EXP.AllowDBNull = false;
                this.columnNOT_EXP.Caption = "免稅加班費";
                this.columnTOT_EXP.AllowDBNull = false;
                this.columnTOT_EXP.Caption = "應稅加班費";
                this.columnREST_EXP.AllowDBNull = false;
                this.columnFST_HOURS.AllowDBNull = false;
                this.columnFST_HOURS.Caption = "累計加班時";
                this.columnSALARY.AllowDBNull = false;
                this.columnSALARY.Caption = "計算薪資";
                this.columnNOTMODI.AllowDBNull = false;
                this.columnNOTMODI.Caption = "不可修改";
                this.columnOTRCD.AllowDBNull = false;
                this.columnOTRCD.Caption = "加班原因";
                this.columnOTRCD.MaxLength = 50;
                this.columnNOFOOD.AllowDBNull = false;
                this.columnNOFOOD.Caption = "不計算津貼";
                this.columnFIX_AMT.AllowDBNull = false;
                this.columnFIX_AMT.Caption = "固定金額";
                this.columnCANT_ADJ.AllowDBNull = false;
                this.columnCANT_ADJ.Caption = "不可修改";
                this.columnOT_EDATE.AllowDBNull = false;
                this.columnOT_EDATE.Caption = "有效日期";
                this.columnOT_ROTE.AllowDBNull = false;
                this.columnOT_ROTE.Caption = "加班班別";
                this.columnOT_ROTE.MaxLength = 50;
                this.columnOT_FOOD1.AllowDBNull = false;
                this.columnOT_FOOD1.Caption = "誤餐費";
                this.columnOT_FOODH.AllowDBNull = false;
                this.columnOT_FOODH.Caption = "津貼一時數";
                this.columnOT_FOODH1.AllowDBNull = false;
                this.columnOT_FOODH1.Caption = "津貼二時數";
                this.columnNOP_W_133.AllowDBNull = false;
                this.columnNOP_W_133.Caption = "免稅一比率";
                this.columnNOP_W_167.AllowDBNull = false;
                this.columnNOP_W_167.Caption = "免稅二比率";
                this.columnNOP_W_200.AllowDBNull = false;
                this.columnNOP_W_200.Caption = "免稅三比率";
                this.columnNOP_H_133.AllowDBNull = false;
                this.columnNOP_H_133.Caption = "假日免一率";
                this.columnNOP_H_167.AllowDBNull = false;
                this.columnNOP_H_167.Caption = "假日免二率";
                this.columnNOP_H_200.AllowDBNull = false;
                this.columnNOP_H_200.Caption = "假日免三率";
                this.columnTOP_W_133.AllowDBNull = false;
                this.columnTOP_W_133.Caption = "應稅一比率";
                this.columnTOP_W_167.AllowDBNull = false;
                this.columnTOP_W_167.Caption = "應稅二比率";
                this.columnTOP_W_200.AllowDBNull = false;
                this.columnTOP_W_200.Caption = "應稅三比率";
                this.columnTOP_H_200.AllowDBNull = false;
                this.columnNOT_H_133.AllowDBNull = false;
                this.columnNOT_H_133.Caption = "免稅假一";
                this.columnNOT_H_167.AllowDBNull = false;
                this.columnNOT_H_167.Caption = "免稅假二";
                this.columnSYSCREAT.AllowDBNull = false;
                this.columnSYSCREAT.Caption = "固定加班";
                this.columnOTRATE_CODE.AllowDBNull = false;
                this.columnOTRATE_CODE.Caption = "加班比率代碼";
                this.columnOTRATE_CODE.MaxLength = 50;
                this.columnSYS_OT.AllowDBNull = false;
                this.columnSYS_OT.Caption = "系統假日加班";
                this.columnSERNO.AllowDBNull = false;
                this.columnSERNO.Caption = "表單編號";
                this.columnSERNO.MaxLength = 50;
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnJOB_NAME.AllowDBNull = false;
                this.columnJOB_NAME.Caption = "職類";
                this.columnJOB_NAME.MaxLength = 50;
                this.columnDEPTS_NAME.Caption = "加班成本部門";
                this.columnDEPTS_NAME.MaxLength = 50;
                this.columnDEPT_NAME.Caption = "編制部門";
                this.columnDEPT_NAME.MaxLength = 50;
                this.columnDEPT.AllowDBNull = false;
                this.columnDEPT.Caption = "編制部門代碼";
                this.columnDEPT.MaxLength = 50;
                this.columnNOFOOD1.AllowDBNull = false;
                this.columnNOFOOD1.Caption = "不計算輪班津貼";
                this.columnisHoli.ReadOnly = true;
                this.columnisHoli.Caption = "假日加班";
                this.columnCOUNT_MA.AllowDBNull = false;
                this.columnCOUNT_MA.Caption = "外勞";
                this.columnFOOD_PRI.AllowDBNull = false;
                this.columnFOOD_CNT.AllowDBNull = false;
                this.columnTOT_W_100.AllowDBNull = false;
                this.columnREC.AllowDBNull = false;
                this.columnOTNO.AllowDBNull = false;
                this.columnOTNO.MaxLength = 50;
                this.columnNOP_H_100.AllowDBNull = false;
                this.columnHOT_133.AllowDBNull = false;
                this.columnHOT_166.AllowDBNull = false;
                this.columnHOT_200.AllowDBNull = false;
                this.columnWOT_133.AllowDBNull = false;
                this.columnWOT_166.AllowDBNull = false;
                this.columnWOT_200.AllowDBNull = false;
                this.columnSUM.AllowDBNull = false;
                this.columnNOT_W_100.AllowDBNull = false;
                this.columnTOP_W_100.AllowDBNull = false;
                this.columnSYSCREAT1.AllowDBNull = false;
                this.columnNOP_W_100.AllowDBNull = false;
                this.columnRES.AllowDBNull = false;
                this.columnEAT.AllowDBNull = false;
                this.columnDIFF.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OTRow NewOTRow() {
                return ((OTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OTRowChanged != null)) {
                    this.OTRowChanged(this, new OTRowChangeEvent(((OTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OTRowChanging != null)) {
                    this.OTRowChanging(this, new OTRowChangeEvent(((OTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OTRowDeleted != null)) {
                    this.OTRowDeleted(this, new OTRowChangeEvent(((OTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OTRowDeleting != null)) {
                    this.OTRowDeleting(this, new OTRowChangeEvent(((OTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveOTRow(OTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BASEDataTable : global::System.Data.TypedTableBase<BASERow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnNAME_E;
            
            private global::System.Data.DataColumn columnACCOUNT_NO;
            
            private global::System.Data.DataColumn columnBANKNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASEDataTable() {
                this.TableName = "BASE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BASEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BASEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_EColumn {
                get {
                    return this.columnNAME_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCOUNT_NOColumn {
                get {
                    return this.columnACCOUNT_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BANKNOColumn {
                get {
                    return this.columnBANKNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASERow this[int index] {
                get {
                    return ((BASERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASERowChangeEventHandler BASERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASERowChangeEventHandler BASERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASERowChangeEventHandler BASERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASERowChangeEventHandler BASERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBASERow(BASERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASERow AddBASERow(string NOBR, string NAME_C, string NAME_E, string ACCOUNT_NO, string BANKNO) {
                BASERow rowBASERow = ((BASERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        NAME_C,
                        NAME_E,
                        ACCOUNT_NO,
                        BANKNO};
                rowBASERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBASERow);
                return rowBASERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASERow FindByNOBR(string NOBR) {
                return ((BASERow)(this.Rows.Find(new object[] {
                            NOBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BASEDataTable cln = ((BASEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BASEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnNAME_E = base.Columns["NAME_E"];
                this.columnACCOUNT_NO = base.Columns["ACCOUNT_NO"];
                this.columnBANKNO = base.Columns["BANKNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnNAME_E = new global::System.Data.DataColumn("NAME_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_E);
                this.columnACCOUNT_NO = new global::System.Data.DataColumn("ACCOUNT_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT_NO);
                this.columnBANKNO = new global::System.Data.DataColumn("BANKNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBANKNO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Unique = true;
                this.columnNOBR.Caption = "員工代碼";
                this.columnNOBR.MaxLength = 50;
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "中文姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnNAME_E.AllowDBNull = false;
                this.columnNAME_E.Caption = "英文姓名";
                this.columnNAME_E.MaxLength = 50;
                this.columnACCOUNT_NO.AllowDBNull = false;
                this.columnACCOUNT_NO.Caption = "轉帳帳號";
                this.columnACCOUNT_NO.MaxLength = 50;
                this.columnBANKNO.AllowDBNull = false;
                this.columnBANKNO.Caption = "轉帳行號";
                this.columnBANKNO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASERow NewBASERow() {
                return ((BASERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BASERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BASERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BASERowChanged != null)) {
                    this.BASERowChanged(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BASERowChanging != null)) {
                    this.BASERowChanging(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BASERowDeleted != null)) {
                    this.BASERowDeleted(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BASERowDeleting != null)) {
                    this.BASERowDeleting(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBASERow(BASERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BASEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BASETTSDataTable : global::System.Data.TypedTableBase<BASETTSRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnTTSCODE;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnINDT;
            
            private global::System.Data.DataColumn columnCINDT;
            
            private global::System.Data.DataColumn columnOUDT;
            
            private global::System.Data.DataColumn columnSTDT;
            
            private global::System.Data.DataColumn columnSTINDT;
            
            private global::System.Data.DataColumn columnSTOUDT;
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnDEPT;
            
            private global::System.Data.DataColumn columnDEPTS;
            
            private global::System.Data.DataColumn columnJOB;
            
            private global::System.Data.DataColumn columnJOBL;
            
            private global::System.Data.DataColumn columnCARD;
            
            private global::System.Data.DataColumn columnROTET;
            
            private global::System.Data.DataColumn columnDI;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnMANG;
            
            private global::System.Data.DataColumn columnYR_DAYS;
            
            private global::System.Data.DataColumn columnWK_YRS;
            
            private global::System.Data.DataColumn columnSALTP;
            
            private global::System.Data.DataColumn columnJOBS;
            
            private global::System.Data.DataColumn columnWORKCD;
            
            private global::System.Data.DataColumn columnCARCD;
            
            private global::System.Data.DataColumn columnEMPCD;
            
            private global::System.Data.DataColumn columnOUTCD;
            
            private global::System.Data.DataColumn columnCALABS;
            
            private global::System.Data.DataColumn columnCALOT;
            
            private global::System.Data.DataColumn columnFULATT;
            
            private global::System.Data.DataColumn columnNOTER;
            
            private global::System.Data.DataColumn columnNOWEL;
            
            private global::System.Data.DataColumn columnNORET;
            
            private global::System.Data.DataColumn columnNOTLATE;
            
            private global::System.Data.DataColumn columnHOLI_CODE;
            
            private global::System.Data.DataColumn columnNOOT;
            
            private global::System.Data.DataColumn columnNOSPEC;
            
            private global::System.Data.DataColumn columnNOCARD;
            
            private global::System.Data.DataColumn columnNOEAT;
            
            private global::System.Data.DataColumn columnAPGRPCD;
            
            private global::System.Data.DataColumn columnDEPTM;
            
            private global::System.Data.DataColumn columnTTSCD;
            
            private global::System.Data.DataColumn columnMENO;
            
            private global::System.Data.DataColumn columnSALADR;
            
            private global::System.Data.DataColumn columnNOWAGE;
            
            private global::System.Data.DataColumn columnMANGE;
            
            private global::System.Data.DataColumn columnRETRATE;
            
            private global::System.Data.DataColumn columnRETDATE;
            
            private global::System.Data.DataColumn columnRETCHOO;
            
            private global::System.Data.DataColumn columnRETDATE1;
            
            private global::System.Data.DataColumn columnONLYONTIME;
            
            private global::System.Data.DataColumn columnJOBO;
            
            private global::System.Data.DataColumn columnCOUNT_PASS;
            
            private global::System.Data.DataColumn columnPASS_DATE;
            
            private global::System.Data.DataColumn columnMANG1;
            
            private global::System.Data.DataColumn columnAP_DATE;
            
            private global::System.Data.DataColumn columnGRP_AMT;
            
            private global::System.Data.DataColumn columnTAX_DATE;
            
            private global::System.Data.DataColumn columnNOSPAMT;
            
            private global::System.Data.DataColumn columnFIXRATE;
            
            private global::System.Data.DataColumn columnTAX_EDATE;
            
            private global::System.Data.DataColumn columnIS_SELFOUT;
            
            private global::System.Data.DataColumn columnINSG_TYPE;
            
            private global::System.Data.DataColumn columnOldSaladr;
            
            private global::System.Data.DataColumn columnSTATION;
            
            private global::System.Data.DataColumn columnCardJobName;
            
            private global::System.Data.DataColumn columnCardJobEnName;
            
            private global::System.Data.DataColumn columnOilSubsidy;
            
            private global::System.Data.DataColumn columnCardID;
            
            private global::System.Data.DataColumn columnDoorGuard;
            
            private global::System.Data.DataColumn columnOutPost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASETTSDataTable() {
                this.TableName = "BASETTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BASETTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected BASETTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TTSCODEColumn {
                get {
                    return this.columnTTSCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INDTColumn {
                get {
                    return this.columnINDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CINDTColumn {
                get {
                    return this.columnCINDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OUDTColumn {
                get {
                    return this.columnOUDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STDTColumn {
                get {
                    return this.columnSTDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STINDTColumn {
                get {
                    return this.columnSTINDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STOUDTColumn {
                get {
                    return this.columnSTOUDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPTColumn {
                get {
                    return this.columnDEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPTSColumn {
                get {
                    return this.columnDEPTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JOBColumn {
                get {
                    return this.columnJOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JOBLColumn {
                get {
                    return this.columnJOBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CARDColumn {
                get {
                    return this.columnCARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROTETColumn {
                get {
                    return this.columnROTET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DIColumn {
                get {
                    return this.columnDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MANGColumn {
                get {
                    return this.columnMANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YR_DAYSColumn {
                get {
                    return this.columnYR_DAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WK_YRSColumn {
                get {
                    return this.columnWK_YRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALTPColumn {
                get {
                    return this.columnSALTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JOBSColumn {
                get {
                    return this.columnJOBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WORKCDColumn {
                get {
                    return this.columnWORKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CARCDColumn {
                get {
                    return this.columnCARCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMPCDColumn {
                get {
                    return this.columnEMPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OUTCDColumn {
                get {
                    return this.columnOUTCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CALABSColumn {
                get {
                    return this.columnCALABS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CALOTColumn {
                get {
                    return this.columnCALOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FULATTColumn {
                get {
                    return this.columnFULATT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTERColumn {
                get {
                    return this.columnNOTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOWELColumn {
                get {
                    return this.columnNOWEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NORETColumn {
                get {
                    return this.columnNORET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTLATEColumn {
                get {
                    return this.columnNOTLATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOLI_CODEColumn {
                get {
                    return this.columnHOLI_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOOTColumn {
                get {
                    return this.columnNOOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOSPECColumn {
                get {
                    return this.columnNOSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOCARDColumn {
                get {
                    return this.columnNOCARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOEATColumn {
                get {
                    return this.columnNOEAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn APGRPCDColumn {
                get {
                    return this.columnAPGRPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPTMColumn {
                get {
                    return this.columnDEPTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TTSCDColumn {
                get {
                    return this.columnTTSCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MENOColumn {
                get {
                    return this.columnMENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALADRColumn {
                get {
                    return this.columnSALADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOWAGEColumn {
                get {
                    return this.columnNOWAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MANGEColumn {
                get {
                    return this.columnMANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RETRATEColumn {
                get {
                    return this.columnRETRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RETDATEColumn {
                get {
                    return this.columnRETDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RETCHOOColumn {
                get {
                    return this.columnRETCHOO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RETDATE1Column {
                get {
                    return this.columnRETDATE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ONLYONTIMEColumn {
                get {
                    return this.columnONLYONTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JOBOColumn {
                get {
                    return this.columnJOBO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COUNT_PASSColumn {
                get {
                    return this.columnCOUNT_PASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PASS_DATEColumn {
                get {
                    return this.columnPASS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MANG1Column {
                get {
                    return this.columnMANG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AP_DATEColumn {
                get {
                    return this.columnAP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GRP_AMTColumn {
                get {
                    return this.columnGRP_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAX_DATEColumn {
                get {
                    return this.columnTAX_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOSPAMTColumn {
                get {
                    return this.columnNOSPAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FIXRATEColumn {
                get {
                    return this.columnFIXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAX_EDATEColumn {
                get {
                    return this.columnTAX_EDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IS_SELFOUTColumn {
                get {
                    return this.columnIS_SELFOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSG_TYPEColumn {
                get {
                    return this.columnINSG_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OldSaladrColumn {
                get {
                    return this.columnOldSaladr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STATIONColumn {
                get {
                    return this.columnSTATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CardJobNameColumn {
                get {
                    return this.columnCardJobName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CardJobEnNameColumn {
                get {
                    return this.columnCardJobEnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OilSubsidyColumn {
                get {
                    return this.columnOilSubsidy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CardIDColumn {
                get {
                    return this.columnCardID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DoorGuardColumn {
                get {
                    return this.columnDoorGuard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OutPostColumn {
                get {
                    return this.columnOutPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASETTSRow this[int index] {
                get {
                    return ((BASETTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddBASETTSRow(BASETTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASETTSRow AddBASETTSRow(
                        string NOBR, 
                        string TTSCODE, 
                        System.DateTime ADATE, 
                        System.DateTime DDATE, 
                        System.DateTime INDT, 
                        System.DateTime CINDT, 
                        System.DateTime OUDT, 
                        System.DateTime STDT, 
                        System.DateTime STINDT, 
                        System.DateTime STOUDT, 
                        string COMP, 
                        string DEPT, 
                        string DEPTS, 
                        string JOB, 
                        string JOBL, 
                        string CARD, 
                        string ROTET, 
                        string DI, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        bool MANG, 
                        decimal YR_DAYS, 
                        decimal WK_YRS, 
                        string SALTP, 
                        string JOBS, 
                        string WORKCD, 
                        string CARCD, 
                        string EMPCD, 
                        string OUTCD, 
                        bool CALABS, 
                        string CALOT, 
                        bool FULATT, 
                        bool NOTER, 
                        bool NOWEL, 
                        bool NORET, 
                        bool NOTLATE, 
                        string HOLI_CODE, 
                        bool NOOT, 
                        bool NOSPEC, 
                        bool NOCARD, 
                        bool NOEAT, 
                        string APGRPCD, 
                        string DEPTM, 
                        string TTSCD, 
                        string MENO, 
                        string SALADR, 
                        bool NOWAGE, 
                        bool MANGE, 
                        decimal RETRATE, 
                        System.DateTime RETDATE, 
                        string RETCHOO, 
                        System.DateTime RETDATE1, 
                        bool ONLYONTIME, 
                        string JOBO, 
                        bool COUNT_PASS, 
                        System.DateTime PASS_DATE, 
                        bool MANG1, 
                        System.DateTime AP_DATE, 
                        decimal GRP_AMT, 
                        System.DateTime TAX_DATE, 
                        bool NOSPAMT, 
                        bool FIXRATE, 
                        System.DateTime TAX_EDATE, 
                        bool IS_SELFOUT, 
                        string INSG_TYPE, 
                        string OldSaladr, 
                        string STATION, 
                        string CardJobName, 
                        string CardJobEnName, 
                        string OilSubsidy, 
                        string CardID, 
                        string DoorGuard, 
                        string OutPost) {
                BASETTSRow rowBASETTSRow = ((BASETTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        TTSCODE,
                        ADATE,
                        DDATE,
                        INDT,
                        CINDT,
                        OUDT,
                        STDT,
                        STINDT,
                        STOUDT,
                        COMP,
                        DEPT,
                        DEPTS,
                        JOB,
                        JOBL,
                        CARD,
                        ROTET,
                        DI,
                        KEY_MAN,
                        KEY_DATE,
                        MANG,
                        YR_DAYS,
                        WK_YRS,
                        SALTP,
                        JOBS,
                        WORKCD,
                        CARCD,
                        EMPCD,
                        OUTCD,
                        CALABS,
                        CALOT,
                        FULATT,
                        NOTER,
                        NOWEL,
                        NORET,
                        NOTLATE,
                        HOLI_CODE,
                        NOOT,
                        NOSPEC,
                        NOCARD,
                        NOEAT,
                        APGRPCD,
                        DEPTM,
                        TTSCD,
                        MENO,
                        SALADR,
                        NOWAGE,
                        MANGE,
                        RETRATE,
                        RETDATE,
                        RETCHOO,
                        RETDATE1,
                        ONLYONTIME,
                        JOBO,
                        COUNT_PASS,
                        PASS_DATE,
                        MANG1,
                        AP_DATE,
                        GRP_AMT,
                        TAX_DATE,
                        NOSPAMT,
                        FIXRATE,
                        TAX_EDATE,
                        IS_SELFOUT,
                        INSG_TYPE,
                        OldSaladr,
                        STATION,
                        CardJobName,
                        CardJobEnName,
                        OilSubsidy,
                        CardID,
                        DoorGuard,
                        OutPost};
                rowBASETTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBASETTSRow);
                return rowBASETTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASETTSRow FindByNOBRTTSCODEADATE(string NOBR, string TTSCODE, System.DateTime ADATE) {
                return ((BASETTSRow)(this.Rows.Find(new object[] {
                            NOBR,
                            TTSCODE,
                            ADATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BASETTSDataTable cln = ((BASETTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BASETTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnTTSCODE = base.Columns["TTSCODE"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnINDT = base.Columns["INDT"];
                this.columnCINDT = base.Columns["CINDT"];
                this.columnOUDT = base.Columns["OUDT"];
                this.columnSTDT = base.Columns["STDT"];
                this.columnSTINDT = base.Columns["STINDT"];
                this.columnSTOUDT = base.Columns["STOUDT"];
                this.columnCOMP = base.Columns["COMP"];
                this.columnDEPT = base.Columns["DEPT"];
                this.columnDEPTS = base.Columns["DEPTS"];
                this.columnJOB = base.Columns["JOB"];
                this.columnJOBL = base.Columns["JOBL"];
                this.columnCARD = base.Columns["CARD"];
                this.columnROTET = base.Columns["ROTET"];
                this.columnDI = base.Columns["DI"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnMANG = base.Columns["MANG"];
                this.columnYR_DAYS = base.Columns["YR_DAYS"];
                this.columnWK_YRS = base.Columns["WK_YRS"];
                this.columnSALTP = base.Columns["SALTP"];
                this.columnJOBS = base.Columns["JOBS"];
                this.columnWORKCD = base.Columns["WORKCD"];
                this.columnCARCD = base.Columns["CARCD"];
                this.columnEMPCD = base.Columns["EMPCD"];
                this.columnOUTCD = base.Columns["OUTCD"];
                this.columnCALABS = base.Columns["CALABS"];
                this.columnCALOT = base.Columns["CALOT"];
                this.columnFULATT = base.Columns["FULATT"];
                this.columnNOTER = base.Columns["NOTER"];
                this.columnNOWEL = base.Columns["NOWEL"];
                this.columnNORET = base.Columns["NORET"];
                this.columnNOTLATE = base.Columns["NOTLATE"];
                this.columnHOLI_CODE = base.Columns["HOLI_CODE"];
                this.columnNOOT = base.Columns["NOOT"];
                this.columnNOSPEC = base.Columns["NOSPEC"];
                this.columnNOCARD = base.Columns["NOCARD"];
                this.columnNOEAT = base.Columns["NOEAT"];
                this.columnAPGRPCD = base.Columns["APGRPCD"];
                this.columnDEPTM = base.Columns["DEPTM"];
                this.columnTTSCD = base.Columns["TTSCD"];
                this.columnMENO = base.Columns["MENO"];
                this.columnSALADR = base.Columns["SALADR"];
                this.columnNOWAGE = base.Columns["NOWAGE"];
                this.columnMANGE = base.Columns["MANGE"];
                this.columnRETRATE = base.Columns["RETRATE"];
                this.columnRETDATE = base.Columns["RETDATE"];
                this.columnRETCHOO = base.Columns["RETCHOO"];
                this.columnRETDATE1 = base.Columns["RETDATE1"];
                this.columnONLYONTIME = base.Columns["ONLYONTIME"];
                this.columnJOBO = base.Columns["JOBO"];
                this.columnCOUNT_PASS = base.Columns["COUNT_PASS"];
                this.columnPASS_DATE = base.Columns["PASS_DATE"];
                this.columnMANG1 = base.Columns["MANG1"];
                this.columnAP_DATE = base.Columns["AP_DATE"];
                this.columnGRP_AMT = base.Columns["GRP_AMT"];
                this.columnTAX_DATE = base.Columns["TAX_DATE"];
                this.columnNOSPAMT = base.Columns["NOSPAMT"];
                this.columnFIXRATE = base.Columns["FIXRATE"];
                this.columnTAX_EDATE = base.Columns["TAX_EDATE"];
                this.columnIS_SELFOUT = base.Columns["IS_SELFOUT"];
                this.columnINSG_TYPE = base.Columns["INSG_TYPE"];
                this.columnOldSaladr = base.Columns["OldSaladr"];
                this.columnSTATION = base.Columns["STATION"];
                this.columnCardJobName = base.Columns["CardJobName"];
                this.columnCardJobEnName = base.Columns["CardJobEnName"];
                this.columnOilSubsidy = base.Columns["OilSubsidy"];
                this.columnCardID = base.Columns["CardID"];
                this.columnDoorGuard = base.Columns["DoorGuard"];
                this.columnOutPost = base.Columns["OutPost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnTTSCODE = new global::System.Data.DataColumn("TTSCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTSCODE);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnINDT = new global::System.Data.DataColumn("INDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDT);
                this.columnCINDT = new global::System.Data.DataColumn("CINDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCINDT);
                this.columnOUDT = new global::System.Data.DataColumn("OUDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUDT);
                this.columnSTDT = new global::System.Data.DataColumn("STDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTDT);
                this.columnSTINDT = new global::System.Data.DataColumn("STINDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTINDT);
                this.columnSTOUDT = new global::System.Data.DataColumn("STOUDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOUDT);
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnDEPT = new global::System.Data.DataColumn("DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT);
                this.columnDEPTS = new global::System.Data.DataColumn("DEPTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTS);
                this.columnJOB = new global::System.Data.DataColumn("JOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB);
                this.columnJOBL = new global::System.Data.DataColumn("JOBL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBL);
                this.columnCARD = new global::System.Data.DataColumn("CARD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARD);
                this.columnROTET = new global::System.Data.DataColumn("ROTET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROTET);
                this.columnDI = new global::System.Data.DataColumn("DI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDI);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnMANG = new global::System.Data.DataColumn("MANG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANG);
                this.columnYR_DAYS = new global::System.Data.DataColumn("YR_DAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYR_DAYS);
                this.columnWK_YRS = new global::System.Data.DataColumn("WK_YRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWK_YRS);
                this.columnSALTP = new global::System.Data.DataColumn("SALTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALTP);
                this.columnJOBS = new global::System.Data.DataColumn("JOBS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBS);
                this.columnWORKCD = new global::System.Data.DataColumn("WORKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKCD);
                this.columnCARCD = new global::System.Data.DataColumn("CARCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARCD);
                this.columnEMPCD = new global::System.Data.DataColumn("EMPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPCD);
                this.columnOUTCD = new global::System.Data.DataColumn("OUTCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTCD);
                this.columnCALABS = new global::System.Data.DataColumn("CALABS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALABS);
                this.columnCALOT = new global::System.Data.DataColumn("CALOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALOT);
                this.columnFULATT = new global::System.Data.DataColumn("FULATT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFULATT);
                this.columnNOTER = new global::System.Data.DataColumn("NOTER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTER);
                this.columnNOWEL = new global::System.Data.DataColumn("NOWEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOWEL);
                this.columnNORET = new global::System.Data.DataColumn("NORET", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNORET);
                this.columnNOTLATE = new global::System.Data.DataColumn("NOTLATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTLATE);
                this.columnHOLI_CODE = new global::System.Data.DataColumn("HOLI_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLI_CODE);
                this.columnNOOT = new global::System.Data.DataColumn("NOOT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOOT);
                this.columnNOSPEC = new global::System.Data.DataColumn("NOSPEC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOSPEC);
                this.columnNOCARD = new global::System.Data.DataColumn("NOCARD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOCARD);
                this.columnNOEAT = new global::System.Data.DataColumn("NOEAT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOEAT);
                this.columnAPGRPCD = new global::System.Data.DataColumn("APGRPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPGRPCD);
                this.columnDEPTM = new global::System.Data.DataColumn("DEPTM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTM);
                this.columnTTSCD = new global::System.Data.DataColumn("TTSCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTSCD);
                this.columnMENO = new global::System.Data.DataColumn("MENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENO);
                this.columnSALADR = new global::System.Data.DataColumn("SALADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALADR);
                this.columnNOWAGE = new global::System.Data.DataColumn("NOWAGE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOWAGE);
                this.columnMANGE = new global::System.Data.DataColumn("MANGE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANGE);
                this.columnRETRATE = new global::System.Data.DataColumn("RETRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETRATE);
                this.columnRETDATE = new global::System.Data.DataColumn("RETDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETDATE);
                this.columnRETCHOO = new global::System.Data.DataColumn("RETCHOO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETCHOO);
                this.columnRETDATE1 = new global::System.Data.DataColumn("RETDATE1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETDATE1);
                this.columnONLYONTIME = new global::System.Data.DataColumn("ONLYONTIME", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnONLYONTIME);
                this.columnJOBO = new global::System.Data.DataColumn("JOBO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBO);
                this.columnCOUNT_PASS = new global::System.Data.DataColumn("COUNT_PASS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNT_PASS);
                this.columnPASS_DATE = new global::System.Data.DataColumn("PASS_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASS_DATE);
                this.columnMANG1 = new global::System.Data.DataColumn("MANG1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANG1);
                this.columnAP_DATE = new global::System.Data.DataColumn("AP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAP_DATE);
                this.columnGRP_AMT = new global::System.Data.DataColumn("GRP_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_AMT);
                this.columnTAX_DATE = new global::System.Data.DataColumn("TAX_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX_DATE);
                this.columnNOSPAMT = new global::System.Data.DataColumn("NOSPAMT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOSPAMT);
                this.columnFIXRATE = new global::System.Data.DataColumn("FIXRATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXRATE);
                this.columnTAX_EDATE = new global::System.Data.DataColumn("TAX_EDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX_EDATE);
                this.columnIS_SELFOUT = new global::System.Data.DataColumn("IS_SELFOUT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_SELFOUT);
                this.columnINSG_TYPE = new global::System.Data.DataColumn("INSG_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSG_TYPE);
                this.columnOldSaladr = new global::System.Data.DataColumn("OldSaladr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldSaladr);
                this.columnSTATION = new global::System.Data.DataColumn("STATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATION);
                this.columnCardJobName = new global::System.Data.DataColumn("CardJobName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardJobName);
                this.columnCardJobEnName = new global::System.Data.DataColumn("CardJobEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardJobEnName);
                this.columnOilSubsidy = new global::System.Data.DataColumn("OilSubsidy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOilSubsidy);
                this.columnCardID = new global::System.Data.DataColumn("CardID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardID);
                this.columnDoorGuard = new global::System.Data.DataColumn("DoorGuard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoorGuard);
                this.columnOutPost = new global::System.Data.DataColumn("OutPost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutPost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnTTSCODE,
                                this.columnADATE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.MaxLength = 50;
                this.columnTTSCODE.AllowDBNull = false;
                this.columnTTSCODE.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.MaxLength = 50;
                this.columnDEPT.AllowDBNull = false;
                this.columnDEPT.MaxLength = 50;
                this.columnDEPTS.AllowDBNull = false;
                this.columnDEPTS.MaxLength = 50;
                this.columnJOB.AllowDBNull = false;
                this.columnJOB.MaxLength = 50;
                this.columnJOBL.AllowDBNull = false;
                this.columnJOBL.MaxLength = 50;
                this.columnCARD.AllowDBNull = false;
                this.columnCARD.MaxLength = 50;
                this.columnROTET.AllowDBNull = false;
                this.columnROTET.MaxLength = 50;
                this.columnDI.AllowDBNull = false;
                this.columnDI.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnMANG.AllowDBNull = false;
                this.columnYR_DAYS.AllowDBNull = false;
                this.columnWK_YRS.AllowDBNull = false;
                this.columnSALTP.AllowDBNull = false;
                this.columnSALTP.MaxLength = 50;
                this.columnJOBS.AllowDBNull = false;
                this.columnJOBS.MaxLength = 50;
                this.columnWORKCD.AllowDBNull = false;
                this.columnWORKCD.MaxLength = 50;
                this.columnCARCD.AllowDBNull = false;
                this.columnCARCD.MaxLength = 50;
                this.columnEMPCD.AllowDBNull = false;
                this.columnEMPCD.MaxLength = 50;
                this.columnOUTCD.AllowDBNull = false;
                this.columnOUTCD.MaxLength = 50;
                this.columnCALABS.AllowDBNull = false;
                this.columnCALOT.AllowDBNull = false;
                this.columnCALOT.MaxLength = 50;
                this.columnFULATT.AllowDBNull = false;
                this.columnNOTER.AllowDBNull = false;
                this.columnNOWEL.AllowDBNull = false;
                this.columnNORET.AllowDBNull = false;
                this.columnNOTLATE.AllowDBNull = false;
                this.columnHOLI_CODE.AllowDBNull = false;
                this.columnHOLI_CODE.MaxLength = 50;
                this.columnNOOT.AllowDBNull = false;
                this.columnNOSPEC.AllowDBNull = false;
                this.columnNOCARD.AllowDBNull = false;
                this.columnNOEAT.AllowDBNull = false;
                this.columnAPGRPCD.AllowDBNull = false;
                this.columnAPGRPCD.MaxLength = 50;
                this.columnDEPTM.AllowDBNull = false;
                this.columnDEPTM.MaxLength = 50;
                this.columnTTSCD.AllowDBNull = false;
                this.columnTTSCD.MaxLength = 50;
                this.columnMENO.AllowDBNull = false;
                this.columnMENO.MaxLength = 180;
                this.columnSALADR.AllowDBNull = false;
                this.columnSALADR.MaxLength = 50;
                this.columnNOWAGE.AllowDBNull = false;
                this.columnMANGE.AllowDBNull = false;
                this.columnRETRATE.AllowDBNull = false;
                this.columnRETCHOO.AllowDBNull = false;
                this.columnRETCHOO.MaxLength = 50;
                this.columnONLYONTIME.AllowDBNull = false;
                this.columnJOBO.AllowDBNull = false;
                this.columnJOBO.MaxLength = 50;
                this.columnCOUNT_PASS.AllowDBNull = false;
                this.columnMANG1.AllowDBNull = false;
                this.columnGRP_AMT.AllowDBNull = false;
                this.columnNOSPAMT.AllowDBNull = false;
                this.columnFIXRATE.AllowDBNull = false;
                this.columnIS_SELFOUT.AllowDBNull = false;
                this.columnINSG_TYPE.AllowDBNull = false;
                this.columnINSG_TYPE.MaxLength = 50;
                this.columnOldSaladr.MaxLength = 50;
                this.columnSTATION.MaxLength = 50;
                this.columnCardJobName.MaxLength = 50;
                this.columnCardJobEnName.MaxLength = 50;
                this.columnOilSubsidy.MaxLength = 50;
                this.columnCardID.MaxLength = 50;
                this.columnDoorGuard.MaxLength = 50;
                this.columnOutPost.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASETTSRow NewBASETTSRow() {
                return ((BASETTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BASETTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BASETTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BASETTSRowChanged != null)) {
                    this.BASETTSRowChanged(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BASETTSRowChanging != null)) {
                    this.BASETTSRowChanging(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BASETTSRowDeleted != null)) {
                    this.BASETTSRowDeleted(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BASETTSRowDeleting != null)) {
                    this.BASETTSRowDeleting(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveBASETTSRow(BASETTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BASETTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSGLVDataTable : global::System.Data.TypedTableBase<INSGLVRow> {
            
            private global::System.Data.DataColumn columnINS_TYPE;
            
            private global::System.Data.DataColumn columnLIFE_A;
            
            private global::System.Data.DataColumn columnLIFE_B;
            
            private global::System.Data.DataColumn columnLIFE_C;
            
            private global::System.Data.DataColumn columnLIFE_D;
            
            private global::System.Data.DataColumn columnCHANCE_A;
            
            private global::System.Data.DataColumn columnCHANCE_B;
            
            private global::System.Data.DataColumn columnCHANCE_C;
            
            private global::System.Data.DataColumn columnCHANCE_D;
            
            private global::System.Data.DataColumn columnHOSPITAL_A;
            
            private global::System.Data.DataColumn columnHOSPITAL_B;
            
            private global::System.Data.DataColumn columnHOSPITAL_C;
            
            private global::System.Data.DataColumn columnHOSPITAL_D;
            
            private global::System.Data.DataColumn columnOUTPAT_A;
            
            private global::System.Data.DataColumn columnOUTPAT_B;
            
            private global::System.Data.DataColumn columnOUTPAT_C;
            
            private global::System.Data.DataColumn columnOUTPAT_D;
            
            private global::System.Data.DataColumn columnCANCER_A;
            
            private global::System.Data.DataColumn columnCANCER_B;
            
            private global::System.Data.DataColumn columnCANCER_C;
            
            private global::System.Data.DataColumn columnCANCER_D;
            
            private global::System.Data.DataColumn columnEXP_A;
            
            private global::System.Data.DataColumn columnEXP_B;
            
            private global::System.Data.DataColumn columnEXP_C;
            
            private global::System.Data.DataColumn columnEXP_D;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGLVDataTable() {
                this.TableName = "INSGLV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal INSGLVDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected INSGLVDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INS_TYPEColumn {
                get {
                    return this.columnINS_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIFE_AColumn {
                get {
                    return this.columnLIFE_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIFE_BColumn {
                get {
                    return this.columnLIFE_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIFE_CColumn {
                get {
                    return this.columnLIFE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIFE_DColumn {
                get {
                    return this.columnLIFE_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHANCE_AColumn {
                get {
                    return this.columnCHANCE_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHANCE_BColumn {
                get {
                    return this.columnCHANCE_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHANCE_CColumn {
                get {
                    return this.columnCHANCE_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CHANCE_DColumn {
                get {
                    return this.columnCHANCE_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOSPITAL_AColumn {
                get {
                    return this.columnHOSPITAL_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOSPITAL_BColumn {
                get {
                    return this.columnHOSPITAL_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOSPITAL_CColumn {
                get {
                    return this.columnHOSPITAL_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOSPITAL_DColumn {
                get {
                    return this.columnHOSPITAL_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OUTPAT_AColumn {
                get {
                    return this.columnOUTPAT_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OUTPAT_BColumn {
                get {
                    return this.columnOUTPAT_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OUTPAT_CColumn {
                get {
                    return this.columnOUTPAT_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OUTPAT_DColumn {
                get {
                    return this.columnOUTPAT_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CANCER_AColumn {
                get {
                    return this.columnCANCER_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CANCER_BColumn {
                get {
                    return this.columnCANCER_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CANCER_CColumn {
                get {
                    return this.columnCANCER_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CANCER_DColumn {
                get {
                    return this.columnCANCER_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP_AColumn {
                get {
                    return this.columnEXP_A;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP_BColumn {
                get {
                    return this.columnEXP_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP_CColumn {
                get {
                    return this.columnEXP_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP_DColumn {
                get {
                    return this.columnEXP_D;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGLVRow this[int index] {
                get {
                    return ((INSGLVRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGLVRowChangeEventHandler INSGLVRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGLVRowChangeEventHandler INSGLVRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGLVRowChangeEventHandler INSGLVRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGLVRowChangeEventHandler INSGLVRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddINSGLVRow(INSGLVRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGLVRow AddINSGLVRow(
                        string INS_TYPE, 
                        decimal LIFE_A, 
                        decimal LIFE_B, 
                        decimal LIFE_C, 
                        decimal LIFE_D, 
                        decimal CHANCE_A, 
                        decimal CHANCE_B, 
                        decimal CHANCE_C, 
                        decimal CHANCE_D, 
                        decimal HOSPITAL_A, 
                        decimal HOSPITAL_B, 
                        decimal HOSPITAL_C, 
                        decimal HOSPITAL_D, 
                        decimal OUTPAT_A, 
                        decimal OUTPAT_B, 
                        decimal OUTPAT_C, 
                        decimal OUTPAT_D, 
                        decimal CANCER_A, 
                        decimal CANCER_B, 
                        decimal CANCER_C, 
                        decimal CANCER_D, 
                        decimal EXP_A, 
                        decimal EXP_B, 
                        decimal EXP_C, 
                        decimal EXP_D, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE) {
                INSGLVRow rowINSGLVRow = ((INSGLVRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        INS_TYPE,
                        LIFE_A,
                        LIFE_B,
                        LIFE_C,
                        LIFE_D,
                        CHANCE_A,
                        CHANCE_B,
                        CHANCE_C,
                        CHANCE_D,
                        HOSPITAL_A,
                        HOSPITAL_B,
                        HOSPITAL_C,
                        HOSPITAL_D,
                        OUTPAT_A,
                        OUTPAT_B,
                        OUTPAT_C,
                        OUTPAT_D,
                        CANCER_A,
                        CANCER_B,
                        CANCER_C,
                        CANCER_D,
                        EXP_A,
                        EXP_B,
                        EXP_C,
                        EXP_D,
                        KEY_MAN,
                        KEY_DATE};
                rowINSGLVRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSGLVRow);
                return rowINSGLVRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGLVRow FindByINS_TYPE(string INS_TYPE) {
                return ((INSGLVRow)(this.Rows.Find(new object[] {
                            INS_TYPE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSGLVDataTable cln = ((INSGLVDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSGLVDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnINS_TYPE = base.Columns["INS_TYPE"];
                this.columnLIFE_A = base.Columns["LIFE_A"];
                this.columnLIFE_B = base.Columns["LIFE_B"];
                this.columnLIFE_C = base.Columns["LIFE_C"];
                this.columnLIFE_D = base.Columns["LIFE_D"];
                this.columnCHANCE_A = base.Columns["CHANCE_A"];
                this.columnCHANCE_B = base.Columns["CHANCE_B"];
                this.columnCHANCE_C = base.Columns["CHANCE_C"];
                this.columnCHANCE_D = base.Columns["CHANCE_D"];
                this.columnHOSPITAL_A = base.Columns["HOSPITAL_A"];
                this.columnHOSPITAL_B = base.Columns["HOSPITAL_B"];
                this.columnHOSPITAL_C = base.Columns["HOSPITAL_C"];
                this.columnHOSPITAL_D = base.Columns["HOSPITAL_D"];
                this.columnOUTPAT_A = base.Columns["OUTPAT_A"];
                this.columnOUTPAT_B = base.Columns["OUTPAT_B"];
                this.columnOUTPAT_C = base.Columns["OUTPAT_C"];
                this.columnOUTPAT_D = base.Columns["OUTPAT_D"];
                this.columnCANCER_A = base.Columns["CANCER_A"];
                this.columnCANCER_B = base.Columns["CANCER_B"];
                this.columnCANCER_C = base.Columns["CANCER_C"];
                this.columnCANCER_D = base.Columns["CANCER_D"];
                this.columnEXP_A = base.Columns["EXP_A"];
                this.columnEXP_B = base.Columns["EXP_B"];
                this.columnEXP_C = base.Columns["EXP_C"];
                this.columnEXP_D = base.Columns["EXP_D"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnINS_TYPE = new global::System.Data.DataColumn("INS_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_TYPE);
                this.columnLIFE_A = new global::System.Data.DataColumn("LIFE_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIFE_A);
                this.columnLIFE_B = new global::System.Data.DataColumn("LIFE_B", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIFE_B);
                this.columnLIFE_C = new global::System.Data.DataColumn("LIFE_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIFE_C);
                this.columnLIFE_D = new global::System.Data.DataColumn("LIFE_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIFE_D);
                this.columnCHANCE_A = new global::System.Data.DataColumn("CHANCE_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHANCE_A);
                this.columnCHANCE_B = new global::System.Data.DataColumn("CHANCE_B", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHANCE_B);
                this.columnCHANCE_C = new global::System.Data.DataColumn("CHANCE_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHANCE_C);
                this.columnCHANCE_D = new global::System.Data.DataColumn("CHANCE_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHANCE_D);
                this.columnHOSPITAL_A = new global::System.Data.DataColumn("HOSPITAL_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOSPITAL_A);
                this.columnHOSPITAL_B = new global::System.Data.DataColumn("HOSPITAL_B", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOSPITAL_B);
                this.columnHOSPITAL_C = new global::System.Data.DataColumn("HOSPITAL_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOSPITAL_C);
                this.columnHOSPITAL_D = new global::System.Data.DataColumn("HOSPITAL_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOSPITAL_D);
                this.columnOUTPAT_A = new global::System.Data.DataColumn("OUTPAT_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTPAT_A);
                this.columnOUTPAT_B = new global::System.Data.DataColumn("OUTPAT_B", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTPAT_B);
                this.columnOUTPAT_C = new global::System.Data.DataColumn("OUTPAT_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTPAT_C);
                this.columnOUTPAT_D = new global::System.Data.DataColumn("OUTPAT_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTPAT_D);
                this.columnCANCER_A = new global::System.Data.DataColumn("CANCER_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCER_A);
                this.columnCANCER_B = new global::System.Data.DataColumn("CANCER_B", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCER_B);
                this.columnCANCER_C = new global::System.Data.DataColumn("CANCER_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCER_C);
                this.columnCANCER_D = new global::System.Data.DataColumn("CANCER_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCANCER_D);
                this.columnEXP_A = new global::System.Data.DataColumn("EXP_A", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP_A);
                this.columnEXP_B = new global::System.Data.DataColumn("EXP_B", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP_B);
                this.columnEXP_C = new global::System.Data.DataColumn("EXP_C", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP_C);
                this.columnEXP_D = new global::System.Data.DataColumn("EXP_D", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP_D);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnINS_TYPE}, true));
                this.columnINS_TYPE.AllowDBNull = false;
                this.columnINS_TYPE.Unique = true;
                this.columnINS_TYPE.MaxLength = 50;
                this.columnLIFE_A.AllowDBNull = false;
                this.columnLIFE_B.AllowDBNull = false;
                this.columnLIFE_C.AllowDBNull = false;
                this.columnLIFE_D.AllowDBNull = false;
                this.columnCHANCE_A.AllowDBNull = false;
                this.columnCHANCE_B.AllowDBNull = false;
                this.columnCHANCE_C.AllowDBNull = false;
                this.columnCHANCE_D.AllowDBNull = false;
                this.columnHOSPITAL_A.AllowDBNull = false;
                this.columnHOSPITAL_B.AllowDBNull = false;
                this.columnHOSPITAL_C.AllowDBNull = false;
                this.columnHOSPITAL_D.AllowDBNull = false;
                this.columnOUTPAT_A.AllowDBNull = false;
                this.columnOUTPAT_B.AllowDBNull = false;
                this.columnOUTPAT_C.AllowDBNull = false;
                this.columnOUTPAT_D.AllowDBNull = false;
                this.columnCANCER_A.AllowDBNull = false;
                this.columnCANCER_B.AllowDBNull = false;
                this.columnCANCER_C.AllowDBNull = false;
                this.columnCANCER_D.AllowDBNull = false;
                this.columnEXP_A.AllowDBNull = false;
                this.columnEXP_B.AllowDBNull = false;
                this.columnEXP_C.AllowDBNull = false;
                this.columnEXP_D.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGLVRow NewINSGLVRow() {
                return ((INSGLVRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSGLVRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSGLVRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSGLVRowChanged != null)) {
                    this.INSGLVRowChanged(this, new INSGLVRowChangeEvent(((INSGLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSGLVRowChanging != null)) {
                    this.INSGLVRowChanging(this, new INSGLVRowChangeEvent(((INSGLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSGLVRowDeleted != null)) {
                    this.INSGLVRowDeleted(this, new INSGLVRowChangeEvent(((INSGLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSGLVRowDeleting != null)) {
                    this.INSGLVRowDeleting(this, new INSGLVRowChangeEvent(((INSGLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveINSGLVRow(INSGLVRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSGLVDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRM47DataTable : global::System.Data.TypedTableBase<FRM47Row> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnBDATE;
            
            private global::System.Data.DataColumn columnBTIME;
            
            private global::System.Data.DataColumn columnETIME;
            
            private global::System.Data.DataColumn columnTOT_HOURS;
            
            private global::System.Data.DataColumn columnOT_HRS;
            
            private global::System.Data.DataColumn columnREST_HRS;
            
            private global::System.Data.DataColumn columnOT_CAR;
            
            private global::System.Data.DataColumn columnOT_DEPT;
            
            private global::System.Data.DataColumn columnDEPT_NAME;
            
            private global::System.Data.DataColumn columnDEPTS_NAME;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnOT_FOOD;
            
            private global::System.Data.DataColumn columnNOTE;
            
            private global::System.Data.DataColumn columnNOT_W_133;
            
            private global::System.Data.DataColumn columnNOT_W_167;
            
            private global::System.Data.DataColumn columnNOT_W_200;
            
            private global::System.Data.DataColumn columnNOT_H_200;
            
            private global::System.Data.DataColumn columnTOT_W_133;
            
            private global::System.Data.DataColumn columnTOT_W_167;
            
            private global::System.Data.DataColumn columnTOT_W_200;
            
            private global::System.Data.DataColumn columnNOT_EXP;
            
            private global::System.Data.DataColumn columnTOT_EXP;
            
            private global::System.Data.DataColumn columnSALARY;
            
            private global::System.Data.DataColumn columnNOTMODI;
            
            private global::System.Data.DataColumn columnOTRCD;
            
            private global::System.Data.DataColumn columnNOFOOD;
            
            private global::System.Data.DataColumn columnOT_ROTE;
            
            private global::System.Data.DataColumn columnOT_FOOD1;
            
            private global::System.Data.DataColumn columnOT_FOODH;
            
            private global::System.Data.DataColumn columnOT_FOODH1;
            
            private global::System.Data.DataColumn columnSYSCREAT;
            
            private global::System.Data.DataColumn columnOTRATE_CODE;
            
            private global::System.Data.DataColumn columnSERNO;
            
            private global::System.Data.DataColumn columnNOFOOD1;
            
            private global::System.Data.DataColumn columnJOB_NAME;
            
            private global::System.Data.DataColumn columnDEPT;
            
            private global::System.Data.DataColumn columnisHoli;
            
            private global::System.Data.DataColumn columnOT_TYPE;
            
            private global::System.Data.DataColumn columnCOUNT_MA;
            
            private global::System.Data.DataColumn columnSYS_OT;
            
            private global::System.Data.DataColumn columnNOT_H_167;
            
            private global::System.Data.DataColumn columnNOT_H_133;
            
            private global::System.Data.DataColumn columnHOLI_TYPE;
            
            private global::System.Data.DataColumn columnAtt_Rote;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FRM47DataTable() {
                this.TableName = "FRM47";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FRM47DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FRM47DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BDATEColumn {
                get {
                    return this.columnBDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BTIMEColumn {
                get {
                    return this.columnBTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ETIMEColumn {
                get {
                    return this.columnETIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_HOURSColumn {
                get {
                    return this.columnTOT_HOURS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_HRSColumn {
                get {
                    return this.columnOT_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REST_HRSColumn {
                get {
                    return this.columnREST_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_CARColumn {
                get {
                    return this.columnOT_CAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_DEPTColumn {
                get {
                    return this.columnOT_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_NAMEColumn {
                get {
                    return this.columnDEPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPTS_NAMEColumn {
                get {
                    return this.columnDEPTS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOODColumn {
                get {
                    return this.columnOT_FOOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTEColumn {
                get {
                    return this.columnNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_W_133Column {
                get {
                    return this.columnNOT_W_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_W_167Column {
                get {
                    return this.columnNOT_W_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_W_200Column {
                get {
                    return this.columnNOT_W_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_H_200Column {
                get {
                    return this.columnNOT_H_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_W_133Column {
                get {
                    return this.columnTOT_W_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_W_167Column {
                get {
                    return this.columnTOT_W_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_W_200Column {
                get {
                    return this.columnTOT_W_200;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_EXPColumn {
                get {
                    return this.columnNOT_EXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOT_EXPColumn {
                get {
                    return this.columnTOT_EXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALARYColumn {
                get {
                    return this.columnSALARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTMODIColumn {
                get {
                    return this.columnNOTMODI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTRCDColumn {
                get {
                    return this.columnOTRCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOFOODColumn {
                get {
                    return this.columnNOFOOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_ROTEColumn {
                get {
                    return this.columnOT_ROTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOOD1Column {
                get {
                    return this.columnOT_FOOD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOODHColumn {
                get {
                    return this.columnOT_FOODH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_FOODH1Column {
                get {
                    return this.columnOT_FOODH1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SYSCREATColumn {
                get {
                    return this.columnSYSCREAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTRATE_CODEColumn {
                get {
                    return this.columnOTRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SERNOColumn {
                get {
                    return this.columnSERNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOFOOD1Column {
                get {
                    return this.columnNOFOOD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JOB_NAMEColumn {
                get {
                    return this.columnJOB_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPTColumn {
                get {
                    return this.columnDEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn isHoliColumn {
                get {
                    return this.columnisHoli;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_TYPEColumn {
                get {
                    return this.columnOT_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COUNT_MAColumn {
                get {
                    return this.columnCOUNT_MA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SYS_OTColumn {
                get {
                    return this.columnSYS_OT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_H_167Column {
                get {
                    return this.columnNOT_H_167;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOT_H_133Column {
                get {
                    return this.columnNOT_H_133;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOLI_TYPEColumn {
                get {
                    return this.columnHOLI_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn Att_RoteColumn {
                get {
                    return this.columnAtt_Rote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FRM47Row this[int index] {
                get {
                    return ((FRM47Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FRM47RowChangeEventHandler FRM47RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FRM47RowChangeEventHandler FRM47RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FRM47RowChangeEventHandler FRM47RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FRM47RowChangeEventHandler FRM47RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFRM47Row(FRM47Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FRM47Row AddFRM47Row(
                        string NOBR, 
                        string NAME_C, 
                        string YYMM, 
                        System.DateTime BDATE, 
                        string BTIME, 
                        string ETIME, 
                        decimal TOT_HOURS, 
                        decimal OT_HRS, 
                        decimal REST_HRS, 
                        decimal OT_CAR, 
                        string OT_DEPT, 
                        string DEPT_NAME, 
                        string DEPTS_NAME, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        decimal OT_FOOD, 
                        string NOTE, 
                        decimal NOT_W_133, 
                        decimal NOT_W_167, 
                        decimal NOT_W_200, 
                        decimal NOT_H_200, 
                        decimal TOT_W_133, 
                        decimal TOT_W_167, 
                        decimal TOT_W_200, 
                        decimal NOT_EXP, 
                        decimal TOT_EXP, 
                        decimal SALARY, 
                        bool NOTMODI, 
                        string OTRCD, 
                        bool NOFOOD, 
                        string OT_ROTE, 
                        decimal OT_FOOD1, 
                        decimal OT_FOODH, 
                        decimal OT_FOODH1, 
                        bool SYSCREAT, 
                        string OTRATE_CODE, 
                        string SERNO, 
                        bool NOFOOD1, 
                        string JOB_NAME, 
                        string DEPT, 
                        int isHoli, 
                        string OT_TYPE, 
                        bool COUNT_MA, 
                        bool SYS_OT, 
                        decimal NOT_H_167, 
                        decimal NOT_H_133, 
                        string HOLI_TYPE, 
                        string Att_Rote) {
                FRM47Row rowFRM47Row = ((FRM47Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        NAME_C,
                        YYMM,
                        BDATE,
                        BTIME,
                        ETIME,
                        TOT_HOURS,
                        OT_HRS,
                        REST_HRS,
                        OT_CAR,
                        OT_DEPT,
                        DEPT_NAME,
                        DEPTS_NAME,
                        KEY_MAN,
                        KEY_DATE,
                        OT_FOOD,
                        NOTE,
                        NOT_W_133,
                        NOT_W_167,
                        NOT_W_200,
                        NOT_H_200,
                        TOT_W_133,
                        TOT_W_167,
                        TOT_W_200,
                        NOT_EXP,
                        TOT_EXP,
                        SALARY,
                        NOTMODI,
                        OTRCD,
                        NOFOOD,
                        OT_ROTE,
                        OT_FOOD1,
                        OT_FOODH,
                        OT_FOODH1,
                        SYSCREAT,
                        OTRATE_CODE,
                        SERNO,
                        NOFOOD1,
                        JOB_NAME,
                        DEPT,
                        isHoli,
                        OT_TYPE,
                        COUNT_MA,
                        SYS_OT,
                        NOT_H_167,
                        NOT_H_133,
                        HOLI_TYPE,
                        Att_Rote};
                rowFRM47Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowFRM47Row);
                return rowFRM47Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FRM47Row FindByNOBRBDATEBTIME(string NOBR, System.DateTime BDATE, string BTIME) {
                return ((FRM47Row)(this.Rows.Find(new object[] {
                            NOBR,
                            BDATE,
                            BTIME})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FRM47DataTable cln = ((FRM47DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FRM47DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnBDATE = base.Columns["BDATE"];
                this.columnBTIME = base.Columns["BTIME"];
                this.columnETIME = base.Columns["ETIME"];
                this.columnTOT_HOURS = base.Columns["TOT_HOURS"];
                this.columnOT_HRS = base.Columns["OT_HRS"];
                this.columnREST_HRS = base.Columns["REST_HRS"];
                this.columnOT_CAR = base.Columns["OT_CAR"];
                this.columnOT_DEPT = base.Columns["OT_DEPT"];
                this.columnDEPT_NAME = base.Columns["DEPT_NAME"];
                this.columnDEPTS_NAME = base.Columns["DEPTS_NAME"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnOT_FOOD = base.Columns["OT_FOOD"];
                this.columnNOTE = base.Columns["NOTE"];
                this.columnNOT_W_133 = base.Columns["NOT_W_133"];
                this.columnNOT_W_167 = base.Columns["NOT_W_167"];
                this.columnNOT_W_200 = base.Columns["NOT_W_200"];
                this.columnNOT_H_200 = base.Columns["NOT_H_200"];
                this.columnTOT_W_133 = base.Columns["TOT_W_133"];
                this.columnTOT_W_167 = base.Columns["TOT_W_167"];
                this.columnTOT_W_200 = base.Columns["TOT_W_200"];
                this.columnNOT_EXP = base.Columns["NOT_EXP"];
                this.columnTOT_EXP = base.Columns["TOT_EXP"];
                this.columnSALARY = base.Columns["SALARY"];
                this.columnNOTMODI = base.Columns["NOTMODI"];
                this.columnOTRCD = base.Columns["OTRCD"];
                this.columnNOFOOD = base.Columns["NOFOOD"];
                this.columnOT_ROTE = base.Columns["OT_ROTE"];
                this.columnOT_FOOD1 = base.Columns["OT_FOOD1"];
                this.columnOT_FOODH = base.Columns["OT_FOODH"];
                this.columnOT_FOODH1 = base.Columns["OT_FOODH1"];
                this.columnSYSCREAT = base.Columns["SYSCREAT"];
                this.columnOTRATE_CODE = base.Columns["OTRATE_CODE"];
                this.columnSERNO = base.Columns["SERNO"];
                this.columnNOFOOD1 = base.Columns["NOFOOD1"];
                this.columnJOB_NAME = base.Columns["JOB_NAME"];
                this.columnDEPT = base.Columns["DEPT"];
                this.columnisHoli = base.Columns["isHoli"];
                this.columnOT_TYPE = base.Columns["OT_TYPE"];
                this.columnCOUNT_MA = base.Columns["COUNT_MA"];
                this.columnSYS_OT = base.Columns["SYS_OT"];
                this.columnNOT_H_167 = base.Columns["NOT_H_167"];
                this.columnNOT_H_133 = base.Columns["NOT_H_133"];
                this.columnHOLI_TYPE = base.Columns["HOLI_TYPE"];
                this.columnAtt_Rote = base.Columns["Att_Rote"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnBDATE = new global::System.Data.DataColumn("BDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBDATE);
                this.columnBTIME = new global::System.Data.DataColumn("BTIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBTIME);
                this.columnETIME = new global::System.Data.DataColumn("ETIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnETIME);
                this.columnTOT_HOURS = new global::System.Data.DataColumn("TOT_HOURS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_HOURS);
                this.columnOT_HRS = new global::System.Data.DataColumn("OT_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_HRS);
                this.columnREST_HRS = new global::System.Data.DataColumn("REST_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREST_HRS);
                this.columnOT_CAR = new global::System.Data.DataColumn("OT_CAR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_CAR);
                this.columnOT_DEPT = new global::System.Data.DataColumn("OT_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_DEPT);
                this.columnDEPT_NAME = new global::System.Data.DataColumn("DEPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAME);
                this.columnDEPTS_NAME = new global::System.Data.DataColumn("DEPTS_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTS_NAME);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnOT_FOOD = new global::System.Data.DataColumn("OT_FOOD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOOD);
                this.columnNOTE = new global::System.Data.DataColumn("NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE);
                this.columnNOT_W_133 = new global::System.Data.DataColumn("NOT_W_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_W_133);
                this.columnNOT_W_167 = new global::System.Data.DataColumn("NOT_W_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_W_167);
                this.columnNOT_W_200 = new global::System.Data.DataColumn("NOT_W_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_W_200);
                this.columnNOT_H_200 = new global::System.Data.DataColumn("NOT_H_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_H_200);
                this.columnTOT_W_133 = new global::System.Data.DataColumn("TOT_W_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_W_133);
                this.columnTOT_W_167 = new global::System.Data.DataColumn("TOT_W_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_W_167);
                this.columnTOT_W_200 = new global::System.Data.DataColumn("TOT_W_200", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_W_200);
                this.columnNOT_EXP = new global::System.Data.DataColumn("NOT_EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_EXP);
                this.columnTOT_EXP = new global::System.Data.DataColumn("TOT_EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOT_EXP);
                this.columnSALARY = new global::System.Data.DataColumn("SALARY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALARY);
                this.columnNOTMODI = new global::System.Data.DataColumn("NOTMODI", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTMODI);
                this.columnOTRCD = new global::System.Data.DataColumn("OTRCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTRCD);
                this.columnNOFOOD = new global::System.Data.DataColumn("NOFOOD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOFOOD);
                this.columnOT_ROTE = new global::System.Data.DataColumn("OT_ROTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_ROTE);
                this.columnOT_FOOD1 = new global::System.Data.DataColumn("OT_FOOD1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOOD1);
                this.columnOT_FOODH = new global::System.Data.DataColumn("OT_FOODH", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOODH);
                this.columnOT_FOODH1 = new global::System.Data.DataColumn("OT_FOODH1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_FOODH1);
                this.columnSYSCREAT = new global::System.Data.DataColumn("SYSCREAT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYSCREAT);
                this.columnOTRATE_CODE = new global::System.Data.DataColumn("OTRATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOTRATE_CODE);
                this.columnSERNO = new global::System.Data.DataColumn("SERNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSERNO);
                this.columnNOFOOD1 = new global::System.Data.DataColumn("NOFOOD1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOFOOD1);
                this.columnJOB_NAME = new global::System.Data.DataColumn("JOB_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NAME);
                this.columnDEPT = new global::System.Data.DataColumn("DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT);
                this.columnisHoli = new global::System.Data.DataColumn("isHoli", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisHoli);
                this.columnOT_TYPE = new global::System.Data.DataColumn("OT_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_TYPE);
                this.columnCOUNT_MA = new global::System.Data.DataColumn("COUNT_MA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNT_MA);
                this.columnSYS_OT = new global::System.Data.DataColumn("SYS_OT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSYS_OT);
                this.columnNOT_H_167 = new global::System.Data.DataColumn("NOT_H_167", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_H_167);
                this.columnNOT_H_133 = new global::System.Data.DataColumn("NOT_H_133", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_H_133);
                this.columnHOLI_TYPE = new global::System.Data.DataColumn("HOLI_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLI_TYPE);
                this.columnAtt_Rote = new global::System.Data.DataColumn("Att_Rote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAtt_Rote);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnBDATE,
                                this.columnBTIME}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "工號";
                this.columnNOBR.MaxLength = 50;
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnBDATE.AllowDBNull = false;
                this.columnBDATE.Caption = "加班日期";
                this.columnBTIME.AllowDBNull = false;
                this.columnBTIME.Caption = "加班起";
                this.columnBTIME.MaxLength = 50;
                this.columnETIME.AllowDBNull = false;
                this.columnETIME.Caption = "加班迄";
                this.columnETIME.MaxLength = 50;
                this.columnTOT_HOURS.AllowDBNull = false;
                this.columnTOT_HOURS.Caption = "加班時數";
                this.columnOT_HRS.AllowDBNull = false;
                this.columnOT_HRS.Caption = "加班費時數";
                this.columnREST_HRS.AllowDBNull = false;
                this.columnREST_HRS.Caption = "補休時數";
                this.columnOT_CAR.AllowDBNull = false;
                this.columnOT_CAR.Caption = "Call-In津貼";
                this.columnOT_DEPT.AllowDBNull = false;
                this.columnOT_DEPT.Caption = "加班部門";
                this.columnOT_DEPT.MaxLength = 50;
                this.columnDEPT_NAME.Caption = "編制部門名稱";
                this.columnDEPT_NAME.MaxLength = 50;
                this.columnDEPTS_NAME.Caption = "成本部門名稱";
                this.columnDEPTS_NAME.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnOT_FOOD.AllowDBNull = false;
                this.columnOT_FOOD.Caption = "輪班津貼";
                this.columnNOTE.AllowDBNull = false;
                this.columnNOTE.Caption = "備註";
                this.columnNOTE.MaxLength = 200;
                this.columnNOT_W_133.AllowDBNull = false;
                this.columnNOT_W_133.Caption = "免稅一段";
                this.columnNOT_W_167.AllowDBNull = false;
                this.columnNOT_W_167.Caption = "免稅二段";
                this.columnNOT_W_200.AllowDBNull = false;
                this.columnNOT_W_200.Caption = "免稅三段";
                this.columnNOT_H_200.AllowDBNull = false;
                this.columnNOT_H_200.Caption = "假日三段";
                this.columnTOT_W_133.AllowDBNull = false;
                this.columnTOT_W_133.Caption = "應稅一段";
                this.columnTOT_W_167.AllowDBNull = false;
                this.columnTOT_W_167.Caption = "應稅二段";
                this.columnTOT_W_200.AllowDBNull = false;
                this.columnTOT_W_200.Caption = "應稅三段";
                this.columnNOT_EXP.AllowDBNull = false;
                this.columnNOT_EXP.Caption = "免稅加班費";
                this.columnTOT_EXP.AllowDBNull = false;
                this.columnTOT_EXP.Caption = "應稅加班費";
                this.columnSALARY.AllowDBNull = false;
                this.columnSALARY.Caption = "薪資";
                this.columnNOTMODI.AllowDBNull = false;
                this.columnNOTMODI.Caption = "不可修改";
                this.columnOTRCD.AllowDBNull = false;
                this.columnOTRCD.Caption = "加班原因";
                this.columnOTRCD.MaxLength = 50;
                this.columnNOFOOD.AllowDBNull = false;
                this.columnNOFOOD.Caption = "不計算津貼";
                this.columnOT_ROTE.AllowDBNull = false;
                this.columnOT_ROTE.Caption = "加班班別";
                this.columnOT_ROTE.MaxLength = 50;
                this.columnOT_FOOD1.AllowDBNull = false;
                this.columnOT_FOOD1.Caption = "誤餐費";
                this.columnOT_FOODH.AllowDBNull = false;
                this.columnOT_FOODH.Caption = "輪班津貼時數";
                this.columnOT_FOODH1.AllowDBNull = false;
                this.columnOT_FOODH1.Caption = "誤餐費時數";
                this.columnSYSCREAT.AllowDBNull = false;
                this.columnSYSCREAT.Caption = "固定加班";
                this.columnOTRATE_CODE.AllowDBNull = false;
                this.columnOTRATE_CODE.Caption = "加班比率代碼";
                this.columnOTRATE_CODE.MaxLength = 50;
                this.columnSERNO.AllowDBNull = false;
                this.columnSERNO.Caption = "序號";
                this.columnSERNO.MaxLength = 50;
                this.columnNOFOOD1.AllowDBNull = false;
                this.columnNOFOOD1.Caption = "不計算誤餐費";
                this.columnJOB_NAME.AllowDBNull = false;
                this.columnJOB_NAME.Caption = "職稱";
                this.columnJOB_NAME.MaxLength = 50;
                this.columnDEPT.AllowDBNull = false;
                this.columnDEPT.Caption = "編制部門代碼";
                this.columnDEPT.MaxLength = 50;
                this.columnisHoli.ReadOnly = true;
                this.columnisHoli.Caption = "假日加班";
                this.columnOT_TYPE.ReadOnly = true;
                this.columnOT_TYPE.Caption = "加班別";
                this.columnOT_TYPE.MaxLength = 50;
                this.columnCOUNT_MA.AllowDBNull = false;
                this.columnCOUNT_MA.Caption = "外勞";
                this.columnSYS_OT.AllowDBNull = false;
                this.columnSYS_OT.Caption = "系統假日加班";
                this.columnNOT_H_167.AllowDBNull = false;
                this.columnNOT_H_167.Caption = "假日三段";
                this.columnNOT_H_133.AllowDBNull = false;
                this.columnNOT_H_133.Caption = "假日一段";
                this.columnHOLI_TYPE.ReadOnly = true;
                this.columnHOLI_TYPE.Caption = "假日別";
                this.columnHOLI_TYPE.MaxLength = 50;
                this.columnAtt_Rote.Caption = "出勤班別";
                this.columnAtt_Rote.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FRM47Row NewFRM47Row() {
                return ((FRM47Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FRM47Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FRM47Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRM47RowChanged != null)) {
                    this.FRM47RowChanged(this, new FRM47RowChangeEvent(((FRM47Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRM47RowChanging != null)) {
                    this.FRM47RowChanging(this, new FRM47RowChangeEvent(((FRM47Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRM47RowDeleted != null)) {
                    this.FRM47RowDeleted(this, new FRM47RowChangeEvent(((FRM47Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRM47RowDeleting != null)) {
                    this.FRM47RowDeleting(this, new FRM47RowChangeEvent(((FRM47Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFRM47Row(FRM47Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRM47DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ENRICHDataTable : global::System.Data.TypedTableBase<ENRICHRow> {
            
            private global::System.Data.DataColumn columnAUTOKEY;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnMEMO;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnIMPORT;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ENRICHDataTable() {
                this.TableName = "ENRICH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ENRICHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ENRICHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOKEYColumn {
                get {
                    return this.columnAUTOKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MEMOColumn {
                get {
                    return this.columnMEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IMPORTColumn {
                get {
                    return this.columnIMPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ENRICHRow this[int index] {
                get {
                    return ((ENRICHRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ENRICHRowChangeEventHandler ENRICHRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ENRICHRowChangeEventHandler ENRICHRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ENRICHRowChangeEventHandler ENRICHRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ENRICHRowChangeEventHandler ENRICHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddENRICHRow(ENRICHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ENRICHRow AddENRICHRow(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, string MEMO, string FA_IDNO, bool IMPORT, string NAME_C, string SAL_NAME) {
                ENRICHRow rowENRICHRow = ((ENRICHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NOBR,
                        YYMM,
                        SEQ,
                        SAL_CODE,
                        AMT,
                        KEY_MAN,
                        KEY_DATE,
                        MEMO,
                        FA_IDNO,
                        IMPORT,
                        NAME_C,
                        SAL_NAME};
                rowENRICHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowENRICHRow);
                return rowENRICHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ENRICHRow FindByAUTOKEY(int AUTOKEY) {
                return ((ENRICHRow)(this.Rows.Find(new object[] {
                            AUTOKEY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ENRICHDataTable cln = ((ENRICHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ENRICHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAUTOKEY = base.Columns["AUTOKEY"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnMEMO = base.Columns["MEMO"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnIMPORT = base.Columns["IMPORT"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAUTOKEY = new global::System.Data.DataColumn("AUTOKEY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOKEY);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnMEMO = new global::System.Data.DataColumn("MEMO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMO);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnIMPORT = new global::System.Data.DataColumn("IMPORT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPORT);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTOKEY}, true));
                this.columnAUTOKEY.AutoIncrement = true;
                this.columnAUTOKEY.AutoIncrementSeed = -1;
                this.columnAUTOKEY.AutoIncrementStep = -1;
                this.columnAUTOKEY.AllowDBNull = false;
                this.columnAUTOKEY.ReadOnly = true;
                this.columnAUTOKEY.Unique = true;
                this.columnAUTOKEY.Caption = "編號";
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "工號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "期數";
                this.columnSEQ.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnMEMO.AllowDBNull = false;
                this.columnMEMO.Caption = "備註";
                this.columnMEMO.MaxLength = 120;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnIMPORT.AllowDBNull = false;
                this.columnIMPORT.Caption = "匯入";
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.Caption = "薪資名稱";
                this.columnSAL_NAME.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ENRICHRow NewENRICHRow() {
                return ((ENRICHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ENRICHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ENRICHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ENRICHRowChanged != null)) {
                    this.ENRICHRowChanged(this, new ENRICHRowChangeEvent(((ENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ENRICHRowChanging != null)) {
                    this.ENRICHRowChanging(this, new ENRICHRowChangeEvent(((ENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ENRICHRowDeleted != null)) {
                    this.ENRICHRowDeleted(this, new ENRICHRowChangeEvent(((ENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ENRICHRowDeleting != null)) {
                    this.ENRICHRowDeleting(this, new ENRICHRowChangeEvent(((ENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveENRICHRow(ENRICHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ENRICHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALBASD1DataTable : global::System.Data.TypedTableBase<SALBASD1Row> {
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnAMTB;
            
            private global::System.Data.DataColumn columnMENO;
            
            private global::System.Data.DataColumn columnSEQ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD1DataTable() {
                this.TableName = "SALBASD1";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASD1DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALBASD1DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTBColumn {
                get {
                    return this.columnAMTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MENOColumn {
                get {
                    return this.columnMENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD1Row this[int index] {
                get {
                    return ((SALBASD1Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD1RowChangeEventHandler SALBASD1RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD1RowChangeEventHandler SALBASD1RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD1RowChangeEventHandler SALBASD1RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD1RowChangeEventHandler SALBASD1RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALBASD1Row(SALBASD1Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD1Row AddSALBASD1Row(string YYMM, string NOBR, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, string SEQ) {
                SALBASD1Row rowSALBASD1Row = ((SALBASD1Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        YYMM,
                        NOBR,
                        SAL_CODE,
                        AMT,
                        KEY_MAN,
                        KEY_DATE,
                        AMTB,
                        MENO,
                        SEQ};
                rowSALBASD1Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALBASD1Row);
                return rowSALBASD1Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD1Row FindByYYMMNOBRSAL_CODESEQ(string YYMM, string NOBR, string SAL_CODE, string SEQ) {
                return ((SALBASD1Row)(this.Rows.Find(new object[] {
                            YYMM,
                            NOBR,
                            SAL_CODE,
                            SEQ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALBASD1DataTable cln = ((SALBASD1DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALBASD1DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnYYMM = base.Columns["YYMM"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnAMTB = base.Columns["AMTB"];
                this.columnMENO = base.Columns["MENO"];
                this.columnSEQ = base.Columns["SEQ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnAMTB = new global::System.Data.DataColumn("AMTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTB);
                this.columnMENO = new global::System.Data.DataColumn("MENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENO);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYYMM,
                                this.columnNOBR,
                                this.columnSAL_CODE,
                                this.columnSEQ}, true));
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "工號";
                this.columnNOBR.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnAMTB.AllowDBNull = false;
                this.columnMENO.AllowDBNull = false;
                this.columnMENO.Caption = "備註";
                this.columnMENO.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "期別";
                this.columnSEQ.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD1Row NewSALBASD1Row() {
                return ((SALBASD1Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALBASD1Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALBASD1Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALBASD1RowChanged != null)) {
                    this.SALBASD1RowChanged(this, new SALBASD1RowChangeEvent(((SALBASD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALBASD1RowChanging != null)) {
                    this.SALBASD1RowChanging(this, new SALBASD1RowChangeEvent(((SALBASD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALBASD1RowDeleted != null)) {
                    this.SALBASD1RowDeleted(this, new SALBASD1RowChangeEvent(((SALBASD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALBASD1RowDeleting != null)) {
                    this.SALBASD1RowDeleting(this, new SALBASD1RowChangeEvent(((SALBASD1Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALBASD1Row(SALBASD1Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALBASD1DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXPLABDataTable : global::System.Data.TypedTableBase<EXPLABRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnEXP;
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnNOTEDIT;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDAYS;
            
            private global::System.Data.DataColumn columnRATE_CODE;
            
            private global::System.Data.DataColumn columnINSUR_TYPE;
            
            private global::System.Data.DataColumn columnINSCD;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnJOBAMT;
            
            private global::System.Data.DataColumn columnFUNDAMT;
            
            private global::System.Data.DataColumn columnS_NO;
            
            private global::System.Data.DataColumn columnFA_NAME;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnSAL_YYMM;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPLABDataTable() {
                this.TableName = "EXPLAB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EXPLABDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EXPLABDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPColumn {
                get {
                    return this.columnEXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTEDITColumn {
                get {
                    return this.columnNOTEDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DAYSColumn {
                get {
                    return this.columnDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RATE_CODEColumn {
                get {
                    return this.columnRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSUR_TYPEColumn {
                get {
                    return this.columnINSUR_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSCDColumn {
                get {
                    return this.columnINSCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JOBAMTColumn {
                get {
                    return this.columnJOBAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FUNDAMTColumn {
                get {
                    return this.columnFUNDAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_NOColumn {
                get {
                    return this.columnS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_NAMEColumn {
                get {
                    return this.columnFA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_YYMMColumn {
                get {
                    return this.columnSAL_YYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPLABRow this[int index] {
                get {
                    return ((EXPLABRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPLABRowChangeEventHandler EXPLABRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPLABRowChangeEventHandler EXPLABRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPLABRowChangeEventHandler EXPLABRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPLABRowChangeEventHandler EXPLABRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEXPLABRow(EXPLABRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPLABRow AddEXPLABRow(
                        string NOBR, 
                        string FA_IDNO, 
                        string YYMM, 
                        decimal EXP, 
                        decimal COMP, 
                        bool NOTEDIT, 
                        System.DateTime KEY_DATE, 
                        string KEY_MAN, 
                        System.DateTime ADATE, 
                        decimal DAYS, 
                        string RATE_CODE, 
                        string INSUR_TYPE, 
                        decimal INSCD, 
                        string SAL_CODE, 
                        decimal JOBAMT, 
                        decimal FUNDAMT, 
                        string S_NO, 
                        string FA_NAME, 
                        string NAME_C, 
                        string SAL_YYMM) {
                EXPLABRow rowEXPLABRow = ((EXPLABRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        FA_IDNO,
                        YYMM,
                        EXP,
                        COMP,
                        NOTEDIT,
                        KEY_DATE,
                        KEY_MAN,
                        ADATE,
                        DAYS,
                        RATE_CODE,
                        INSUR_TYPE,
                        INSCD,
                        SAL_CODE,
                        JOBAMT,
                        FUNDAMT,
                        S_NO,
                        FA_NAME,
                        NAME_C,
                        SAL_YYMM};
                rowEXPLABRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXPLABRow);
                return rowEXPLABRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPLABRow FindByYYMMFA_IDNONOBRINSUR_TYPE(string YYMM, string FA_IDNO, string NOBR, string INSUR_TYPE) {
                return ((EXPLABRow)(this.Rows.Find(new object[] {
                            YYMM,
                            FA_IDNO,
                            NOBR,
                            INSUR_TYPE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EXPLABDataTable cln = ((EXPLABDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXPLABDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnEXP = base.Columns["EXP"];
                this.columnCOMP = base.Columns["COMP"];
                this.columnNOTEDIT = base.Columns["NOTEDIT"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDAYS = base.Columns["DAYS"];
                this.columnRATE_CODE = base.Columns["RATE_CODE"];
                this.columnINSUR_TYPE = base.Columns["INSUR_TYPE"];
                this.columnINSCD = base.Columns["INSCD"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnJOBAMT = base.Columns["JOBAMT"];
                this.columnFUNDAMT = base.Columns["FUNDAMT"];
                this.columnS_NO = base.Columns["S_NO"];
                this.columnFA_NAME = base.Columns["FA_NAME"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnSAL_YYMM = base.Columns["SAL_YYMM"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnEXP = new global::System.Data.DataColumn("EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP);
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnNOTEDIT = new global::System.Data.DataColumn("NOTEDIT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTEDIT);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDAYS = new global::System.Data.DataColumn("DAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS);
                this.columnRATE_CODE = new global::System.Data.DataColumn("RATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE_CODE);
                this.columnINSUR_TYPE = new global::System.Data.DataColumn("INSUR_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSUR_TYPE);
                this.columnINSCD = new global::System.Data.DataColumn("INSCD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSCD);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnJOBAMT = new global::System.Data.DataColumn("JOBAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBAMT);
                this.columnFUNDAMT = new global::System.Data.DataColumn("FUNDAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFUNDAMT);
                this.columnS_NO = new global::System.Data.DataColumn("S_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NO);
                this.columnFA_NAME = new global::System.Data.DataColumn("FA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_NAME);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnSAL_YYMM = new global::System.Data.DataColumn("SAL_YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_YYMM);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnYYMM,
                                this.columnFA_IDNO,
                                this.columnNOBR,
                                this.columnINSUR_TYPE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "扣款年月";
                this.columnYYMM.MaxLength = 50;
                this.columnEXP.AllowDBNull = false;
                this.columnEXP.Caption = "扣款費用";
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.Caption = "公司負擔";
                this.columnNOTEDIT.AllowDBNull = false;
                this.columnNOTEDIT.Caption = "不可修改";
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "生效日期";
                this.columnDAYS.AllowDBNull = false;
                this.columnDAYS.Caption = "天數";
                this.columnRATE_CODE.AllowDBNull = false;
                this.columnRATE_CODE.Caption = "稅率類別";
                this.columnRATE_CODE.MaxLength = 50;
                this.columnINSUR_TYPE.AllowDBNull = false;
                this.columnINSUR_TYPE.Caption = "費用種類";
                this.columnINSUR_TYPE.MaxLength = 50;
                this.columnINSCD.AllowDBNull = false;
                this.columnINSCD.Caption = "費用類別";
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnJOBAMT.AllowDBNull = false;
                this.columnJOBAMT.Caption = "職業災害";
                this.columnFUNDAMT.AllowDBNull = false;
                this.columnFUNDAMT.Caption = "墊償基金";
                this.columnS_NO.AllowDBNull = false;
                this.columnS_NO.Caption = "投保單位";
                this.columnS_NO.MaxLength = 50;
                this.columnFA_NAME.ReadOnly = true;
                this.columnFA_NAME.MaxLength = 50;
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnSAL_YYMM.AllowDBNull = false;
                this.columnSAL_YYMM.Caption = "計薪年月";
                this.columnSAL_YYMM.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPLABRow NewEXPLABRow() {
                return ((EXPLABRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXPLABRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EXPLABRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXPLABRowChanged != null)) {
                    this.EXPLABRowChanged(this, new EXPLABRowChangeEvent(((EXPLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXPLABRowChanging != null)) {
                    this.EXPLABRowChanging(this, new EXPLABRowChangeEvent(((EXPLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXPLABRowDeleted != null)) {
                    this.EXPLABRowDeleted(this, new EXPLABRowChangeEvent(((EXPLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXPLABRowDeleting != null)) {
                    this.EXPLABRowDeleting(this, new EXPLABRowChangeEvent(((EXPLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEXPLABRow(EXPLABRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXPLABDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALBASD_TMPDataTable : global::System.Data.TypedTableBase<SALBASD_TMPRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnMEMO;
            
            private global::System.Data.DataColumn columnCOMMITED;
            
            private global::System.Data.DataColumn columnCOMMITTER;
            
            private global::System.Data.DataColumn columnTRANS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD_TMPDataTable() {
                this.TableName = "SALBASD_TMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASD_TMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALBASD_TMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MEMOColumn {
                get {
                    return this.columnMEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMMITEDColumn {
                get {
                    return this.columnCOMMITED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMMITTERColumn {
                get {
                    return this.columnCOMMITTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TRANSColumn {
                get {
                    return this.columnTRANS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD_TMPRow this[int index] {
                get {
                    return ((SALBASD_TMPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD_TMPRowChangeEventHandler SALBASD_TMPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD_TMPRowChangeEventHandler SALBASD_TMPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD_TMPRowChangeEventHandler SALBASD_TMPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASD_TMPRowChangeEventHandler SALBASD_TMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALBASD_TMPRow(SALBASD_TMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD_TMPRow AddSALBASD_TMPRow(string NOBR, System.DateTime ADATE, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, string MEMO, bool COMMITED, string COMMITTER, bool TRANS) {
                SALBASD_TMPRow rowSALBASD_TMPRow = ((SALBASD_TMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        ADATE,
                        SAL_CODE,
                        AMT,
                        KEY_MAN,
                        KEY_DATE,
                        MEMO,
                        COMMITED,
                        COMMITTER,
                        TRANS};
                rowSALBASD_TMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALBASD_TMPRow);
                return rowSALBASD_TMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD_TMPRow FindByNOBRADATESAL_CODE(string NOBR, System.DateTime ADATE, string SAL_CODE) {
                return ((SALBASD_TMPRow)(this.Rows.Find(new object[] {
                            NOBR,
                            ADATE,
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALBASD_TMPDataTable cln = ((SALBASD_TMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALBASD_TMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnMEMO = base.Columns["MEMO"];
                this.columnCOMMITED = base.Columns["COMMITED"];
                this.columnCOMMITTER = base.Columns["COMMITTER"];
                this.columnTRANS = base.Columns["TRANS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnMEMO = new global::System.Data.DataColumn("MEMO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMO);
                this.columnCOMMITED = new global::System.Data.DataColumn("COMMITED", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMITED);
                this.columnCOMMITTER = new global::System.Data.DataColumn("COMMITTER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMMITTER);
                this.columnTRANS = new global::System.Data.DataColumn("TRANS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTRANS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnADATE,
                                this.columnSAL_CODE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "生效日期";
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnMEMO.AllowDBNull = false;
                this.columnMEMO.Caption = "備註";
                this.columnMEMO.MaxLength = 50;
                this.columnCOMMITED.AllowDBNull = false;
                this.columnCOMMITED.Caption = "已確認";
                this.columnCOMMITTER.Caption = "確認者";
                this.columnCOMMITTER.MaxLength = 50;
                this.columnTRANS.AllowDBNull = false;
                this.columnTRANS.Caption = "已轉換";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD_TMPRow NewSALBASD_TMPRow() {
                return ((SALBASD_TMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALBASD_TMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALBASD_TMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALBASD_TMPRowChanged != null)) {
                    this.SALBASD_TMPRowChanged(this, new SALBASD_TMPRowChangeEvent(((SALBASD_TMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALBASD_TMPRowChanging != null)) {
                    this.SALBASD_TMPRowChanging(this, new SALBASD_TMPRowChangeEvent(((SALBASD_TMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALBASD_TMPRowDeleted != null)) {
                    this.SALBASD_TMPRowDeleted(this, new SALBASD_TMPRowChangeEvent(((SALBASD_TMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALBASD_TMPRowDeleting != null)) {
                    this.SALBASD_TMPRowDeleting(this, new SALBASD_TMPRowChangeEvent(((SALBASD_TMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALBASD_TMPRow(SALBASD_TMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALBASD_TMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ExplabCNDataTable : global::System.Data.TypedTableBase<ExplabCNRow> {
            
            private global::System.Data.DataColumn columnAUTOKEY;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnINSUR_TYPE;
            
            private global::System.Data.DataColumn columnEXP;
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnSAL_YYMM;
            
            private global::System.Data.DataColumn columnS_NO;
            
            private global::System.Data.DataColumn columnNOTEDIT;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ExplabCNDataTable() {
                this.TableName = "ExplabCN";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ExplabCNDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ExplabCNDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOKEYColumn {
                get {
                    return this.columnAUTOKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSUR_TYPEColumn {
                get {
                    return this.columnINSUR_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPColumn {
                get {
                    return this.columnEXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_YYMMColumn {
                get {
                    return this.columnSAL_YYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_NOColumn {
                get {
                    return this.columnS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTEDITColumn {
                get {
                    return this.columnNOTEDIT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ExplabCNRow this[int index] {
                get {
                    return ((ExplabCNRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ExplabCNRowChangeEventHandler ExplabCNRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ExplabCNRowChangeEventHandler ExplabCNRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ExplabCNRowChangeEventHandler ExplabCNRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ExplabCNRowChangeEventHandler ExplabCNRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddExplabCNRow(ExplabCNRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ExplabCNRow AddExplabCNRow(string NOBR, string YYMM, string INSUR_TYPE, decimal EXP, decimal COMP, string SAL_CODE, decimal AMT, string SAL_YYMM, string S_NO, bool NOTEDIT, System.DateTime KEY_DATE, string KEY_MAN) {
                ExplabCNRow rowExplabCNRow = ((ExplabCNRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NOBR,
                        YYMM,
                        INSUR_TYPE,
                        EXP,
                        COMP,
                        SAL_CODE,
                        AMT,
                        SAL_YYMM,
                        S_NO,
                        NOTEDIT,
                        KEY_DATE,
                        KEY_MAN};
                rowExplabCNRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowExplabCNRow);
                return rowExplabCNRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ExplabCNRow FindByAUTOKEY(int AUTOKEY) {
                return ((ExplabCNRow)(this.Rows.Find(new object[] {
                            AUTOKEY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ExplabCNDataTable cln = ((ExplabCNDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ExplabCNDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAUTOKEY = base.Columns["AUTOKEY"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnINSUR_TYPE = base.Columns["INSUR_TYPE"];
                this.columnEXP = base.Columns["EXP"];
                this.columnCOMP = base.Columns["COMP"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnSAL_YYMM = base.Columns["SAL_YYMM"];
                this.columnS_NO = base.Columns["S_NO"];
                this.columnNOTEDIT = base.Columns["NOTEDIT"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAUTOKEY = new global::System.Data.DataColumn("AUTOKEY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOKEY);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnINSUR_TYPE = new global::System.Data.DataColumn("INSUR_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSUR_TYPE);
                this.columnEXP = new global::System.Data.DataColumn("EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP);
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnSAL_YYMM = new global::System.Data.DataColumn("SAL_YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_YYMM);
                this.columnS_NO = new global::System.Data.DataColumn("S_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NO);
                this.columnNOTEDIT = new global::System.Data.DataColumn("NOTEDIT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTEDIT);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTOKEY}, true));
                this.columnAUTOKEY.AutoIncrement = true;
                this.columnAUTOKEY.AutoIncrementSeed = -1;
                this.columnAUTOKEY.AutoIncrementStep = -1;
                this.columnAUTOKEY.AllowDBNull = false;
                this.columnAUTOKEY.ReadOnly = true;
                this.columnAUTOKEY.Unique = true;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "保險年月";
                this.columnYYMM.MaxLength = 50;
                this.columnINSUR_TYPE.AllowDBNull = false;
                this.columnINSUR_TYPE.Caption = "社保種類";
                this.columnINSUR_TYPE.MaxLength = 50;
                this.columnEXP.AllowDBNull = false;
                this.columnEXP.Caption = "員工負擔";
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.Caption = "單位負擔";
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "費用種類";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "基數";
                this.columnSAL_YYMM.AllowDBNull = false;
                this.columnSAL_YYMM.Caption = "費用年月";
                this.columnSAL_YYMM.MaxLength = 50;
                this.columnS_NO.AllowDBNull = false;
                this.columnS_NO.Caption = "投保單位";
                this.columnS_NO.MaxLength = 50;
                this.columnNOTEDIT.AllowDBNull = false;
                this.columnNOTEDIT.Caption = "不可修改";
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ExplabCNRow NewExplabCNRow() {
                return ((ExplabCNRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ExplabCNRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ExplabCNRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ExplabCNRowChanged != null)) {
                    this.ExplabCNRowChanged(this, new ExplabCNRowChangeEvent(((ExplabCNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ExplabCNRowChanging != null)) {
                    this.ExplabCNRowChanging(this, new ExplabCNRowChangeEvent(((ExplabCNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ExplabCNRowDeleted != null)) {
                    this.ExplabCNRowDeleted(this, new ExplabCNRowChangeEvent(((ExplabCNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ExplabCNRowDeleting != null)) {
                    this.ExplabCNRowDeleting(this, new ExplabCNRowChangeEvent(((ExplabCNRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveExplabCNRow(ExplabCNRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ExplabCNDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EXPSUPDataTable : global::System.Data.TypedTableBase<EXPSUPRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnPAY_DATE;
            
            private global::System.Data.DataColumn columnFORMAT;
            
            private global::System.Data.DataColumn columnPAY_AMT;
            
            private global::System.Data.DataColumn columnSUP_AMT;
            
            private global::System.Data.DataColumn columnINS_HAMT;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnTOTAL_AMT;
            
            private global::System.Data.DataColumn columnS_NO;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPSUPDataTable() {
                this.TableName = "EXPSUP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EXPSUPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected EXPSUPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAY_DATEColumn {
                get {
                    return this.columnPAY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FORMATColumn {
                get {
                    return this.columnFORMAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PAY_AMTColumn {
                get {
                    return this.columnPAY_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SUP_AMTColumn {
                get {
                    return this.columnSUP_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INS_HAMTColumn {
                get {
                    return this.columnINS_HAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTAL_AMTColumn {
                get {
                    return this.columnTOTAL_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn S_NOColumn {
                get {
                    return this.columnS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPSUPRow this[int index] {
                get {
                    return ((EXPSUPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPSUPRowChangeEventHandler EXPSUPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPSUPRowChangeEventHandler EXPSUPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPSUPRowChangeEventHandler EXPSUPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event EXPSUPRowChangeEventHandler EXPSUPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddEXPSUPRow(EXPSUPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPSUPRow AddEXPSUPRow(string NOBR, string YYMM, string SEQ, string SAL_CODE, System.DateTime PAY_DATE, string FORMAT, decimal PAY_AMT, decimal SUP_AMT, decimal INS_HAMT, System.DateTime ADATE, System.DateTime DDATE, decimal TOTAL_AMT, string S_NO, System.DateTime KEY_DATE, string KEY_MAN) {
                EXPSUPRow rowEXPSUPRow = ((EXPSUPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        YYMM,
                        SEQ,
                        SAL_CODE,
                        PAY_DATE,
                        FORMAT,
                        PAY_AMT,
                        SUP_AMT,
                        INS_HAMT,
                        ADATE,
                        DDATE,
                        TOTAL_AMT,
                        S_NO,
                        KEY_DATE,
                        KEY_MAN};
                rowEXPSUPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEXPSUPRow);
                return rowEXPSUPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPSUPRow FindByNOBRYYMMSEQSAL_CODE(string NOBR, string YYMM, string SEQ, string SAL_CODE) {
                return ((EXPSUPRow)(this.Rows.Find(new object[] {
                            NOBR,
                            YYMM,
                            SEQ,
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EXPSUPDataTable cln = ((EXPSUPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EXPSUPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnPAY_DATE = base.Columns["PAY_DATE"];
                this.columnFORMAT = base.Columns["FORMAT"];
                this.columnPAY_AMT = base.Columns["PAY_AMT"];
                this.columnSUP_AMT = base.Columns["SUP_AMT"];
                this.columnINS_HAMT = base.Columns["INS_HAMT"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnTOTAL_AMT = base.Columns["TOTAL_AMT"];
                this.columnS_NO = base.Columns["S_NO"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnPAY_DATE = new global::System.Data.DataColumn("PAY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_DATE);
                this.columnFORMAT = new global::System.Data.DataColumn("FORMAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMAT);
                this.columnPAY_AMT = new global::System.Data.DataColumn("PAY_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAY_AMT);
                this.columnSUP_AMT = new global::System.Data.DataColumn("SUP_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUP_AMT);
                this.columnINS_HAMT = new global::System.Data.DataColumn("INS_HAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINS_HAMT);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnTOTAL_AMT = new global::System.Data.DataColumn("TOTAL_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTAL_AMT);
                this.columnS_NO = new global::System.Data.DataColumn("S_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NO);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnYYMM,
                                this.columnSEQ,
                                this.columnSAL_CODE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "期別";
                this.columnSEQ.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnPAY_DATE.AllowDBNull = false;
                this.columnPAY_DATE.Caption = "給付日期";
                this.columnFORMAT.AllowDBNull = false;
                this.columnFORMAT.Caption = "所得格式";
                this.columnFORMAT.MaxLength = 50;
                this.columnPAY_AMT.AllowDBNull = false;
                this.columnPAY_AMT.Caption = "給付金額";
                this.columnSUP_AMT.AllowDBNull = false;
                this.columnSUP_AMT.Caption = "補充保費";
                this.columnINS_HAMT.AllowDBNull = false;
                this.columnINS_HAMT.Caption = "投保金額";
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "開始日期";
                this.columnDDATE.AllowDBNull = false;
                this.columnDDATE.Caption = "結束日期";
                this.columnTOTAL_AMT.AllowDBNull = false;
                this.columnTOTAL_AMT.Caption = "累計獎金";
                this.columnS_NO.AllowDBNull = false;
                this.columnS_NO.Caption = "投保單位";
                this.columnS_NO.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPSUPRow NewEXPSUPRow() {
                return ((EXPSUPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EXPSUPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EXPSUPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EXPSUPRowChanged != null)) {
                    this.EXPSUPRowChanged(this, new EXPSUPRowChangeEvent(((EXPSUPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EXPSUPRowChanging != null)) {
                    this.EXPSUPRowChanging(this, new EXPSUPRowChangeEvent(((EXPSUPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EXPSUPRowDeleted != null)) {
                    this.EXPSUPRowDeleted(this, new EXPSUPRowChangeEvent(((EXPSUPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EXPSUPRowDeleting != null)) {
                    this.EXPSUPRowDeleting(this, new EXPSUPRowChangeEvent(((EXPSUPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveEXPSUPRow(EXPSUPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EXPSUPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALBASEDataTable : global::System.Data.TypedTableBase<SALBASERow> {
            
            private global::System.Data.DataColumn columnAUTO;
            
            private global::System.Data.DataColumn columnCALCTYPE;
            
            private global::System.Data.DataColumn columnSALNAME;
            
            private global::System.Data.DataColumn columnREFFUNCTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASEDataTable() {
                this.TableName = "SALBASE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALBASEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOColumn {
                get {
                    return this.columnAUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CALCTYPEColumn {
                get {
                    return this.columnCALCTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALNAMEColumn {
                get {
                    return this.columnSALNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REFFUNCTIONColumn {
                get {
                    return this.columnREFFUNCTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASERow this[int index] {
                get {
                    return ((SALBASERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASERowChangeEventHandler SALBASERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASERowChangeEventHandler SALBASERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASERowChangeEventHandler SALBASERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASERowChangeEventHandler SALBASERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALBASERow(SALBASERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASERow AddSALBASERow(string CALCTYPE, string SALNAME, string REFFUNCTION) {
                SALBASERow rowSALBASERow = ((SALBASERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CALCTYPE,
                        SALNAME,
                        REFFUNCTION};
                rowSALBASERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALBASERow);
                return rowSALBASERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASERow FindByAUTO(int AUTO) {
                return ((SALBASERow)(this.Rows.Find(new object[] {
                            AUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALBASEDataTable cln = ((SALBASEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALBASEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAUTO = base.Columns["AUTO"];
                this.columnCALCTYPE = base.Columns["CALCTYPE"];
                this.columnSALNAME = base.Columns["SALNAME"];
                this.columnREFFUNCTION = base.Columns["REFFUNCTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAUTO = new global::System.Data.DataColumn("AUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO);
                this.columnCALCTYPE = new global::System.Data.DataColumn("CALCTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALCTYPE);
                this.columnSALNAME = new global::System.Data.DataColumn("SALNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALNAME);
                this.columnREFFUNCTION = new global::System.Data.DataColumn("REFFUNCTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREFFUNCTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTO}, true));
                this.columnAUTO.AutoIncrement = true;
                this.columnAUTO.AutoIncrementSeed = -1;
                this.columnAUTO.AutoIncrementStep = -1;
                this.columnAUTO.AllowDBNull = false;
                this.columnAUTO.ReadOnly = true;
                this.columnAUTO.Unique = true;
                this.columnCALCTYPE.AllowDBNull = false;
                this.columnCALCTYPE.MaxLength = 50;
                this.columnSALNAME.AllowDBNull = false;
                this.columnSALNAME.MaxLength = 50;
                this.columnREFFUNCTION.AllowDBNull = false;
                this.columnREFFUNCTION.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASERow NewSALBASERow() {
                return ((SALBASERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALBASERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALBASERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALBASERowChanged != null)) {
                    this.SALBASERowChanged(this, new SALBASERowChangeEvent(((SALBASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALBASERowChanging != null)) {
                    this.SALBASERowChanging(this, new SALBASERowChangeEvent(((SALBASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALBASERowDeleted != null)) {
                    this.SALBASERowDeleted(this, new SALBASERowChangeEvent(((SALBASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALBASERowDeleting != null)) {
                    this.SALBASERowDeleting(this, new SALBASERowChangeEvent(((SALBASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALBASERow(SALBASERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALBASEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALFUNCTIONDataTable : global::System.Data.TypedTableBase<SALFUNCTIONRow> {
            
            private global::System.Data.DataColumn columnAUTO;
            
            private global::System.Data.DataColumn columnCALCTYPE;
            
            private global::System.Data.DataColumn columnITEM;
            
            private global::System.Data.DataColumn columnSCRIPT;
            
            private global::System.Data.DataColumn columnSORT;
            
            private global::System.Data.DataColumn columnCALC;
            
            private global::System.Data.DataColumn columnREF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALFUNCTIONDataTable() {
                this.TableName = "SALFUNCTION";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALFUNCTIONDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALFUNCTIONDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOColumn {
                get {
                    return this.columnAUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CALCTYPEColumn {
                get {
                    return this.columnCALCTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ITEMColumn {
                get {
                    return this.columnITEM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SCRIPTColumn {
                get {
                    return this.columnSCRIPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SORTColumn {
                get {
                    return this.columnSORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CALCColumn {
                get {
                    return this.columnCALC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REFColumn {
                get {
                    return this.columnREF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALFUNCTIONRow this[int index] {
                get {
                    return ((SALFUNCTIONRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALFUNCTIONRowChangeEventHandler SALFUNCTIONRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALFUNCTIONRowChangeEventHandler SALFUNCTIONRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALFUNCTIONRowChangeEventHandler SALFUNCTIONRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALFUNCTIONRowChangeEventHandler SALFUNCTIONRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALFUNCTIONRow(SALFUNCTIONRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALFUNCTIONRow AddSALFUNCTIONRow(string CALCTYPE, string ITEM, string SCRIPT, int SORT, bool CALC, bool REF) {
                SALFUNCTIONRow rowSALFUNCTIONRow = ((SALFUNCTIONRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        CALCTYPE,
                        ITEM,
                        SCRIPT,
                        SORT,
                        CALC,
                        REF};
                rowSALFUNCTIONRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALFUNCTIONRow);
                return rowSALFUNCTIONRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALFUNCTIONRow FindByAUTO(int AUTO) {
                return ((SALFUNCTIONRow)(this.Rows.Find(new object[] {
                            AUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALFUNCTIONDataTable cln = ((SALFUNCTIONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALFUNCTIONDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAUTO = base.Columns["AUTO"];
                this.columnCALCTYPE = base.Columns["CALCTYPE"];
                this.columnITEM = base.Columns["ITEM"];
                this.columnSCRIPT = base.Columns["SCRIPT"];
                this.columnSORT = base.Columns["SORT"];
                this.columnCALC = base.Columns["CALC"];
                this.columnREF = base.Columns["REF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAUTO = new global::System.Data.DataColumn("AUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO);
                this.columnCALCTYPE = new global::System.Data.DataColumn("CALCTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALCTYPE);
                this.columnITEM = new global::System.Data.DataColumn("ITEM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnITEM);
                this.columnSCRIPT = new global::System.Data.DataColumn("SCRIPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCRIPT);
                this.columnSORT = new global::System.Data.DataColumn("SORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT);
                this.columnCALC = new global::System.Data.DataColumn("CALC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALC);
                this.columnREF = new global::System.Data.DataColumn("REF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREF);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTO}, true));
                this.columnAUTO.AutoIncrement = true;
                this.columnAUTO.AutoIncrementSeed = -1;
                this.columnAUTO.AutoIncrementStep = -1;
                this.columnAUTO.AllowDBNull = false;
                this.columnAUTO.ReadOnly = true;
                this.columnAUTO.Unique = true;
                this.columnCALCTYPE.AllowDBNull = false;
                this.columnCALCTYPE.Caption = "計算類別";
                this.columnCALCTYPE.MaxLength = 50;
                this.columnITEM.AllowDBNull = false;
                this.columnITEM.Caption = "計算項目";
                this.columnITEM.MaxLength = 50;
                this.columnSCRIPT.AllowDBNull = false;
                this.columnSCRIPT.MaxLength = 2147483647;
                this.columnSORT.AllowDBNull = false;
                this.columnSORT.Caption = "排序";
                this.columnCALC.AllowDBNull = false;
                this.columnCALC.Caption = "使用";
                this.columnREF.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALFUNCTIONRow NewSALFUNCTIONRow() {
                return ((SALFUNCTIONRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALFUNCTIONRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALFUNCTIONRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALFUNCTIONRowChanged != null)) {
                    this.SALFUNCTIONRowChanged(this, new SALFUNCTIONRowChangeEvent(((SALFUNCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALFUNCTIONRowChanging != null)) {
                    this.SALFUNCTIONRowChanging(this, new SALFUNCTIONRowChangeEvent(((SALFUNCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALFUNCTIONRowDeleted != null)) {
                    this.SALFUNCTIONRowDeleted(this, new SALFUNCTIONRowChangeEvent(((SALFUNCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALFUNCTIONRowDeleting != null)) {
                    this.SALFUNCTIONRowDeleting(this, new SALFUNCTIONRowChangeEvent(((SALFUNCTIONRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALFUNCTIONRow(SALFUNCTIONRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALFUNCTIONDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALBASNDDataTable : global::System.Data.TypedTableBase<SALBASNDRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM_B;
            
            private global::System.Data.DataColumn columnYYMM_E;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnA_DATE;
            
            private global::System.Data.DataColumn columnA_TYPE;
            
            private global::System.Data.DataColumn columnA_PER;
            
            private global::System.Data.DataColumn columnF_AMT;
            
            private global::System.Data.DataColumn columnP_AMT;
            
            private global::System.Data.DataColumn columnT_AMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnMEMO;
            
            private global::System.Data.DataColumn columnDISPATCH;
            
            private global::System.Data.DataColumn columnDE_DEPT;
            
            private global::System.Data.DataColumn columnDE_MAN;
            
            private global::System.Data.DataColumn columnDE_TEL;
            
            private global::System.Data.DataColumn columnDE_ADD;
            
            private global::System.Data.DataColumn columnLAW_DEPT;
            
            private global::System.Data.DataColumn columnLAW_MAN;
            
            private global::System.Data.DataColumn columnLAW_TEL;
            
            private global::System.Data.DataColumn columnP_DATE;
            
            private global::System.Data.DataColumn columnF_DATE;
            
            private global::System.Data.DataColumn columnT_DATE;
            
            private global::System.Data.DataColumn columnC_DATE;
            
            private global::System.Data.DataColumn columnP_PER;
            
            private global::System.Data.DataColumn columnACNO;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnDEPT_NAME;
            
            private global::System.Data.DataColumn columnD_NO;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            private global::System.Data.DataColumn columnMIN_COST_LIVING;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASNDDataTable() {
                this.TableName = "SALBASND";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASNDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALBASNDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMM_BColumn {
                get {
                    return this.columnYYMM_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMM_EColumn {
                get {
                    return this.columnYYMM_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_DATEColumn {
                get {
                    return this.columnA_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_TYPEColumn {
                get {
                    return this.columnA_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn A_PERColumn {
                get {
                    return this.columnA_PER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn F_AMTColumn {
                get {
                    return this.columnF_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_AMTColumn {
                get {
                    return this.columnP_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn T_AMTColumn {
                get {
                    return this.columnT_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MEMOColumn {
                get {
                    return this.columnMEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DISPATCHColumn {
                get {
                    return this.columnDISPATCH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DE_DEPTColumn {
                get {
                    return this.columnDE_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DE_MANColumn {
                get {
                    return this.columnDE_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DE_TELColumn {
                get {
                    return this.columnDE_TEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DE_ADDColumn {
                get {
                    return this.columnDE_ADD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LAW_DEPTColumn {
                get {
                    return this.columnLAW_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LAW_MANColumn {
                get {
                    return this.columnLAW_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LAW_TELColumn {
                get {
                    return this.columnLAW_TEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_DATEColumn {
                get {
                    return this.columnP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn F_DATEColumn {
                get {
                    return this.columnF_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn T_DATEColumn {
                get {
                    return this.columnT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn C_DATEColumn {
                get {
                    return this.columnC_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn P_PERColumn {
                get {
                    return this.columnP_PER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACNOColumn {
                get {
                    return this.columnACNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_NAMEColumn {
                get {
                    return this.columnDEPT_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D_NOColumn {
                get {
                    return this.columnD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MIN_COST_LIVINGColumn {
                get {
                    return this.columnMIN_COST_LIVING;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASNDRow this[int index] {
                get {
                    return ((SALBASNDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASNDRowChangeEventHandler SALBASNDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASNDRowChangeEventHandler SALBASNDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASNDRowChangeEventHandler SALBASNDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALBASNDRowChangeEventHandler SALBASNDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALBASNDRow(SALBASNDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASNDRow AddSALBASNDRow(
                        string NOBR, 
                        string YYMM_B, 
                        string YYMM_E, 
                        string SAL_CODE, 
                        decimal SEQ, 
                        System.DateTime A_DATE, 
                        bool A_TYPE, 
                        decimal A_PER, 
                        decimal F_AMT, 
                        decimal P_AMT, 
                        decimal T_AMT, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string MEMO, 
                        string DISPATCH, 
                        string DE_DEPT, 
                        string DE_MAN, 
                        string DE_TEL, 
                        string DE_ADD, 
                        string LAW_DEPT, 
                        string LAW_MAN, 
                        string LAW_TEL, 
                        System.DateTime P_DATE, 
                        System.DateTime F_DATE, 
                        System.DateTime T_DATE, 
                        System.DateTime C_DATE, 
                        decimal P_PER, 
                        string ACNO, 
                        string NAME_C, 
                        string DEPT_NAME, 
                        string D_NO, 
                        string SAL_NAME, 
                        decimal MIN_COST_LIVING) {
                SALBASNDRow rowSALBASNDRow = ((SALBASNDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        YYMM_B,
                        YYMM_E,
                        SAL_CODE,
                        SEQ,
                        A_DATE,
                        A_TYPE,
                        A_PER,
                        F_AMT,
                        P_AMT,
                        T_AMT,
                        KEY_MAN,
                        KEY_DATE,
                        MEMO,
                        DISPATCH,
                        DE_DEPT,
                        DE_MAN,
                        DE_TEL,
                        DE_ADD,
                        LAW_DEPT,
                        LAW_MAN,
                        LAW_TEL,
                        P_DATE,
                        F_DATE,
                        T_DATE,
                        C_DATE,
                        P_PER,
                        ACNO,
                        NAME_C,
                        DEPT_NAME,
                        D_NO,
                        SAL_NAME,
                        MIN_COST_LIVING};
                rowSALBASNDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALBASNDRow);
                return rowSALBASNDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASNDRow FindByACNO(string ACNO) {
                return ((SALBASNDRow)(this.Rows.Find(new object[] {
                            ACNO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALBASNDDataTable cln = ((SALBASNDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALBASNDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM_B = base.Columns["YYMM_B"];
                this.columnYYMM_E = base.Columns["YYMM_E"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnA_DATE = base.Columns["A_DATE"];
                this.columnA_TYPE = base.Columns["A_TYPE"];
                this.columnA_PER = base.Columns["A_PER"];
                this.columnF_AMT = base.Columns["F_AMT"];
                this.columnP_AMT = base.Columns["P_AMT"];
                this.columnT_AMT = base.Columns["T_AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnMEMO = base.Columns["MEMO"];
                this.columnDISPATCH = base.Columns["DISPATCH"];
                this.columnDE_DEPT = base.Columns["DE_DEPT"];
                this.columnDE_MAN = base.Columns["DE_MAN"];
                this.columnDE_TEL = base.Columns["DE_TEL"];
                this.columnDE_ADD = base.Columns["DE_ADD"];
                this.columnLAW_DEPT = base.Columns["LAW_DEPT"];
                this.columnLAW_MAN = base.Columns["LAW_MAN"];
                this.columnLAW_TEL = base.Columns["LAW_TEL"];
                this.columnP_DATE = base.Columns["P_DATE"];
                this.columnF_DATE = base.Columns["F_DATE"];
                this.columnT_DATE = base.Columns["T_DATE"];
                this.columnC_DATE = base.Columns["C_DATE"];
                this.columnP_PER = base.Columns["P_PER"];
                this.columnACNO = base.Columns["ACNO"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnDEPT_NAME = base.Columns["DEPT_NAME"];
                this.columnD_NO = base.Columns["D_NO"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
                this.columnMIN_COST_LIVING = base.Columns["MIN_COST_LIVING"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM_B = new global::System.Data.DataColumn("YYMM_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM_B);
                this.columnYYMM_E = new global::System.Data.DataColumn("YYMM_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM_E);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnA_DATE = new global::System.Data.DataColumn("A_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_DATE);
                this.columnA_TYPE = new global::System.Data.DataColumn("A_TYPE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_TYPE);
                this.columnA_PER = new global::System.Data.DataColumn("A_PER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnA_PER);
                this.columnF_AMT = new global::System.Data.DataColumn("F_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_AMT);
                this.columnP_AMT = new global::System.Data.DataColumn("P_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_AMT);
                this.columnT_AMT = new global::System.Data.DataColumn("T_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT_AMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnMEMO = new global::System.Data.DataColumn("MEMO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMO);
                this.columnDISPATCH = new global::System.Data.DataColumn("DISPATCH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPATCH);
                this.columnDE_DEPT = new global::System.Data.DataColumn("DE_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_DEPT);
                this.columnDE_MAN = new global::System.Data.DataColumn("DE_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_MAN);
                this.columnDE_TEL = new global::System.Data.DataColumn("DE_TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_TEL);
                this.columnDE_ADD = new global::System.Data.DataColumn("DE_ADD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDE_ADD);
                this.columnLAW_DEPT = new global::System.Data.DataColumn("LAW_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAW_DEPT);
                this.columnLAW_MAN = new global::System.Data.DataColumn("LAW_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAW_MAN);
                this.columnLAW_TEL = new global::System.Data.DataColumn("LAW_TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLAW_TEL);
                this.columnP_DATE = new global::System.Data.DataColumn("P_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_DATE);
                this.columnF_DATE = new global::System.Data.DataColumn("F_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_DATE);
                this.columnT_DATE = new global::System.Data.DataColumn("T_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT_DATE);
                this.columnC_DATE = new global::System.Data.DataColumn("C_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnC_DATE);
                this.columnP_PER = new global::System.Data.DataColumn("P_PER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnP_PER);
                this.columnACNO = new global::System.Data.DataColumn("ACNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACNO);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnDEPT_NAME = new global::System.Data.DataColumn("DEPT_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_NAME);
                this.columnD_NO = new global::System.Data.DataColumn("D_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NO);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.columnMIN_COST_LIVING = new global::System.Data.DataColumn("MIN_COST_LIVING", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIN_COST_LIVING);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnACNO}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM_B.AllowDBNull = false;
                this.columnYYMM_B.Caption = "起扣年月";
                this.columnYYMM_B.MaxLength = 50;
                this.columnYYMM_E.AllowDBNull = false;
                this.columnYYMM_E.Caption = "截止年月";
                this.columnYYMM_E.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "期數";
                this.columnA_DATE.AllowDBNull = false;
                this.columnA_DATE.Caption = "異動日期";
                this.columnA_TYPE.AllowDBNull = false;
                this.columnA_TYPE.Caption = "法院強制扣款";
                this.columnA_PER.AllowDBNull = false;
                this.columnA_PER.Caption = "強制扣款比率";
                this.columnF_AMT.AllowDBNull = false;
                this.columnP_AMT.AllowDBNull = false;
                this.columnP_AMT.Caption = "分期款";
                this.columnT_AMT.AllowDBNull = false;
                this.columnT_AMT.Caption = "總金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnMEMO.AllowDBNull = false;
                this.columnMEMO.Caption = "備註";
                this.columnMEMO.MaxLength = 120;
                this.columnDISPATCH.AllowDBNull = false;
                this.columnDISPATCH.Caption = "發文字號";
                this.columnDISPATCH.MaxLength = 50;
                this.columnDE_DEPT.AllowDBNull = false;
                this.columnDE_DEPT.Caption = "債權單位";
                this.columnDE_DEPT.MaxLength = 200;
                this.columnDE_MAN.AllowDBNull = false;
                this.columnDE_MAN.Caption = "戶名";
                this.columnDE_MAN.MaxLength = 200;
                this.columnDE_TEL.AllowDBNull = false;
                this.columnDE_TEL.Caption = "債權電話";
                this.columnDE_TEL.MaxLength = 50;
                this.columnDE_ADD.AllowDBNull = false;
                this.columnDE_ADD.Caption = "債權地址";
                this.columnDE_ADD.MaxLength = 60;
                this.columnLAW_DEPT.AllowDBNull = false;
                this.columnLAW_DEPT.Caption = "法院承辦單位";
                this.columnLAW_DEPT.MaxLength = 50;
                this.columnLAW_MAN.AllowDBNull = false;
                this.columnLAW_MAN.Caption = "法院承辦人";
                this.columnLAW_MAN.MaxLength = 50;
                this.columnLAW_TEL.AllowDBNull = false;
                this.columnLAW_TEL.Caption = "法院聯絡電話";
                this.columnLAW_TEL.MaxLength = 50;
                this.columnP_DATE.AllowDBNull = false;
                this.columnP_DATE.Caption = "發文日期";
                this.columnF_DATE.AllowDBNull = false;
                this.columnF_DATE.Caption = "收文日期";
                this.columnT_DATE.AllowDBNull = false;
                this.columnT_DATE.Caption = "聲明日期";
                this.columnC_DATE.AllowDBNull = false;
                this.columnC_DATE.Caption = "結案日期";
                this.columnP_PER.AllowDBNull = false;
                this.columnP_PER.Caption = "併案百分比";
                this.columnACNO.AllowDBNull = false;
                this.columnACNO.Unique = true;
                this.columnACNO.Caption = "編號";
                this.columnACNO.MaxLength = 50;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnDEPT_NAME.ReadOnly = true;
                this.columnDEPT_NAME.Caption = "部門名稱";
                this.columnDEPT_NAME.MaxLength = 50;
                this.columnD_NO.AllowDBNull = false;
                this.columnD_NO.Caption = "部門編號";
                this.columnD_NO.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.Caption = "薪資名稱";
                this.columnSAL_NAME.MaxLength = 50;
                this.columnMIN_COST_LIVING.AllowDBNull = false;
                this.columnMIN_COST_LIVING.Caption = "最低生活費";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASNDRow NewSALBASNDRow() {
                return ((SALBASNDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALBASNDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALBASNDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALBASNDRowChanged != null)) {
                    this.SALBASNDRowChanged(this, new SALBASNDRowChangeEvent(((SALBASNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALBASNDRowChanging != null)) {
                    this.SALBASNDRowChanging(this, new SALBASNDRowChangeEvent(((SALBASNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALBASNDRowDeleted != null)) {
                    this.SALBASNDRowDeleted(this, new SALBASNDRowChangeEvent(((SALBASNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALBASNDRowDeleting != null)) {
                    this.SALBASNDRowDeleting(this, new SALBASNDRowChangeEvent(((SALBASNDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALBASNDRow(SALBASNDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALBASNDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALENRICHDataTable : global::System.Data.TypedTableBase<SALENRICHRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnMEMO;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnIMPORT;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            private global::System.Data.DataColumn columnAUTOKEY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALENRICHDataTable() {
                this.TableName = "SALENRICH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALENRICHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALENRICHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MEMOColumn {
                get {
                    return this.columnMEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IMPORTColumn {
                get {
                    return this.columnIMPORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOKEYColumn {
                get {
                    return this.columnAUTOKEY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALENRICHRow this[int index] {
                get {
                    return ((SALENRICHRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALENRICHRowChangeEventHandler SALENRICHRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALENRICHRowChangeEventHandler SALENRICHRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALENRICHRowChangeEventHandler SALENRICHRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALENRICHRowChangeEventHandler SALENRICHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALENRICHRow(SALENRICHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALENRICHRow AddSALENRICHRow(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, string MEMO, string FA_IDNO, bool IMPORT, string NAME_C, string SAL_NAME, int AUTOKEY) {
                SALENRICHRow rowSALENRICHRow = ((SALENRICHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        YYMM,
                        SEQ,
                        SAL_CODE,
                        AMT,
                        KEY_MAN,
                        KEY_DATE,
                        MEMO,
                        FA_IDNO,
                        IMPORT,
                        NAME_C,
                        SAL_NAME,
                        AUTOKEY};
                rowSALENRICHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALENRICHRow);
                return rowSALENRICHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALENRICHRow FindByAUTOKEY(int AUTOKEY) {
                return ((SALENRICHRow)(this.Rows.Find(new object[] {
                            AUTOKEY})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALENRICHDataTable cln = ((SALENRICHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALENRICHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnAMT = base.Columns["AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnMEMO = base.Columns["MEMO"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnIMPORT = base.Columns["IMPORT"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
                this.columnAUTOKEY = base.Columns["AUTOKEY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnMEMO = new global::System.Data.DataColumn("MEMO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMEMO);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnIMPORT = new global::System.Data.DataColumn("IMPORT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIMPORT);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.columnAUTOKEY = new global::System.Data.DataColumn("AUTOKEY", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOKEY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTOKEY}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "工號";
                this.columnNOBR.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "計薪年月";
                this.columnYYMM.MaxLength = 50;
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.Caption = "期數";
                this.columnSEQ.MaxLength = 50;
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Caption = "薪資代碼";
                this.columnSAL_CODE.MaxLength = 50;
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnMEMO.AllowDBNull = false;
                this.columnMEMO.Caption = "備註";
                this.columnMEMO.MaxLength = 120;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnIMPORT.AllowDBNull = false;
                this.columnIMPORT.Caption = "匯入";
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.Caption = "薪資名稱";
                this.columnSAL_NAME.MaxLength = 50;
                this.columnAUTOKEY.AllowDBNull = false;
                this.columnAUTOKEY.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALENRICHRow NewSALENRICHRow() {
                return ((SALENRICHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALENRICHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALENRICHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALENRICHRowChanged != null)) {
                    this.SALENRICHRowChanged(this, new SALENRICHRowChangeEvent(((SALENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALENRICHRowChanging != null)) {
                    this.SALENRICHRowChanging(this, new SALENRICHRowChangeEvent(((SALENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALENRICHRowDeleted != null)) {
                    this.SALENRICHRowDeleted(this, new SALENRICHRowChangeEvent(((SALENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALENRICHRowDeleting != null)) {
                    this.SALENRICHRowDeleting(this, new SALENRICHRowChangeEvent(((SALENRICHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALENRICHRow(SALENRICHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                SalaryDS ds = new SalaryDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALENRICHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ACCCDRow : global::System.Data.DataRow {
            
            private ACCCDDataTable tableACCCD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ACCCDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableACCCD = ((ACCCDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCCD {
                get {
                    return ((string)(this[this.tableACCCD.ACCCDColumn]));
                }
                set {
                    this[this.tableACCCD.ACCCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCNAME {
                get {
                    return ((string)(this[this.tableACCCD.ACCNAMEColumn]));
                }
                set {
                    this[this.tableACCCD.ACCNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableACCCD.KEY_MANColumn]));
                }
                set {
                    this[this.tableACCCD.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableACCCD.KEY_DATEColumn]));
                }
                set {
                    this[this.tableACCCD.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACC_TR {
                get {
                    return ((string)(this[this.tableACCCD.ACC_TRColumn]));
                }
                set {
                    this[this.tableACCCD.ACC_TRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCCR {
                get {
                    return ((string)(this[this.tableACCCD.ACCCRColumn]));
                }
                set {
                    this[this.tableACCCD.ACCCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCDR {
                get {
                    return ((string)(this[this.tableACCCD.ACCDRColumn]));
                }
                set {
                    this[this.tableACCCD.ACCDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACC_TRNAME {
                get {
                    return ((string)(this[this.tableACCCD.ACC_TRNAMEColumn]));
                }
                set {
                    this[this.tableACCCD.ACC_TRNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCNAME_E {
                get {
                    return ((string)(this[this.tableACCCD.ACCNAME_EColumn]));
                }
                set {
                    this[this.tableACCCD.ACCNAME_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCCD_DISP {
                get {
                    try {
                        return ((string)(this[this.tableACCCD.ACCCD_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ACCCD\' 中資料行 \'ACCCD_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableACCCD.ACCCD_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsACCCD_DISPNull() {
                return this.IsNull(this.tableACCCD.ACCCD_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetACCCD_DISPNull() {
                this[this.tableACCCD.ACCCD_DISPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALTYCDRow : global::System.Data.DataRow {
            
            private SALTYCDDataTable tableSALTYCD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALTYCDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALTYCD = ((SALTYCDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALTYCD {
                get {
                    return ((string)(this[this.tableSALTYCD.SALTYCDColumn]));
                }
                set {
                    this[this.tableSALTYCD.SALTYCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALTYNAME {
                get {
                    return ((string)(this[this.tableSALTYCD.SALTYNAMEColumn]));
                }
                set {
                    this[this.tableSALTYCD.SALTYNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PARA1 {
                get {
                    return ((string)(this[this.tableSALTYCD.PARA1Column]));
                }
                set {
                    this[this.tableSALTYCD.PARA1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DEFINE1 {
                get {
                    return ((decimal)(this[this.tableSALTYCD.DEFINE1Column]));
                }
                set {
                    this[this.tableSALTYCD.DEFINE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PARA2 {
                get {
                    return ((string)(this[this.tableSALTYCD.PARA2Column]));
                }
                set {
                    this[this.tableSALTYCD.PARA2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DEFINE2 {
                get {
                    return ((decimal)(this[this.tableSALTYCD.DEFINE2Column]));
                }
                set {
                    this[this.tableSALTYCD.DEFINE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PARA3 {
                get {
                    return ((string)(this[this.tableSALTYCD.PARA3Column]));
                }
                set {
                    this[this.tableSALTYCD.PARA3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DEFINE3 {
                get {
                    return ((decimal)(this[this.tableSALTYCD.DEFINE3Column]));
                }
                set {
                    this[this.tableSALTYCD.DEFINE3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALTYCD.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALTYCD.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALTYCD.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALTYCD.KEY_MANColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALATTRRow : global::System.Data.DataRow {
            
            private SALATTRDataTable tableSALATTR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALATTRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALATTR = ((SALATTRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALATTR {
                get {
                    return ((string)(this[this.tableSALATTR.SALATTRColumn]));
                }
                set {
                    this[this.tableSALATTR.SALATTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ATTR_NAME {
                get {
                    return ((string)(this[this.tableSALATTR.ATTR_NAMEColumn]));
                }
                set {
                    this[this.tableSALATTR.ATTR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOT_DISP {
                get {
                    return ((bool)(this[this.tableSALATTR.NOT_DISPColumn]));
                }
                set {
                    this[this.tableSALATTR.NOT_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool BASIC {
                get {
                    return ((bool)(this[this.tableSALATTR.BASICColumn]));
                }
                set {
                    this[this.tableSALATTR.BASICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TYPE {
                get {
                    return ((string)(this[this.tableSALATTR.TYPEColumn]));
                }
                set {
                    this[this.tableSALATTR.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FLAG {
                get {
                    return ((string)(this[this.tableSALATTR.FLAGColumn]));
                }
                set {
                    this[this.tableSALATTR.FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool TAX {
                get {
                    return ((bool)(this[this.tableSALATTR.TAXColumn]));
                }
                set {
                    this[this.tableSALATTR.TAXColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALCODERow : global::System.Data.DataRow {
            
            private SALCODEDataTable tableSALCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALCODERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALCODE = ((SALCODEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALCODE.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALCODE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALCODE.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALCODE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_ATTR {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_ATTRColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_ATTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SOS_ID {
                get {
                    return ((string)(this[this.tableSALCODE.SOS_IDColumn]));
                }
                set {
                    this[this.tableSALCODE.SOS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool WEL {
                get {
                    return ((bool)(this[this.tableSALCODE.WELColumn]));
                }
                set {
                    this[this.tableSALCODE.WELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OT {
                get {
                    return ((bool)(this[this.tableSALCODE.OTColumn]));
                }
                set {
                    this[this.tableSALCODE.OTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MAX_AMT {
                get {
                    return ((decimal)(this[this.tableSALCODE.MAX_AMTColumn]));
                }
                set {
                    this[this.tableSALCODE.MAX_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MIN_AMT {
                get {
                    return ((decimal)(this[this.tableSALCODE.MIN_AMTColumn]));
                }
                set {
                    this[this.tableSALCODE.MIN_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CAL_FREQ {
                get {
                    return ((string)(this[this.tableSALCODE.CAL_FREQColumn]));
                }
                set {
                    this[this.tableSALCODE.CAL_FREQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CAL_TYPE {
                get {
                    return ((string)(this[this.tableSALCODE.CAL_TYPEColumn]));
                }
                set {
                    this[this.tableSALCODE.CAL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HRS {
                get {
                    return ((decimal)(this[this.tableSALCODE.HRSColumn]));
                }
                set {
                    this[this.tableSALCODE.HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MONTHTYPE {
                get {
                    return ((string)(this[this.tableSALCODE.MONTHTYPEColumn]));
                }
                set {
                    this[this.tableSALCODE.MONTHTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DEFINEDAYS {
                get {
                    return ((decimal)(this[this.tableSALCODE.DEFINEDAYSColumn]));
                }
                set {
                    this[this.tableSALCODE.DEFINEDAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ADVPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.ADVPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.ADVPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCCD {
                get {
                    return ((string)(this[this.tableSALCODE.ACCCDColumn]));
                }
                set {
                    this[this.tableSALCODE.ACCCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ATT {
                get {
                    return ((bool)(this[this.tableSALCODE.ATTColumn]));
                }
                set {
                    this[this.tableSALCODE.ATTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool DAILY {
                get {
                    return ((bool)(this[this.tableSALCODE.DAILYColumn]));
                }
                set {
                    this[this.tableSALCODE.DAILYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RETIRE {
                get {
                    return ((bool)(this[this.tableSALCODE.RETIREColumn]));
                }
                set {
                    this[this.tableSALCODE.RETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FORBANK {
                get {
                    return ((bool)(this[this.tableSALCODE.FORBANKColumn]));
                }
                set {
                    this[this.tableSALCODE.FORBANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FORCASH {
                get {
                    return ((bool)(this[this.tableSALCODE.FORCASHColumn]));
                }
                set {
                    this[this.tableSALCODE.FORCASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTFREQ {
                get {
                    return ((bool)(this[this.tableSALCODE.NOTFREQColumn]));
                }
                set {
                    this[this.tableSALCODE.NOTFREQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TAXRATE {
                get {
                    return ((decimal)(this[this.tableSALCODE.TAXRATEColumn]));
                }
                set {
                    this[this.tableSALCODE.TAXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool YEARPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.YEARPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.YEARPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABSPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.ABSPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.ABSPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool INSLAB {
                get {
                    return ((bool)(this[this.tableSALCODE.INSLABColumn]));
                }
                set {
                    this[this.tableSALCODE.INSLABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LATER {
                get {
                    return ((bool)(this[this.tableSALCODE.LATERColumn]));
                }
                set {
                    this[this.tableSALCODE.LATERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_ENAME {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_ENAMEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OLDRETIRE {
                get {
                    return ((bool)(this[this.tableSALCODE.OLDRETIREColumn]));
                }
                set {
                    this[this.tableSALCODE.OLDRETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SALBASD1 {
                get {
                    return ((bool)(this[this.tableSALCODE.SALBASD1Column]));
                }
                set {
                    this[this.tableSALCODE.SALBASD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE_DISP {
                get {
                    try {
                        return ((string)(this[this.tableSALCODE.SAL_CODE_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALCODE\' 中資料行 \'SAL_CODE_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALCODE.SAL_CODE_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SUP {
                get {
                    return ((bool)(this[this.tableSALCODE.SUPColumn]));
                }
                set {
                    this[this.tableSALCODE.SUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME_VN {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_NAME_VNColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_NAME_VNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALCODE_GROUP {
                get {
                    try {
                        return ((string)(this[this.tableSALCODE.SALCODE_GROUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALCODE\' 中資料行 \'SALCODE_GROUP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALCODE.SALCODE_GROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALBASE {
                get {
                    try {
                        return ((string)(this[this.tableSALCODE.SALBASEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALCODE\' 中資料行 \'SALBASE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALCODE.SALBASEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTFREQSEQ {
                get {
                    return ((bool)(this[this.tableSALCODE.NOTFREQSEQColumn]));
                }
                set {
                    this[this.tableSALCODE.NOTFREQSEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SORT {
                get {
                    try {
                        return ((int)(this[this.tableSALCODE.SORTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALCODE\' 中資料行 \'SORT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALCODE.SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALSEQ {
                get {
                    return ((string)(this[this.tableSALCODE.SALSEQColumn]));
                }
                set {
                    this[this.tableSALCODE.SALSEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ImportSEQ2 {
                get {
                    return ((bool)(this[this.tableSALCODE.ImportSEQ2Column]));
                }
                set {
                    this[this.tableSALCODE.ImportSEQ2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAL_CODE_DISPNull() {
                return this.IsNull(this.tableSALCODE.SAL_CODE_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAL_CODE_DISPNull() {
                this[this.tableSALCODE.SAL_CODE_DISPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSALCODE_GROUPNull() {
                return this.IsNull(this.tableSALCODE.SALCODE_GROUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSALCODE_GROUPNull() {
                this[this.tableSALCODE.SALCODE_GROUPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSALBASENull() {
                return this.IsNull(this.tableSALCODE.SALBASEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSALBASENull() {
                this[this.tableSALCODE.SALBASEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSORTNull() {
                return this.IsNull(this.tableSALCODE.SORTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSORTNull() {
                this[this.tableSALCODE.SORTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALADRRow : global::System.Data.DataRow {
            
            private SALADRDataTable tableSALADR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALADRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALADR = ((SALADRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALADR {
                get {
                    return ((string)(this[this.tableSALADR.SALADRColumn]));
                }
                set {
                    this[this.tableSALADR.SALADRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALNAME {
                get {
                    return ((string)(this[this.tableSALADR.SALNAMEColumn]));
                }
                set {
                    this[this.tableSALADR.SALNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALADR.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALADR.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALADR.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALADR.KEY_MANColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WAGERow : global::System.Data.DataRow {
            
            private WAGEDataTable tableWAGE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WAGERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWAGE = ((WAGEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableWAGE.YYMMColumn]));
                }
                set {
                    this[this.tableWAGE.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableWAGE.SEQColumn]));
                }
                set {
                    this[this.tableWAGE.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableWAGE.NOBRColumn]));
                }
                set {
                    this[this.tableWAGE.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableWAGE.ADATEColumn]));
                }
                set {
                    this[this.tableWAGE.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BANKNO {
                get {
                    return ((string)(this[this.tableWAGE.BANKNOColumn]));
                }
                set {
                    this[this.tableWAGE.BANKNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCOUNT_NO {
                get {
                    return ((string)(this[this.tableWAGE.ACCOUNT_NOColumn]));
                }
                set {
                    this[this.tableWAGE.ACCOUNT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WK_DAYS {
                get {
                    return ((decimal)(this[this.tableWAGE.WK_DAYSColumn]));
                }
                set {
                    this[this.tableWAGE.WK_DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CASH {
                get {
                    return ((bool)(this[this.tableWAGE.CASHColumn]));
                }
                set {
                    this[this.tableWAGE.CASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE {
                get {
                    return ((string)(this[this.tableWAGE.NOTEColumn]));
                }
                set {
                    this[this.tableWAGE.NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableWAGE.KEY_MANColumn]));
                }
                set {
                    this[this.tableWAGE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableWAGE.KEY_DATEColumn]));
                }
                set {
                    this[this.tableWAGE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_B {
                get {
                    return ((global::System.DateTime)(this[this.tableWAGE.DATE_BColumn]));
                }
                set {
                    this[this.tableWAGE.DATE_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DATE_E {
                get {
                    return ((global::System.DateTime)(this[this.tableWAGE.DATE_EColumn]));
                }
                set {
                    this[this.tableWAGE.DATE_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FORMAT {
                get {
                    return ((string)(this[this.tableWAGE.FORMATColumn]));
                }
                set {
                    this[this.tableWAGE.FORMATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TAXRATE {
                get {
                    return ((decimal)(this[this.tableWAGE.TAXRATEColumn]));
                }
                set {
                    this[this.tableWAGE.TAXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALADR {
                get {
                    return ((string)(this[this.tableWAGE.SALADRColumn]));
                }
                set {
                    this[this.tableWAGE.SALADRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMP {
                get {
                    return ((string)(this[this.tableWAGE.COMPColumn]));
                }
                set {
                    this[this.tableWAGE.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ATT_DATEB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWAGE.ATT_DATEBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'WAGE\' 中資料行 \'ATT_DATEB\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableWAGE.ATT_DATEBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ATT_DATEE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableWAGE.ATT_DATEEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'WAGE\' 中資料行 \'ATT_DATEE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableWAGE.ATT_DATEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsATT_DATEBNull() {
                return this.IsNull(this.tableWAGE.ATT_DATEBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetATT_DATEBNull() {
                this[this.tableWAGE.ATT_DATEBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsATT_DATEENull() {
                return this.IsNull(this.tableWAGE.ATT_DATEEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetATT_DATEENull() {
                this[this.tableWAGE.ATT_DATEEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WAGEDRow : global::System.Data.DataRow {
            
            private WAGEDDataTable tableWAGED;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WAGEDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWAGED = ((WAGEDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableWAGED.NOBRColumn]));
                }
                set {
                    this[this.tableWAGED.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableWAGED.YYMMColumn]));
                }
                set {
                    this[this.tableWAGED.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableWAGED.SEQColumn]));
                }
                set {
                    this[this.tableWAGED.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableWAGED.SAL_CODEColumn]));
                }
                set {
                    this[this.tableWAGED.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableWAGED.AMTColumn]));
                }
                set {
                    this[this.tableWAGED.AMTColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALBASDRow : global::System.Data.DataRow {
            
            private SALBASDDataTable tableSALBASD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALBASD = ((SALBASDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASD.ADATEColumn]));
                }
                set {
                    this[this.tableSALBASD.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableSALBASD.NOBRColumn]));
                }
                set {
                    this[this.tableSALBASD.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALBASD.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALBASD.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableSALBASD.AMTColumn]));
                }
                set {
                    this[this.tableSALBASD.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALBASD.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALBASD.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASD.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALBASD.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMTB {
                get {
                    return ((decimal)(this[this.tableSALBASD.AMTBColumn]));
                }
                set {
                    this[this.tableSALBASD.AMTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MENO {
                get {
                    return ((string)(this[this.tableSALBASD.MENOColumn]));
                }
                set {
                    this[this.tableSALBASD.MENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASD.DDATEColumn]));
                }
                set {
                    this[this.tableSALBASD.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableSALBASD.NAME_CColumn]));
                }
                set {
                    this[this.tableSALBASD.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableSALBASD.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableSALBASD.SAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE_DISP {
                get {
                    try {
                        return ((string)(this[this.tableSALBASD.SAL_CODE_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALBASD\' 中資料行 \'SAL_CODE_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALBASD.SAL_CODE_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAL_CODE_DISPNull() {
                return this.IsNull(this.tableSALBASD.SAL_CODE_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAL_CODE_DISPNull() {
                this[this.tableSALBASD.SAL_CODE_DISPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALBASTDRow : global::System.Data.DataRow {
            
            private SALBASTDDataTable tableSALBASTD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASTDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALBASTD = ((SALBASTDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASTD.ADATEColumn]));
                }
                set {
                    this[this.tableSALBASTD.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableSALBASTD.NOBRColumn]));
                }
                set {
                    this[this.tableSALBASTD.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALBASTD.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALBASTD.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableSALBASTD.AMTColumn]));
                }
                set {
                    this[this.tableSALBASTD.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALBASTD.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALBASTD.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASTD.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALBASTD.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMTB {
                get {
                    return ((decimal)(this[this.tableSALBASTD.AMTBColumn]));
                }
                set {
                    this[this.tableSALBASTD.AMTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MENO {
                get {
                    return ((string)(this[this.tableSALBASTD.MENOColumn]));
                }
                set {
                    this[this.tableSALBASTD.MENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASTD.DDATEColumn]));
                }
                set {
                    this[this.tableSALBASTD.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableSALBASTD.NAME_CColumn]));
                }
                set {
                    this[this.tableSALBASTD.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableSALBASTD.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableSALBASTD.SAL_NAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TAXLVLRow : global::System.Data.DataRow {
            
            private TAXLVLDataTable tableTAXLVL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal TAXLVLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTAXLVL = ((TAXLVLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YEAR {
                get {
                    return ((string)(this[this.tableTAXLVL.YEARColumn]));
                }
                set {
                    this[this.tableTAXLVL.YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT_H {
                get {
                    return ((decimal)(this[this.tableTAXLVL.AMT_HColumn]));
                }
                set {
                    this[this.tableTAXLVL.AMT_HColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT_L {
                get {
                    return ((decimal)(this[this.tableTAXLVL.AMT_LColumn]));
                }
                set {
                    this[this.tableTAXLVL.AMT_LColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER0 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER0Column]));
                }
                set {
                    this[this.tableTAXLVL.PER0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER1 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER1Column]));
                }
                set {
                    this[this.tableTAXLVL.PER1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER2 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER2Column]));
                }
                set {
                    this[this.tableTAXLVL.PER2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER3 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER3Column]));
                }
                set {
                    this[this.tableTAXLVL.PER3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER4 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER4Column]));
                }
                set {
                    this[this.tableTAXLVL.PER4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER5 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER5Column]));
                }
                set {
                    this[this.tableTAXLVL.PER5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER6 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER6Column]));
                }
                set {
                    this[this.tableTAXLVL.PER6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER7 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER7Column]));
                }
                set {
                    this[this.tableTAXLVL.PER7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER8 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER8Column]));
                }
                set {
                    this[this.tableTAXLVL.PER8Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER9 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER9Column]));
                }
                set {
                    this[this.tableTAXLVL.PER9Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER10 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER10Column]));
                }
                set {
                    this[this.tableTAXLVL.PER10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PER11 {
                get {
                    return ((decimal)(this[this.tableTAXLVL.PER11Column]));
                }
                set {
                    this[this.tableTAXLVL.PER11Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableTAXLVL.KEY_MANColumn]));
                }
                set {
                    this[this.tableTAXLVL.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTAXLVL.KEY_DATEColumn]));
                }
                set {
                    this[this.tableTAXLVL.KEY_DATEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MA_FOODRow : global::System.Data.DataRow {
            
            private MA_FOODDataTable tableMA_FOOD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal MA_FOODRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMA_FOOD = ((MA_FOODDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMP {
                get {
                    return ((string)(this[this.tableMA_FOOD.COMPColumn]));
                }
                set {
                    this[this.tableMA_FOOD.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROTE {
                get {
                    return ((string)(this[this.tableMA_FOOD.ROTEColumn]));
                }
                set {
                    this[this.tableMA_FOOD.ROTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOT_ROTE {
                get {
                    return ((bool)(this[this.tableMA_FOOD.NOT_ROTEColumn]));
                }
                set {
                    this[this.tableMA_FOOD.NOT_ROTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MA_AMT {
                get {
                    return ((decimal)(this[this.tableMA_FOOD.MA_AMTColumn]));
                }
                set {
                    this[this.tableMA_FOOD.MA_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableMA_FOOD.KEY_MANColumn]));
                }
                set {
                    this[this.tableMA_FOOD.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableMA_FOOD.KEY_DATEColumn]));
                }
                set {
                    this[this.tableMA_FOOD.KEY_DATEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WAGEDDRow : global::System.Data.DataRow {
            
            private WAGEDDDataTable tableWAGEDD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal WAGEDDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWAGEDD = ((WAGEDDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableWAGEDD.NOBRColumn]));
                }
                set {
                    this[this.tableWAGEDD.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableWAGEDD.YYMMColumn]));
                }
                set {
                    this[this.tableWAGEDD.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableWAGEDD.SEQColumn]));
                }
                set {
                    this[this.tableWAGEDD.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableWAGEDD.SAL_CODEColumn]));
                }
                set {
                    this[this.tableWAGEDD.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableWAGEDD.AMTColumn]));
                }
                set {
                    this[this.tableWAGEDD.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACNO {
                get {
                    return ((string)(this[this.tableWAGEDD.ACNOColumn]));
                }
                set {
                    this[this.tableWAGEDD.ACNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableWAGEDD.KEY_MANColumn]));
                }
                set {
                    this[this.tableWAGEDD.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableWAGEDD.KEY_DATEColumn]));
                }
                set {
                    this[this.tableWAGEDD.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableWAGEDD.NAME_CColumn]));
                }
                set {
                    this[this.tableWAGEDD.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableWAGEDD.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableWAGEDD.SAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D_NAME {
                get {
                    return ((string)(this[this.tableWAGEDD.D_NAMEColumn]));
                }
                set {
                    this[this.tableWAGEDD.D_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D_NO {
                get {
                    return ((string)(this[this.tableWAGEDD.D_NOColumn]));
                }
                set {
                    this[this.tableWAGEDD.D_NOColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALABSRow : global::System.Data.DataRow {
            
            private SALABSDataTable tableSALABS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALABSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALABS = ((SALABSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALSEQ {
                get {
                    return ((string)(this[this.tableSALABS.SALSEQColumn]));
                }
                set {
                    this[this.tableSALABS.SALSEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALABS.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALABS.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableSALABS.AMTColumn]));
                }
                set {
                    this[this.tableSALABS.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ADJ_CODE {
                get {
                    return ((string)(this[this.tableSALABS.ADJ_CODEColumn]));
                }
                set {
                    this[this.tableSALABS.ADJ_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MLSSALCODE {
                get {
                    return ((string)(this[this.tableSALABS.MLSSALCODEColumn]));
                }
                set {
                    this[this.tableSALABS.MLSSALCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALABS.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALABS.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALABS.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALABS.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string H_CODE {
                get {
                    return ((string)(this[this.tableSALABS.H_CODEColumn]));
                }
                set {
                    this[this.tableSALABS.H_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableSALABS.NOBRColumn]));
                }
                set {
                    this[this.tableSALABS.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableSALABS.YYMMColumn]));
                }
                set {
                    this[this.tableSALABS.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALABS.ADATEColumn]));
                }
                set {
                    this[this.tableSALABS.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BTIME {
                get {
                    return ((string)(this[this.tableSALABS.BTIMEColumn]));
                }
                set {
                    this[this.tableSALABS.BTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string H_NAME {
                get {
                    return ((string)(this[this.tableSALABS.H_NAMEColumn]));
                }
                set {
                    this[this.tableSALABS.H_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableSALABS.NAME_CColumn]));
                }
                set {
                    this[this.tableSALABS.NAME_CColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OTRow : global::System.Data.DataRow {
            
            private OTDataTable tableOT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal OTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOT = ((OTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableOT.NOBRColumn]));
                }
                set {
                    this[this.tableOT.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime BDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableOT.BDATEColumn]));
                }
                set {
                    this[this.tableOT.BDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BTIME {
                get {
                    return ((string)(this[this.tableOT.BTIMEColumn]));
                }
                set {
                    this[this.tableOT.BTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ETIME {
                get {
                    return ((string)(this[this.tableOT.ETIMEColumn]));
                }
                set {
                    this[this.tableOT.ETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_HOURS {
                get {
                    return ((decimal)(this[this.tableOT.TOT_HOURSColumn]));
                }
                set {
                    this[this.tableOT.TOT_HOURSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_HRS {
                get {
                    return ((decimal)(this[this.tableOT.OT_HRSColumn]));
                }
                set {
                    this[this.tableOT.OT_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal REST_HRS {
                get {
                    return ((decimal)(this[this.tableOT.REST_HRSColumn]));
                }
                set {
                    this[this.tableOT.REST_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_CAR {
                get {
                    return ((decimal)(this[this.tableOT.OT_CARColumn]));
                }
                set {
                    this[this.tableOT.OT_CARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OT_DEPT {
                get {
                    return ((string)(this[this.tableOT.OT_DEPTColumn]));
                }
                set {
                    this[this.tableOT.OT_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableOT.KEY_MANColumn]));
                }
                set {
                    this[this.tableOT.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableOT.KEY_DATEColumn]));
                }
                set {
                    this[this.tableOT.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOOD {
                get {
                    return ((decimal)(this[this.tableOT.OT_FOODColumn]));
                }
                set {
                    this[this.tableOT.OT_FOODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE {
                get {
                    return ((string)(this[this.tableOT.NOTEColumn]));
                }
                set {
                    this[this.tableOT.NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableOT.YYMMColumn]));
                }
                set {
                    this[this.tableOT.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SER {
                get {
                    return ((string)(this[this.tableOT.SERColumn]));
                }
                set {
                    this[this.tableOT.SERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_W_133 {
                get {
                    return ((decimal)(this[this.tableOT.NOT_W_133Column]));
                }
                set {
                    this[this.tableOT.NOT_W_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_W_167 {
                get {
                    return ((decimal)(this[this.tableOT.NOT_W_167Column]));
                }
                set {
                    this[this.tableOT.NOT_W_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_W_200 {
                get {
                    return ((decimal)(this[this.tableOT.NOT_W_200Column]));
                }
                set {
                    this[this.tableOT.NOT_W_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_H_200 {
                get {
                    return ((decimal)(this[this.tableOT.NOT_H_200Column]));
                }
                set {
                    this[this.tableOT.NOT_H_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_W_133 {
                get {
                    return ((decimal)(this[this.tableOT.TOT_W_133Column]));
                }
                set {
                    this[this.tableOT.TOT_W_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_W_167 {
                get {
                    return ((decimal)(this[this.tableOT.TOT_W_167Column]));
                }
                set {
                    this[this.tableOT.TOT_W_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_W_200 {
                get {
                    return ((decimal)(this[this.tableOT.TOT_W_200Column]));
                }
                set {
                    this[this.tableOT.TOT_W_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_H_200 {
                get {
                    return ((decimal)(this[this.tableOT.TOT_H_200Column]));
                }
                set {
                    this[this.tableOT.TOT_H_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_EXP {
                get {
                    return ((decimal)(this[this.tableOT.NOT_EXPColumn]));
                }
                set {
                    this[this.tableOT.NOT_EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_EXP {
                get {
                    return ((decimal)(this[this.tableOT.TOT_EXPColumn]));
                }
                set {
                    this[this.tableOT.TOT_EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal REST_EXP {
                get {
                    return ((decimal)(this[this.tableOT.REST_EXPColumn]));
                }
                set {
                    this[this.tableOT.REST_EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FST_HOURS {
                get {
                    return ((decimal)(this[this.tableOT.FST_HOURSColumn]));
                }
                set {
                    this[this.tableOT.FST_HOURSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SALARY {
                get {
                    return ((decimal)(this[this.tableOT.SALARYColumn]));
                }
                set {
                    this[this.tableOT.SALARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTMODI {
                get {
                    return ((bool)(this[this.tableOT.NOTMODIColumn]));
                }
                set {
                    this[this.tableOT.NOTMODIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OTRCD {
                get {
                    return ((string)(this[this.tableOT.OTRCDColumn]));
                }
                set {
                    this[this.tableOT.OTRCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOFOOD {
                get {
                    return ((bool)(this[this.tableOT.NOFOODColumn]));
                }
                set {
                    this[this.tableOT.NOFOODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FIX_AMT {
                get {
                    return ((bool)(this[this.tableOT.FIX_AMTColumn]));
                }
                set {
                    this[this.tableOT.FIX_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CANT_ADJ {
                get {
                    return ((bool)(this[this.tableOT.CANT_ADJColumn]));
                }
                set {
                    this[this.tableOT.CANT_ADJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime OT_EDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableOT.OT_EDATEColumn]));
                }
                set {
                    this[this.tableOT.OT_EDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OT_ROTE {
                get {
                    return ((string)(this[this.tableOT.OT_ROTEColumn]));
                }
                set {
                    this[this.tableOT.OT_ROTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOOD1 {
                get {
                    return ((decimal)(this[this.tableOT.OT_FOOD1Column]));
                }
                set {
                    this[this.tableOT.OT_FOOD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOODH {
                get {
                    return ((decimal)(this[this.tableOT.OT_FOODHColumn]));
                }
                set {
                    this[this.tableOT.OT_FOODHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOODH1 {
                get {
                    return ((decimal)(this[this.tableOT.OT_FOODH1Column]));
                }
                set {
                    this[this.tableOT.OT_FOODH1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_W_133 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_W_133Column]));
                }
                set {
                    this[this.tableOT.NOP_W_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_W_167 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_W_167Column]));
                }
                set {
                    this[this.tableOT.NOP_W_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_W_200 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_W_200Column]));
                }
                set {
                    this[this.tableOT.NOP_W_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_H_133 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_H_133Column]));
                }
                set {
                    this[this.tableOT.NOP_H_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_H_167 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_H_167Column]));
                }
                set {
                    this[this.tableOT.NOP_H_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_H_200 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_H_200Column]));
                }
                set {
                    this[this.tableOT.NOP_H_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOP_W_133 {
                get {
                    return ((decimal)(this[this.tableOT.TOP_W_133Column]));
                }
                set {
                    this[this.tableOT.TOP_W_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOP_W_167 {
                get {
                    return ((decimal)(this[this.tableOT.TOP_W_167Column]));
                }
                set {
                    this[this.tableOT.TOP_W_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOP_W_200 {
                get {
                    return ((decimal)(this[this.tableOT.TOP_W_200Column]));
                }
                set {
                    this[this.tableOT.TOP_W_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOP_H_200 {
                get {
                    return ((decimal)(this[this.tableOT.TOP_H_200Column]));
                }
                set {
                    this[this.tableOT.TOP_H_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_H_133 {
                get {
                    return ((decimal)(this[this.tableOT.NOT_H_133Column]));
                }
                set {
                    this[this.tableOT.NOT_H_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_H_167 {
                get {
                    return ((decimal)(this[this.tableOT.NOT_H_167Column]));
                }
                set {
                    this[this.tableOT.NOT_H_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SYSCREAT {
                get {
                    return ((bool)(this[this.tableOT.SYSCREATColumn]));
                }
                set {
                    this[this.tableOT.SYSCREATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OTRATE_CODE {
                get {
                    return ((string)(this[this.tableOT.OTRATE_CODEColumn]));
                }
                set {
                    this[this.tableOT.OTRATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SYS_OT {
                get {
                    return ((bool)(this[this.tableOT.SYS_OTColumn]));
                }
                set {
                    this[this.tableOT.SYS_OTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERNO {
                get {
                    return ((string)(this[this.tableOT.SERNOColumn]));
                }
                set {
                    this[this.tableOT.SERNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableOT.NAME_CColumn]));
                }
                set {
                    this[this.tableOT.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JOB_NAME {
                get {
                    return ((string)(this[this.tableOT.JOB_NAMEColumn]));
                }
                set {
                    this[this.tableOT.JOB_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPTS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableOT.DEPTS_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'OT\' 中資料行 \'DEPTS_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableOT.DEPTS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableOT.DEPT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'OT\' 中資料行 \'DEPT_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableOT.DEPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT {
                get {
                    return ((string)(this[this.tableOT.DEPTColumn]));
                }
                set {
                    this[this.tableOT.DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOFOOD1 {
                get {
                    return ((bool)(this[this.tableOT.NOFOOD1Column]));
                }
                set {
                    this[this.tableOT.NOFOOD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int isHoli {
                get {
                    try {
                        return ((int)(this[this.tableOT.isHoliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'OT\' 中資料行 \'isHoli\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableOT.isHoliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool COUNT_MA {
                get {
                    return ((bool)(this[this.tableOT.COUNT_MAColumn]));
                }
                set {
                    this[this.tableOT.COUNT_MAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FOOD_PRI {
                get {
                    return ((decimal)(this[this.tableOT.FOOD_PRIColumn]));
                }
                set {
                    this[this.tableOT.FOOD_PRIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FOOD_CNT {
                get {
                    return ((decimal)(this[this.tableOT.FOOD_CNTColumn]));
                }
                set {
                    this[this.tableOT.FOOD_CNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_W_100 {
                get {
                    return ((decimal)(this[this.tableOT.TOT_W_100Column]));
                }
                set {
                    this[this.tableOT.TOT_W_100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal REC {
                get {
                    return ((decimal)(this[this.tableOT.RECColumn]));
                }
                set {
                    this[this.tableOT.RECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OTNO {
                get {
                    return ((string)(this[this.tableOT.OTNOColumn]));
                }
                set {
                    this[this.tableOT.OTNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_H_100 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_H_100Column]));
                }
                set {
                    this[this.tableOT.NOP_H_100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOT_133 {
                get {
                    return ((decimal)(this[this.tableOT.HOT_133Column]));
                }
                set {
                    this[this.tableOT.HOT_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOT_166 {
                get {
                    return ((decimal)(this[this.tableOT.HOT_166Column]));
                }
                set {
                    this[this.tableOT.HOT_166Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOT_200 {
                get {
                    return ((decimal)(this[this.tableOT.HOT_200Column]));
                }
                set {
                    this[this.tableOT.HOT_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WOT_133 {
                get {
                    return ((decimal)(this[this.tableOT.WOT_133Column]));
                }
                set {
                    this[this.tableOT.WOT_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WOT_166 {
                get {
                    return ((decimal)(this[this.tableOT.WOT_166Column]));
                }
                set {
                    this[this.tableOT.WOT_166Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WOT_200 {
                get {
                    return ((decimal)(this[this.tableOT.WOT_200Column]));
                }
                set {
                    this[this.tableOT.WOT_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SUM {
                get {
                    return ((bool)(this[this.tableOT.SUMColumn]));
                }
                set {
                    this[this.tableOT.SUMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_W_100 {
                get {
                    return ((decimal)(this[this.tableOT.NOT_W_100Column]));
                }
                set {
                    this[this.tableOT.NOT_W_100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOP_W_100 {
                get {
                    return ((decimal)(this[this.tableOT.TOP_W_100Column]));
                }
                set {
                    this[this.tableOT.TOP_W_100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SYSCREAT1 {
                get {
                    return ((bool)(this[this.tableOT.SYSCREAT1Column]));
                }
                set {
                    this[this.tableOT.SYSCREAT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOP_W_100 {
                get {
                    return ((decimal)(this[this.tableOT.NOP_W_100Column]));
                }
                set {
                    this[this.tableOT.NOP_W_100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RES {
                get {
                    return ((bool)(this[this.tableOT.RESColumn]));
                }
                set {
                    this[this.tableOT.RESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EAT {
                get {
                    return ((bool)(this[this.tableOT.EATColumn]));
                }
                set {
                    this[this.tableOT.EATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DIFF {
                get {
                    return ((decimal)(this[this.tableOT.DIFFColumn]));
                }
                set {
                    this[this.tableOT.DIFFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPTS_NAMENull() {
                return this.IsNull(this.tableOT.DEPTS_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPTS_NAMENull() {
                this[this.tableOT.DEPTS_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_NAMENull() {
                return this.IsNull(this.tableOT.DEPT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_NAMENull() {
                this[this.tableOT.DEPT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsisHoliNull() {
                return this.IsNull(this.tableOT.isHoliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetisHoliNull() {
                this[this.tableOT.isHoliColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BASERow : global::System.Data.DataRow {
            
            private BASEDataTable tableBASE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BASERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBASE = ((BASEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableBASE.NOBRColumn]));
                }
                set {
                    this[this.tableBASE.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableBASE.NAME_CColumn]));
                }
                set {
                    this[this.tableBASE.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_E {
                get {
                    return ((string)(this[this.tableBASE.NAME_EColumn]));
                }
                set {
                    this[this.tableBASE.NAME_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCOUNT_NO {
                get {
                    return ((string)(this[this.tableBASE.ACCOUNT_NOColumn]));
                }
                set {
                    this[this.tableBASE.ACCOUNT_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BANKNO {
                get {
                    return ((string)(this[this.tableBASE.BANKNOColumn]));
                }
                set {
                    this[this.tableBASE.BANKNOColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BASETTSRow : global::System.Data.DataRow {
            
            private BASETTSDataTable tableBASETTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal BASETTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBASETTS = ((BASETTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableBASETTS.NOBRColumn]));
                }
                set {
                    this[this.tableBASETTS.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TTSCODE {
                get {
                    return ((string)(this[this.tableBASETTS.TTSCODEColumn]));
                }
                set {
                    this[this.tableBASETTS.TTSCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBASETTS.ADATEColumn]));
                }
                set {
                    this[this.tableBASETTS.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.DDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'DDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime INDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.INDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'INDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.INDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime CINDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.CINDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CINDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CINDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime OUDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.OUDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OUDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OUDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.STDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STINDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.STINDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STINDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STINDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime STOUDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.STOUDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STOUDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STOUDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMP {
                get {
                    return ((string)(this[this.tableBASETTS.COMPColumn]));
                }
                set {
                    this[this.tableBASETTS.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT {
                get {
                    return ((string)(this[this.tableBASETTS.DEPTColumn]));
                }
                set {
                    this[this.tableBASETTS.DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPTS {
                get {
                    return ((string)(this[this.tableBASETTS.DEPTSColumn]));
                }
                set {
                    this[this.tableBASETTS.DEPTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JOB {
                get {
                    return ((string)(this[this.tableBASETTS.JOBColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JOBL {
                get {
                    return ((string)(this[this.tableBASETTS.JOBLColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CARD {
                get {
                    return ((string)(this[this.tableBASETTS.CARDColumn]));
                }
                set {
                    this[this.tableBASETTS.CARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROTET {
                get {
                    return ((string)(this[this.tableBASETTS.ROTETColumn]));
                }
                set {
                    this[this.tableBASETTS.ROTETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DI {
                get {
                    return ((string)(this[this.tableBASETTS.DIColumn]));
                }
                set {
                    this[this.tableBASETTS.DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableBASETTS.KEY_MANColumn]));
                }
                set {
                    this[this.tableBASETTS.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBASETTS.KEY_DATEColumn]));
                }
                set {
                    this[this.tableBASETTS.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool MANG {
                get {
                    return ((bool)(this[this.tableBASETTS.MANGColumn]));
                }
                set {
                    this[this.tableBASETTS.MANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YR_DAYS {
                get {
                    return ((decimal)(this[this.tableBASETTS.YR_DAYSColumn]));
                }
                set {
                    this[this.tableBASETTS.YR_DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WK_YRS {
                get {
                    return ((decimal)(this[this.tableBASETTS.WK_YRSColumn]));
                }
                set {
                    this[this.tableBASETTS.WK_YRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALTP {
                get {
                    return ((string)(this[this.tableBASETTS.SALTPColumn]));
                }
                set {
                    this[this.tableBASETTS.SALTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JOBS {
                get {
                    return ((string)(this[this.tableBASETTS.JOBSColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string WORKCD {
                get {
                    return ((string)(this[this.tableBASETTS.WORKCDColumn]));
                }
                set {
                    this[this.tableBASETTS.WORKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CARCD {
                get {
                    return ((string)(this[this.tableBASETTS.CARCDColumn]));
                }
                set {
                    this[this.tableBASETTS.CARCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMPCD {
                get {
                    return ((string)(this[this.tableBASETTS.EMPCDColumn]));
                }
                set {
                    this[this.tableBASETTS.EMPCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OUTCD {
                get {
                    return ((string)(this[this.tableBASETTS.OUTCDColumn]));
                }
                set {
                    this[this.tableBASETTS.OUTCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CALABS {
                get {
                    return ((bool)(this[this.tableBASETTS.CALABSColumn]));
                }
                set {
                    this[this.tableBASETTS.CALABSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CALOT {
                get {
                    return ((string)(this[this.tableBASETTS.CALOTColumn]));
                }
                set {
                    this[this.tableBASETTS.CALOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FULATT {
                get {
                    return ((bool)(this[this.tableBASETTS.FULATTColumn]));
                }
                set {
                    this[this.tableBASETTS.FULATTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTER {
                get {
                    return ((bool)(this[this.tableBASETTS.NOTERColumn]));
                }
                set {
                    this[this.tableBASETTS.NOTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOWEL {
                get {
                    return ((bool)(this[this.tableBASETTS.NOWELColumn]));
                }
                set {
                    this[this.tableBASETTS.NOWELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NORET {
                get {
                    return ((bool)(this[this.tableBASETTS.NORETColumn]));
                }
                set {
                    this[this.tableBASETTS.NORETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTLATE {
                get {
                    return ((bool)(this[this.tableBASETTS.NOTLATEColumn]));
                }
                set {
                    this[this.tableBASETTS.NOTLATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HOLI_CODE {
                get {
                    return ((string)(this[this.tableBASETTS.HOLI_CODEColumn]));
                }
                set {
                    this[this.tableBASETTS.HOLI_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOOT {
                get {
                    return ((bool)(this[this.tableBASETTS.NOOTColumn]));
                }
                set {
                    this[this.tableBASETTS.NOOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOSPEC {
                get {
                    return ((bool)(this[this.tableBASETTS.NOSPECColumn]));
                }
                set {
                    this[this.tableBASETTS.NOSPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOCARD {
                get {
                    return ((bool)(this[this.tableBASETTS.NOCARDColumn]));
                }
                set {
                    this[this.tableBASETTS.NOCARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOEAT {
                get {
                    return ((bool)(this[this.tableBASETTS.NOEATColumn]));
                }
                set {
                    this[this.tableBASETTS.NOEATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string APGRPCD {
                get {
                    return ((string)(this[this.tableBASETTS.APGRPCDColumn]));
                }
                set {
                    this[this.tableBASETTS.APGRPCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPTM {
                get {
                    return ((string)(this[this.tableBASETTS.DEPTMColumn]));
                }
                set {
                    this[this.tableBASETTS.DEPTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TTSCD {
                get {
                    return ((string)(this[this.tableBASETTS.TTSCDColumn]));
                }
                set {
                    this[this.tableBASETTS.TTSCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MENO {
                get {
                    return ((string)(this[this.tableBASETTS.MENOColumn]));
                }
                set {
                    this[this.tableBASETTS.MENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALADR {
                get {
                    return ((string)(this[this.tableBASETTS.SALADRColumn]));
                }
                set {
                    this[this.tableBASETTS.SALADRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOWAGE {
                get {
                    return ((bool)(this[this.tableBASETTS.NOWAGEColumn]));
                }
                set {
                    this[this.tableBASETTS.NOWAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool MANGE {
                get {
                    return ((bool)(this[this.tableBASETTS.MANGEColumn]));
                }
                set {
                    this[this.tableBASETTS.MANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal RETRATE {
                get {
                    return ((decimal)(this[this.tableBASETTS.RETRATEColumn]));
                }
                set {
                    this[this.tableBASETTS.RETRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RETDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.RETDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'RETDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.RETDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RETCHOO {
                get {
                    return ((string)(this[this.tableBASETTS.RETCHOOColumn]));
                }
                set {
                    this[this.tableBASETTS.RETCHOOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime RETDATE1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.RETDATE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'RETDATE1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.RETDATE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ONLYONTIME {
                get {
                    return ((bool)(this[this.tableBASETTS.ONLYONTIMEColumn]));
                }
                set {
                    this[this.tableBASETTS.ONLYONTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JOBO {
                get {
                    return ((string)(this[this.tableBASETTS.JOBOColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool COUNT_PASS {
                get {
                    return ((bool)(this[this.tableBASETTS.COUNT_PASSColumn]));
                }
                set {
                    this[this.tableBASETTS.COUNT_PASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PASS_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.PASS_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'PASS_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.PASS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool MANG1 {
                get {
                    return ((bool)(this[this.tableBASETTS.MANG1Column]));
                }
                set {
                    this[this.tableBASETTS.MANG1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime AP_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.AP_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'AP_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.AP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal GRP_AMT {
                get {
                    return ((decimal)(this[this.tableBASETTS.GRP_AMTColumn]));
                }
                set {
                    this[this.tableBASETTS.GRP_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime TAX_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.TAX_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'TAX_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.TAX_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOSPAMT {
                get {
                    return ((bool)(this[this.tableBASETTS.NOSPAMTColumn]));
                }
                set {
                    this[this.tableBASETTS.NOSPAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FIXRATE {
                get {
                    return ((bool)(this[this.tableBASETTS.FIXRATEColumn]));
                }
                set {
                    this[this.tableBASETTS.FIXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime TAX_EDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.TAX_EDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'TAX_EDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.TAX_EDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IS_SELFOUT {
                get {
                    return ((bool)(this[this.tableBASETTS.IS_SELFOUTColumn]));
                }
                set {
                    this[this.tableBASETTS.IS_SELFOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INSG_TYPE {
                get {
                    return ((string)(this[this.tableBASETTS.INSG_TYPEColumn]));
                }
                set {
                    this[this.tableBASETTS.INSG_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OldSaladr {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.OldSaladrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OldSaladr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OldSaladrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STATION {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.STATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STATION\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CardJobName {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.CardJobNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CardJobName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CardJobNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CardJobEnName {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.CardJobEnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CardJobEnName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CardJobEnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OilSubsidy {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.OilSubsidyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OilSubsidy\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OilSubsidyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CardID {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.CardIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CardID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CardIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DoorGuard {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.DoorGuardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'DoorGuard\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.DoorGuardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OutPost {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.OutPostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OutPost\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OutPostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDDATENull() {
                return this.IsNull(this.tableBASETTS.DDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDDATENull() {
                this[this.tableBASETTS.DDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsINDTNull() {
                return this.IsNull(this.tableBASETTS.INDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetINDTNull() {
                this[this.tableBASETTS.INDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCINDTNull() {
                return this.IsNull(this.tableBASETTS.CINDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCINDTNull() {
                this[this.tableBASETTS.CINDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOUDTNull() {
                return this.IsNull(this.tableBASETTS.OUDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOUDTNull() {
                this[this.tableBASETTS.OUDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTDTNull() {
                return this.IsNull(this.tableBASETTS.STDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTDTNull() {
                this[this.tableBASETTS.STDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTINDTNull() {
                return this.IsNull(this.tableBASETTS.STINDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTINDTNull() {
                this[this.tableBASETTS.STINDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTOUDTNull() {
                return this.IsNull(this.tableBASETTS.STOUDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTOUDTNull() {
                this[this.tableBASETTS.STOUDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRETDATENull() {
                return this.IsNull(this.tableBASETTS.RETDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRETDATENull() {
                this[this.tableBASETTS.RETDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRETDATE1Null() {
                return this.IsNull(this.tableBASETTS.RETDATE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRETDATE1Null() {
                this[this.tableBASETTS.RETDATE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPASS_DATENull() {
                return this.IsNull(this.tableBASETTS.PASS_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPASS_DATENull() {
                this[this.tableBASETTS.PASS_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAP_DATENull() {
                return this.IsNull(this.tableBASETTS.AP_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAP_DATENull() {
                this[this.tableBASETTS.AP_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTAX_DATENull() {
                return this.IsNull(this.tableBASETTS.TAX_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTAX_DATENull() {
                this[this.tableBASETTS.TAX_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsTAX_EDATENull() {
                return this.IsNull(this.tableBASETTS.TAX_EDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetTAX_EDATENull() {
                this[this.tableBASETTS.TAX_EDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOldSaladrNull() {
                return this.IsNull(this.tableBASETTS.OldSaladrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOldSaladrNull() {
                this[this.tableBASETTS.OldSaladrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSTATIONNull() {
                return this.IsNull(this.tableBASETTS.STATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSTATIONNull() {
                this[this.tableBASETTS.STATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCardJobNameNull() {
                return this.IsNull(this.tableBASETTS.CardJobNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCardJobNameNull() {
                this[this.tableBASETTS.CardJobNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCardJobEnNameNull() {
                return this.IsNull(this.tableBASETTS.CardJobEnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCardJobEnNameNull() {
                this[this.tableBASETTS.CardJobEnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOilSubsidyNull() {
                return this.IsNull(this.tableBASETTS.OilSubsidyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOilSubsidyNull() {
                this[this.tableBASETTS.OilSubsidyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCardIDNull() {
                return this.IsNull(this.tableBASETTS.CardIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCardIDNull() {
                this[this.tableBASETTS.CardIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDoorGuardNull() {
                return this.IsNull(this.tableBASETTS.DoorGuardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDoorGuardNull() {
                this[this.tableBASETTS.DoorGuardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOutPostNull() {
                return this.IsNull(this.tableBASETTS.OutPostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOutPostNull() {
                this[this.tableBASETTS.OutPostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSGLVRow : global::System.Data.DataRow {
            
            private INSGLVDataTable tableINSGLV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal INSGLVRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSGLV = ((INSGLVDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INS_TYPE {
                get {
                    return ((string)(this[this.tableINSGLV.INS_TYPEColumn]));
                }
                set {
                    this[this.tableINSGLV.INS_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LIFE_A {
                get {
                    return ((decimal)(this[this.tableINSGLV.LIFE_AColumn]));
                }
                set {
                    this[this.tableINSGLV.LIFE_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LIFE_B {
                get {
                    return ((decimal)(this[this.tableINSGLV.LIFE_BColumn]));
                }
                set {
                    this[this.tableINSGLV.LIFE_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LIFE_C {
                get {
                    return ((decimal)(this[this.tableINSGLV.LIFE_CColumn]));
                }
                set {
                    this[this.tableINSGLV.LIFE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal LIFE_D {
                get {
                    return ((decimal)(this[this.tableINSGLV.LIFE_DColumn]));
                }
                set {
                    this[this.tableINSGLV.LIFE_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CHANCE_A {
                get {
                    return ((decimal)(this[this.tableINSGLV.CHANCE_AColumn]));
                }
                set {
                    this[this.tableINSGLV.CHANCE_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CHANCE_B {
                get {
                    return ((decimal)(this[this.tableINSGLV.CHANCE_BColumn]));
                }
                set {
                    this[this.tableINSGLV.CHANCE_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CHANCE_C {
                get {
                    return ((decimal)(this[this.tableINSGLV.CHANCE_CColumn]));
                }
                set {
                    this[this.tableINSGLV.CHANCE_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CHANCE_D {
                get {
                    return ((decimal)(this[this.tableINSGLV.CHANCE_DColumn]));
                }
                set {
                    this[this.tableINSGLV.CHANCE_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOSPITAL_A {
                get {
                    return ((decimal)(this[this.tableINSGLV.HOSPITAL_AColumn]));
                }
                set {
                    this[this.tableINSGLV.HOSPITAL_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOSPITAL_B {
                get {
                    return ((decimal)(this[this.tableINSGLV.HOSPITAL_BColumn]));
                }
                set {
                    this[this.tableINSGLV.HOSPITAL_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOSPITAL_C {
                get {
                    return ((decimal)(this[this.tableINSGLV.HOSPITAL_CColumn]));
                }
                set {
                    this[this.tableINSGLV.HOSPITAL_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOSPITAL_D {
                get {
                    return ((decimal)(this[this.tableINSGLV.HOSPITAL_DColumn]));
                }
                set {
                    this[this.tableINSGLV.HOSPITAL_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OUTPAT_A {
                get {
                    return ((decimal)(this[this.tableINSGLV.OUTPAT_AColumn]));
                }
                set {
                    this[this.tableINSGLV.OUTPAT_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OUTPAT_B {
                get {
                    return ((decimal)(this[this.tableINSGLV.OUTPAT_BColumn]));
                }
                set {
                    this[this.tableINSGLV.OUTPAT_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OUTPAT_C {
                get {
                    return ((decimal)(this[this.tableINSGLV.OUTPAT_CColumn]));
                }
                set {
                    this[this.tableINSGLV.OUTPAT_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OUTPAT_D {
                get {
                    return ((decimal)(this[this.tableINSGLV.OUTPAT_DColumn]));
                }
                set {
                    this[this.tableINSGLV.OUTPAT_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CANCER_A {
                get {
                    return ((decimal)(this[this.tableINSGLV.CANCER_AColumn]));
                }
                set {
                    this[this.tableINSGLV.CANCER_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CANCER_B {
                get {
                    return ((decimal)(this[this.tableINSGLV.CANCER_BColumn]));
                }
                set {
                    this[this.tableINSGLV.CANCER_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CANCER_C {
                get {
                    return ((decimal)(this[this.tableINSGLV.CANCER_CColumn]));
                }
                set {
                    this[this.tableINSGLV.CANCER_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal CANCER_D {
                get {
                    return ((decimal)(this[this.tableINSGLV.CANCER_DColumn]));
                }
                set {
                    this[this.tableINSGLV.CANCER_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP_A {
                get {
                    return ((decimal)(this[this.tableINSGLV.EXP_AColumn]));
                }
                set {
                    this[this.tableINSGLV.EXP_AColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP_B {
                get {
                    return ((decimal)(this[this.tableINSGLV.EXP_BColumn]));
                }
                set {
                    this[this.tableINSGLV.EXP_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP_C {
                get {
                    return ((decimal)(this[this.tableINSGLV.EXP_CColumn]));
                }
                set {
                    this[this.tableINSGLV.EXP_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP_D {
                get {
                    return ((decimal)(this[this.tableINSGLV.EXP_DColumn]));
                }
                set {
                    this[this.tableINSGLV.EXP_DColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSGLV.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSGLV.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGLV.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSGLV.KEY_DATEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FRM47Row : global::System.Data.DataRow {
            
            private FRM47DataTable tableFRM47;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FRM47Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRM47 = ((FRM47DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableFRM47.NOBRColumn]));
                }
                set {
                    this[this.tableFRM47.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableFRM47.NAME_CColumn]));
                }
                set {
                    this[this.tableFRM47.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableFRM47.YYMMColumn]));
                }
                set {
                    this[this.tableFRM47.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime BDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFRM47.BDATEColumn]));
                }
                set {
                    this[this.tableFRM47.BDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BTIME {
                get {
                    return ((string)(this[this.tableFRM47.BTIMEColumn]));
                }
                set {
                    this[this.tableFRM47.BTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ETIME {
                get {
                    return ((string)(this[this.tableFRM47.ETIMEColumn]));
                }
                set {
                    this[this.tableFRM47.ETIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_HOURS {
                get {
                    return ((decimal)(this[this.tableFRM47.TOT_HOURSColumn]));
                }
                set {
                    this[this.tableFRM47.TOT_HOURSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_HRS {
                get {
                    return ((decimal)(this[this.tableFRM47.OT_HRSColumn]));
                }
                set {
                    this[this.tableFRM47.OT_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal REST_HRS {
                get {
                    return ((decimal)(this[this.tableFRM47.REST_HRSColumn]));
                }
                set {
                    this[this.tableFRM47.REST_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_CAR {
                get {
                    return ((decimal)(this[this.tableFRM47.OT_CARColumn]));
                }
                set {
                    this[this.tableFRM47.OT_CARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OT_DEPT {
                get {
                    return ((string)(this[this.tableFRM47.OT_DEPTColumn]));
                }
                set {
                    this[this.tableFRM47.OT_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableFRM47.DEPT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM47\' 中資料行 \'DEPT_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM47.DEPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPTS_NAME {
                get {
                    try {
                        return ((string)(this[this.tableFRM47.DEPTS_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM47\' 中資料行 \'DEPTS_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM47.DEPTS_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableFRM47.KEY_MANColumn]));
                }
                set {
                    this[this.tableFRM47.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFRM47.KEY_DATEColumn]));
                }
                set {
                    this[this.tableFRM47.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOOD {
                get {
                    return ((decimal)(this[this.tableFRM47.OT_FOODColumn]));
                }
                set {
                    this[this.tableFRM47.OT_FOODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOTE {
                get {
                    return ((string)(this[this.tableFRM47.NOTEColumn]));
                }
                set {
                    this[this.tableFRM47.NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_W_133 {
                get {
                    return ((decimal)(this[this.tableFRM47.NOT_W_133Column]));
                }
                set {
                    this[this.tableFRM47.NOT_W_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_W_167 {
                get {
                    return ((decimal)(this[this.tableFRM47.NOT_W_167Column]));
                }
                set {
                    this[this.tableFRM47.NOT_W_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_W_200 {
                get {
                    return ((decimal)(this[this.tableFRM47.NOT_W_200Column]));
                }
                set {
                    this[this.tableFRM47.NOT_W_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_H_200 {
                get {
                    return ((decimal)(this[this.tableFRM47.NOT_H_200Column]));
                }
                set {
                    this[this.tableFRM47.NOT_H_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_W_133 {
                get {
                    return ((decimal)(this[this.tableFRM47.TOT_W_133Column]));
                }
                set {
                    this[this.tableFRM47.TOT_W_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_W_167 {
                get {
                    return ((decimal)(this[this.tableFRM47.TOT_W_167Column]));
                }
                set {
                    this[this.tableFRM47.TOT_W_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_W_200 {
                get {
                    return ((decimal)(this[this.tableFRM47.TOT_W_200Column]));
                }
                set {
                    this[this.tableFRM47.TOT_W_200Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_EXP {
                get {
                    return ((decimal)(this[this.tableFRM47.NOT_EXPColumn]));
                }
                set {
                    this[this.tableFRM47.NOT_EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOT_EXP {
                get {
                    return ((decimal)(this[this.tableFRM47.TOT_EXPColumn]));
                }
                set {
                    this[this.tableFRM47.TOT_EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SALARY {
                get {
                    return ((decimal)(this[this.tableFRM47.SALARYColumn]));
                }
                set {
                    this[this.tableFRM47.SALARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTMODI {
                get {
                    return ((bool)(this[this.tableFRM47.NOTMODIColumn]));
                }
                set {
                    this[this.tableFRM47.NOTMODIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OTRCD {
                get {
                    return ((string)(this[this.tableFRM47.OTRCDColumn]));
                }
                set {
                    this[this.tableFRM47.OTRCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOFOOD {
                get {
                    return ((bool)(this[this.tableFRM47.NOFOODColumn]));
                }
                set {
                    this[this.tableFRM47.NOFOODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OT_ROTE {
                get {
                    return ((string)(this[this.tableFRM47.OT_ROTEColumn]));
                }
                set {
                    this[this.tableFRM47.OT_ROTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOOD1 {
                get {
                    return ((decimal)(this[this.tableFRM47.OT_FOOD1Column]));
                }
                set {
                    this[this.tableFRM47.OT_FOOD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOODH {
                get {
                    return ((decimal)(this[this.tableFRM47.OT_FOODHColumn]));
                }
                set {
                    this[this.tableFRM47.OT_FOODHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal OT_FOODH1 {
                get {
                    return ((decimal)(this[this.tableFRM47.OT_FOODH1Column]));
                }
                set {
                    this[this.tableFRM47.OT_FOODH1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SYSCREAT {
                get {
                    return ((bool)(this[this.tableFRM47.SYSCREATColumn]));
                }
                set {
                    this[this.tableFRM47.SYSCREATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OTRATE_CODE {
                get {
                    return ((string)(this[this.tableFRM47.OTRATE_CODEColumn]));
                }
                set {
                    this[this.tableFRM47.OTRATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SERNO {
                get {
                    return ((string)(this[this.tableFRM47.SERNOColumn]));
                }
                set {
                    this[this.tableFRM47.SERNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOFOOD1 {
                get {
                    return ((bool)(this[this.tableFRM47.NOFOOD1Column]));
                }
                set {
                    this[this.tableFRM47.NOFOOD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string JOB_NAME {
                get {
                    return ((string)(this[this.tableFRM47.JOB_NAMEColumn]));
                }
                set {
                    this[this.tableFRM47.JOB_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT {
                get {
                    return ((string)(this[this.tableFRM47.DEPTColumn]));
                }
                set {
                    this[this.tableFRM47.DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int isHoli {
                get {
                    try {
                        return ((int)(this[this.tableFRM47.isHoliColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM47\' 中資料行 \'isHoli\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM47.isHoliColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OT_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableFRM47.OT_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM47\' 中資料行 \'OT_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM47.OT_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool COUNT_MA {
                get {
                    return ((bool)(this[this.tableFRM47.COUNT_MAColumn]));
                }
                set {
                    this[this.tableFRM47.COUNT_MAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SYS_OT {
                get {
                    return ((bool)(this[this.tableFRM47.SYS_OTColumn]));
                }
                set {
                    this[this.tableFRM47.SYS_OTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_H_167 {
                get {
                    return ((decimal)(this[this.tableFRM47.NOT_H_167Column]));
                }
                set {
                    this[this.tableFRM47.NOT_H_167Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NOT_H_133 {
                get {
                    return ((decimal)(this[this.tableFRM47.NOT_H_133Column]));
                }
                set {
                    this[this.tableFRM47.NOT_H_133Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string HOLI_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableFRM47.HOLI_TYPEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM47\' 中資料行 \'HOLI_TYPE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM47.HOLI_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string Att_Rote {
                get {
                    try {
                        return ((string)(this[this.tableFRM47.Att_RoteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM47\' 中資料行 \'Att_Rote\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM47.Att_RoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_NAMENull() {
                return this.IsNull(this.tableFRM47.DEPT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_NAMENull() {
                this[this.tableFRM47.DEPT_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPTS_NAMENull() {
                return this.IsNull(this.tableFRM47.DEPTS_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPTS_NAMENull() {
                this[this.tableFRM47.DEPTS_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsisHoliNull() {
                return this.IsNull(this.tableFRM47.isHoliColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetisHoliNull() {
                this[this.tableFRM47.isHoliColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOT_TYPENull() {
                return this.IsNull(this.tableFRM47.OT_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOT_TYPENull() {
                this[this.tableFRM47.OT_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHOLI_TYPENull() {
                return this.IsNull(this.tableFRM47.HOLI_TYPEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHOLI_TYPENull() {
                this[this.tableFRM47.HOLI_TYPEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAtt_RoteNull() {
                return this.IsNull(this.tableFRM47.Att_RoteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAtt_RoteNull() {
                this[this.tableFRM47.Att_RoteColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ENRICHRow : global::System.Data.DataRow {
            
            private ENRICHDataTable tableENRICH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ENRICHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableENRICH = ((ENRICHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AUTOKEY {
                get {
                    return ((int)(this[this.tableENRICH.AUTOKEYColumn]));
                }
                set {
                    this[this.tableENRICH.AUTOKEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableENRICH.NOBRColumn]));
                }
                set {
                    this[this.tableENRICH.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableENRICH.YYMMColumn]));
                }
                set {
                    this[this.tableENRICH.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableENRICH.SEQColumn]));
                }
                set {
                    this[this.tableENRICH.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableENRICH.SAL_CODEColumn]));
                }
                set {
                    this[this.tableENRICH.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableENRICH.AMTColumn]));
                }
                set {
                    this[this.tableENRICH.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableENRICH.KEY_MANColumn]));
                }
                set {
                    this[this.tableENRICH.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableENRICH.KEY_DATEColumn]));
                }
                set {
                    this[this.tableENRICH.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MEMO {
                get {
                    return ((string)(this[this.tableENRICH.MEMOColumn]));
                }
                set {
                    this[this.tableENRICH.MEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableENRICH.FA_IDNOColumn]));
                }
                set {
                    this[this.tableENRICH.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IMPORT {
                get {
                    return ((bool)(this[this.tableENRICH.IMPORTColumn]));
                }
                set {
                    this[this.tableENRICH.IMPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableENRICH.NAME_CColumn]));
                }
                set {
                    this[this.tableENRICH.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableENRICH.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableENRICH.SAL_NAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALBASD1Row : global::System.Data.DataRow {
            
            private SALBASD1DataTable tableSALBASD1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASD1Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALBASD1 = ((SALBASD1DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableSALBASD1.YYMMColumn]));
                }
                set {
                    this[this.tableSALBASD1.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableSALBASD1.NOBRColumn]));
                }
                set {
                    this[this.tableSALBASD1.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALBASD1.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALBASD1.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableSALBASD1.AMTColumn]));
                }
                set {
                    this[this.tableSALBASD1.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALBASD1.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALBASD1.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASD1.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALBASD1.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMTB {
                get {
                    return ((decimal)(this[this.tableSALBASD1.AMTBColumn]));
                }
                set {
                    this[this.tableSALBASD1.AMTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MENO {
                get {
                    return ((string)(this[this.tableSALBASD1.MENOColumn]));
                }
                set {
                    this[this.tableSALBASD1.MENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableSALBASD1.SEQColumn]));
                }
                set {
                    this[this.tableSALBASD1.SEQColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EXPLABRow : global::System.Data.DataRow {
            
            private EXPLABDataTable tableEXPLAB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EXPLABRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXPLAB = ((EXPLABDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableEXPLAB.NOBRColumn]));
                }
                set {
                    this[this.tableEXPLAB.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableEXPLAB.FA_IDNOColumn]));
                }
                set {
                    this[this.tableEXPLAB.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableEXPLAB.YYMMColumn]));
                }
                set {
                    this[this.tableEXPLAB.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP {
                get {
                    return ((decimal)(this[this.tableEXPLAB.EXPColumn]));
                }
                set {
                    this[this.tableEXPLAB.EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COMP {
                get {
                    return ((decimal)(this[this.tableEXPLAB.COMPColumn]));
                }
                set {
                    this[this.tableEXPLAB.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTEDIT {
                get {
                    return ((bool)(this[this.tableEXPLAB.NOTEDITColumn]));
                }
                set {
                    this[this.tableEXPLAB.NOTEDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEXPLAB.KEY_DATEColumn]));
                }
                set {
                    this[this.tableEXPLAB.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableEXPLAB.KEY_MANColumn]));
                }
                set {
                    this[this.tableEXPLAB.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEXPLAB.ADATEColumn]));
                }
                set {
                    this[this.tableEXPLAB.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DAYS {
                get {
                    return ((decimal)(this[this.tableEXPLAB.DAYSColumn]));
                }
                set {
                    this[this.tableEXPLAB.DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RATE_CODE {
                get {
                    return ((string)(this[this.tableEXPLAB.RATE_CODEColumn]));
                }
                set {
                    this[this.tableEXPLAB.RATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INSUR_TYPE {
                get {
                    return ((string)(this[this.tableEXPLAB.INSUR_TYPEColumn]));
                }
                set {
                    this[this.tableEXPLAB.INSUR_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal INSCD {
                get {
                    return ((decimal)(this[this.tableEXPLAB.INSCDColumn]));
                }
                set {
                    this[this.tableEXPLAB.INSCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableEXPLAB.SAL_CODEColumn]));
                }
                set {
                    this[this.tableEXPLAB.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal JOBAMT {
                get {
                    return ((decimal)(this[this.tableEXPLAB.JOBAMTColumn]));
                }
                set {
                    this[this.tableEXPLAB.JOBAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FUNDAMT {
                get {
                    return ((decimal)(this[this.tableEXPLAB.FUNDAMTColumn]));
                }
                set {
                    this[this.tableEXPLAB.FUNDAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_NO {
                get {
                    return ((string)(this[this.tableEXPLAB.S_NOColumn]));
                }
                set {
                    this[this.tableEXPLAB.S_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FA_NAME {
                get {
                    try {
                        return ((string)(this[this.tableEXPLAB.FA_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'EXPLAB\' 中資料行 \'FA_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableEXPLAB.FA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableEXPLAB.NAME_CColumn]));
                }
                set {
                    this[this.tableEXPLAB.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_YYMM {
                get {
                    return ((string)(this[this.tableEXPLAB.SAL_YYMMColumn]));
                }
                set {
                    this[this.tableEXPLAB.SAL_YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFA_NAMENull() {
                return this.IsNull(this.tableEXPLAB.FA_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFA_NAMENull() {
                this[this.tableEXPLAB.FA_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALBASD_TMPRow : global::System.Data.DataRow {
            
            private SALBASD_TMPDataTable tableSALBASD_TMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASD_TMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALBASD_TMP = ((SALBASD_TMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableSALBASD_TMP.NOBRColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASD_TMP.ADATEColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALBASD_TMP.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableSALBASD_TMP.AMTColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALBASD_TMP.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASD_TMP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MEMO {
                get {
                    return ((string)(this[this.tableSALBASD_TMP.MEMOColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.MEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool COMMITED {
                get {
                    return ((bool)(this[this.tableSALBASD_TMP.COMMITEDColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.COMMITEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMMITTER {
                get {
                    try {
                        return ((string)(this[this.tableSALBASD_TMP.COMMITTERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALBASD_TMP\' 中資料行 \'COMMITTER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALBASD_TMP.COMMITTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool TRANS {
                get {
                    return ((bool)(this[this.tableSALBASD_TMP.TRANSColumn]));
                }
                set {
                    this[this.tableSALBASD_TMP.TRANSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCOMMITTERNull() {
                return this.IsNull(this.tableSALBASD_TMP.COMMITTERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCOMMITTERNull() {
                this[this.tableSALBASD_TMP.COMMITTERColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ExplabCNRow : global::System.Data.DataRow {
            
            private ExplabCNDataTable tableExplabCN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ExplabCNRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableExplabCN = ((ExplabCNDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AUTOKEY {
                get {
                    return ((int)(this[this.tableExplabCN.AUTOKEYColumn]));
                }
                set {
                    this[this.tableExplabCN.AUTOKEYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableExplabCN.NOBRColumn]));
                }
                set {
                    this[this.tableExplabCN.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableExplabCN.YYMMColumn]));
                }
                set {
                    this[this.tableExplabCN.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string INSUR_TYPE {
                get {
                    return ((string)(this[this.tableExplabCN.INSUR_TYPEColumn]));
                }
                set {
                    this[this.tableExplabCN.INSUR_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP {
                get {
                    return ((decimal)(this[this.tableExplabCN.EXPColumn]));
                }
                set {
                    this[this.tableExplabCN.EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COMP {
                get {
                    return ((decimal)(this[this.tableExplabCN.COMPColumn]));
                }
                set {
                    this[this.tableExplabCN.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableExplabCN.SAL_CODEColumn]));
                }
                set {
                    this[this.tableExplabCN.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableExplabCN.AMTColumn]));
                }
                set {
                    this[this.tableExplabCN.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_YYMM {
                get {
                    return ((string)(this[this.tableExplabCN.SAL_YYMMColumn]));
                }
                set {
                    this[this.tableExplabCN.SAL_YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_NO {
                get {
                    return ((string)(this[this.tableExplabCN.S_NOColumn]));
                }
                set {
                    this[this.tableExplabCN.S_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTEDIT {
                get {
                    return ((bool)(this[this.tableExplabCN.NOTEDITColumn]));
                }
                set {
                    this[this.tableExplabCN.NOTEDITColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableExplabCN.KEY_DATEColumn]));
                }
                set {
                    this[this.tableExplabCN.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableExplabCN.KEY_MANColumn]));
                }
                set {
                    this[this.tableExplabCN.KEY_MANColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EXPSUPRow : global::System.Data.DataRow {
            
            private EXPSUPDataTable tableEXPSUP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal EXPSUPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEXPSUP = ((EXPSUPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableEXPSUP.NOBRColumn]));
                }
                set {
                    this[this.tableEXPSUP.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableEXPSUP.YYMMColumn]));
                }
                set {
                    this[this.tableEXPSUP.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableEXPSUP.SEQColumn]));
                }
                set {
                    this[this.tableEXPSUP.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableEXPSUP.SAL_CODEColumn]));
                }
                set {
                    this[this.tableEXPSUP.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PAY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEXPSUP.PAY_DATEColumn]));
                }
                set {
                    this[this.tableEXPSUP.PAY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FORMAT {
                get {
                    return ((string)(this[this.tableEXPSUP.FORMATColumn]));
                }
                set {
                    this[this.tableEXPSUP.FORMATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PAY_AMT {
                get {
                    return ((decimal)(this[this.tableEXPSUP.PAY_AMTColumn]));
                }
                set {
                    this[this.tableEXPSUP.PAY_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SUP_AMT {
                get {
                    return ((decimal)(this[this.tableEXPSUP.SUP_AMTColumn]));
                }
                set {
                    this[this.tableEXPSUP.SUP_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal INS_HAMT {
                get {
                    return ((decimal)(this[this.tableEXPSUP.INS_HAMTColumn]));
                }
                set {
                    this[this.tableEXPSUP.INS_HAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEXPSUP.ADATEColumn]));
                }
                set {
                    this[this.tableEXPSUP.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEXPSUP.DDATEColumn]));
                }
                set {
                    this[this.tableEXPSUP.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTAL_AMT {
                get {
                    return ((decimal)(this[this.tableEXPSUP.TOTAL_AMTColumn]));
                }
                set {
                    this[this.tableEXPSUP.TOTAL_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string S_NO {
                get {
                    return ((string)(this[this.tableEXPSUP.S_NOColumn]));
                }
                set {
                    this[this.tableEXPSUP.S_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEXPSUP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableEXPSUP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableEXPSUP.KEY_MANColumn]));
                }
                set {
                    this[this.tableEXPSUP.KEY_MANColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALBASERow : global::System.Data.DataRow {
            
            private SALBASEDataTable tableSALBASE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALBASE = ((SALBASEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AUTO {
                get {
                    return ((int)(this[this.tableSALBASE.AUTOColumn]));
                }
                set {
                    this[this.tableSALBASE.AUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CALCTYPE {
                get {
                    return ((string)(this[this.tableSALBASE.CALCTYPEColumn]));
                }
                set {
                    this[this.tableSALBASE.CALCTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SALNAME {
                get {
                    return ((string)(this[this.tableSALBASE.SALNAMEColumn]));
                }
                set {
                    this[this.tableSALBASE.SALNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REFFUNCTION {
                get {
                    return ((string)(this[this.tableSALBASE.REFFUNCTIONColumn]));
                }
                set {
                    this[this.tableSALBASE.REFFUNCTIONColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALFUNCTIONRow : global::System.Data.DataRow {
            
            private SALFUNCTIONDataTable tableSALFUNCTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALFUNCTIONRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALFUNCTION = ((SALFUNCTIONDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AUTO {
                get {
                    return ((int)(this[this.tableSALFUNCTION.AUTOColumn]));
                }
                set {
                    this[this.tableSALFUNCTION.AUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CALCTYPE {
                get {
                    return ((string)(this[this.tableSALFUNCTION.CALCTYPEColumn]));
                }
                set {
                    this[this.tableSALFUNCTION.CALCTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ITEM {
                get {
                    return ((string)(this[this.tableSALFUNCTION.ITEMColumn]));
                }
                set {
                    this[this.tableSALFUNCTION.ITEMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SCRIPT {
                get {
                    return ((string)(this[this.tableSALFUNCTION.SCRIPTColumn]));
                }
                set {
                    this[this.tableSALFUNCTION.SCRIPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SORT {
                get {
                    return ((int)(this[this.tableSALFUNCTION.SORTColumn]));
                }
                set {
                    this[this.tableSALFUNCTION.SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool CALC {
                get {
                    return ((bool)(this[this.tableSALFUNCTION.CALCColumn]));
                }
                set {
                    this[this.tableSALFUNCTION.CALCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool REF {
                get {
                    return ((bool)(this[this.tableSALFUNCTION.REFColumn]));
                }
                set {
                    this[this.tableSALFUNCTION.REFColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALBASNDRow : global::System.Data.DataRow {
            
            private SALBASNDDataTable tableSALBASND;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALBASNDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALBASND = ((SALBASNDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableSALBASND.NOBRColumn]));
                }
                set {
                    this[this.tableSALBASND.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM_B {
                get {
                    return ((string)(this[this.tableSALBASND.YYMM_BColumn]));
                }
                set {
                    this[this.tableSALBASND.YYMM_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM_E {
                get {
                    return ((string)(this[this.tableSALBASND.YYMM_EColumn]));
                }
                set {
                    this[this.tableSALBASND.YYMM_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALBASND.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALBASND.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SEQ {
                get {
                    return ((decimal)(this[this.tableSALBASND.SEQColumn]));
                }
                set {
                    this[this.tableSALBASND.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime A_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASND.A_DATEColumn]));
                }
                set {
                    this[this.tableSALBASND.A_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool A_TYPE {
                get {
                    return ((bool)(this[this.tableSALBASND.A_TYPEColumn]));
                }
                set {
                    this[this.tableSALBASND.A_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal A_PER {
                get {
                    return ((decimal)(this[this.tableSALBASND.A_PERColumn]));
                }
                set {
                    this[this.tableSALBASND.A_PERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal F_AMT {
                get {
                    return ((decimal)(this[this.tableSALBASND.F_AMTColumn]));
                }
                set {
                    this[this.tableSALBASND.F_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal P_AMT {
                get {
                    return ((decimal)(this[this.tableSALBASND.P_AMTColumn]));
                }
                set {
                    this[this.tableSALBASND.P_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal T_AMT {
                get {
                    return ((decimal)(this[this.tableSALBASND.T_AMTColumn]));
                }
                set {
                    this[this.tableSALBASND.T_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALBASND.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALBASND.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASND.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALBASND.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MEMO {
                get {
                    return ((string)(this[this.tableSALBASND.MEMOColumn]));
                }
                set {
                    this[this.tableSALBASND.MEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DISPATCH {
                get {
                    return ((string)(this[this.tableSALBASND.DISPATCHColumn]));
                }
                set {
                    this[this.tableSALBASND.DISPATCHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DE_DEPT {
                get {
                    return ((string)(this[this.tableSALBASND.DE_DEPTColumn]));
                }
                set {
                    this[this.tableSALBASND.DE_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DE_MAN {
                get {
                    return ((string)(this[this.tableSALBASND.DE_MANColumn]));
                }
                set {
                    this[this.tableSALBASND.DE_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DE_TEL {
                get {
                    return ((string)(this[this.tableSALBASND.DE_TELColumn]));
                }
                set {
                    this[this.tableSALBASND.DE_TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DE_ADD {
                get {
                    return ((string)(this[this.tableSALBASND.DE_ADDColumn]));
                }
                set {
                    this[this.tableSALBASND.DE_ADDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LAW_DEPT {
                get {
                    return ((string)(this[this.tableSALBASND.LAW_DEPTColumn]));
                }
                set {
                    this[this.tableSALBASND.LAW_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LAW_MAN {
                get {
                    return ((string)(this[this.tableSALBASND.LAW_MANColumn]));
                }
                set {
                    this[this.tableSALBASND.LAW_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string LAW_TEL {
                get {
                    return ((string)(this[this.tableSALBASND.LAW_TELColumn]));
                }
                set {
                    this[this.tableSALBASND.LAW_TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime P_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASND.P_DATEColumn]));
                }
                set {
                    this[this.tableSALBASND.P_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime F_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASND.F_DATEColumn]));
                }
                set {
                    this[this.tableSALBASND.F_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime T_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASND.T_DATEColumn]));
                }
                set {
                    this[this.tableSALBASND.T_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime C_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALBASND.C_DATEColumn]));
                }
                set {
                    this[this.tableSALBASND.C_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal P_PER {
                get {
                    return ((decimal)(this[this.tableSALBASND.P_PERColumn]));
                }
                set {
                    this[this.tableSALBASND.P_PERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACNO {
                get {
                    return ((string)(this[this.tableSALBASND.ACNOColumn]));
                }
                set {
                    this[this.tableSALBASND.ACNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    try {
                        return ((string)(this[this.tableSALBASND.NAME_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALBASND\' 中資料行 \'NAME_C\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALBASND.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_NAME {
                get {
                    try {
                        return ((string)(this[this.tableSALBASND.DEPT_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALBASND\' 中資料行 \'DEPT_NAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALBASND.DEPT_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D_NO {
                get {
                    return ((string)(this[this.tableSALBASND.D_NOColumn]));
                }
                set {
                    this[this.tableSALBASND.D_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableSALBASND.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableSALBASND.SAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MIN_COST_LIVING {
                get {
                    return ((decimal)(this[this.tableSALBASND.MIN_COST_LIVINGColumn]));
                }
                set {
                    this[this.tableSALBASND.MIN_COST_LIVINGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNAME_CNull() {
                return this.IsNull(this.tableSALBASND.NAME_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNAME_CNull() {
                this[this.tableSALBASND.NAME_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_NAMENull() {
                return this.IsNull(this.tableSALBASND.DEPT_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_NAMENull() {
                this[this.tableSALBASND.DEPT_NAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALENRICHRow : global::System.Data.DataRow {
            
            private SALENRICHDataTable tableSALENRICH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALENRICHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALENRICH = ((SALENRICHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableSALENRICH.NOBRColumn]));
                }
                set {
                    this[this.tableSALENRICH.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableSALENRICH.YYMMColumn]));
                }
                set {
                    this[this.tableSALENRICH.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableSALENRICH.SEQColumn]));
                }
                set {
                    this[this.tableSALENRICH.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALENRICH.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALENRICH.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableSALENRICH.AMTColumn]));
                }
                set {
                    this[this.tableSALENRICH.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALENRICH.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALENRICH.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALENRICH.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALENRICH.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MEMO {
                get {
                    return ((string)(this[this.tableSALENRICH.MEMOColumn]));
                }
                set {
                    this[this.tableSALENRICH.MEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableSALENRICH.FA_IDNOColumn]));
                }
                set {
                    this[this.tableSALENRICH.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IMPORT {
                get {
                    return ((bool)(this[this.tableSALENRICH.IMPORTColumn]));
                }
                set {
                    this[this.tableSALENRICH.IMPORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableSALENRICH.NAME_CColumn]));
                }
                set {
                    this[this.tableSALENRICH.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableSALENRICH.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableSALENRICH.SAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int AUTOKEY {
                get {
                    return ((int)(this[this.tableSALENRICH.AUTOKEYColumn]));
                }
                set {
                    this[this.tableSALENRICH.AUTOKEYColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ACCCDRowChangeEvent : global::System.EventArgs {
            
            private ACCCDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCCDRowChangeEvent(ACCCDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ACCCDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALTYCDRowChangeEvent : global::System.EventArgs {
            
            private SALTYCDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALTYCDRowChangeEvent(SALTYCDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALTYCDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALATTRRowChangeEvent : global::System.EventArgs {
            
            private SALATTRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALATTRRowChangeEvent(SALATTRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALATTRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALCODERowChangeEvent : global::System.EventArgs {
            
            private SALCODERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERowChangeEvent(SALCODERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALADRRowChangeEvent : global::System.EventArgs {
            
            private SALADRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALADRRowChangeEvent(SALADRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALADRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class WAGERowChangeEvent : global::System.EventArgs {
            
            private WAGERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGERowChangeEvent(WAGERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class WAGEDRowChangeEvent : global::System.EventArgs {
            
            private WAGEDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDRowChangeEvent(WAGEDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALBASDRowChangeEvent : global::System.EventArgs {
            
            private SALBASDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASDRowChangeEvent(SALBASDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALBASTDRowChangeEvent : global::System.EventArgs {
            
            private SALBASTDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASTDRowChangeEvent(SALBASTDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASTDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class TAXLVLRowChangeEvent : global::System.EventArgs {
            
            private TAXLVLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TAXLVLRowChangeEvent(TAXLVLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public TAXLVLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class MA_FOODRowChangeEvent : global::System.EventArgs {
            
            private MA_FOODRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public MA_FOODRowChangeEvent(MA_FOODRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public MA_FOODRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class WAGEDDRowChangeEvent : global::System.EventArgs {
            
            private WAGEDDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDRowChangeEvent(WAGEDDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public WAGEDDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALABSRowChangeEvent : global::System.EventArgs {
            
            private SALABSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALABSRowChangeEvent(SALABSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALABSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class OTRowChangeEvent : global::System.EventArgs {
            
            private OTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OTRowChangeEvent(OTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public OTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BASERowChangeEvent : global::System.EventArgs {
            
            private BASERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASERowChangeEvent(BASERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class BASETTSRowChangeEvent : global::System.EventArgs {
            
            private BASETTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASETTSRowChangeEvent(BASETTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public BASETTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class INSGLVRowChangeEvent : global::System.EventArgs {
            
            private INSGLVRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGLVRowChangeEvent(INSGLVRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGLVRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FRM47RowChangeEvent : global::System.EventArgs {
            
            private FRM47Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FRM47RowChangeEvent(FRM47Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FRM47Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ENRICHRowChangeEvent : global::System.EventArgs {
            
            private ENRICHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ENRICHRowChangeEvent(ENRICHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ENRICHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALBASD1RowChangeEvent : global::System.EventArgs {
            
            private SALBASD1Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD1RowChangeEvent(SALBASD1Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD1Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EXPLABRowChangeEvent : global::System.EventArgs {
            
            private EXPLABRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPLABRowChangeEvent(EXPLABRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPLABRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALBASD_TMPRowChangeEvent : global::System.EventArgs {
            
            private SALBASD_TMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD_TMPRowChangeEvent(SALBASD_TMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASD_TMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ExplabCNRowChangeEvent : global::System.EventArgs {
            
            private ExplabCNRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ExplabCNRowChangeEvent(ExplabCNRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ExplabCNRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class EXPSUPRowChangeEvent : global::System.EventArgs {
            
            private EXPSUPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPSUPRowChangeEvent(EXPSUPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public EXPSUPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALBASERowChangeEvent : global::System.EventArgs {
            
            private SALBASERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASERowChangeEvent(SALBASERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALFUNCTIONRowChangeEvent : global::System.EventArgs {
            
            private SALFUNCTIONRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALFUNCTIONRowChangeEvent(SALFUNCTIONRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALFUNCTIONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALBASNDRowChangeEvent : global::System.EventArgs {
            
            private SALBASNDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASNDRowChangeEvent(SALBASNDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALBASNDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALENRICHRowChangeEvent : global::System.EventArgs {
            
            private SALENRICHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALENRICHRowChangeEvent(SALENRICHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALENRICHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JBHR.Sal.SalaryDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ACCCDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ACCCDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ACCCD";
            tableMapping.ColumnMappings.Add("ACCCD", "ACCCD");
            tableMapping.ColumnMappings.Add("ACCNAME", "ACCNAME");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("ACC_TR", "ACC_TR");
            tableMapping.ColumnMappings.Add("ACCCR", "ACCCR");
            tableMapping.ColumnMappings.Add("ACCDR", "ACCDR");
            tableMapping.ColumnMappings.Add("ACC_TRNAME", "ACC_TRNAME");
            tableMapping.ColumnMappings.Add("ACCNAME_E", "ACCNAME_E");
            tableMapping.ColumnMappings.Add("ACCCD_DISP", "ACCCD_DISP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [acccd] WHERE (([ACCCD] = @Original_ACCCD) AND ([ACCNAME] = @Original_ACCNAME) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([ACC_TR] = @Original_ACC_TR) AND ([ACCCR] = @Original_ACCCR) AND ([ACCDR] = @Original_ACCDR))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACC_TR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACC_TR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ACCCD
                            (ACCCD, ACCNAME, KEY_MAN, KEY_DATE, ACC_TR, ACCCR, ACCDR, ACCNAME_E, ACCCD_DISP)
VALUES          (@ACCCD,@ACCNAME,@KEY_MAN,@KEY_DATE,@ACC_TR,@ACCCR,@ACCDR,@ACCNAME_E,@ACCCD_DISP);   
SELECT ACCCD, ACCNAME, KEY_MAN, KEY_DATE, ACC_TR, ACCCR, ACCDR FROM ACCCD WHERE (ACCCD = @ACCCD)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCNAME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACC_TR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACC_TR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCDR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCNAME_E", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCNAME_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD_DISP", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          ACCCD
SET                   ACCCD = @ACCCD, ACCNAME = @ACCNAME, KEY_MAN = @KEY_MAN, KEY_DATE = @KEY_DATE, 
                            ACC_TR = @ACC_TR, ACCCR = @ACCCR, ACCDR = @ACCDR, ACCNAME_E = @ACCNAME_E, 
                            ACCCD_DISP = @ACCCD_DISP
WHERE          (ACCCD = @Original_ACCCD) AND (ACCNAME = @Original_ACCNAME) AND (KEY_MAN = @Original_KEY_MAN) AND 
                            (KEY_DATE = @Original_KEY_DATE) AND (ACC_TR = @Original_ACC_TR) AND (ACCCR = @Original_ACCCR) AND 
                            (ACCDR = @Original_ACCDR);  
SELECT ACCCD, ACCNAME, KEY_MAN, KEY_DATE, ACC_TR, ACCCR, ACCDR FROM ACCCD WHERE (ACCCD = @ACCCD)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCNAME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACC_TR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACC_TR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCDR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCNAME_E", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCNAME_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD_DISP", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCNAME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACC_TR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACC_TR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCDR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACCDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          A.ACCCD, A.ACCNAME, A.KEY_MAN, A.KEY_DATE, A.ACC_TR, A.ACCCR, A.ACCDR, A.ACCNAME_E, 
                            B.NAME AS ACC_TRNAME, A.ACCCD_DISP
FROM              ACCCD AS A INNER JOIN
                            ACCCDATTR AS B ON A.ACC_TR = B.CODE
WHERE          (dbo.GetCodeFilter(N'ACCCD', A.ACCCD, @USERID, @COMP, @ADMIN) = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADMIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.ACCCDDataTable dataTable, string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.ACCCDDataTable GetData(string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            SalaryDS.ACCCDDataTable dataTable = new SalaryDS.ACCCDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.ACCCDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "ACCCD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ACCCD, string Original_ACCNAME, string Original_KEY_MAN, System.DateTime Original_KEY_DATE, string Original_ACC_TR, string Original_ACCCR, string Original_ACCDR) {
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ACCCD));
            }
            if ((Original_ACCNAME == null)) {
                throw new global::System.ArgumentNullException("Original_ACCNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ACCNAME));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_ACC_TR == null)) {
                throw new global::System.ArgumentNullException("Original_ACC_TR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ACC_TR));
            }
            if ((Original_ACCCR == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ACCCR));
            }
            if ((Original_ACCDR == null)) {
                throw new global::System.ArgumentNullException("Original_ACCDR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ACCDR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ACCCD, string ACCNAME, string KEY_MAN, System.DateTime KEY_DATE, string ACC_TR, string ACCCR, string ACCDR, string ACCNAME_E, string ACCCD_DISP) {
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ACCCD));
            }
            if ((ACCNAME == null)) {
                throw new global::System.ArgumentNullException("ACCNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ACCNAME));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE));
            if ((ACC_TR == null)) {
                throw new global::System.ArgumentNullException("ACC_TR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ACC_TR));
            }
            if ((ACCCR == null)) {
                throw new global::System.ArgumentNullException("ACCCR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ACCCR));
            }
            if ((ACCDR == null)) {
                throw new global::System.ArgumentNullException("ACCDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ACCDR));
            }
            if ((ACCNAME_E == null)) {
                throw new global::System.ArgumentNullException("ACCNAME_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ACCNAME_E));
            }
            if ((ACCCD_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(ACCCD_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ACCCD, 
                    string ACCNAME, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string ACC_TR, 
                    string ACCCR, 
                    string ACCDR, 
                    string ACCNAME_E, 
                    string ACCCD_DISP, 
                    string Original_ACCCD, 
                    string Original_ACCNAME, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_ACC_TR, 
                    string Original_ACCCR, 
                    string Original_ACCDR) {
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ACCCD));
            }
            if ((ACCNAME == null)) {
                throw new global::System.ArgumentNullException("ACCNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ACCNAME));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE));
            if ((ACC_TR == null)) {
                throw new global::System.ArgumentNullException("ACC_TR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ACC_TR));
            }
            if ((ACCCR == null)) {
                throw new global::System.ArgumentNullException("ACCCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ACCCR));
            }
            if ((ACCDR == null)) {
                throw new global::System.ArgumentNullException("ACCDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ACCDR));
            }
            if ((ACCNAME_E == null)) {
                throw new global::System.ArgumentNullException("ACCNAME_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ACCNAME_E));
            }
            if ((ACCCD_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(ACCCD_DISP));
            }
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_ACCCD));
            }
            if ((Original_ACCNAME == null)) {
                throw new global::System.ArgumentNullException("Original_ACCNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_ACCNAME));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_ACC_TR == null)) {
                throw new global::System.ArgumentNullException("Original_ACC_TR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_ACC_TR));
            }
            if ((Original_ACCCR == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_ACCCR));
            }
            if ((Original_ACCDR == null)) {
                throw new global::System.ArgumentNullException("Original_ACCDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ACCDR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ACCNAME, string KEY_MAN, System.DateTime KEY_DATE, string ACC_TR, string ACCCR, string ACCDR, string ACCNAME_E, string ACCCD_DISP, string Original_ACCCD, string Original_ACCNAME, string Original_KEY_MAN, System.DateTime Original_KEY_DATE, string Original_ACC_TR, string Original_ACCCR, string Original_ACCDR) {
            return this.Update(Original_ACCCD, ACCNAME, KEY_MAN, KEY_DATE, ACC_TR, ACCCR, ACCDR, ACCNAME_E, ACCCD_DISP, Original_ACCCD, Original_ACCNAME, Original_KEY_MAN, Original_KEY_DATE, Original_ACC_TR, Original_ACCCR, Original_ACCDR);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALTYCDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALTYCDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALTYCD";
            tableMapping.ColumnMappings.Add("SALTYCD", "SALTYCD");
            tableMapping.ColumnMappings.Add("SALTYNAME", "SALTYNAME");
            tableMapping.ColumnMappings.Add("PARA1", "PARA1");
            tableMapping.ColumnMappings.Add("DEFINE1", "DEFINE1");
            tableMapping.ColumnMappings.Add("PARA2", "PARA2");
            tableMapping.ColumnMappings.Add("DEFINE2", "DEFINE2");
            tableMapping.ColumnMappings.Add("PARA3", "PARA3");
            tableMapping.ColumnMappings.Add("DEFINE3", "DEFINE3");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SALTYCD] WHERE (([SALTYCD] = @Original_SALTYCD) AND ([SALTYNAME] = @Original_SALTYNAME) AND ([PARA1] = @Original_PARA1) AND ([DEFINE1] = @Original_DEFINE1) AND ([PARA2] = @Original_PARA2) AND ([DEFINE2] = @Original_DEFINE2) AND ([PARA3] = @Original_PARA3) AND ([DEFINE3] = @Original_DEFINE3) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTYCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARA1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARA2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINE2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARA3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINE3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALTYCD] ([SALTYCD], [SALTYNAME], [PARA1], [DEFINE1], [PARA2], [DEFINE2], [PARA3], [DEFINE3], [KEY_DATE], [KEY_MAN]) VALUES (@SALTYCD, @SALTYNAME, @PARA1, @DEFINE1, @PARA2, @DEFINE2, @PARA3, @DEFINE3, @KEY_DATE, @KEY_MAN);
SELECT SALTYCD, SALTYNAME, PARA1, DEFINE1, PARA2, DEFINE2, PARA3, DEFINE3, KEY_DATE, KEY_MAN FROM SALTYCD WHERE (SALTYCD = @SALTYCD)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTYCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARA1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARA2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINE2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARA3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINE3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SALTYCD] SET [SALTYCD] = @SALTYCD, [SALTYNAME] = @SALTYNAME, [PARA1] = @PARA1, [DEFINE1] = @DEFINE1, [PARA2] = @PARA2, [DEFINE2] = @DEFINE2, [PARA3] = @PARA3, [DEFINE3] = @DEFINE3, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([SALTYCD] = @Original_SALTYCD) AND ([SALTYNAME] = @Original_SALTYNAME) AND ([PARA1] = @Original_PARA1) AND ([DEFINE1] = @Original_DEFINE1) AND ([PARA2] = @Original_PARA2) AND ([DEFINE2] = @Original_DEFINE2) AND ([PARA3] = @Original_PARA3) AND ([DEFINE3] = @Original_DEFINE3) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN));
SELECT SALTYCD, SALTYNAME, PARA1, DEFINE1, PARA2, DEFINE2, PARA3, DEFINE3, KEY_DATE, KEY_MAN FROM SALTYCD WHERE (SALTYCD = @SALTYCD)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTYCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARA1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARA2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINE2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARA3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINE3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTYCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTYNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTYNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARA1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARA2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINE2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARA3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARA3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINE3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINE3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          SALTYCD, SALTYNAME, PARA1, DEFINE1, PARA2, DEFINE2, PARA3, DEFINE" +
                "3, KEY_DATE, KEY_MAN\r\nFROM              FRM42";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALTYCDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALTYCDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALTYCDDataTable dataTable = new SalaryDS.SALTYCDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALTYCDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALTYCD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SALTYCD, string Original_SALTYNAME, string Original_PARA1, decimal Original_DEFINE1, string Original_PARA2, decimal Original_DEFINE2, string Original_PARA3, decimal Original_DEFINE3, System.DateTime Original_KEY_DATE, string Original_KEY_MAN) {
            if ((Original_SALTYCD == null)) {
                throw new global::System.ArgumentNullException("Original_SALTYCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SALTYCD));
            }
            if ((Original_SALTYNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SALTYNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SALTYNAME));
            }
            if ((Original_PARA1 == null)) {
                throw new global::System.ArgumentNullException("Original_PARA1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PARA1));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_DEFINE1));
            if ((Original_PARA2 == null)) {
                throw new global::System.ArgumentNullException("Original_PARA2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PARA2));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_DEFINE2));
            if ((Original_PARA3 == null)) {
                throw new global::System.ArgumentNullException("Original_PARA3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PARA3));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_DEFINE3));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SALTYCD, string SALTYNAME, string PARA1, decimal DEFINE1, string PARA2, decimal DEFINE2, string PARA3, decimal DEFINE3, System.DateTime KEY_DATE, string KEY_MAN) {
            if ((SALTYCD == null)) {
                throw new global::System.ArgumentNullException("SALTYCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SALTYCD));
            }
            if ((SALTYNAME == null)) {
                throw new global::System.ArgumentNullException("SALTYNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SALTYNAME));
            }
            if ((PARA1 == null)) {
                throw new global::System.ArgumentNullException("PARA1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PARA1));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(DEFINE1));
            if ((PARA2 == null)) {
                throw new global::System.ArgumentNullException("PARA2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PARA2));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(DEFINE2));
            if ((PARA3 == null)) {
                throw new global::System.ArgumentNullException("PARA3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PARA3));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(DEFINE3));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SALTYCD, 
                    string SALTYNAME, 
                    string PARA1, 
                    decimal DEFINE1, 
                    string PARA2, 
                    decimal DEFINE2, 
                    string PARA3, 
                    decimal DEFINE3, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string Original_SALTYCD, 
                    string Original_SALTYNAME, 
                    string Original_PARA1, 
                    decimal Original_DEFINE1, 
                    string Original_PARA2, 
                    decimal Original_DEFINE2, 
                    string Original_PARA3, 
                    decimal Original_DEFINE3, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN) {
            if ((SALTYCD == null)) {
                throw new global::System.ArgumentNullException("SALTYCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SALTYCD));
            }
            if ((SALTYNAME == null)) {
                throw new global::System.ArgumentNullException("SALTYNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SALTYNAME));
            }
            if ((PARA1 == null)) {
                throw new global::System.ArgumentNullException("PARA1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PARA1));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(DEFINE1));
            if ((PARA2 == null)) {
                throw new global::System.ArgumentNullException("PARA2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PARA2));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(DEFINE2));
            if ((PARA3 == null)) {
                throw new global::System.ArgumentNullException("PARA3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PARA3));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(DEFINE3));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(KEY_MAN));
            }
            if ((Original_SALTYCD == null)) {
                throw new global::System.ArgumentNullException("Original_SALTYCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_SALTYCD));
            }
            if ((Original_SALTYNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SALTYNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_SALTYNAME));
            }
            if ((Original_PARA1 == null)) {
                throw new global::System.ArgumentNullException("Original_PARA1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_PARA1));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_DEFINE1));
            if ((Original_PARA2 == null)) {
                throw new global::System.ArgumentNullException("Original_PARA2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_PARA2));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_DEFINE2));
            if ((Original_PARA3 == null)) {
                throw new global::System.ArgumentNullException("Original_PARA3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_PARA3));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(Original_DEFINE3));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SALTYNAME, 
                    string PARA1, 
                    decimal DEFINE1, 
                    string PARA2, 
                    decimal DEFINE2, 
                    string PARA3, 
                    decimal DEFINE3, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string Original_SALTYCD, 
                    string Original_SALTYNAME, 
                    string Original_PARA1, 
                    decimal Original_DEFINE1, 
                    string Original_PARA2, 
                    decimal Original_DEFINE2, 
                    string Original_PARA3, 
                    decimal Original_DEFINE3, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN) {
            return this.Update(Original_SALTYCD, SALTYNAME, PARA1, DEFINE1, PARA2, DEFINE2, PARA3, DEFINE3, KEY_DATE, KEY_MAN, Original_SALTYCD, Original_SALTYNAME, Original_PARA1, Original_DEFINE1, Original_PARA2, Original_DEFINE2, Original_PARA3, Original_DEFINE3, Original_KEY_DATE, Original_KEY_MAN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALATTRTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALATTRTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALATTR";
            tableMapping.ColumnMappings.Add("SALATTR", "SALATTR");
            tableMapping.ColumnMappings.Add("ATTR_NAME", "ATTR_NAME");
            tableMapping.ColumnMappings.Add("NOT_DISP", "NOT_DISP");
            tableMapping.ColumnMappings.Add("BASIC", "BASIC");
            tableMapping.ColumnMappings.Add("TYPE", "TYPE");
            tableMapping.ColumnMappings.Add("FLAG", "FLAG");
            tableMapping.ColumnMappings.Add("TAX", "TAX");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SALATTR] WHERE (([SALATTR] = @Original_SALATTR) AND ([ATTR_NAME] = @Original_ATTR_NAME) AND ([NOT_DISP] = @Original_NOT_DISP) AND ([BASIC] = @Original_BASIC) AND ([TYPE] = @Original_TYPE) AND ([FLAG] = @Original_FLAG) AND ([TAX] = @Original_TAX))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALATTR] ([SALATTR], [ATTR_NAME], [NOT_DISP], [BASIC], [TYPE], [FLAG], [TAX]) VALUES (@SALATTR, @ATTR_NAME, @NOT_DISP, @BASIC, @TYPE, @FLAG, @TAX);
SELECT SALATTR, ATTR_NAME, NOT_DISP, BASIC, TYPE, FLAG, TAX FROM SALATTR WHERE (SALATTR = @SALATTR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SALATTR] SET [SALATTR] = @SALATTR, [ATTR_NAME] = @ATTR_NAME, [NOT_DISP] = @NOT_DISP, [BASIC] = @BASIC, [TYPE] = @TYPE, [FLAG] = @FLAG, [TAX] = @TAX WHERE (([SALATTR] = @Original_SALATTR) AND ([ATTR_NAME] = @Original_ATTR_NAME) AND ([NOT_DISP] = @Original_NOT_DISP) AND ([BASIC] = @Original_BASIC) AND ([TYPE] = @Original_TYPE) AND ([FLAG] = @Original_FLAG) AND ([TAX] = @Original_TAX));
SELECT SALATTR, ATTR_NAME, NOT_DISP, BASIC, TYPE, FLAG, TAX FROM SALATTR WHERE (SALATTR = @SALATTR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM SALATTR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALATTRDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALATTRDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALATTRDataTable dataTable = new SalaryDS.SALATTRDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALATTRDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALATTR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SALATTR, string Original_ATTR_NAME, bool Original_NOT_DISP, bool Original_BASIC, string Original_TYPE, string Original_FLAG, bool Original_TAX) {
            if ((Original_SALATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SALATTR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SALATTR));
            }
            if ((Original_ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ATTR_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ATTR_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_NOT_DISP));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_BASIC));
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TYPE));
            }
            if ((Original_FLAG == null)) {
                throw new global::System.ArgumentNullException("Original_FLAG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_FLAG));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_TAX));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SALATTR, string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX) {
            if ((SALATTR == null)) {
                throw new global::System.ArgumentNullException("SALATTR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SALATTR));
            }
            if ((ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("ATTR_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ATTR_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(NOT_DISP));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(BASIC));
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TYPE));
            }
            if ((FLAG == null)) {
                throw new global::System.ArgumentNullException("FLAG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FLAG));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(TAX));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SALATTR, string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX, string Original_SALATTR, string Original_ATTR_NAME, bool Original_NOT_DISP, bool Original_BASIC, string Original_TYPE, string Original_FLAG, bool Original_TAX) {
            if ((SALATTR == null)) {
                throw new global::System.ArgumentNullException("SALATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SALATTR));
            }
            if ((ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("ATTR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ATTR_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(NOT_DISP));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(BASIC));
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TYPE));
            }
            if ((FLAG == null)) {
                throw new global::System.ArgumentNullException("FLAG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FLAG));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(TAX));
            if ((Original_SALATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SALATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SALATTR));
            }
            if ((Original_ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ATTR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ATTR_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_NOT_DISP));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_BASIC));
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TYPE));
            }
            if ((Original_FLAG == null)) {
                throw new global::System.ArgumentNullException("Original_FLAG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_FLAG));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_TAX));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX, string Original_SALATTR, string Original_ATTR_NAME, bool Original_NOT_DISP, bool Original_BASIC, string Original_TYPE, string Original_FLAG, bool Original_TAX) {
            return this.Update(Original_SALATTR, ATTR_NAME, NOT_DISP, BASIC, TYPE, FLAG, TAX, Original_SALATTR, Original_ATTR_NAME, Original_NOT_DISP, Original_BASIC, Original_TYPE, Original_FLAG, Original_TAX);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALCODETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALCODETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALCODE";
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("SAL_ATTR", "SAL_ATTR");
            tableMapping.ColumnMappings.Add("SOS_ID", "SOS_ID");
            tableMapping.ColumnMappings.Add("WEL", "WEL");
            tableMapping.ColumnMappings.Add("OT", "OT");
            tableMapping.ColumnMappings.Add("MAX_AMT", "MAX_AMT");
            tableMapping.ColumnMappings.Add("MIN_AMT", "MIN_AMT");
            tableMapping.ColumnMappings.Add("CAL_FREQ", "CAL_FREQ");
            tableMapping.ColumnMappings.Add("CAL_TYPE", "CAL_TYPE");
            tableMapping.ColumnMappings.Add("HRS", "HRS");
            tableMapping.ColumnMappings.Add("MONTHTYPE", "MONTHTYPE");
            tableMapping.ColumnMappings.Add("DEFINEDAYS", "DEFINEDAYS");
            tableMapping.ColumnMappings.Add("ADVPAY", "ADVPAY");
            tableMapping.ColumnMappings.Add("ACCCD", "ACCCD");
            tableMapping.ColumnMappings.Add("ATT", "ATT");
            tableMapping.ColumnMappings.Add("DAILY", "DAILY");
            tableMapping.ColumnMappings.Add("RETIRE", "RETIRE");
            tableMapping.ColumnMappings.Add("FORBANK", "FORBANK");
            tableMapping.ColumnMappings.Add("FORCASH", "FORCASH");
            tableMapping.ColumnMappings.Add("NOTFREQ", "NOTFREQ");
            tableMapping.ColumnMappings.Add("TAXRATE", "TAXRATE");
            tableMapping.ColumnMappings.Add("YEARPAY", "YEARPAY");
            tableMapping.ColumnMappings.Add("ABSPAY", "ABSPAY");
            tableMapping.ColumnMappings.Add("INSLAB", "INSLAB");
            tableMapping.ColumnMappings.Add("LATER", "LATER");
            tableMapping.ColumnMappings.Add("SAL_ENAME", "SAL_ENAME");
            tableMapping.ColumnMappings.Add("OLDRETIRE", "OLDRETIRE");
            tableMapping.ColumnMappings.Add("SALBASD1", "SALBASD1");
            tableMapping.ColumnMappings.Add("SAL_CODE_DISP", "SAL_CODE_DISP");
            tableMapping.ColumnMappings.Add("SUP", "SUP");
            tableMapping.ColumnMappings.Add("SAL_NAME_VN", "SAL_NAME_VN");
            tableMapping.ColumnMappings.Add("SALCODE_GROUP", "SALCODE_GROUP");
            tableMapping.ColumnMappings.Add("SALBASE", "SALBASE");
            tableMapping.ColumnMappings.Add("NOTFREQSEQ", "NOTFREQSEQ");
            tableMapping.ColumnMappings.Add("SORT", "SORT");
            tableMapping.ColumnMappings.Add("SALSEQ", "SALSEQ");
            tableMapping.ColumnMappings.Add("ImportSEQ2", "ImportSEQ2");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [SALCODE] WHERE (([SAL_CODE] = @Original_SAL_CODE) AND ([SAL_NAME] = " +
                "@Original_SAL_NAME) AND ([SAL_ATTR] = @Original_SAL_ATTR) AND ([KEY_MAN] = @Orig" +
                "inal_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([SOS_ID] = @Original_SO" +
                "S_ID) AND ([WEL] = @Original_WEL) AND ([OT] = @Original_OT) AND ([MAX_AMT] = @Or" +
                "iginal_MAX_AMT) AND ([MIN_AMT] = @Original_MIN_AMT) AND ([CAL_FREQ] = @Original_" +
                "CAL_FREQ) AND ([CAL_TYPE] = @Original_CAL_TYPE) AND ([HRS] = @Original_HRS) AND " +
                "([MONTHTYPE] = @Original_MONTHTYPE) AND ([DEFINEDAYS] = @Original_DEFINEDAYS) AN" +
                "D ([ADVPAY] = @Original_ADVPAY) AND ([ACCCD] = @Original_ACCCD) AND ([ATT] = @Or" +
                "iginal_ATT) AND ([DAILY] = @Original_DAILY) AND ([RETIRE] = @Original_RETIRE) AN" +
                "D ([FORBANK] = @Original_FORBANK) AND ([FORCASH] = @Original_FORCASH) AND ([NOTF" +
                "REQ] = @Original_NOTFREQ) AND ([TAXRATE] = @Original_TAXRATE) AND ([YEARPAY] = @" +
                "Original_YEARPAY) AND ([ABSPAY] = @Original_ABSPAY) AND ([INSLAB] = @Original_IN" +
                "SLAB) AND ([LATER] = @Original_LATER) AND ([SAL_ENAME] = @Original_SAL_ENAME) AN" +
                "D ([OLDRETIRE] = @Original_OLDRETIRE) AND ([SALBASD1] = @Original_SALBASD1) AND " +
                "((@IsNull_SAL_CODE_DISP = 1 AND [SAL_CODE_DISP] IS NULL) OR ([SAL_CODE_DISP] = @" +
                "Original_SAL_CODE_DISP)) AND ([SUP] = @Original_SUP) AND ([SAL_NAME_VN] = @Origi" +
                "nal_SAL_NAME_VN) AND ((@IsNull_SALCODE_GROUP = 1 AND [SALCODE_GROUP] IS NULL) OR" +
                " ([SALCODE_GROUP] = @Original_SALCODE_GROUP)) AND ((@IsNull_SALBASE = 1 AND [SAL" +
                "BASE] IS NULL) OR ([SALBASE] = @Original_SALBASE)) AND ([NOTFREQSEQ] = @Original" +
                "_NOTFREQSEQ) AND ((@IsNull_SORT = 1 AND [SORT] IS NULL) OR ([SORT] = @Original_S" +
                "ORT)) AND ([SALSEQ] = @Original_SALSEQ) AND ([ImportSEQ2] = @Original_ImportSEQ2" +
                "))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAL_CODE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME_VN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME_VN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SALCODE_GROUP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALCODE_GROUP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALCODE_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALCODE_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SALBASE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQSEQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQSEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALSEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportSEQ2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportSEQ2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALCODE] ([SAL_CODE], [SAL_NAME], [SAL_ATTR], [KEY_MAN], [KEY_DATE], [SOS_ID], [WEL], [OT], [MAX_AMT], [MIN_AMT], [CAL_FREQ], [CAL_TYPE], [HRS], [MONTHTYPE], [DEFINEDAYS], [ADVPAY], [ACCCD], [ATT], [DAILY], [RETIRE], [FORBANK], [FORCASH], [NOTFREQ], [TAXRATE], [YEARPAY], [ABSPAY], [INSLAB], [LATER], [SAL_ENAME], [OLDRETIRE], [SALBASD1], [SAL_CODE_DISP], [SUP], [SAL_NAME_VN], [SALCODE_GROUP], [SALBASE], [NOTFREQSEQ], [SORT], [SALSEQ], [ImportSEQ2]) VALUES (@SAL_CODE, @SAL_NAME, @SAL_ATTR, @KEY_MAN, @KEY_DATE, @SOS_ID, @WEL, @OT, @MAX_AMT, @MIN_AMT, @CAL_FREQ, @CAL_TYPE, @HRS, @MONTHTYPE, @DEFINEDAYS, @ADVPAY, @ACCCD, @ATT, @DAILY, @RETIRE, @FORBANK, @FORCASH, @NOTFREQ, @TAXRATE, @YEARPAY, @ABSPAY, @INSLAB, @LATER, @SAL_ENAME, @OLDRETIRE, @SALBASD1, @SAL_CODE_DISP, @SUP, @SAL_NAME_VN, @SALCODE_GROUP, @SALBASE, @NOTFREQSEQ, @SORT, @SALSEQ, @ImportSEQ2);
SELECT SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP, SUP, SAL_NAME_VN, SALCODE_GROUP, SALBASE, NOTFREQSEQ, SORT, SALSEQ, ImportSEQ2 FROM SALCODE WHERE (SAL_CODE = @SAL_CODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME_VN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME_VN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALCODE_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALCODE_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQSEQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQSEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALSEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportSEQ2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportSEQ2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [SALCODE] SET [SAL_CODE] = @SAL_CODE, [SAL_NAME] = @SAL_NAME, [SAL_ATTR] =" +
                " @SAL_ATTR, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [SOS_ID] = @SOS_ID, [W" +
                "EL] = @WEL, [OT] = @OT, [MAX_AMT] = @MAX_AMT, [MIN_AMT] = @MIN_AMT, [CAL_FREQ] =" +
                " @CAL_FREQ, [CAL_TYPE] = @CAL_TYPE, [HRS] = @HRS, [MONTHTYPE] = @MONTHTYPE, [DEF" +
                "INEDAYS] = @DEFINEDAYS, [ADVPAY] = @ADVPAY, [ACCCD] = @ACCCD, [ATT] = @ATT, [DAI" +
                "LY] = @DAILY, [RETIRE] = @RETIRE, [FORBANK] = @FORBANK, [FORCASH] = @FORCASH, [N" +
                "OTFREQ] = @NOTFREQ, [TAXRATE] = @TAXRATE, [YEARPAY] = @YEARPAY, [ABSPAY] = @ABSP" +
                "AY, [INSLAB] = @INSLAB, [LATER] = @LATER, [SAL_ENAME] = @SAL_ENAME, [OLDRETIRE] " +
                "= @OLDRETIRE, [SALBASD1] = @SALBASD1, [SAL_CODE_DISP] = @SAL_CODE_DISP, [SUP] = " +
                "@SUP, [SAL_NAME_VN] = @SAL_NAME_VN, [SALCODE_GROUP] = @SALCODE_GROUP, [SALBASE] " +
                "= @SALBASE, [NOTFREQSEQ] = @NOTFREQSEQ, [SORT] = @SORT, [SALSEQ] = @SALSEQ, [Imp" +
                "ortSEQ2] = @ImportSEQ2 WHERE (([SAL_CODE] = @Original_SAL_CODE) AND ([SAL_NAME] " +
                "= @Original_SAL_NAME) AND ([SAL_ATTR] = @Original_SAL_ATTR) AND ([KEY_MAN] = @Or" +
                "iginal_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([SOS_ID] = @Original_" +
                "SOS_ID) AND ([WEL] = @Original_WEL) AND ([OT] = @Original_OT) AND ([MAX_AMT] = @" +
                "Original_MAX_AMT) AND ([MIN_AMT] = @Original_MIN_AMT) AND ([CAL_FREQ] = @Origina" +
                "l_CAL_FREQ) AND ([CAL_TYPE] = @Original_CAL_TYPE) AND ([HRS] = @Original_HRS) AN" +
                "D ([MONTHTYPE] = @Original_MONTHTYPE) AND ([DEFINEDAYS] = @Original_DEFINEDAYS) " +
                "AND ([ADVPAY] = @Original_ADVPAY) AND ([ACCCD] = @Original_ACCCD) AND ([ATT] = @" +
                "Original_ATT) AND ([DAILY] = @Original_DAILY) AND ([RETIRE] = @Original_RETIRE) " +
                "AND ([FORBANK] = @Original_FORBANK) AND ([FORCASH] = @Original_FORCASH) AND ([NO" +
                "TFREQ] = @Original_NOTFREQ) AND ([TAXRATE] = @Original_TAXRATE) AND ([YEARPAY] =" +
                " @Original_YEARPAY) AND ([ABSPAY] = @Original_ABSPAY) AND ([INSLAB] = @Original_" +
                "INSLAB) AND ([LATER] = @Original_LATER) AND ([SAL_ENAME] = @Original_SAL_ENAME) " +
                "AND ([OLDRETIRE] = @Original_OLDRETIRE) AND ([SALBASD1] = @Original_SALBASD1) AN" +
                "D ((@IsNull_SAL_CODE_DISP = 1 AND [SAL_CODE_DISP] IS NULL) OR ([SAL_CODE_DISP] =" +
                " @Original_SAL_CODE_DISP)) AND ([SUP] = @Original_SUP) AND ([SAL_NAME_VN] = @Ori" +
                "ginal_SAL_NAME_VN) AND ((@IsNull_SALCODE_GROUP = 1 AND [SALCODE_GROUP] IS NULL) " +
                "OR ([SALCODE_GROUP] = @Original_SALCODE_GROUP)) AND ((@IsNull_SALBASE = 1 AND [S" +
                "ALBASE] IS NULL) OR ([SALBASE] = @Original_SALBASE)) AND ([NOTFREQSEQ] = @Origin" +
                "al_NOTFREQSEQ) AND ((@IsNull_SORT = 1 AND [SORT] IS NULL) OR ([SORT] = @Original" +
                "_SORT)) AND ([SALSEQ] = @Original_SALSEQ) AND ([ImportSEQ2] = @Original_ImportSE" +
                "Q2));\r\nSELECT SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, " +
                "MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD," +
                " ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB" +
                ", LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP, SUP, SAL_NAME_VN, SALCOD" +
                "E_GROUP, SALBASE, NOTFREQSEQ, SORT, SALSEQ, ImportSEQ2 FROM SALCODE WHERE (SAL_C" +
                "ODE = @SAL_CODE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME_VN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME_VN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALCODE_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALCODE_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQSEQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQSEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALSEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ImportSEQ2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportSEQ2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAL_CODE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME_VN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME_VN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SALCODE_GROUP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALCODE_GROUP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALCODE_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALCODE_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SALBASE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQSEQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQSEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALSEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ImportSEQ2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ImportSEQ2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, 
                            CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, 
                            NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP, 
                            SUP, SAL_NAME_VN, SALCODE_GROUP, SALBASE, NOTFREQSEQ, SORT, SALSEQ, ImportSEQ2
FROM              SALCODE
WHERE          (dbo.GetCodeFilter(N'SALCODE', SAL_CODE, @USERID, @COMP, @ADMIN) = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADMIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALCODEDataTable dataTable, string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALCODEDataTable GetData(string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            SalaryDS.SALCODEDataTable dataTable = new SalaryDS.SALCODEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALCODEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALCODE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP, 
                    bool Original_SUP, 
                    string Original_SAL_NAME_VN, 
                    string Original_SALCODE_GROUP, 
                    string Original_SALBASE, 
                    bool Original_NOTFREQSEQ, 
                    global::System.Nullable<int> Original_SORT, 
                    string Original_SALSEQ, 
                    bool Original_ImportSEQ2) {
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SAL_CODE));
            }
            if ((Original_SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SAL_NAME));
            }
            if ((Original_SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ATTR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SAL_ATTR));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_SOS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SOS_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SOS_ID));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_WEL));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_OT));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_MAX_AMT));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_MIN_AMT));
            if ((Original_CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_FREQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CAL_FREQ));
            }
            if ((Original_CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CAL_TYPE));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_HRS));
            if ((Original_MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_MONTHTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_MONTHTYPE));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_DEFINEDAYS));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_ADVPAY));
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ACCCD));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_ATT));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_DAILY));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_RETIRE));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_FORBANK));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_FORCASH));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_NOTFREQ));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_TAXRATE));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_YEARPAY));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_ABSPAY));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_INSLAB));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_LATER));
            if ((Original_SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_SAL_ENAME));
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_OLDRETIRE));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_SALBASD1));
            if ((Original_SAL_CODE_DISP == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_SAL_CODE_DISP));
            }
            this.Adapter.DeleteCommand.Parameters[33].Value = ((bool)(Original_SUP));
            if ((Original_SAL_NAME_VN == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME_VN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_SAL_NAME_VN));
            }
            if ((Original_SALCODE_GROUP == null)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((string)(Original_SALCODE_GROUP));
            }
            if ((Original_SALBASE == null)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((string)(Original_SALBASE));
            }
            this.Adapter.DeleteCommand.Parameters[39].Value = ((bool)(Original_NOTFREQSEQ));
            if ((Original_SORT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((int)(Original_SORT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_SALSEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SALSEQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((string)(Original_SALSEQ));
            }
            this.Adapter.DeleteCommand.Parameters[43].Value = ((bool)(Original_ImportSEQ2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SAL_CODE, 
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP, 
                    bool SUP, 
                    string SAL_NAME_VN, 
                    string SALCODE_GROUP, 
                    string SALBASE, 
                    bool NOTFREQSEQ, 
                    global::System.Nullable<int> SORT, 
                    string SALSEQ, 
                    bool ImportSEQ2) {
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SAL_CODE));
            }
            if ((SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SAL_NAME));
            }
            if ((SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("SAL_ATTR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SAL_ATTR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((SOS_ID == null)) {
                throw new global::System.ArgumentNullException("SOS_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SOS_ID));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(WEL));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(OT));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(MAX_AMT));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(MIN_AMT));
            if ((CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("CAL_FREQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CAL_FREQ));
            }
            if ((CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("CAL_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CAL_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(HRS));
            if ((MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("MONTHTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MONTHTYPE));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(DEFINEDAYS));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(ADVPAY));
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ACCCD));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(ATT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(DAILY));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(RETIRE));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(FORBANK));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(FORCASH));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(NOTFREQ));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(TAXRATE));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(YEARPAY));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(ABSPAY));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(INSLAB));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(LATER));
            if ((SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("SAL_ENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(SAL_ENAME));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(OLDRETIRE));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(SALBASD1));
            if ((SAL_CODE_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(SAL_CODE_DISP));
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(SUP));
            if ((SAL_NAME_VN == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME_VN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(SAL_NAME_VN));
            }
            if ((SALCODE_GROUP == null)) {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(SALCODE_GROUP));
            }
            if ((SALBASE == null)) {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = ((string)(SALBASE));
            }
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(NOTFREQSEQ));
            if ((SORT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((int)(SORT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((SALSEQ == null)) {
                throw new global::System.ArgumentNullException("SALSEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = ((string)(SALSEQ));
            }
            this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(ImportSEQ2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAL_CODE, 
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP, 
                    bool SUP, 
                    string SAL_NAME_VN, 
                    string SALCODE_GROUP, 
                    string SALBASE, 
                    bool NOTFREQSEQ, 
                    global::System.Nullable<int> SORT, 
                    string SALSEQ, 
                    bool ImportSEQ2, 
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP, 
                    bool Original_SUP, 
                    string Original_SAL_NAME_VN, 
                    string Original_SALCODE_GROUP, 
                    string Original_SALBASE, 
                    bool Original_NOTFREQSEQ, 
                    global::System.Nullable<int> Original_SORT, 
                    string Original_SALSEQ, 
                    bool Original_ImportSEQ2) {
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SAL_CODE));
            }
            if ((SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SAL_NAME));
            }
            if ((SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("SAL_ATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SAL_ATTR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((SOS_ID == null)) {
                throw new global::System.ArgumentNullException("SOS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SOS_ID));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(WEL));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(OT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(MAX_AMT));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(MIN_AMT));
            if ((CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("CAL_FREQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CAL_FREQ));
            }
            if ((CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("CAL_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CAL_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(HRS));
            if ((MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("MONTHTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MONTHTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(DEFINEDAYS));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(ADVPAY));
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ACCCD));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(ATT));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(DAILY));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(RETIRE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(FORBANK));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(FORCASH));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(NOTFREQ));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(TAXRATE));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(YEARPAY));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(ABSPAY));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(INSLAB));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(LATER));
            if ((SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("SAL_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(SAL_ENAME));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(OLDRETIRE));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(SALBASD1));
            if ((SAL_CODE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(SAL_CODE_DISP));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(SUP));
            if ((SAL_NAME_VN == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME_VN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(SAL_NAME_VN));
            }
            if ((SALCODE_GROUP == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(SALCODE_GROUP));
            }
            if ((SALBASE == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(SALBASE));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(NOTFREQSEQ));
            if ((SORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((int)(SORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((SALSEQ == null)) {
                throw new global::System.ArgumentNullException("SALSEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(SALSEQ));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(ImportSEQ2));
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_SAL_CODE));
            }
            if ((Original_SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_SAL_NAME));
            }
            if ((Original_SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_SAL_ATTR));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_SOS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SOS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_SOS_ID));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(Original_WEL));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_OT));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_MAX_AMT));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(Original_MIN_AMT));
            if ((Original_CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_FREQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_CAL_FREQ));
            }
            if ((Original_CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_CAL_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(Original_HRS));
            if ((Original_MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_MONTHTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_MONTHTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(Original_DEFINEDAYS));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_ADVPAY));
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_ACCCD));
            }
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_ATT));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_DAILY));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_RETIRE));
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(Original_FORBANK));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_FORCASH));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_NOTFREQ));
            this.Adapter.UpdateCommand.Parameters[63].Value = ((decimal)(Original_TAXRATE));
            this.Adapter.UpdateCommand.Parameters[64].Value = ((bool)(Original_YEARPAY));
            this.Adapter.UpdateCommand.Parameters[65].Value = ((bool)(Original_ABSPAY));
            this.Adapter.UpdateCommand.Parameters[66].Value = ((bool)(Original_INSLAB));
            this.Adapter.UpdateCommand.Parameters[67].Value = ((bool)(Original_LATER));
            if ((Original_SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(Original_SAL_ENAME));
            }
            this.Adapter.UpdateCommand.Parameters[69].Value = ((bool)(Original_OLDRETIRE));
            this.Adapter.UpdateCommand.Parameters[70].Value = ((bool)(Original_SALBASD1));
            if ((Original_SAL_CODE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(Original_SAL_CODE_DISP));
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Original_SUP));
            if ((Original_SAL_NAME_VN == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME_VN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((string)(Original_SAL_NAME_VN));
            }
            if ((Original_SALCODE_GROUP == null)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((string)(Original_SALCODE_GROUP));
            }
            if ((Original_SALBASE == null)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(Original_SALBASE));
            }
            this.Adapter.UpdateCommand.Parameters[79].Value = ((bool)(Original_NOTFREQSEQ));
            if ((Original_SORT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_SORT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_SALSEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SALSEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((string)(Original_SALSEQ));
            }
            this.Adapter.UpdateCommand.Parameters[83].Value = ((bool)(Original_ImportSEQ2));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP, 
                    bool SUP, 
                    string SAL_NAME_VN, 
                    string SALCODE_GROUP, 
                    string SALBASE, 
                    bool NOTFREQSEQ, 
                    global::System.Nullable<int> SORT, 
                    string SALSEQ, 
                    bool ImportSEQ2, 
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP, 
                    bool Original_SUP, 
                    string Original_SAL_NAME_VN, 
                    string Original_SALCODE_GROUP, 
                    string Original_SALBASE, 
                    bool Original_NOTFREQSEQ, 
                    global::System.Nullable<int> Original_SORT, 
                    string Original_SALSEQ, 
                    bool Original_ImportSEQ2) {
            return this.Update(Original_SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP, SUP, SAL_NAME_VN, SALCODE_GROUP, SALBASE, NOTFREQSEQ, SORT, SALSEQ, ImportSEQ2, Original_SAL_CODE, Original_SAL_NAME, Original_SAL_ATTR, Original_KEY_MAN, Original_KEY_DATE, Original_SOS_ID, Original_WEL, Original_OT, Original_MAX_AMT, Original_MIN_AMT, Original_CAL_FREQ, Original_CAL_TYPE, Original_HRS, Original_MONTHTYPE, Original_DEFINEDAYS, Original_ADVPAY, Original_ACCCD, Original_ATT, Original_DAILY, Original_RETIRE, Original_FORBANK, Original_FORCASH, Original_NOTFREQ, Original_TAXRATE, Original_YEARPAY, Original_ABSPAY, Original_INSLAB, Original_LATER, Original_SAL_ENAME, Original_OLDRETIRE, Original_SALBASD1, Original_SAL_CODE_DISP, Original_SUP, Original_SAL_NAME_VN, Original_SALCODE_GROUP, Original_SALBASE, Original_NOTFREQSEQ, Original_SORT, Original_SALSEQ, Original_ImportSEQ2);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALADRTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALADRTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALADR";
            tableMapping.ColumnMappings.Add("SALADR", "SALADR");
            tableMapping.ColumnMappings.Add("SALNAME", "SALNAME");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [SALADR] WHERE (([SALADR] = @Original_SALADR) AND ([SALNAME] = @Origi" +
                "nal_SALNAME) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KE" +
                "Y_MAN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [SALADR] ([SALADR], [SALNAME], [KEY_DATE], [KEY_MAN]) VALUES (@SALADR" +
                ", @SALNAME, @KEY_DATE, @KEY_MAN);\r\nSELECT SALADR, SALNAME, KEY_DATE, KEY_MAN FRO" +
                "M SALADR WHERE (SALADR = @SALADR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SALADR] SET [SALADR] = @SALADR, [SALNAME] = @SALNAME, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([SALADR] = @Original_SALADR) AND ([SALNAME] = @Original_SALNAME) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN));
SELECT SALADR, SALNAME, KEY_DATE, KEY_MAN FROM SALADR WHERE (SALADR = @SALADR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          SALADR, SALNAME, KEY_DATE, KEY_MAN\r\nFROM              SALADR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALADRDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALADRDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALADRDataTable dataTable = new SalaryDS.SALADRDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALADRDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALADR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SALADR, string Original_SALNAME, System.DateTime Original_KEY_DATE, string Original_KEY_MAN) {
            if ((Original_SALADR == null)) {
                throw new global::System.ArgumentNullException("Original_SALADR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SALADR));
            }
            if ((Original_SALNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SALNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SALNAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SALADR, string SALNAME, System.DateTime KEY_DATE, string KEY_MAN) {
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SALADR));
            }
            if ((SALNAME == null)) {
                throw new global::System.ArgumentNullException("SALNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SALNAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SALADR, string SALNAME, System.DateTime KEY_DATE, string KEY_MAN, string Original_SALADR, string Original_SALNAME, System.DateTime Original_KEY_DATE, string Original_KEY_MAN) {
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SALADR));
            }
            if ((SALNAME == null)) {
                throw new global::System.ArgumentNullException("SALNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SALNAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            if ((Original_SALADR == null)) {
                throw new global::System.ArgumentNullException("Original_SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_SALADR));
            }
            if ((Original_SALNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SALNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SALNAME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SALNAME, System.DateTime KEY_DATE, string KEY_MAN, string Original_SALADR, string Original_SALNAME, System.DateTime Original_KEY_DATE, string Original_KEY_MAN) {
            return this.Update(Original_SALADR, SALNAME, KEY_DATE, KEY_MAN, Original_SALADR, Original_SALNAME, Original_KEY_DATE, Original_KEY_MAN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WAGETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public WAGETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WAGE";
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("BANKNO", "BANKNO");
            tableMapping.ColumnMappings.Add("ACCOUNT_NO", "ACCOUNT_NO");
            tableMapping.ColumnMappings.Add("WK_DAYS", "WK_DAYS");
            tableMapping.ColumnMappings.Add("CASH", "CASH");
            tableMapping.ColumnMappings.Add("NOTE", "NOTE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("DATE_B", "DATE_B");
            tableMapping.ColumnMappings.Add("DATE_E", "DATE_E");
            tableMapping.ColumnMappings.Add("FORMAT", "FORMAT");
            tableMapping.ColumnMappings.Add("TAXRATE", "TAXRATE");
            tableMapping.ColumnMappings.Add("SALADR", "SALADR");
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("ATT_DATEB", "ATT_DATEB");
            tableMapping.ColumnMappings.Add("ATT_DATEE", "ATT_DATEE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [WAGE] WHERE (([YYMM] = @Original_YYMM) AND ([SEQ] = @Original_SEQ) A" +
                "ND ([NOBR] = @Original_NOBR))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [WAGE] ([YYMM], [SEQ], [NOBR], [ADATE], [BANKNO], [ACCOUNT_NO], [WK_DAYS], [CASH], [NOTE], [KEY_MAN], [KEY_DATE], [DATE_B], [DATE_E], [FORMAT], [TAXRATE], [SALADR], [COMP], [ATT_DATEB], [ATT_DATEE]) VALUES (@YYMM, @SEQ, @NOBR, @ADATE, @BANKNO, @ACCOUNT_NO, @WK_DAYS, @CASH, @NOTE, @KEY_MAN, @KEY_DATE, @DATE_B, @DATE_E, @FORMAT, @TAXRATE, @SALADR, @COMP, @ATT_DATEB, @ATT_DATEE);
SELECT YYMM, SEQ, NOBR, ADATE, BANKNO, ACCOUNT_NO, WK_DAYS, CASH, NOTE, KEY_MAN, KEY_DATE, DATE_B, DATE_E, FORMAT, TAXRATE, SALADR, COMP, ATT_DATEB, ATT_DATEE FROM WAGE WHERE (NOBR = @NOBR) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BANKNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCOUNT_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORMAT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT_DATEB", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT_DATEB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT_DATEE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT_DATEE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [WAGE] SET [YYMM] = @YYMM, [SEQ] = @SEQ, [NOBR] = @NOBR, [ADATE] = @ADATE, [BANKNO] = @BANKNO, [ACCOUNT_NO] = @ACCOUNT_NO, [WK_DAYS] = @WK_DAYS, [CASH] = @CASH, [NOTE] = @NOTE, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [DATE_B] = @DATE_B, [DATE_E] = @DATE_E, [FORMAT] = @FORMAT, [TAXRATE] = @TAXRATE, [SALADR] = @SALADR, [COMP] = @COMP, [ATT_DATEB] = @ATT_DATEB, [ATT_DATEE] = @ATT_DATEE WHERE (([YYMM] = @Original_YYMM) AND ([SEQ] = @Original_SEQ) AND ([NOBR] = @Original_NOBR));
SELECT YYMM, SEQ, NOBR, ADATE, BANKNO, ACCOUNT_NO, WK_DAYS, CASH, NOTE, KEY_MAN, KEY_DATE, DATE_B, DATE_E, FORMAT, TAXRATE, SALADR, COMP, ATT_DATEB, ATT_DATEE FROM WAGE WHERE (NOBR = @NOBR) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BANKNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCOUNT_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORMAT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT_DATEB", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT_DATEB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT_DATEE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT_DATEE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          YYMM, SEQ, NOBR, ADATE, BANKNO, ACCOUNT_NO, WK_DAYS, CASH, NOTE, " +
                "KEY_MAN, KEY_DATE, DATE_B, \r\n                            DATE_E, FORMAT, TAXRATE" +
                ", SALADR, COMP, ATT_DATEB, ATT_DATEE\r\nFROM              WAGE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.WAGEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.WAGEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.WAGEDataTable dataTable = new SalaryDS.WAGEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.WAGEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "WAGE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_YYMM, string Original_SEQ, string Original_NOBR) {
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_YYMM));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SEQ));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NOBR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string YYMM, 
                    string SEQ, 
                    string NOBR, 
                    System.DateTime ADATE, 
                    string BANKNO, 
                    string ACCOUNT_NO, 
                    decimal WK_DAYS, 
                    bool CASH, 
                    string NOTE, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    System.DateTime DATE_B, 
                    System.DateTime DATE_E, 
                    string FORMAT, 
                    decimal TAXRATE, 
                    string SALADR, 
                    string COMP, 
                    global::System.Nullable<global::System.DateTime> ATT_DATEB, 
                    global::System.Nullable<global::System.DateTime> ATT_DATEE) {
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SEQ));
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ADATE));
            if ((BANKNO == null)) {
                throw new global::System.ArgumentNullException("BANKNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(BANKNO));
            }
            if ((ACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ACCOUNT_NO));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(WK_DAYS));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(CASH));
            if ((NOTE == null)) {
                throw new global::System.ArgumentNullException("NOTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NOTE));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(DATE_B));
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(DATE_E));
            if ((FORMAT == null)) {
                throw new global::System.ArgumentNullException("FORMAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(FORMAT));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(TAXRATE));
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(SALADR));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(COMP));
            }
            if ((ATT_DATEB.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(ATT_DATEB.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ATT_DATEE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(ATT_DATEE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string YYMM, 
                    string SEQ, 
                    string NOBR, 
                    System.DateTime ADATE, 
                    string BANKNO, 
                    string ACCOUNT_NO, 
                    decimal WK_DAYS, 
                    bool CASH, 
                    string NOTE, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    System.DateTime DATE_B, 
                    System.DateTime DATE_E, 
                    string FORMAT, 
                    decimal TAXRATE, 
                    string SALADR, 
                    string COMP, 
                    global::System.Nullable<global::System.DateTime> ATT_DATEB, 
                    global::System.Nullable<global::System.DateTime> ATT_DATEE, 
                    string Original_YYMM, 
                    string Original_SEQ, 
                    string Original_NOBR) {
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SEQ));
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ADATE));
            if ((BANKNO == null)) {
                throw new global::System.ArgumentNullException("BANKNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BANKNO));
            }
            if ((ACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ACCOUNT_NO));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(WK_DAYS));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(CASH));
            if ((NOTE == null)) {
                throw new global::System.ArgumentNullException("NOTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NOTE));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(DATE_B));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(DATE_E));
            if ((FORMAT == null)) {
                throw new global::System.ArgumentNullException("FORMAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(FORMAT));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(TAXRATE));
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(SALADR));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(COMP));
            }
            if ((ATT_DATEB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(ATT_DATEB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ATT_DATEE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(ATT_DATEE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_YYMM));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_SEQ));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_NOBR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime ADATE, 
                    string BANKNO, 
                    string ACCOUNT_NO, 
                    decimal WK_DAYS, 
                    bool CASH, 
                    string NOTE, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    System.DateTime DATE_B, 
                    System.DateTime DATE_E, 
                    string FORMAT, 
                    decimal TAXRATE, 
                    string SALADR, 
                    string COMP, 
                    global::System.Nullable<global::System.DateTime> ATT_DATEB, 
                    global::System.Nullable<global::System.DateTime> ATT_DATEE, 
                    string Original_YYMM, 
                    string Original_SEQ, 
                    string Original_NOBR) {
            return this.Update(Original_YYMM, Original_SEQ, Original_NOBR, ADATE, BANKNO, ACCOUNT_NO, WK_DAYS, CASH, NOTE, KEY_MAN, KEY_DATE, DATE_B, DATE_E, FORMAT, TAXRATE, SALADR, COMP, ATT_DATEB, ATT_DATEE, Original_YYMM, Original_SEQ, Original_NOBR);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WAGEDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public WAGEDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WAGED";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [WAGED] WHERE (([NOBR] = @Original_NOBR) AND ([YYMM] = @Original_YYMM" +
                ") AND ([SEQ] = @Original_SEQ) AND ([SAL_CODE] = @Original_SAL_CODE) AND ([AMT] =" +
                " @Original_AMT))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [WAGED] ([NOBR], [YYMM], [SEQ], [SAL_CODE], [AMT]) VALUES (@NOBR, @YY" +
                "MM, @SEQ, @SAL_CODE, @AMT);\r\nSELECT NOBR, YYMM, SEQ, SAL_CODE, AMT FROM WAGED WH" +
                "ERE (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE) AND (SEQ = @SEQ) AND (YYMM = @YYMM" +
                ")";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [WAGED] SET [NOBR] = @NOBR, [YYMM] = @YYMM, [SEQ] = @SEQ, [SAL_CODE] = @SAL_CODE, [AMT] = @AMT WHERE (([NOBR] = @Original_NOBR) AND ([YYMM] = @Original_YYMM) AND ([SEQ] = @Original_SEQ) AND ([SAL_CODE] = @Original_SAL_CODE) AND ([AMT] = @Original_AMT));
SELECT NOBR, YYMM, SEQ, SAL_CODE, AMT FROM WAGED WHERE (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM WAGED";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          NOBR, YYMM, SEQ, SAL_CODE, AMT\r\nFROM              WAGED\r\nWHERE   " +
                "       (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT          WAGED.NOBR, WAGED.YYMM, WAGED.SEQ, WAGED.SAL_CODE, WAGED.AMT
FROM              WAGED INNER JOIN
                            SALCODE ON WAGED.SAL_CODE = SALCODE.SAL_CODE INNER JOIN
                            SALATTR ON SALCODE.SAL_ATTR = SALATTR.SALATTR
WHERE          (WAGED.NOBR = @nobr) AND (WAGED.YYMM = @yymm) AND (WAGED.SEQ = @seq) AND (SALATTR.TYPE = @type)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nobr", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@yymm", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@seq", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@type", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.WAGEDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.WAGEDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.WAGEDDataTable dataTable = new SalaryDS.WAGEDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.WAGEDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.WAGEDDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.WAGEDDataTable dataTable = new SalaryDS.WAGEDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNobr_Yymm_Seq_Type(SalaryDS.WAGEDDataTable dataTable, string nobr, string yymm, string seq, string type) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            if ((yymm == null)) {
                throw new global::System.ArgumentNullException("yymm");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(yymm));
            }
            if ((seq == null)) {
                throw new global::System.ArgumentNullException("seq");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(seq));
            }
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(type));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.WAGEDDataTable GetDataByNobr_Yymm_Seq_Type(string nobr, string yymm, string seq, string type) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            if ((yymm == null)) {
                throw new global::System.ArgumentNullException("yymm");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(yymm));
            }
            if ((seq == null)) {
                throw new global::System.ArgumentNullException("seq");
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(seq));
            }
            if ((type == null)) {
                throw new global::System.ArgumentNullException("type");
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(type));
            }
            SalaryDS.WAGEDDataTable dataTable = new SalaryDS.WAGEDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.WAGEDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "WAGED");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_YYMM, string Original_SEQ, string Original_SAL_CODE, decimal Original_AMT) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_YYMM));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SEQ));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SAL_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_AMT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SEQ));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(AMT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT, string Original_NOBR, string Original_YYMM, string Original_SEQ, string Original_SAL_CODE, decimal Original_AMT) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SEQ));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(AMT));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NOBR));
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_YYMM));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SEQ));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_AMT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal AMT, string Original_NOBR, string Original_YYMM, string Original_SEQ, string Original_SAL_CODE, decimal Original_AMT) {
            return this.Update(Original_NOBR, Original_YYMM, Original_SEQ, Original_SAL_CODE, AMT, Original_NOBR, Original_YYMM, Original_SEQ, Original_SAL_CODE, Original_AMT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALBASDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALBASDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALBASD";
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("AMTB", "AMTB");
            tableMapping.ColumnMappings.Add("MENO", "MENO");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            tableMapping.ColumnMappings.Add("SAL_CODE_DISP", "SAL_CODE_DISP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM SALBASD
WHERE          (ADATE = @Original_ADATE) AND (NOBR = @Original_NOBR) AND (SAL_CODE = @Original_SAL_CODE) AND 
                            (KEY_MAN = @Original_KEY_MAN) AND (KEY_DATE = @Original_KEY_DATE) AND (AMTB = @Original_AMTB) AND 
                            (MENO = @Original_MENO)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMTB", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALBASD] ([ADATE], [NOBR], [SAL_CODE], [AMT], [KEY_MAN], [KEY_DATE], [AMTB], [MENO], [DDATE]) VALUES (@ADATE, @NOBR, @SAL_CODE, @AMT, @KEY_MAN, @KEY_DATE, @AMTB, @MENO, @DDATE);
SELECT ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE FROM SALBASD WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          SALBASD
SET                   ADATE = @ADATE, NOBR = @NOBR, SAL_CODE = @SAL_CODE, AMT = @AMT, KEY_MAN = @KEY_MAN, 
                            KEY_DATE = @KEY_DATE, AMTB = @AMTB, MENO = @MENO, DDATE = @DDATE
WHERE          (ADATE = @Original_ADATE) AND (NOBR = @Original_NOBR) AND (SAL_CODE = @Original_SAL_CODE) AND 
                            (AMTB = @Original_AMTB) AND (MENO = @Original_MENO);   
SELECT ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE FROM SALBASD WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMTB", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMTB", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE," +
                " NAME_C, SAL_NAME, \r\n                            SAL_CODE_DISP\r\nFROM            " +
                "  FRM46";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE," +
                " NAME_C, SAL_NAME, \r\n                            SAL_CODE_DISP\r\nFROM            " +
                "  FRM46\r\nWHERE          (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT ADATE, AMT, AMTB, DDATE, KEY_DATE, KEY_MAN, MENO, NOBR, SAL_CODE FROM SALB" +
                "ASD WHERE (NOBR = @NOBR) AND (SAL_CODE = @SALCODE)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALCODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT          ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE, NAME_C, SAL_NAME, 
                            SAL_CODE_DISP
FROM              FRM46
WHERE          (CONVERT(datetime, CONVERT(varchar, GETDATE(), 102)) BETWEEN ADATE AND DDATE) AND (NOBR = @nobr)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nobr", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALBASDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALBASDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALBASDDataTable dataTable = new SalaryDS.SALBASDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.SALBASDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASDDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.SALBASDDataTable dataTable = new SalaryDS.SALBASDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNobrCode(SalaryDS.SALBASDDataTable dataTable, string NOBR, string SALCODE) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((SALCODE == null)) {
                throw new global::System.ArgumentNullException("SALCODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SALCODE));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASDDataTable GetDataByNobrCode(string NOBR, string SALCODE) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((SALCODE == null)) {
                throw new global::System.ArgumentNullException("SALCODE");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(SALCODE));
            }
            SalaryDS.SALBASDDataTable dataTable = new SalaryDS.SALBASDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNobrDateBetween(SalaryDS.SALBASDDataTable dataTable, string nobr) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASDDataTable GetDataByNobrDateBetween(string nobr) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            SalaryDS.SALBASDDataTable dataTable = new SalaryDS.SALBASDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALBASDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALBASD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_ADATE, string Original_NOBR, string Original_SAL_CODE, string Original_KEY_MAN, System.DateTime Original_KEY_DATE, decimal Original_AMTB, string Original_MENO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NOBR));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SAL_CODE));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_AMTB));
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MENO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime ADATE, string NOBR, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, System.DateTime DDATE) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(ADATE));
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOBR));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(AMTB));
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MENO));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(DDATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime ADATE, string NOBR, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, System.DateTime DDATE, System.DateTime Original_ADATE, string Original_NOBR, string Original_SAL_CODE, decimal Original_AMTB, string Original_MENO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(ADATE));
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOBR));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(AMTB));
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MENO));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(DDATE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_NOBR));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_AMTB));
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_MENO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, System.DateTime DDATE, System.DateTime Original_ADATE, string Original_NOBR, string Original_SAL_CODE, decimal Original_AMTB, string Original_MENO) {
            return this.Update(Original_ADATE, Original_NOBR, Original_SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE, Original_ADATE, Original_NOBR, Original_SAL_CODE, Original_AMTB, Original_MENO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALBASTDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALBASTDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALBASTD";
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("AMTB", "AMTB");
            tableMapping.ColumnMappings.Add("MENO", "MENO");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM SALBASTD
WHERE          (ADATE = @Original_ADATE) AND (NOBR = @Original_NOBR) AND (SAL_CODE = @Original_SAL_CODE) AND 
                            (KEY_MAN = @Original_KEY_MAN) AND (KEY_DATE = @Original_KEY_DATE) AND (AMTB = @Original_AMTB) AND 
                            (MENO = @Original_MENO) AND (DDATE = @Original_DDATE)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMTB", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALBASTD] ([ADATE], [NOBR], [SAL_CODE], [AMT], [KEY_MAN], [KEY_DATE], [AMTB], [MENO], [DDATE]) VALUES (@ADATE, @NOBR, @SAL_CODE, @AMT, @KEY_MAN, @KEY_DATE, @AMTB, @MENO, @DDATE);
SELECT ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE FROM SALBASTD WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          SALBASTD
SET                   ADATE = @ADATE, NOBR = @NOBR, SAL_CODE = @SAL_CODE, AMT = @AMT, KEY_MAN = @KEY_MAN, 
                            KEY_DATE = @KEY_DATE, AMTB = @AMTB, MENO = @MENO, DDATE = @DDATE
WHERE          (ADATE = @Original_ADATE) AND (NOBR = @Original_NOBR) AND (SAL_CODE = @Original_SAL_CODE) AND 
                            (AMTB = @Original_AMTB) AND (MENO = @Original_MENO) AND (DDATE = @Original_DDATE);  
SELECT ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE FROM SALBASTD WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMTB", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMTB", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE," +
                " NAME_C, SAL_NAME\r\nFROM              FRM46A";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          ADATE, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, DDATE," +
                " NAME_C, SAL_NAME\r\nFROM              FRM46A\r\nwhere 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALBASTDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALBASTDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALBASTDDataTable dataTable = new SalaryDS.SALBASTDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.SALBASTDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASTDDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.SALBASTDDataTable dataTable = new SalaryDS.SALBASTDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALBASTDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALBASTD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TAXLVLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public TAXLVLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TAXLVL";
            tableMapping.ColumnMappings.Add("YEAR", "YEAR");
            tableMapping.ColumnMappings.Add("AMT_H", "AMT_H");
            tableMapping.ColumnMappings.Add("AMT_L", "AMT_L");
            tableMapping.ColumnMappings.Add("PER0", "PER0");
            tableMapping.ColumnMappings.Add("PER1", "PER1");
            tableMapping.ColumnMappings.Add("PER2", "PER2");
            tableMapping.ColumnMappings.Add("PER3", "PER3");
            tableMapping.ColumnMappings.Add("PER4", "PER4");
            tableMapping.ColumnMappings.Add("PER5", "PER5");
            tableMapping.ColumnMappings.Add("PER6", "PER6");
            tableMapping.ColumnMappings.Add("PER7", "PER7");
            tableMapping.ColumnMappings.Add("PER8", "PER8");
            tableMapping.ColumnMappings.Add("PER9", "PER9");
            tableMapping.ColumnMappings.Add("PER10", "PER10");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("PER11", "PER11");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TAXLVL] WHERE (([YEAR] = @Original_YEAR) AND ([AMT_H] = @Original_AMT_H) AND ([AMT_L] = @Original_AMT_L) AND ([PER0] = @Original_PER0) AND ([PER1] = @Original_PER1) AND ([PER2] = @Original_PER2) AND ([PER3] = @Original_PER3) AND ([PER4] = @Original_PER4) AND ([PER5] = @Original_PER5) AND ([PER6] = @Original_PER6) AND ([PER7] = @Original_PER7) AND ([PER8] = @Original_PER8) AND ([PER9] = @Original_PER9) AND ([PER10] = @Original_PER10) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([PER11] = @Original_PER11))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT_H", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_H", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT_L", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_L", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER0", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER0", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TAXLVL] ([YEAR], [AMT_H], [AMT_L], [PER0], [PER1], [PER2], [PER3], [PER4], [PER5], [PER6], [PER7], [PER8], [PER9], [PER10], [KEY_MAN], [KEY_DATE], [PER11]) VALUES (@YEAR, @AMT_H, @AMT_L, @PER0, @PER1, @PER2, @PER3, @PER4, @PER5, @PER6, @PER7, @PER8, @PER9, @PER10, @KEY_MAN, @KEY_DATE, @PER11);
SELECT YEAR, AMT_H, AMT_L, PER0, PER1, PER2, PER3, PER4, PER5, PER6, PER7, PER8, PER9, PER10, KEY_MAN, KEY_DATE, PER11 FROM TAXLVL WHERE (AMT_H = @AMT_H) AND (YEAR = @YEAR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT_H", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT_L", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_L", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER0", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER0", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TAXLVL] SET [YEAR] = @YEAR, [AMT_H] = @AMT_H, [AMT_L] = @AMT_L, [PER0] = @PER0, [PER1] = @PER1, [PER2] = @PER2, [PER3] = @PER3, [PER4] = @PER4, [PER5] = @PER5, [PER6] = @PER6, [PER7] = @PER7, [PER8] = @PER8, [PER9] = @PER9, [PER10] = @PER10, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [PER11] = @PER11 WHERE (([YEAR] = @Original_YEAR) AND ([AMT_H] = @Original_AMT_H) AND ([AMT_L] = @Original_AMT_L) AND ([PER0] = @Original_PER0) AND ([PER1] = @Original_PER1) AND ([PER2] = @Original_PER2) AND ([PER3] = @Original_PER3) AND ([PER4] = @Original_PER4) AND ([PER5] = @Original_PER5) AND ([PER6] = @Original_PER6) AND ([PER7] = @Original_PER7) AND ([PER8] = @Original_PER8) AND ([PER9] = @Original_PER9) AND ([PER10] = @Original_PER10) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([PER11] = @Original_PER11));
SELECT YEAR, AMT_H, AMT_L, PER0, PER1, PER2, PER3, PER4, PER5, PER6, PER7, PER8, PER9, PER10, KEY_MAN, KEY_DATE, PER11 FROM TAXLVL WHERE (AMT_H = @AMT_H) AND (YEAR = @YEAR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT_H", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_H", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT_L", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_L", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER0", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER0", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER7", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER8", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER9", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER10", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PER11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER11", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT_H", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_H", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT_L", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT_L", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER0", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER0", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER4", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER5", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER6", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER7", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER7", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER8", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER8", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER9", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER9", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER10", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER10", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PER11", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PER11", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          YEAR, AMT_H, AMT_L, PER0, PER1, PER2, PER3, PER4, PER5, PER6, PER" +
                "7, PER8, PER9, PER10, KEY_MAN, \r\n                            KEY_DATE, PER11\r\nFR" +
                "OM              TAXLVL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.TAXLVLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.TAXLVLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.TAXLVLDataTable dataTable = new SalaryDS.TAXLVLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.TAXLVLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "TAXLVL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_YEAR, 
                    decimal Original_AMT_H, 
                    decimal Original_AMT_L, 
                    decimal Original_PER0, 
                    decimal Original_PER1, 
                    decimal Original_PER2, 
                    decimal Original_PER3, 
                    decimal Original_PER4, 
                    decimal Original_PER5, 
                    decimal Original_PER6, 
                    decimal Original_PER7, 
                    decimal Original_PER8, 
                    decimal Original_PER9, 
                    decimal Original_PER10, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    decimal Original_PER11) {
            if ((Original_YEAR == null)) {
                throw new global::System.ArgumentNullException("Original_YEAR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_YEAR));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_AMT_H));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_AMT_L));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_PER0));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PER1));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_PER2));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_PER3));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_PER4));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_PER5));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_PER6));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_PER7));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_PER8));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_PER9));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_PER10));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_PER11));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string YEAR, 
                    decimal AMT_H, 
                    decimal AMT_L, 
                    decimal PER0, 
                    decimal PER1, 
                    decimal PER2, 
                    decimal PER3, 
                    decimal PER4, 
                    decimal PER5, 
                    decimal PER6, 
                    decimal PER7, 
                    decimal PER8, 
                    decimal PER9, 
                    decimal PER10, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal PER11) {
            if ((YEAR == null)) {
                throw new global::System.ArgumentNullException("YEAR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(YEAR));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(AMT_H));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(AMT_L));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PER0));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PER1));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(PER2));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PER3));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(PER4));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(PER5));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(PER6));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(PER7));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(PER8));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(PER9));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(PER10));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(PER11));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string YEAR, 
                    decimal AMT_H, 
                    decimal AMT_L, 
                    decimal PER0, 
                    decimal PER1, 
                    decimal PER2, 
                    decimal PER3, 
                    decimal PER4, 
                    decimal PER5, 
                    decimal PER6, 
                    decimal PER7, 
                    decimal PER8, 
                    decimal PER9, 
                    decimal PER10, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal PER11, 
                    string Original_YEAR, 
                    decimal Original_AMT_H, 
                    decimal Original_AMT_L, 
                    decimal Original_PER0, 
                    decimal Original_PER1, 
                    decimal Original_PER2, 
                    decimal Original_PER3, 
                    decimal Original_PER4, 
                    decimal Original_PER5, 
                    decimal Original_PER6, 
                    decimal Original_PER7, 
                    decimal Original_PER8, 
                    decimal Original_PER9, 
                    decimal Original_PER10, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    decimal Original_PER11) {
            if ((YEAR == null)) {
                throw new global::System.ArgumentNullException("YEAR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(YEAR));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(AMT_H));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(AMT_L));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PER0));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PER1));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(PER2));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(PER3));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PER4));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(PER5));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(PER6));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(PER7));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(PER8));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(PER9));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(PER10));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(PER11));
            if ((Original_YEAR == null)) {
                throw new global::System.ArgumentNullException("Original_YEAR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_YEAR));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_AMT_H));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_AMT_L));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_PER0));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_PER1));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_PER2));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_PER3));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_PER4));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_PER5));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_PER6));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_PER7));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_PER8));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_PER9));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_PER10));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_PER11));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal AMT_L, 
                    decimal PER0, 
                    decimal PER1, 
                    decimal PER2, 
                    decimal PER3, 
                    decimal PER4, 
                    decimal PER5, 
                    decimal PER6, 
                    decimal PER7, 
                    decimal PER8, 
                    decimal PER9, 
                    decimal PER10, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal PER11, 
                    string Original_YEAR, 
                    decimal Original_AMT_H, 
                    decimal Original_AMT_L, 
                    decimal Original_PER0, 
                    decimal Original_PER1, 
                    decimal Original_PER2, 
                    decimal Original_PER3, 
                    decimal Original_PER4, 
                    decimal Original_PER5, 
                    decimal Original_PER6, 
                    decimal Original_PER7, 
                    decimal Original_PER8, 
                    decimal Original_PER9, 
                    decimal Original_PER10, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    decimal Original_PER11) {
            return this.Update(Original_YEAR, Original_AMT_H, AMT_L, PER0, PER1, PER2, PER3, PER4, PER5, PER6, PER7, PER8, PER9, PER10, KEY_MAN, KEY_DATE, PER11, Original_YEAR, Original_AMT_H, Original_AMT_L, Original_PER0, Original_PER1, Original_PER2, Original_PER3, Original_PER4, Original_PER5, Original_PER6, Original_PER7, Original_PER8, Original_PER9, Original_PER10, Original_KEY_MAN, Original_KEY_DATE, Original_PER11);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MA_FOODTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public MA_FOODTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "MA_FOOD";
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("ROTE", "ROTE");
            tableMapping.ColumnMappings.Add("NOT_ROTE", "NOT_ROTE");
            tableMapping.ColumnMappings.Add("MA_AMT", "MA_AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [MA_FOOD] WHERE (([COMP] = @Original_COMP) AND ([ROTE] = @Original_RO" +
                "TE) AND ([NOT_ROTE] = @Original_NOT_ROTE) AND ([MA_AMT] = @Original_MA_AMT) AND " +
                "([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_ROTE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_ROTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MA_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [MA_FOOD] ([COMP], [ROTE], [NOT_ROTE], [MA_AMT], [KEY_MAN], [KEY_DATE" +
                "]) VALUES (@COMP, @ROTE, @NOT_ROTE, @MA_AMT, @KEY_MAN, @KEY_DATE);\r\nSELECT COMP," +
                " ROTE, NOT_ROTE, MA_AMT, KEY_MAN, KEY_DATE FROM MA_FOOD WHERE (COMP = @COMP)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_ROTE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MA_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [MA_FOOD] SET [COMP] = @COMP, [ROTE] = @ROTE, [NOT_ROTE] = @NOT_ROTE, [MA_AMT] = @MA_AMT, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE WHERE (([COMP] = @Original_COMP) AND ([ROTE] = @Original_ROTE) AND ([NOT_ROTE] = @Original_NOT_ROTE) AND ([MA_AMT] = @Original_MA_AMT) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE));
SELECT COMP, ROTE, NOT_ROTE, MA_AMT, KEY_MAN, KEY_DATE FROM MA_FOOD WHERE (COMP = @COMP)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_ROTE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MA_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MA_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_ROTE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_ROTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MA_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MA_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          COMP, ROTE, NOT_ROTE, MA_AMT, KEY_MAN, KEY_DATE\r\nFROM            " +
                "  MA_FOOD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.MA_FOODDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.MA_FOODDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.MA_FOODDataTable dataTable = new SalaryDS.MA_FOODDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.MA_FOODDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "MA_FOOD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_COMP, string Original_ROTE, bool Original_NOT_ROTE, decimal Original_MA_AMT, string Original_KEY_MAN, System.DateTime Original_KEY_DATE) {
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COMP));
            }
            if ((Original_ROTE == null)) {
                throw new global::System.ArgumentNullException("Original_ROTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ROTE));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_NOT_ROTE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_MA_AMT));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string COMP, string ROTE, bool NOT_ROTE, decimal MA_AMT, string KEY_MAN, System.DateTime KEY_DATE) {
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COMP));
            }
            if ((ROTE == null)) {
                throw new global::System.ArgumentNullException("ROTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ROTE));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(NOT_ROTE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(MA_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string COMP, string ROTE, bool NOT_ROTE, decimal MA_AMT, string KEY_MAN, System.DateTime KEY_DATE, string Original_COMP, string Original_ROTE, bool Original_NOT_ROTE, decimal Original_MA_AMT, string Original_KEY_MAN, System.DateTime Original_KEY_DATE) {
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COMP));
            }
            if ((ROTE == null)) {
                throw new global::System.ArgumentNullException("ROTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ROTE));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(NOT_ROTE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(MA_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_COMP));
            }
            if ((Original_ROTE == null)) {
                throw new global::System.ArgumentNullException("Original_ROTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ROTE));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(Original_NOT_ROTE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_MA_AMT));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ROTE, bool NOT_ROTE, decimal MA_AMT, string KEY_MAN, System.DateTime KEY_DATE, string Original_COMP, string Original_ROTE, bool Original_NOT_ROTE, decimal Original_MA_AMT, string Original_KEY_MAN, System.DateTime Original_KEY_DATE) {
            return this.Update(Original_COMP, ROTE, NOT_ROTE, MA_AMT, KEY_MAN, KEY_DATE, Original_COMP, Original_ROTE, Original_NOT_ROTE, Original_MA_AMT, Original_KEY_MAN, Original_KEY_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WAGEDDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public WAGEDDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WAGEDD";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("ACNO", "ACNO");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            tableMapping.ColumnMappings.Add("D_NAME", "D_NAME");
            tableMapping.ColumnMappings.Add("D_NO", "D_NO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [WAGEDD] WHERE (([NOBR] = @Original_NOBR) AND ([YYMM] = @Original_YYM" +
                "M) AND ([SEQ] = @Original_SEQ) AND ([ACNO] = @Original_ACNO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [WAGEDD] ([NOBR], [YYMM], [SEQ], [SAL_CODE], [AMT], [ACNO], [KEY_MAN], [KEY_DATE]) VALUES (@NOBR, @YYMM, @SEQ, @SAL_CODE, @AMT, @ACNO, @KEY_MAN, @KEY_DATE);
SELECT NOBR, YYMM, SEQ, SAL_CODE, AMT, ACNO, KEY_MAN, KEY_DATE FROM WAGEDD WHERE (ACNO = @ACNO) AND (NOBR = @NOBR) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          WAGEDD
SET                   NOBR = @NOBR, YYMM = @YYMM, SEQ = @SEQ, SAL_CODE = @SAL_CODE, AMT = @AMT, ACNO = @ACNO, 
                            KEY_MAN = @KEY_MAN, KEY_DATE = @KEY_DATE
WHERE          (ACNO = @Original_ACNO) AND (NOBR = @Original_NOBR) AND (YYMM = @Original_YYMM) AND 
                            (SEQ = @Original_SEQ);  
SELECT NOBR, YYMM, SEQ, SAL_CODE, AMT, ACNO, KEY_MAN, KEY_DATE FROM WAGEDD WHERE (ACNO = @ACNO) AND (NOBR = @NOBR) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, YYMM, SEQ, SAL_CODE, AMT, ACNO, KEY_MAN, KEY_DATE, NAME_C, " +
                "SAL_NAME, D_NAME, D_NO\r\nFROM              FRM46C";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          NOBR, YYMM, SEQ, SAL_CODE, AMT, ACNO, KEY_MAN, KEY_DATE, NAME_C, " +
                "SAL_NAME, D_NAME, D_NO\r\nFROM              FRM46C\r\nwhere 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.WAGEDDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.WAGEDDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.WAGEDDDataTable dataTable = new SalaryDS.WAGEDDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.WAGEDDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.WAGEDDDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.WAGEDDDataTable dataTable = new SalaryDS.WAGEDDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.WAGEDDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "WAGEDD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALABSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALABSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALABS";
            tableMapping.ColumnMappings.Add("SALSEQ", "SALSEQ");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("ADJ_CODE", "ADJ_CODE");
            tableMapping.ColumnMappings.Add("MLSSALCODE", "MLSSALCODE");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("H_CODE", "H_CODE");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("BTIME", "BTIME");
            tableMapping.ColumnMappings.Add("H_NAME", "H_NAME");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM SALABS
WHERE          (YYMM = @Original_YYMM) AND (NOBR = @Original_NOBR) AND (ADATE = @Original_ADATE) AND 
                            (BTIME = @Original_BTIME) AND (H_CODE = @Original_H_CODE) AND (SAL_CODE = @Original_SAL_CODE) AND 
                            (MLSSALCODE = @MLSSALCODE)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_H_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "H_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MLSSALCODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MLSSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [salabs] ([YYMM], [NOBR], [ADATE], [BTIME], [H_CODE], [SAL_CODE], [AMT], [ADJ_CODE], [MLSSALCODE], [KEY_DATE], [KEY_MAN], [SALSEQ]) VALUES (@YYMM, @NOBR, @ADATE, @BTIME, @H_CODE, @SAL_CODE, @AMT, @ADJ_CODE, @MLSSALCODE, @KEY_DATE, @KEY_MAN, @SALSEQ);
SELECT YYMM, NOBR, ADATE, BTIME, H_CODE, SAL_CODE, AMT, ADJ_CODE, MLSSALCODE, KEY_DATE, KEY_MAN, SALSEQ FROM SALABS WHERE (ADATE = @ADATE) AND (BTIME = @BTIME) AND (H_CODE = @H_CODE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE) AND (YYMM = @YYMM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "H_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADJ_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADJ_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MLSSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MLSSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALSEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALSEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          SALABS
SET                   YYMM = @YYMM, NOBR = @NOBR, ADATE = @ADATE, BTIME = @BTIME, H_CODE = @H_CODE, 
                            SAL_CODE = @SAL_CODE, AMT = @AMT, ADJ_CODE = @ADJ_CODE, MLSSALCODE = @MLSSALCODE, 
                            KEY_DATE = @KEY_DATE, KEY_MAN = @KEY_MAN, SALSEQ = @SALSEQ
WHERE          (YYMM = @Original_YYMM) AND (NOBR = @Original_NOBR) AND (ADATE = @Original_ADATE) AND 
                            (BTIME = @Original_BTIME) AND (H_CODE = @Original_H_CODE) AND (SAL_CODE = @Original_SAL_CODE) AND 
                            (MLSSALCODE = @Original_MLSSALCODE); 
SELECT YYMM, NOBR, ADATE, BTIME, H_CODE, SAL_CODE, AMT, ADJ_CODE, MLSSALCODE, KEY_DATE, KEY_MAN, SALSEQ FROM SALABS WHERE (ADATE = @ADATE) AND (BTIME = @BTIME) AND (H_CODE = @H_CODE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE) AND (YYMM = @YYMM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "H_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADJ_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ADJ_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MLSSALCODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MLSSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALSEQ", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SALSEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_H_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "H_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MLSSALCODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "MLSSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          YYMM, NOBR, ADATE, BTIME, H_CODE, SAL_CODE, AMT, ADJ_CODE, MLSSAL" +
                "CODE, KEY_DATE, KEY_MAN, \r\n                            SALSEQ, H_NAME, NAME_C\r\nF" +
                "ROM              FRM48";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          SALSEQ, SAL_CODE, AMT, ADJ_CODE, MLSSALCODE, KEY_DATE, KEY_MAN, H" +
                "_CODE, NOBR, YYMM, ADATE, \r\n                            BTIME, H_NAME, NAME_C\r\nF" +
                "ROM              FRM48\r\nwhere 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALABSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALABSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALABSDataTable dataTable = new SalaryDS.SALABSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.SALABSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALABSDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.SALABSDataTable dataTable = new SalaryDS.SALABSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALABSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALABS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public OTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "OT";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("BDATE", "BDATE");
            tableMapping.ColumnMappings.Add("BTIME", "BTIME");
            tableMapping.ColumnMappings.Add("ETIME", "ETIME");
            tableMapping.ColumnMappings.Add("TOT_HOURS", "TOT_HOURS");
            tableMapping.ColumnMappings.Add("OT_HRS", "OT_HRS");
            tableMapping.ColumnMappings.Add("REST_HRS", "REST_HRS");
            tableMapping.ColumnMappings.Add("OT_CAR", "OT_CAR");
            tableMapping.ColumnMappings.Add("OT_DEPT", "OT_DEPT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("OT_FOOD", "OT_FOOD");
            tableMapping.ColumnMappings.Add("NOTE", "NOTE");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("SER", "SER");
            tableMapping.ColumnMappings.Add("NOT_W_133", "NOT_W_133");
            tableMapping.ColumnMappings.Add("NOT_W_167", "NOT_W_167");
            tableMapping.ColumnMappings.Add("NOT_W_200", "NOT_W_200");
            tableMapping.ColumnMappings.Add("NOT_H_200", "NOT_H_200");
            tableMapping.ColumnMappings.Add("TOT_W_133", "TOT_W_133");
            tableMapping.ColumnMappings.Add("TOT_W_167", "TOT_W_167");
            tableMapping.ColumnMappings.Add("TOT_W_200", "TOT_W_200");
            tableMapping.ColumnMappings.Add("TOT_H_200", "TOT_H_200");
            tableMapping.ColumnMappings.Add("NOT_EXP", "NOT_EXP");
            tableMapping.ColumnMappings.Add("TOT_EXP", "TOT_EXP");
            tableMapping.ColumnMappings.Add("REST_EXP", "REST_EXP");
            tableMapping.ColumnMappings.Add("FST_HOURS", "FST_HOURS");
            tableMapping.ColumnMappings.Add("SALARY", "SALARY");
            tableMapping.ColumnMappings.Add("NOTMODI", "NOTMODI");
            tableMapping.ColumnMappings.Add("OTRCD", "OTRCD");
            tableMapping.ColumnMappings.Add("NOFOOD", "NOFOOD");
            tableMapping.ColumnMappings.Add("FIX_AMT", "FIX_AMT");
            tableMapping.ColumnMappings.Add("CANT_ADJ", "CANT_ADJ");
            tableMapping.ColumnMappings.Add("OT_EDATE", "OT_EDATE");
            tableMapping.ColumnMappings.Add("OT_ROTE", "OT_ROTE");
            tableMapping.ColumnMappings.Add("OT_FOOD1", "OT_FOOD1");
            tableMapping.ColumnMappings.Add("OT_FOODH", "OT_FOODH");
            tableMapping.ColumnMappings.Add("OT_FOODH1", "OT_FOODH1");
            tableMapping.ColumnMappings.Add("NOP_W_133", "NOP_W_133");
            tableMapping.ColumnMappings.Add("NOP_W_167", "NOP_W_167");
            tableMapping.ColumnMappings.Add("NOP_W_200", "NOP_W_200");
            tableMapping.ColumnMappings.Add("NOP_H_133", "NOP_H_133");
            tableMapping.ColumnMappings.Add("NOP_H_167", "NOP_H_167");
            tableMapping.ColumnMappings.Add("NOP_H_200", "NOP_H_200");
            tableMapping.ColumnMappings.Add("TOP_W_133", "TOP_W_133");
            tableMapping.ColumnMappings.Add("TOP_W_167", "TOP_W_167");
            tableMapping.ColumnMappings.Add("TOP_W_200", "TOP_W_200");
            tableMapping.ColumnMappings.Add("TOP_H_200", "TOP_H_200");
            tableMapping.ColumnMappings.Add("NOT_H_133", "NOT_H_133");
            tableMapping.ColumnMappings.Add("NOT_H_167", "NOT_H_167");
            tableMapping.ColumnMappings.Add("SYSCREAT", "SYSCREAT");
            tableMapping.ColumnMappings.Add("OTRATE_CODE", "OTRATE_CODE");
            tableMapping.ColumnMappings.Add("SYS_OT", "SYS_OT");
            tableMapping.ColumnMappings.Add("SERNO", "SERNO");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("JOB_NAME", "JOB_NAME");
            tableMapping.ColumnMappings.Add("DEPTS_NAME", "DEPTS_NAME");
            tableMapping.ColumnMappings.Add("DEPT_NAME", "DEPT_NAME");
            tableMapping.ColumnMappings.Add("DEPT", "DEPT");
            tableMapping.ColumnMappings.Add("NOFOOD1", "NOFOOD1");
            tableMapping.ColumnMappings.Add("isHoli", "isHoli");
            tableMapping.ColumnMappings.Add("COUNT_MA", "COUNT_MA");
            tableMapping.ColumnMappings.Add("FOOD_PRI", "FOOD_PRI");
            tableMapping.ColumnMappings.Add("FOOD_CNT", "FOOD_CNT");
            tableMapping.ColumnMappings.Add("TOT_W_100", "TOT_W_100");
            tableMapping.ColumnMappings.Add("REC", "REC");
            tableMapping.ColumnMappings.Add("OTNO", "OTNO");
            tableMapping.ColumnMappings.Add("NOP_H_100", "NOP_H_100");
            tableMapping.ColumnMappings.Add("HOT_133", "HOT_133");
            tableMapping.ColumnMappings.Add("HOT_166", "HOT_166");
            tableMapping.ColumnMappings.Add("HOT_200", "HOT_200");
            tableMapping.ColumnMappings.Add("WOT_133", "WOT_133");
            tableMapping.ColumnMappings.Add("WOT_166", "WOT_166");
            tableMapping.ColumnMappings.Add("WOT_200", "WOT_200");
            tableMapping.ColumnMappings.Add("SUM", "SUM");
            tableMapping.ColumnMappings.Add("NOT_W_100", "NOT_W_100");
            tableMapping.ColumnMappings.Add("TOP_W_100", "TOP_W_100");
            tableMapping.ColumnMappings.Add("SYSCREAT1", "SYSCREAT1");
            tableMapping.ColumnMappings.Add("NOP_W_100", "NOP_W_100");
            tableMapping.ColumnMappings.Add("RES", "RES");
            tableMapping.ColumnMappings.Add("EAT", "EAT");
            tableMapping.ColumnMappings.Add("DIFF", "DIFF");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM OT\r\nWHERE          (NOBR = @Original_NOBR) AND (BDATE = @Original_BDA" +
                "TE) AND (BTIME = @Original_BTIME) AND \r\n                            (ETIME = @Or" +
                "iginal_ETIME) AND (TOT_HOURS = @Original_TOT_HOURS) AND (OT_HRS = @Original_OT_H" +
                "RS) AND \r\n                            (REST_HRS = @Original_REST_HRS) AND (OT_CA" +
                "R = @Original_OT_CAR) AND (OT_DEPT = @Original_OT_DEPT) \r\n                      " +
                "      AND (KEY_MAN = @Original_KEY_MAN) AND (KEY_DATE = @Original_KEY_DATE) AND " +
                "\r\n                            (OT_FOOD = @Original_OT_FOOD) AND (NOTE = @Origina" +
                "l_NOTE) AND (FOOD_PRI = @Original_FOOD_PRI) AND \r\n                            (F" +
                "OOD_CNT = @Original_FOOD_CNT) AND (YYMM = @Original_YYMM) AND (SER = @Original_S" +
                "ER) AND \r\n                            (NOT_W_133 = @Original_NOT_W_133) AND (NOT" +
                "_W_167 = @Original_NOT_W_167) AND \r\n                            (NOT_W_200 = @Or" +
                "iginal_NOT_W_200) AND (NOT_H_200 = @Original_NOT_H_200) AND \r\n                  " +
                "          (TOT_W_100 = @Original_TOT_W_100) AND (TOT_W_133 = @Original_TOT_W_133" +
                ") AND \r\n                            (TOT_W_167 = @Original_TOT_W_167) AND (TOT_W" +
                "_200 = @Original_TOT_W_200) AND \r\n                            (TOT_H_200 = @Orig" +
                "inal_TOT_H_200) AND (REST_EXP = @Original_REST_EXP) AND \r\n                      " +
                "      (FST_HOURS = @Original_FST_HOURS) AND (NOTMODI = @Original_NOTMODI) AND (O" +
                "TRCD = @Original_OTRCD) \r\n                            AND (NOFOOD = @Original_NO" +
                "FOOD) AND (FIX_AMT = @Original_FIX_AMT) AND (REC = @Original_REC) AND \r\n        " +
                "                    (CANT_ADJ = @Original_CANT_ADJ) AND (OT_EDATE = @Original_OT" +
                "_EDATE) AND (OTNO = @Original_OTNO) AND \r\n                            (OT_ROTE =" +
                " @Original_OT_ROTE) AND (OT_FOOD1 = @Original_OT_FOOD1) AND \r\n                  " +
                "          (OT_FOODH = @Original_OT_FOODH) AND (OT_FOODH1 = @Original_OT_FOODH1) " +
                "AND \r\n                            (NOP_W_133 = @Original_NOP_W_133) AND (NOP_W_1" +
                "67 = @Original_NOP_W_167) AND \r\n                            (NOP_W_200 = @Origin" +
                "al_NOP_W_200) AND (NOP_H_100 = @Original_NOP_H_100) AND \r\n                      " +
                "      (NOP_H_133 = @Original_NOP_H_133) AND (NOP_H_167 = @Original_NOP_H_167) AN" +
                "D \r\n                            (NOP_H_200 = @Original_NOP_H_200) AND (TOP_W_133" +
                " = @Original_TOP_W_133) AND \r\n                            (TOP_W_167 = @Original" +
                "_TOP_W_167) AND (TOP_W_200 = @Original_TOP_W_200) AND \r\n                        " +
                "    (TOP_H_200 = @Original_TOP_H_200) AND (NOT_H_133 = @Original_NOT_H_133) AND " +
                "\r\n                            (NOT_H_167 = @Original_NOT_H_167) AND (HOT_133 = @" +
                "Original_HOT_133) AND (HOT_166 = @Original_HOT_166) \r\n                          " +
                "  AND (HOT_200 = @Original_HOT_200) AND (WOT_133 = @Original_WOT_133) AND \r\n    " +
                "                        (WOT_166 = @Original_WOT_166) AND (WOT_200 = @Original_W" +
                "OT_200) AND (SUM = @Original_SUM) AND \r\n                            (SYSCREAT = " +
                "@Original_SYSCREAT) AND (OTRATE_CODE = @Original_OTRATE_CODE) AND \r\n            " +
                "                (NOT_W_100 = @Original_NOT_W_100) AND (TOP_W_100 = @Original_TOP" +
                "_W_100) AND \r\n                            (SYSCREAT1 = @Original_SYSCREAT1) AND " +
                "(NOP_W_100 = @Original_NOP_W_100) AND \r\n                            (SYS_OT = @O" +
                "riginal_SYS_OT) AND (SERNO = @Original_SERNO) AND (DIFF = @Original_DIFF) AND \r\n" +
                "                            (EAT = @Original_EAT) AND (RES = @Original_RES)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ETIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ETIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOT_HOURS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_HOURS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_HRS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REST_HRS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "REST_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_CAR", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_CAR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_DEPT", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OT_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_FOOD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTE", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FOOD_PRI", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FOOD_PRI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FOOD_CNT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FOOD_CNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SER", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_167", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOT_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_100", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOT_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOT_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_167", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOT_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOT_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_H_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REST_EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "REST_EXP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FST_HOURS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FST_HOURS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTMODI", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOTMODI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTRCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTRCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOFOOD", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOFOOD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIX_AMT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "FIX_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REC", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "REC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANT_ADJ", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "CANT_ADJ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_EDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "OT_EDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_ROTE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OT_ROTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_FOOD1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_FOODH", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT_FOODH1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_167", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_H_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_100", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_H_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_H_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_167", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOP_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOP_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_167", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOP_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOP_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_H_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_H_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_H_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_167", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOT_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOT_166", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_166", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOT_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WOT_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_133", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WOT_166", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_166", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WOT_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_200", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUM", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SUM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SYSCREAT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYSCREAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTRATE_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTRATE_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_100", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TOP_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_100", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SYSCREAT1", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYSCREAT1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOP_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_100", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SYS_OT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYS_OT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SERNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SERNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DIFF", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "DIFF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EAT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "EAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RES", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ot] ([NOBR], [BDATE], [BTIME], [ETIME], [TOT_HOURS], [OT_HRS], [REST" +
                "_HRS], [OT_CAR], [OT_DEPT], [KEY_MAN], [KEY_DATE], [OT_FOOD], [NOTE], [FOOD_PRI]" +
                ", [FOOD_CNT], [YYMM], [SER], [NOT_W_133], [NOT_W_167], [NOT_W_200], [NOT_H_200]," +
                " [TOT_W_100], [TOT_W_133], [TOT_W_167], [TOT_W_200], [TOT_H_200], [NOT_EXP], [TO" +
                "T_EXP], [REST_EXP], [FST_HOURS], [SALARY], [NOTMODI], [OTRCD], [NOFOOD], [FIX_AM" +
                "T], [REC], [CANT_ADJ], [OT_EDATE], [OTNO], [OT_ROTE], [OT_FOOD1], [OT_FOODH], [O" +
                "T_FOODH1], [NOP_W_133], [NOP_W_167], [NOP_W_200], [NOP_H_100], [NOP_H_133], [NOP" +
                "_H_167], [NOP_H_200], [TOP_W_133], [TOP_W_167], [TOP_W_200], [TOP_H_200], [NOT_H" +
                "_133], [NOT_H_167], [HOT_133], [HOT_166], [HOT_200], [WOT_133], [WOT_166], [WOT_" +
                "200], [SUM], [SYSCREAT], [OTRATE_CODE], [NOT_W_100], [TOP_W_100], [SYSCREAT1], [" +
                "NOP_W_100], [SYS_OT], [SERNO], [DIFF], [EAT], [RES]) VALUES (@NOBR, @BDATE, @BTI" +
                "ME, @ETIME, @TOT_HOURS, @OT_HRS, @REST_HRS, @OT_CAR, @OT_DEPT, @KEY_MAN, @KEY_DA" +
                "TE, @OT_FOOD, @NOTE, @FOOD_PRI, @FOOD_CNT, @YYMM, @SER, @NOT_W_133, @NOT_W_167, " +
                "@NOT_W_200, @NOT_H_200, @TOT_W_100, @TOT_W_133, @TOT_W_167, @TOT_W_200, @TOT_H_2" +
                "00, @NOT_EXP, @TOT_EXP, @REST_EXP, @FST_HOURS, @SALARY, @NOTMODI, @OTRCD, @NOFOO" +
                "D, @FIX_AMT, @REC, @CANT_ADJ, @OT_EDATE, @OTNO, @OT_ROTE, @OT_FOOD1, @OT_FOODH, " +
                "@OT_FOODH1, @NOP_W_133, @NOP_W_167, @NOP_W_200, @NOP_H_100, @NOP_H_133, @NOP_H_1" +
                "67, @NOP_H_200, @TOP_W_133, @TOP_W_167, @TOP_W_200, @TOP_H_200, @NOT_H_133, @NOT" +
                "_H_167, @HOT_133, @HOT_166, @HOT_200, @WOT_133, @WOT_166, @WOT_200, @SUM, @SYSCR" +
                "EAT, @OTRATE_CODE, @NOT_W_100, @TOP_W_100, @SYSCREAT1, @NOP_W_100, @SYS_OT, @SER" +
                "NO, @DIFF, @EAT, @RES);\r\nSELECT NOBR, BDATE, BTIME, ETIME, TOT_HOURS, OT_HRS, RE" +
                "ST_HRS, OT_CAR, OT_DEPT, KEY_MAN, KEY_DATE, OT_FOOD, NOTE, FOOD_PRI, FOOD_CNT, Y" +
                "YMM, SER, NOT_W_133, NOT_W_167, NOT_W_200, NOT_H_200, TOT_W_100, TOT_W_133, TOT_" +
                "W_167, TOT_W_200, TOT_H_200, NOT_EXP, TOT_EXP, REST_EXP, FST_HOURS, SALARY, NOTM" +
                "ODI, OTRCD, NOFOOD, FIX_AMT, REC, CANT_ADJ, OT_EDATE, OTNO, OT_ROTE, OT_FOOD1, O" +
                "T_FOODH, OT_FOODH1, NOP_W_133, NOP_W_167, NOP_W_200, NOP_H_100, NOP_H_133, NOP_H" +
                "_167, NOP_H_200, TOP_W_133, TOP_W_167, TOP_W_200, TOP_H_200, NOT_H_133, NOT_H_16" +
                "7, HOT_133, HOT_166, HOT_200, WOT_133, WOT_166, WOT_200, SUM, SYSCREAT, OTRATE_C" +
                "ODE, NOT_W_100, TOP_W_100, SYSCREAT1, NOP_W_100, SYS_OT, SERNO, DIFF, EAT, RES F" +
                "ROM OT WHERE (BDATE = @BDATE) AND (BTIME = @BTIME) AND (NOBR = @NOBR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ETIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_HOURS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_HOURS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OT_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REST_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REST_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_CAR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OT_CAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOOD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOOD_PRI", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOOD_PRI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOOD_CNT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOOD_CNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_167", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_100", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_167", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_H_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_EXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_EXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REST_EXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REST_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FST_HOURS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FST_HOURS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALARY", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SALARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTMODI", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTMODI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTRCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTRCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOFOOD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOFOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIX_AMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANT_ADJ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CANT_ADJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT_EDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT_ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOOD1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOODH", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOODH1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_167", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_100", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_167", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_167", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_H_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_167", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOT_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOT_166", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_166", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOT_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WOT_133", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WOT_166", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_166", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WOT_200", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUM", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSCREAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSCREAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTRATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OTRATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_100", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_100", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSCREAT1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYSCREAT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_100", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYS_OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SYS_OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SERNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIFF", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DIFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE          OT\r\nSET                   NOBR = @NOBR, BDATE = @BDATE, BTIME = @" +
                "BTIME, ETIME = @ETIME, TOT_HOURS = @TOT_HOURS, \r\n                            OT_" +
                "HRS = @OT_HRS, REST_HRS = @REST_HRS, OT_CAR = @OT_CAR, OT_DEPT = @OT_DEPT, \r\n   " +
                "                         KEY_MAN = @KEY_MAN, KEY_DATE = @KEY_DATE, OT_FOOD = @OT" +
                "_FOOD, NOTE = @NOTE, \r\n                            FOOD_PRI = @FOOD_PRI, FOOD_CN" +
                "T = @FOOD_CNT, YYMM = @YYMM, SER = @SER, \r\n                            NOT_W_133" +
                " = @NOT_W_133, NOT_W_167 = @NOT_W_167, NOT_W_200 = @NOT_W_200, \r\n               " +
                "             NOT_H_200 = @NOT_H_200, TOT_W_100 = @TOT_W_100, TOT_W_133 = @TOT_W_" +
                "133, \r\n                            TOT_W_167 = @TOT_W_167, TOT_W_200 = @TOT_W_20" +
                "0, TOT_H_200 = @TOT_H_200, NOT_EXP = @NOT_EXP, \r\n                            TOT" +
                "_EXP = @TOT_EXP, REST_EXP = @REST_EXP, FST_HOURS = @FST_HOURS, SALARY = @SALARY," +
                " \r\n                            NOTMODI = @NOTMODI, OTRCD = @OTRCD, NOFOOD = @NOF" +
                "OOD, FIX_AMT = @FIX_AMT, REC = @REC, \r\n                            CANT_ADJ = @C" +
                "ANT_ADJ, OT_EDATE = @OT_EDATE, OTNO = @OTNO, OT_ROTE = @OT_ROTE, \r\n             " +
                "               OT_FOOD1 = @OT_FOOD1, OT_FOODH = @OT_FOODH, OT_FOODH1 = @OT_FOODH" +
                "1, \r\n                            NOP_W_133 = @NOP_W_133, NOP_W_167 = @NOP_W_167," +
                " NOP_W_200 = @NOP_W_200, \r\n                            NOP_H_100 = @NOP_H_100, N" +
                "OP_H_133 = @NOP_H_133, NOP_H_167 = @NOP_H_167, \r\n                            NOP" +
                "_H_200 = @NOP_H_200, TOP_W_133 = @TOP_W_133, TOP_W_167 = @TOP_W_167, \r\n         " +
                "                   TOP_W_200 = @TOP_W_200, TOP_H_200 = @TOP_H_200, NOT_H_133 = @" +
                "NOT_H_133, \r\n                            NOT_H_167 = @NOT_H_167, HOT_133 = @HOT_" +
                "133, HOT_166 = @HOT_166, HOT_200 = @HOT_200, \r\n                            WOT_1" +
                "33 = @WOT_133, WOT_166 = @WOT_166, WOT_200 = @WOT_200, SUM = @SUM, \r\n           " +
                "                 SYSCREAT = @SYSCREAT, OTRATE_CODE = @OTRATE_CODE, NOT_W_100 = @" +
                "NOT_W_100, \r\n                            TOP_W_100 = @TOP_W_100, SYSCREAT1 = @SY" +
                "SCREAT1, NOP_W_100 = @NOP_W_100, SYS_OT = @SYS_OT, \r\n                           " +
                " SERNO = @SERNO, DIFF = @DIFF, EAT = @EAT, RES = @RES\r\nWHERE          (NOBR = @O" +
                "riginal_NOBR) AND (BDATE = @Original_BDATE) AND (BTIME = @Original_BTIME) AND \r\n" +
                "                            (OTRCD = @Original_OTRCD);  \r\nSELECT NOBR, BDATE, BT" +
                "IME, ETIME, TOT_HOURS, OT_HRS, REST_HRS, OT_CAR, OT_DEPT, KEY_MAN, KEY_DATE, OT_" +
                "FOOD, NOTE, FOOD_PRI, FOOD_CNT, YYMM, SER, NOT_W_133, NOT_W_167, NOT_W_200, NOT_" +
                "H_200, TOT_W_100, TOT_W_133, TOT_W_167, TOT_W_200, TOT_H_200, NOT_EXP, TOT_EXP, " +
                "REST_EXP, FST_HOURS, SALARY, NOTMODI, OTRCD, NOFOOD, FIX_AMT, REC, CANT_ADJ, OT_" +
                "EDATE, OTNO, OT_ROTE, OT_FOOD1, OT_FOODH, OT_FOODH1, NOP_W_133, NOP_W_167, NOP_W" +
                "_200, NOP_H_100, NOP_H_133, NOP_H_167, NOP_H_200, TOP_W_133, TOP_W_167, TOP_W_20" +
                "0, TOP_H_200, NOT_H_133, NOT_H_167, HOT_133, HOT_166, HOT_200, WOT_133, WOT_166," +
                " WOT_200, SUM, SYSCREAT, OTRATE_CODE, NOT_W_100, TOP_W_100, SYSCREAT1, NOP_W_100" +
                ", SYS_OT, SERNO, DIFF, EAT, RES FROM OT WHERE (BDATE = @BDATE) AND (BTIME = @BTI" +
                "ME) AND (NOBR = @NOBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BTIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ETIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ETIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_HOURS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_HOURS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_HRS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REST_HRS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "REST_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_CAR", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_CAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_DEPT", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OT_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOOD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOOD_PRI", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FOOD_PRI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOOD_CNT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FOOD_CNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SER", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REST_EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "REST_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FST_HOURS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FST_HOURS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALARY", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "SALARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTMODI", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOTMODI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTRCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTRCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOFOOD", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOFOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIX_AMT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "FIX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REC", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "REC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANT_ADJ", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "CANT_ADJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_EDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "OT_EDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_ROTE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OT_ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOOD1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOODH", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOODH1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOT_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOT_166", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_166", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOT_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "HOT_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WOT_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WOT_166", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_166", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WOT_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "WOT_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUM", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SUM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSCREAT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYSCREAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTRATE_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTRATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOP_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOP_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSCREAT1", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYSCREAT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOP_W_100", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOP_W_100", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYS_OT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYS_OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SERNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DIFF", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "DIFF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EAT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "EAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTRCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTRCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          NOBR, BDATE, BTIME, ETIME, TOT_HOURS, OT_HRS, REST_HRS, OT_CAR, OT_DEPT, KEY_MAN, KEY_DATE, 
                            OT_FOOD, NOTE, YYMM, SER, NOT_W_133, NOT_W_167, NOT_W_200, NOT_H_200, TOT_W_133, TOT_W_167, 
                            TOT_W_200, TOT_H_200, NOT_EXP, TOT_EXP, REST_EXP, FST_HOURS, SALARY, NOTMODI, OTRCD, NOFOOD, 
                            FIX_AMT, CANT_ADJ, OT_EDATE, OT_ROTE, OT_FOOD1, OT_FOODH, OT_FOODH1, NOP_W_133, NOP_W_167, 
                            NOP_W_200, NOP_H_133, NOP_H_167, NOP_H_200, TOP_W_133, TOP_W_167, TOP_W_200, TOP_H_200, 
                            NOT_H_133, NOT_H_167, SYSCREAT, OTRATE_CODE, SYS_OT, SERNO, NAME_C, JOB_NAME, DEPTS_NAME, 
                            DEPT_NAME, DEPT, NOFOOD1, isHoli, COUNT_MA, FOOD_PRI, FOOD_CNT, TOT_W_100, REC, OTNO, NOP_H_100, 
                            HOT_133, HOT_166, HOT_200, WOT_133, WOT_166, WOT_200, SUM, NOT_W_100, TOP_W_100, SYSCREAT1, 
                            NOP_W_100, RES, EAT, DIFF
FROM              FRM47";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT          NOBR, BDATE, BTIME, ETIME, TOT_HOURS, OT_HRS, REST_HRS, OT_CAR, OT_DEPT, KEY_MAN, KEY_DATE, 
                            OT_FOOD, NOTE, YYMM, SER, NOT_W_133, NOT_W_167, NOT_W_200, NOT_H_200, TOT_W_133, TOT_W_167, 
                            TOT_W_200, TOT_H_200, NOT_EXP, TOT_EXP, REST_EXP, FST_HOURS, SALARY, NOTMODI, OTRCD, NOFOOD, 
                            FIX_AMT, CANT_ADJ, OT_EDATE, OT_ROTE, OT_FOOD1, OT_FOODH, OT_FOODH1, NOP_W_133, NOP_W_167, 
                            NOP_W_200, NOP_H_133, NOP_H_167, NOP_H_200, TOP_W_133, TOP_W_167, TOP_W_200, TOP_H_200, 
                            NOT_H_133, NOT_H_167, SYSCREAT, OTRATE_CODE, SYS_OT, SERNO, NAME_C, JOB_NAME, DEPTS_NAME, 
                            DEPT_NAME, DEPT, NOFOOD1, isHoli, COUNT_MA, FOOD_PRI, FOOD_CNT, TOT_W_100, REC, OTNO, NOP_H_100, 
                            HOT_133, HOT_166, HOT_200, WOT_133, WOT_166, WOT_200, SUM, NOT_W_100, TOP_W_100, SYSCREAT1, 
                            NOP_W_100, DIFF, EAT, RES
FROM              FRM47
WHERE          (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.OTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.OTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.OTDataTable dataTable = new SalaryDS.OTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.OTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.OTDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.OTDataTable dataTable = new SalaryDS.OTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.OTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "OT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BASETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BASETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BASE";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("NAME_E", "NAME_E");
            tableMapping.ColumnMappings.Add("ACCOUNT_NO", "ACCOUNT_NO");
            tableMapping.ColumnMappings.Add("BANKNO", "BANKNO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [BASE] WHERE (([NOBR] = @Original_NOBR) AND ([NAME_C] = @Original_NAM" +
                "E_C) AND ([NAME_E] = @Original_NAME_E) AND ([ACCOUNT_NO] = @Original_ACCOUNT_NO)" +
                " AND ([BANKNO] = @Original_BANKNO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_E", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BANKNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [BASE] SET [NOBR] = @NOBR, [NAME_C] = @NAME_C, [NAME_E] = @NAME_E, [ACCOUNT_NO] = @ACCOUNT_NO, [BANKNO] = @BANKNO WHERE (([NOBR] = @Original_NOBR) AND ([NAME_C] = @Original_NAME_C) AND ([NAME_E] = @Original_NAME_E) AND ([ACCOUNT_NO] = @Original_ACCOUNT_NO) AND ([BANKNO] = @Original_BANKNO));
SELECT NOBR, NAME_C, NAME_E, ACCOUNT_NO, BANKNO FROM BASE WHERE (NOBR = @NOBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_E", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCOUNT_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BANKNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_E", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCOUNT_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BANKNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BANKNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, NAME_C, NAME_E, ACCOUNT_NO, BANKNO\r\nFROM              BASE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.BASEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.BASEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.BASEDataTable dataTable = new SalaryDS.BASEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.BASEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "BASE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_NAME_C, string Original_NAME_E, string Original_ACCOUNT_NO, string Original_BANKNO) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_NAME_C == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_C));
            }
            if ((Original_NAME_E == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME_E));
            }
            if ((Original_ACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ACCOUNT_NO));
            }
            if ((Original_BANKNO == null)) {
                throw new global::System.ArgumentNullException("Original_BANKNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_BANKNO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string NAME_C, string NAME_E, string ACCOUNT_NO, string BANKNO, string Original_NOBR, string Original_NAME_C, string Original_NAME_E, string Original_ACCOUNT_NO, string Original_BANKNO) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((NAME_C == null)) {
                throw new global::System.ArgumentNullException("NAME_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_C));
            }
            if ((NAME_E == null)) {
                throw new global::System.ArgumentNullException("NAME_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NAME_E));
            }
            if ((ACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ACCOUNT_NO));
            }
            if ((BANKNO == null)) {
                throw new global::System.ArgumentNullException("BANKNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(BANKNO));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NOBR));
            }
            if ((Original_NAME_C == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_NAME_C));
            }
            if ((Original_NAME_E == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_NAME_E));
            }
            if ((Original_ACCOUNT_NO == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ACCOUNT_NO));
            }
            if ((Original_BANKNO == null)) {
                throw new global::System.ArgumentNullException("Original_BANKNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_BANKNO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_C, string NAME_E, string ACCOUNT_NO, string BANKNO, string Original_NOBR, string Original_NAME_C, string Original_NAME_E, string Original_ACCOUNT_NO, string Original_BANKNO) {
            return this.Update(Original_NOBR, NAME_C, NAME_E, ACCOUNT_NO, BANKNO, Original_NOBR, Original_NAME_C, Original_NAME_E, Original_ACCOUNT_NO, Original_BANKNO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BASETTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public BASETTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BASETTS";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("TTSCODE", "TTSCODE");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("INDT", "INDT");
            tableMapping.ColumnMappings.Add("CINDT", "CINDT");
            tableMapping.ColumnMappings.Add("OUDT", "OUDT");
            tableMapping.ColumnMappings.Add("STDT", "STDT");
            tableMapping.ColumnMappings.Add("STINDT", "STINDT");
            tableMapping.ColumnMappings.Add("STOUDT", "STOUDT");
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("DEPT", "DEPT");
            tableMapping.ColumnMappings.Add("DEPTS", "DEPTS");
            tableMapping.ColumnMappings.Add("JOB", "JOB");
            tableMapping.ColumnMappings.Add("JOBL", "JOBL");
            tableMapping.ColumnMappings.Add("CARD", "CARD");
            tableMapping.ColumnMappings.Add("ROTET", "ROTET");
            tableMapping.ColumnMappings.Add("DI", "DI");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("MANG", "MANG");
            tableMapping.ColumnMappings.Add("YR_DAYS", "YR_DAYS");
            tableMapping.ColumnMappings.Add("WK_YRS", "WK_YRS");
            tableMapping.ColumnMappings.Add("SALTP", "SALTP");
            tableMapping.ColumnMappings.Add("JOBS", "JOBS");
            tableMapping.ColumnMappings.Add("WORKCD", "WORKCD");
            tableMapping.ColumnMappings.Add("CARCD", "CARCD");
            tableMapping.ColumnMappings.Add("EMPCD", "EMPCD");
            tableMapping.ColumnMappings.Add("OUTCD", "OUTCD");
            tableMapping.ColumnMappings.Add("CALABS", "CALABS");
            tableMapping.ColumnMappings.Add("CALOT", "CALOT");
            tableMapping.ColumnMappings.Add("FULATT", "FULATT");
            tableMapping.ColumnMappings.Add("NOTER", "NOTER");
            tableMapping.ColumnMappings.Add("NOWEL", "NOWEL");
            tableMapping.ColumnMappings.Add("NORET", "NORET");
            tableMapping.ColumnMappings.Add("NOTLATE", "NOTLATE");
            tableMapping.ColumnMappings.Add("HOLI_CODE", "HOLI_CODE");
            tableMapping.ColumnMappings.Add("NOOT", "NOOT");
            tableMapping.ColumnMappings.Add("NOSPEC", "NOSPEC");
            tableMapping.ColumnMappings.Add("NOCARD", "NOCARD");
            tableMapping.ColumnMappings.Add("NOEAT", "NOEAT");
            tableMapping.ColumnMappings.Add("APGRPCD", "APGRPCD");
            tableMapping.ColumnMappings.Add("DEPTM", "DEPTM");
            tableMapping.ColumnMappings.Add("TTSCD", "TTSCD");
            tableMapping.ColumnMappings.Add("MENO", "MENO");
            tableMapping.ColumnMappings.Add("SALADR", "SALADR");
            tableMapping.ColumnMappings.Add("NOWAGE", "NOWAGE");
            tableMapping.ColumnMappings.Add("MANGE", "MANGE");
            tableMapping.ColumnMappings.Add("RETRATE", "RETRATE");
            tableMapping.ColumnMappings.Add("RETDATE", "RETDATE");
            tableMapping.ColumnMappings.Add("RETCHOO", "RETCHOO");
            tableMapping.ColumnMappings.Add("RETDATE1", "RETDATE1");
            tableMapping.ColumnMappings.Add("ONLYONTIME", "ONLYONTIME");
            tableMapping.ColumnMappings.Add("JOBO", "JOBO");
            tableMapping.ColumnMappings.Add("COUNT_PASS", "COUNT_PASS");
            tableMapping.ColumnMappings.Add("PASS_DATE", "PASS_DATE");
            tableMapping.ColumnMappings.Add("MANG1", "MANG1");
            tableMapping.ColumnMappings.Add("AP_DATE", "AP_DATE");
            tableMapping.ColumnMappings.Add("GRP_AMT", "GRP_AMT");
            tableMapping.ColumnMappings.Add("TAX_DATE", "TAX_DATE");
            tableMapping.ColumnMappings.Add("NOSPAMT", "NOSPAMT");
            tableMapping.ColumnMappings.Add("FIXRATE", "FIXRATE");
            tableMapping.ColumnMappings.Add("TAX_EDATE", "TAX_EDATE");
            tableMapping.ColumnMappings.Add("IS_SELFOUT", "IS_SELFOUT");
            tableMapping.ColumnMappings.Add("INSG_TYPE", "INSG_TYPE");
            tableMapping.ColumnMappings.Add("OldSaladr", "OldSaladr");
            tableMapping.ColumnMappings.Add("STATION", "STATION");
            tableMapping.ColumnMappings.Add("CardJobName", "CardJobName");
            tableMapping.ColumnMappings.Add("CardJobEnName", "CardJobEnName");
            tableMapping.ColumnMappings.Add("OilSubsidy", "OilSubsidy");
            tableMapping.ColumnMappings.Add("CardID", "CardID");
            tableMapping.ColumnMappings.Add("DoorGuard", "DoorGuard");
            tableMapping.ColumnMappings.Add("OutPost", "OutPost");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [BASETTS] WHERE (([NOBR] = @Original_NOBR) AND ([ADATE] = @Original_A" +
                "DATE) AND ([TTSCODE] = @Original_TTSCODE) AND ((@IsNull_DDATE = 1 AND [DDATE] IS" +
                " NULL) OR ([DDATE] = @Original_DDATE)) AND ((@IsNull_INDT = 1 AND [INDT] IS NULL" +
                ") OR ([INDT] = @Original_INDT)) AND ((@IsNull_CINDT = 1 AND [CINDT] IS NULL) OR " +
                "([CINDT] = @Original_CINDT)) AND ((@IsNull_OUDT = 1 AND [OUDT] IS NULL) OR ([OUD" +
                "T] = @Original_OUDT)) AND ((@IsNull_STDT = 1 AND [STDT] IS NULL) OR ([STDT] = @O" +
                "riginal_STDT)) AND ((@IsNull_STINDT = 1 AND [STINDT] IS NULL) OR ([STINDT] = @Or" +
                "iginal_STINDT)) AND ((@IsNull_STOUDT = 1 AND [STOUDT] IS NULL) OR ([STOUDT] = @O" +
                "riginal_STOUDT)) AND ([COMP] = @Original_COMP) AND ([DEPT] = @Original_DEPT) AND" +
                " ([DEPTS] = @Original_DEPTS) AND ([JOB] = @Original_JOB) AND ([JOBL] = @Original" +
                "_JOBL) AND ([CARD] = @Original_CARD) AND ([ROTET] = @Original_ROTET) AND ([DI] =" +
                " @Original_DI) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_K" +
                "EY_DATE) AND ([MANG] = @Original_MANG) AND ([YR_DAYS] = @Original_YR_DAYS) AND (" +
                "[WK_YRS] = @Original_WK_YRS) AND ([SALTP] = @Original_SALTP) AND ([JOBS] = @Orig" +
                "inal_JOBS) AND ([WORKCD] = @Original_WORKCD) AND ([CARCD] = @Original_CARCD) AND" +
                " ([EMPCD] = @Original_EMPCD) AND ([OUTCD] = @Original_OUTCD) AND ([CALABS] = @Or" +
                "iginal_CALABS) AND ([CALOT] = @Original_CALOT) AND ([FULATT] = @Original_FULATT)" +
                " AND ([NOTER] = @Original_NOTER) AND ([NOWEL] = @Original_NOWEL) AND ([NORET] = " +
                "@Original_NORET) AND ([NOTLATE] = @Original_NOTLATE) AND ([HOLI_CODE] = @Origina" +
                "l_HOLI_CODE) AND ([NOOT] = @Original_NOOT) AND ([NOSPEC] = @Original_NOSPEC) AND" +
                " ([NOCARD] = @Original_NOCARD) AND ([NOEAT] = @Original_NOEAT) AND ([APGRPCD] = " +
                "@Original_APGRPCD) AND ([DEPTM] = @Original_DEPTM) AND ([TTSCD] = @Original_TTSC" +
                "D) AND ([MENO] = @Original_MENO) AND ([SALADR] = @Original_SALADR) AND ([NOWAGE]" +
                " = @Original_NOWAGE) AND ([MANGE] = @Original_MANGE) AND ([RETRATE] = @Original_" +
                "RETRATE) AND ((@IsNull_RETDATE = 1 AND [RETDATE] IS NULL) OR ([RETDATE] = @Origi" +
                "nal_RETDATE)) AND ([RETCHOO] = @Original_RETCHOO) AND ((@IsNull_RETDATE1 = 1 AND" +
                " [RETDATE1] IS NULL) OR ([RETDATE1] = @Original_RETDATE1)) AND ([ONLYONTIME] = @" +
                "Original_ONLYONTIME) AND ([JOBO] = @Original_JOBO) AND ([COUNT_PASS] = @Original" +
                "_COUNT_PASS) AND ((@IsNull_PASS_DATE = 1 AND [PASS_DATE] IS NULL) OR ([PASS_DATE" +
                "] = @Original_PASS_DATE)) AND ([MANG1] = @Original_MANG1) AND ((@IsNull_AP_DATE " +
                "= 1 AND [AP_DATE] IS NULL) OR ([AP_DATE] = @Original_AP_DATE)) AND ([GRP_AMT] = " +
                "@Original_GRP_AMT) AND ((@IsNull_TAX_DATE = 1 AND [TAX_DATE] IS NULL) OR ([TAX_D" +
                "ATE] = @Original_TAX_DATE)) AND ([NOSPAMT] = @Original_NOSPAMT) AND ([FIXRATE] =" +
                " @Original_FIXRATE) AND ((@IsNull_TAX_EDATE = 1 AND [TAX_EDATE] IS NULL) OR ([TA" +
                "X_EDATE] = @Original_TAX_EDATE)) AND ([IS_SELFOUT] = @Original_IS_SELFOUT) AND (" +
                "[INSG_TYPE] = @Original_INSG_TYPE) AND ((@IsNull_OldSaladr = 1 AND [OldSaladr] I" +
                "S NULL) OR ([OldSaladr] = @Original_OldSaladr)) AND ((@IsNull_STATION = 1 AND [S" +
                "TATION] IS NULL) OR ([STATION] = @Original_STATION)) AND ((@IsNull_CardJobName =" +
                " 1 AND [CardJobName] IS NULL) OR ([CardJobName] = @Original_CardJobName)) AND ((" +
                "@IsNull_CardJobEnName = 1 AND [CardJobEnName] IS NULL) OR ([CardJobEnName] = @Or" +
                "iginal_CardJobEnName)) AND ((@IsNull_OilSubsidy = 1 AND [OilSubsidy] IS NULL) OR" +
                " ([OilSubsidy] = @Original_OilSubsidy)) AND ((@IsNull_CardID = 1 AND [CardID] IS" +
                " NULL) OR ([CardID] = @Original_CardID)) AND ((@IsNull_DoorGuard = 1 AND [DoorGu" +
                "ard] IS NULL) OR ([DoorGuard] = @Original_DoorGuard)) AND ((@IsNull_OutPost = 1 " +
                "AND [OutPost] IS NULL) OR ([OutPost] = @Original_OutPost)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PASS_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AP_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_EDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldSaladr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STATION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobEnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OilSubsidy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DoorGuard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [BASETTS] ([NOBR], [ADATE], [TTSCODE], [DDATE], [INDT], [CINDT], [OUD" +
                "T], [STDT], [STINDT], [STOUDT], [COMP], [DEPT], [DEPTS], [JOB], [JOBL], [CARD], " +
                "[ROTET], [DI], [KEY_MAN], [KEY_DATE], [MANG], [YR_DAYS], [WK_YRS], [SALTP], [JOB" +
                "S], [WORKCD], [CARCD], [EMPCD], [OUTCD], [CALABS], [CALOT], [FULATT], [NOTER], [" +
                "NOWEL], [NORET], [NOTLATE], [HOLI_CODE], [NOOT], [NOSPEC], [NOCARD], [NOEAT], [A" +
                "PGRPCD], [DEPTM], [TTSCD], [MENO], [SALADR], [NOWAGE], [MANGE], [RETRATE], [RETD" +
                "ATE], [RETCHOO], [RETDATE1], [ONLYONTIME], [JOBO], [COUNT_PASS], [PASS_DATE], [M" +
                "ANG1], [AP_DATE], [GRP_AMT], [TAX_DATE], [NOSPAMT], [FIXRATE], [TAX_EDATE], [IS_" +
                "SELFOUT], [INSG_TYPE], [OldSaladr], [STATION], [CardJobName], [CardJobEnName], [" +
                "OilSubsidy], [CardID], [DoorGuard], [OutPost]) VALUES (@NOBR, @ADATE, @TTSCODE, " +
                "@DDATE, @INDT, @CINDT, @OUDT, @STDT, @STINDT, @STOUDT, @COMP, @DEPT, @DEPTS, @JO" +
                "B, @JOBL, @CARD, @ROTET, @DI, @KEY_MAN, @KEY_DATE, @MANG, @YR_DAYS, @WK_YRS, @SA" +
                "LTP, @JOBS, @WORKCD, @CARCD, @EMPCD, @OUTCD, @CALABS, @CALOT, @FULATT, @NOTER, @" +
                "NOWEL, @NORET, @NOTLATE, @HOLI_CODE, @NOOT, @NOSPEC, @NOCARD, @NOEAT, @APGRPCD, " +
                "@DEPTM, @TTSCD, @MENO, @SALADR, @NOWAGE, @MANGE, @RETRATE, @RETDATE, @RETCHOO, @" +
                "RETDATE1, @ONLYONTIME, @JOBO, @COUNT_PASS, @PASS_DATE, @MANG1, @AP_DATE, @GRP_AM" +
                "T, @TAX_DATE, @NOSPAMT, @FIXRATE, @TAX_EDATE, @IS_SELFOUT, @INSG_TYPE, @OldSalad" +
                "r, @STATION, @CardJobName, @CardJobEnName, @OilSubsidy, @CardID, @DoorGuard, @Ou" +
                "tPost);\r\nSELECT NOBR, ADATE, TTSCODE, DDATE, INDT, CINDT, OUDT, STDT, STINDT, ST" +
                "OUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, KEY_MAN, KEY_DATE, MANG, YR" +
                "_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUTCD, CALABS, CALOT, FULATT, " +
                "NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCARD, NOEAT, APGRPCD, D" +
                "EPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE, RETCHOO, RETDATE1, O" +
                "NLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP_AMT, TAX_DATE, NOSPA" +
                "MT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, STATION, CardJobName, " +
                "CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost FROM BASETTS WHERE (ADATE " +
                "= @ADATE) AND (NOBR = @NOBR) AND (TTSCODE = @TTSCODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [BASETTS] SET [NOBR] = @NOBR, [ADATE] = @ADATE, [TTSCODE] = @TTSCODE, [DDA" +
                "TE] = @DDATE, [INDT] = @INDT, [CINDT] = @CINDT, [OUDT] = @OUDT, [STDT] = @STDT, " +
                "[STINDT] = @STINDT, [STOUDT] = @STOUDT, [COMP] = @COMP, [DEPT] = @DEPT, [DEPTS] " +
                "= @DEPTS, [JOB] = @JOB, [JOBL] = @JOBL, [CARD] = @CARD, [ROTET] = @ROTET, [DI] =" +
                " @DI, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [MANG] = @MANG, [YR_DAYS] = " +
                "@YR_DAYS, [WK_YRS] = @WK_YRS, [SALTP] = @SALTP, [JOBS] = @JOBS, [WORKCD] = @WORK" +
                "CD, [CARCD] = @CARCD, [EMPCD] = @EMPCD, [OUTCD] = @OUTCD, [CALABS] = @CALABS, [C" +
                "ALOT] = @CALOT, [FULATT] = @FULATT, [NOTER] = @NOTER, [NOWEL] = @NOWEL, [NORET] " +
                "= @NORET, [NOTLATE] = @NOTLATE, [HOLI_CODE] = @HOLI_CODE, [NOOT] = @NOOT, [NOSPE" +
                "C] = @NOSPEC, [NOCARD] = @NOCARD, [NOEAT] = @NOEAT, [APGRPCD] = @APGRPCD, [DEPTM" +
                "] = @DEPTM, [TTSCD] = @TTSCD, [MENO] = @MENO, [SALADR] = @SALADR, [NOWAGE] = @NO" +
                "WAGE, [MANGE] = @MANGE, [RETRATE] = @RETRATE, [RETDATE] = @RETDATE, [RETCHOO] = " +
                "@RETCHOO, [RETDATE1] = @RETDATE1, [ONLYONTIME] = @ONLYONTIME, [JOBO] = @JOBO, [C" +
                "OUNT_PASS] = @COUNT_PASS, [PASS_DATE] = @PASS_DATE, [MANG1] = @MANG1, [AP_DATE] " +
                "= @AP_DATE, [GRP_AMT] = @GRP_AMT, [TAX_DATE] = @TAX_DATE, [NOSPAMT] = @NOSPAMT, " +
                "[FIXRATE] = @FIXRATE, [TAX_EDATE] = @TAX_EDATE, [IS_SELFOUT] = @IS_SELFOUT, [INS" +
                "G_TYPE] = @INSG_TYPE, [OldSaladr] = @OldSaladr, [STATION] = @STATION, [CardJobNa" +
                "me] = @CardJobName, [CardJobEnName] = @CardJobEnName, [OilSubsidy] = @OilSubsidy" +
                ", [CardID] = @CardID, [DoorGuard] = @DoorGuard, [OutPost] = @OutPost WHERE (([NO" +
                "BR] = @Original_NOBR) AND ([ADATE] = @Original_ADATE) AND ([TTSCODE] = @Original" +
                "_TTSCODE) AND ((@IsNull_DDATE = 1 AND [DDATE] IS NULL) OR ([DDATE] = @Original_D" +
                "DATE)) AND ((@IsNull_INDT = 1 AND [INDT] IS NULL) OR ([INDT] = @Original_INDT)) " +
                "AND ((@IsNull_CINDT = 1 AND [CINDT] IS NULL) OR ([CINDT] = @Original_CINDT)) AND" +
                " ((@IsNull_OUDT = 1 AND [OUDT] IS NULL) OR ([OUDT] = @Original_OUDT)) AND ((@IsN" +
                "ull_STDT = 1 AND [STDT] IS NULL) OR ([STDT] = @Original_STDT)) AND ((@IsNull_STI" +
                "NDT = 1 AND [STINDT] IS NULL) OR ([STINDT] = @Original_STINDT)) AND ((@IsNull_ST" +
                "OUDT = 1 AND [STOUDT] IS NULL) OR ([STOUDT] = @Original_STOUDT)) AND ([COMP] = @" +
                "Original_COMP) AND ([DEPT] = @Original_DEPT) AND ([DEPTS] = @Original_DEPTS) AND" +
                " ([JOB] = @Original_JOB) AND ([JOBL] = @Original_JOBL) AND ([CARD] = @Original_C" +
                "ARD) AND ([ROTET] = @Original_ROTET) AND ([DI] = @Original_DI) AND ([KEY_MAN] = " +
                "@Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([MANG] = @Original" +
                "_MANG) AND ([YR_DAYS] = @Original_YR_DAYS) AND ([WK_YRS] = @Original_WK_YRS) AND" +
                " ([SALTP] = @Original_SALTP) AND ([JOBS] = @Original_JOBS) AND ([WORKCD] = @Orig" +
                "inal_WORKCD) AND ([CARCD] = @Original_CARCD) AND ([EMPCD] = @Original_EMPCD) AND" +
                " ([OUTCD] = @Original_OUTCD) AND ([CALABS] = @Original_CALABS) AND ([CALOT] = @O" +
                "riginal_CALOT) AND ([FULATT] = @Original_FULATT) AND ([NOTER] = @Original_NOTER)" +
                " AND ([NOWEL] = @Original_NOWEL) AND ([NORET] = @Original_NORET) AND ([NOTLATE] " +
                "= @Original_NOTLATE) AND ([HOLI_CODE] = @Original_HOLI_CODE) AND ([NOOT] = @Orig" +
                "inal_NOOT) AND ([NOSPEC] = @Original_NOSPEC) AND ([NOCARD] = @Original_NOCARD) A" +
                "ND ([NOEAT] = @Original_NOEAT) AND ([APGRPCD] = @Original_APGRPCD) AND ([DEPTM] " +
                "= @Original_DEPTM) AND ([TTSCD] = @Original_TTSCD) AND ([MENO] = @Original_MENO)" +
                " AND ([SALADR] = @Original_SALADR) AND ([NOWAGE] = @Original_NOWAGE) AND ([MANGE" +
                "] = @Original_MANGE) AND ([RETRATE] = @Original_RETRATE) AND ((@IsNull_RETDATE =" +
                " 1 AND [RETDATE] IS NULL) OR ([RETDATE] = @Original_RETDATE)) AND ([RETCHOO] = @" +
                "Original_RETCHOO) AND ((@IsNull_RETDATE1 = 1 AND [RETDATE1] IS NULL) OR ([RETDAT" +
                "E1] = @Original_RETDATE1)) AND ([ONLYONTIME] = @Original_ONLYONTIME) AND ([JOBO]" +
                " = @Original_JOBO) AND ([COUNT_PASS] = @Original_COUNT_PASS) AND ((@IsNull_PASS_" +
                "DATE = 1 AND [PASS_DATE] IS NULL) OR ([PASS_DATE] = @Original_PASS_DATE)) AND ([" +
                "MANG1] = @Original_MANG1) AND ((@IsNull_AP_DATE = 1 AND [AP_DATE] IS NULL) OR ([" +
                "AP_DATE] = @Original_AP_DATE)) AND ([GRP_AMT] = @Original_GRP_AMT) AND ((@IsNull" +
                "_TAX_DATE = 1 AND [TAX_DATE] IS NULL) OR ([TAX_DATE] = @Original_TAX_DATE)) AND " +
                "([NOSPAMT] = @Original_NOSPAMT) AND ([FIXRATE] = @Original_FIXRATE) AND ((@IsNul" +
                "l_TAX_EDATE = 1 AND [TAX_EDATE] IS NULL) OR ([TAX_EDATE] = @Original_TAX_EDATE))" +
                " AND ([IS_SELFOUT] = @Original_IS_SELFOUT) AND ([INSG_TYPE] = @Original_INSG_TYP" +
                "E) AND ((@IsNull_OldSaladr = 1 AND [OldSaladr] IS NULL) OR ([OldSaladr] = @Origi" +
                "nal_OldSaladr)) AND ((@IsNull_STATION = 1 AND [STATION] IS NULL) OR ([STATION] =" +
                " @Original_STATION)) AND ((@IsNull_CardJobName = 1 AND [CardJobName] IS NULL) OR" +
                " ([CardJobName] = @Original_CardJobName)) AND ((@IsNull_CardJobEnName = 1 AND [C" +
                "ardJobEnName] IS NULL) OR ([CardJobEnName] = @Original_CardJobEnName)) AND ((@Is" +
                "Null_OilSubsidy = 1 AND [OilSubsidy] IS NULL) OR ([OilSubsidy] = @Original_OilSu" +
                "bsidy)) AND ((@IsNull_CardID = 1 AND [CardID] IS NULL) OR ([CardID] = @Original_" +
                "CardID)) AND ((@IsNull_DoorGuard = 1 AND [DoorGuard] IS NULL) OR ([DoorGuard] = " +
                "@Original_DoorGuard)) AND ((@IsNull_OutPost = 1 AND [OutPost] IS NULL) OR ([OutP" +
                "ost] = @Original_OutPost)));\r\nSELECT NOBR, ADATE, TTSCODE, DDATE, INDT, CINDT, O" +
                "UDT, STDT, STINDT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, KEY_MA" +
                "N, KEY_DATE, MANG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUTCD, CA" +
                "LABS, CALOT, FULATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCA" +
                "RD, NOEAT, APGRPCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE," +
                " RETCHOO, RETDATE1, ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP" +
                "_AMT, TAX_DATE, NOSPAMT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, S" +
                "TATION, CardJobName, CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost FROM " +
                "BASETTS WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (TTSCODE = @TTSCODE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PASS_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AP_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_EDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldSaladr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STATION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobEnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OilSubsidy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DoorGuard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          NOBR, ADATE, TTSCODE, DDATE, INDT, CINDT, OUDT, STDT, STINDT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, 
                            CARD, ROTET, DI, KEY_MAN, KEY_DATE, MANG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, 
                            OUTCD, CALABS, CALOT, FULATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCARD, 
                            NOEAT, APGRPCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE, RETCHOO, RETDATE1, 
                            ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP_AMT, TAX_DATE, NOSPAMT, FIXRATE, 
                            TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, STATION, CardJobName, CardJobEnName, OilSubsidy, CardID, 
                            DoorGuard, OutPost
FROM              BASETTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT ADATE, APGRPCD, AP_DATE, CALABS, CALOT, CARCD, CARD, CINDT, COMP, COUNT_PASS, CardID, CardJobEnName, CardJobName, DDATE, DEPT, DEPTM, DEPTS, DI, DoorGuard, EMPCD, FIXRATE, FULATT, GRP_AMT, HOLI_CODE, INDT, INSG_TYPE, IS_SELFOUT, JOB, JOBL, JOBO, JOBS, KEY_DATE, KEY_MAN, MANG, MANG1, MANGE, MENO, NOBR, NOCARD, NOEAT, NOOT, NORET, NOSPAMT, NOSPEC, NOTER, NOTLATE, NOWAGE, NOWEL, ONLYONTIME, OUDT, OUTCD, OilSubsidy, OldSaladr, OutPost, PASS_DATE, RETCHOO, RETDATE, RETDATE1, RETRATE, ROTET, SALADR, SALTP, STATION, STDT, STINDT, STOUDT, TAX_DATE, TAX_EDATE, TTSCD, TTSCODE, WK_YRS, WORKCD, YR_DAYS FROM BASETTS WHERE (NOBR = @nobr) AND (@date BETWEEN ADATE AND DDATE)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nobr", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@date", global::System.Data.SqlDbType.DateTime, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.BASETTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.BASETTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.BASETTSDataTable dataTable = new SalaryDS.BASETTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNobrDate(SalaryDS.BASETTSDataTable dataTable, string nobr, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(date));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.BASETTSDataTable GetDataByNobrDate(string nobr, System.DateTime date) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(date));
            SalaryDS.BASETTSDataTable dataTable = new SalaryDS.BASETTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.BASETTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "BASETTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_TTSCODE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    global::System.Nullable<global::System.DateTime> Original_INDT, 
                    global::System.Nullable<global::System.DateTime> Original_CINDT, 
                    global::System.Nullable<global::System.DateTime> Original_OUDT, 
                    global::System.Nullable<global::System.DateTime> Original_STDT, 
                    global::System.Nullable<global::System.DateTime> Original_STINDT, 
                    global::System.Nullable<global::System.DateTime> Original_STOUDT, 
                    string Original_COMP, 
                    string Original_DEPT, 
                    string Original_DEPTS, 
                    string Original_JOB, 
                    string Original_JOBL, 
                    string Original_CARD, 
                    string Original_ROTET, 
                    string Original_DI, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    bool Original_MANG, 
                    decimal Original_YR_DAYS, 
                    decimal Original_WK_YRS, 
                    string Original_SALTP, 
                    string Original_JOBS, 
                    string Original_WORKCD, 
                    string Original_CARCD, 
                    string Original_EMPCD, 
                    string Original_OUTCD, 
                    bool Original_CALABS, 
                    string Original_CALOT, 
                    bool Original_FULATT, 
                    bool Original_NOTER, 
                    bool Original_NOWEL, 
                    bool Original_NORET, 
                    bool Original_NOTLATE, 
                    string Original_HOLI_CODE, 
                    bool Original_NOOT, 
                    bool Original_NOSPEC, 
                    bool Original_NOCARD, 
                    bool Original_NOEAT, 
                    string Original_APGRPCD, 
                    string Original_DEPTM, 
                    string Original_TTSCD, 
                    string Original_MENO, 
                    string Original_SALADR, 
                    bool Original_NOWAGE, 
                    bool Original_MANGE, 
                    decimal Original_RETRATE, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE, 
                    string Original_RETCHOO, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE1, 
                    bool Original_ONLYONTIME, 
                    string Original_JOBO, 
                    bool Original_COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> Original_PASS_DATE, 
                    bool Original_MANG1, 
                    global::System.Nullable<global::System.DateTime> Original_AP_DATE, 
                    decimal Original_GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_DATE, 
                    bool Original_NOSPAMT, 
                    bool Original_FIXRATE, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_EDATE, 
                    bool Original_IS_SELFOUT, 
                    string Original_INSG_TYPE, 
                    string Original_OldSaladr, 
                    string Original_STATION, 
                    string Original_CardJobName, 
                    string Original_CardJobEnName, 
                    string Original_OilSubsidy, 
                    string Original_CardID, 
                    string Original_DoorGuard, 
                    string Original_OutPost) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_TTSCODE == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TTSCODE));
            }
            if ((Original_DDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_INDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_INDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_CINDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_CINDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_OUDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_OUDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_STDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_STDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_STINDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_STINDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_STOUDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_STOUDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_COMP));
            }
            if ((Original_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_DEPT));
            }
            if ((Original_DEPTS == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_DEPTS));
            }
            if ((Original_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_JOB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_JOB));
            }
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_JOBL));
            }
            if ((Original_CARD == null)) {
                throw new global::System.ArgumentNullException("Original_CARD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CARD));
            }
            if ((Original_ROTET == null)) {
                throw new global::System.ArgumentNullException("Original_ROTET");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ROTET));
            }
            if ((Original_DI == null)) {
                throw new global::System.ArgumentNullException("Original_DI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_DI));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_MANG));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_YR_DAYS));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_WK_YRS));
            if ((Original_SALTP == null)) {
                throw new global::System.ArgumentNullException("Original_SALTP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_SALTP));
            }
            if ((Original_JOBS == null)) {
                throw new global::System.ArgumentNullException("Original_JOBS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_JOBS));
            }
            if ((Original_WORKCD == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_WORKCD));
            }
            if ((Original_CARCD == null)) {
                throw new global::System.ArgumentNullException("Original_CARCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_CARCD));
            }
            if ((Original_EMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_EMPCD));
            }
            if ((Original_OUTCD == null)) {
                throw new global::System.ArgumentNullException("Original_OUTCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_OUTCD));
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_CALABS));
            if ((Original_CALOT == null)) {
                throw new global::System.ArgumentNullException("Original_CALOT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_CALOT));
            }
            this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_FULATT));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((bool)(Original_NOTER));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_NOWEL));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((bool)(Original_NORET));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_NOTLATE));
            if ((Original_HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_HOLI_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_HOLI_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_NOOT));
            this.Adapter.DeleteCommand.Parameters[45].Value = ((bool)(Original_NOSPEC));
            this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_NOCARD));
            this.Adapter.DeleteCommand.Parameters[47].Value = ((bool)(Original_NOEAT));
            if ((Original_APGRPCD == null)) {
                throw new global::System.ArgumentNullException("Original_APGRPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_APGRPCD));
            }
            if ((Original_DEPTM == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_DEPTM));
            }
            if ((Original_TTSCD == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_TTSCD));
            }
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_MENO));
            }
            if ((Original_SALADR == null)) {
                throw new global::System.ArgumentNullException("Original_SALADR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_SALADR));
            }
            this.Adapter.DeleteCommand.Parameters[53].Value = ((bool)(Original_NOWAGE));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((bool)(Original_MANGE));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_RETRATE));
            if ((Original_RETDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((System.DateTime)(Original_RETDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_RETCHOO == null)) {
                throw new global::System.ArgumentNullException("Original_RETCHOO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_RETCHOO));
            }
            if ((Original_RETDATE1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTime)(Original_RETDATE1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[61].Value = ((bool)(Original_ONLYONTIME));
            if ((Original_JOBO == null)) {
                throw new global::System.ArgumentNullException("Original_JOBO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_JOBO));
            }
            this.Adapter.DeleteCommand.Parameters[63].Value = ((bool)(Original_COUNT_PASS));
            if ((Original_PASS_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((System.DateTime)(Original_PASS_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[66].Value = ((bool)(Original_MANG1));
            if ((Original_AP_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((System.DateTime)(Original_AP_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_GRP_AMT));
            if ((Original_TAX_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((System.DateTime)(Original_TAX_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[72].Value = ((bool)(Original_NOSPAMT));
            this.Adapter.DeleteCommand.Parameters[73].Value = ((bool)(Original_FIXRATE));
            if ((Original_TAX_EDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((System.DateTime)(Original_TAX_EDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[76].Value = ((bool)(Original_IS_SELFOUT));
            if ((Original_INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INSG_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_INSG_TYPE));
            }
            if ((Original_OldSaladr == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_OldSaladr));
            }
            if ((Original_STATION == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_STATION));
            }
            if ((Original_CardJobName == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_CardJobName));
            }
            if ((Original_CardJobEnName == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_CardJobEnName));
            }
            if ((Original_OilSubsidy == null)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_OilSubsidy));
            }
            if ((Original_CardID == null)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((string)(Original_CardID));
            }
            if ((Original_DoorGuard == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_DoorGuard));
            }
            if ((Original_OutPost == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_OutPost));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NOBR, 
                    System.DateTime ADATE, 
                    string TTSCODE, 
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    global::System.Nullable<global::System.DateTime> INDT, 
                    global::System.Nullable<global::System.DateTime> CINDT, 
                    global::System.Nullable<global::System.DateTime> OUDT, 
                    global::System.Nullable<global::System.DateTime> STDT, 
                    global::System.Nullable<global::System.DateTime> STINDT, 
                    global::System.Nullable<global::System.DateTime> STOUDT, 
                    string COMP, 
                    string DEPT, 
                    string DEPTS, 
                    string JOB, 
                    string JOBL, 
                    string CARD, 
                    string ROTET, 
                    string DI, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool MANG, 
                    decimal YR_DAYS, 
                    decimal WK_YRS, 
                    string SALTP, 
                    string JOBS, 
                    string WORKCD, 
                    string CARCD, 
                    string EMPCD, 
                    string OUTCD, 
                    bool CALABS, 
                    string CALOT, 
                    bool FULATT, 
                    bool NOTER, 
                    bool NOWEL, 
                    bool NORET, 
                    bool NOTLATE, 
                    string HOLI_CODE, 
                    bool NOOT, 
                    bool NOSPEC, 
                    bool NOCARD, 
                    bool NOEAT, 
                    string APGRPCD, 
                    string DEPTM, 
                    string TTSCD, 
                    string MENO, 
                    string SALADR, 
                    bool NOWAGE, 
                    bool MANGE, 
                    decimal RETRATE, 
                    global::System.Nullable<global::System.DateTime> RETDATE, 
                    string RETCHOO, 
                    global::System.Nullable<global::System.DateTime> RETDATE1, 
                    bool ONLYONTIME, 
                    string JOBO, 
                    bool COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> PASS_DATE, 
                    bool MANG1, 
                    global::System.Nullable<global::System.DateTime> AP_DATE, 
                    decimal GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> TAX_DATE, 
                    bool NOSPAMT, 
                    bool FIXRATE, 
                    global::System.Nullable<global::System.DateTime> TAX_EDATE, 
                    bool IS_SELFOUT, 
                    string INSG_TYPE, 
                    string OldSaladr, 
                    string STATION, 
                    string CardJobName, 
                    string CardJobEnName, 
                    string OilSubsidy, 
                    string CardID, 
                    string DoorGuard, 
                    string OutPost) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ADATE));
            if ((TTSCODE == null)) {
                throw new global::System.ArgumentNullException("TTSCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TTSCODE));
            }
            if ((DDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((INDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(INDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CINDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CINDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OUDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(OUDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((STDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(STDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((STINDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(STINDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((STOUDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(STOUDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(COMP));
            }
            if ((DEPT == null)) {
                throw new global::System.ArgumentNullException("DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(DEPT));
            }
            if ((DEPTS == null)) {
                throw new global::System.ArgumentNullException("DEPTS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(DEPTS));
            }
            if ((JOB == null)) {
                throw new global::System.ArgumentNullException("JOB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(JOB));
            }
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(JOBL));
            }
            if ((CARD == null)) {
                throw new global::System.ArgumentNullException("CARD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CARD));
            }
            if ((ROTET == null)) {
                throw new global::System.ArgumentNullException("ROTET");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ROTET));
            }
            if ((DI == null)) {
                throw new global::System.ArgumentNullException("DI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DI));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(MANG));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(YR_DAYS));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(WK_YRS));
            if ((SALTP == null)) {
                throw new global::System.ArgumentNullException("SALTP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(SALTP));
            }
            if ((JOBS == null)) {
                throw new global::System.ArgumentNullException("JOBS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(JOBS));
            }
            if ((WORKCD == null)) {
                throw new global::System.ArgumentNullException("WORKCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(WORKCD));
            }
            if ((CARCD == null)) {
                throw new global::System.ArgumentNullException("CARCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(CARCD));
            }
            if ((EMPCD == null)) {
                throw new global::System.ArgumentNullException("EMPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(EMPCD));
            }
            if ((OUTCD == null)) {
                throw new global::System.ArgumentNullException("OUTCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(OUTCD));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(CALABS));
            if ((CALOT == null)) {
                throw new global::System.ArgumentNullException("CALOT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(CALOT));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(FULATT));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(NOTER));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(NOWEL));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(NORET));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(NOTLATE));
            if ((HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("HOLI_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(HOLI_CODE));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(NOOT));
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(NOSPEC));
            this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(NOCARD));
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(NOEAT));
            if ((APGRPCD == null)) {
                throw new global::System.ArgumentNullException("APGRPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(APGRPCD));
            }
            if ((DEPTM == null)) {
                throw new global::System.ArgumentNullException("DEPTM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(DEPTM));
            }
            if ((TTSCD == null)) {
                throw new global::System.ArgumentNullException("TTSCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(TTSCD));
            }
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(MENO));
            }
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(SALADR));
            }
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(NOWAGE));
            this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(MANGE));
            this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(RETRATE));
            if ((RETDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(RETDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((RETCHOO == null)) {
                throw new global::System.ArgumentNullException("RETCHOO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(RETCHOO));
            }
            if ((RETDATE1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(RETDATE1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[52].Value = ((bool)(ONLYONTIME));
            if ((JOBO == null)) {
                throw new global::System.ArgumentNullException("JOBO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(JOBO));
            }
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(COUNT_PASS));
            if ((PASS_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(PASS_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[56].Value = ((bool)(MANG1));
            if ((AP_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((System.DateTime)(AP_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(GRP_AMT));
            if ((TAX_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((System.DateTime)(TAX_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(NOSPAMT));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(FIXRATE));
            if ((TAX_EDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((System.DateTime)(TAX_EDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(IS_SELFOUT));
            if ((INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSG_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(INSG_TYPE));
            }
            if ((OldSaladr == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(OldSaladr));
            }
            if ((STATION == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(STATION));
            }
            if ((CardJobName == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(CardJobName));
            }
            if ((CardJobEnName == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(CardJobEnName));
            }
            if ((OilSubsidy == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(OilSubsidy));
            }
            if ((CardID == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(CardID));
            }
            if ((DoorGuard == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(DoorGuard));
            }
            if ((OutPost == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(OutPost));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    System.DateTime ADATE, 
                    string TTSCODE, 
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    global::System.Nullable<global::System.DateTime> INDT, 
                    global::System.Nullable<global::System.DateTime> CINDT, 
                    global::System.Nullable<global::System.DateTime> OUDT, 
                    global::System.Nullable<global::System.DateTime> STDT, 
                    global::System.Nullable<global::System.DateTime> STINDT, 
                    global::System.Nullable<global::System.DateTime> STOUDT, 
                    string COMP, 
                    string DEPT, 
                    string DEPTS, 
                    string JOB, 
                    string JOBL, 
                    string CARD, 
                    string ROTET, 
                    string DI, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool MANG, 
                    decimal YR_DAYS, 
                    decimal WK_YRS, 
                    string SALTP, 
                    string JOBS, 
                    string WORKCD, 
                    string CARCD, 
                    string EMPCD, 
                    string OUTCD, 
                    bool CALABS, 
                    string CALOT, 
                    bool FULATT, 
                    bool NOTER, 
                    bool NOWEL, 
                    bool NORET, 
                    bool NOTLATE, 
                    string HOLI_CODE, 
                    bool NOOT, 
                    bool NOSPEC, 
                    bool NOCARD, 
                    bool NOEAT, 
                    string APGRPCD, 
                    string DEPTM, 
                    string TTSCD, 
                    string MENO, 
                    string SALADR, 
                    bool NOWAGE, 
                    bool MANGE, 
                    decimal RETRATE, 
                    global::System.Nullable<global::System.DateTime> RETDATE, 
                    string RETCHOO, 
                    global::System.Nullable<global::System.DateTime> RETDATE1, 
                    bool ONLYONTIME, 
                    string JOBO, 
                    bool COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> PASS_DATE, 
                    bool MANG1, 
                    global::System.Nullable<global::System.DateTime> AP_DATE, 
                    decimal GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> TAX_DATE, 
                    bool NOSPAMT, 
                    bool FIXRATE, 
                    global::System.Nullable<global::System.DateTime> TAX_EDATE, 
                    bool IS_SELFOUT, 
                    string INSG_TYPE, 
                    string OldSaladr, 
                    string STATION, 
                    string CardJobName, 
                    string CardJobEnName, 
                    string OilSubsidy, 
                    string CardID, 
                    string DoorGuard, 
                    string OutPost, 
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_TTSCODE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    global::System.Nullable<global::System.DateTime> Original_INDT, 
                    global::System.Nullable<global::System.DateTime> Original_CINDT, 
                    global::System.Nullable<global::System.DateTime> Original_OUDT, 
                    global::System.Nullable<global::System.DateTime> Original_STDT, 
                    global::System.Nullable<global::System.DateTime> Original_STINDT, 
                    global::System.Nullable<global::System.DateTime> Original_STOUDT, 
                    string Original_COMP, 
                    string Original_DEPT, 
                    string Original_DEPTS, 
                    string Original_JOB, 
                    string Original_JOBL, 
                    string Original_CARD, 
                    string Original_ROTET, 
                    string Original_DI, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    bool Original_MANG, 
                    decimal Original_YR_DAYS, 
                    decimal Original_WK_YRS, 
                    string Original_SALTP, 
                    string Original_JOBS, 
                    string Original_WORKCD, 
                    string Original_CARCD, 
                    string Original_EMPCD, 
                    string Original_OUTCD, 
                    bool Original_CALABS, 
                    string Original_CALOT, 
                    bool Original_FULATT, 
                    bool Original_NOTER, 
                    bool Original_NOWEL, 
                    bool Original_NORET, 
                    bool Original_NOTLATE, 
                    string Original_HOLI_CODE, 
                    bool Original_NOOT, 
                    bool Original_NOSPEC, 
                    bool Original_NOCARD, 
                    bool Original_NOEAT, 
                    string Original_APGRPCD, 
                    string Original_DEPTM, 
                    string Original_TTSCD, 
                    string Original_MENO, 
                    string Original_SALADR, 
                    bool Original_NOWAGE, 
                    bool Original_MANGE, 
                    decimal Original_RETRATE, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE, 
                    string Original_RETCHOO, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE1, 
                    bool Original_ONLYONTIME, 
                    string Original_JOBO, 
                    bool Original_COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> Original_PASS_DATE, 
                    bool Original_MANG1, 
                    global::System.Nullable<global::System.DateTime> Original_AP_DATE, 
                    decimal Original_GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_DATE, 
                    bool Original_NOSPAMT, 
                    bool Original_FIXRATE, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_EDATE, 
                    bool Original_IS_SELFOUT, 
                    string Original_INSG_TYPE, 
                    string Original_OldSaladr, 
                    string Original_STATION, 
                    string Original_CardJobName, 
                    string Original_CardJobEnName, 
                    string Original_OilSubsidy, 
                    string Original_CardID, 
                    string Original_DoorGuard, 
                    string Original_OutPost) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ADATE));
            if ((TTSCODE == null)) {
                throw new global::System.ArgumentNullException("TTSCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TTSCODE));
            }
            if ((DDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((INDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(INDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(CINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(OUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((STDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(STDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((STINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(STINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((STOUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(STOUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(COMP));
            }
            if ((DEPT == null)) {
                throw new global::System.ArgumentNullException("DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(DEPT));
            }
            if ((DEPTS == null)) {
                throw new global::System.ArgumentNullException("DEPTS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(DEPTS));
            }
            if ((JOB == null)) {
                throw new global::System.ArgumentNullException("JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(JOB));
            }
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(JOBL));
            }
            if ((CARD == null)) {
                throw new global::System.ArgumentNullException("CARD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CARD));
            }
            if ((ROTET == null)) {
                throw new global::System.ArgumentNullException("ROTET");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ROTET));
            }
            if ((DI == null)) {
                throw new global::System.ArgumentNullException("DI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DI));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(MANG));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(YR_DAYS));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(WK_YRS));
            if ((SALTP == null)) {
                throw new global::System.ArgumentNullException("SALTP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(SALTP));
            }
            if ((JOBS == null)) {
                throw new global::System.ArgumentNullException("JOBS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(JOBS));
            }
            if ((WORKCD == null)) {
                throw new global::System.ArgumentNullException("WORKCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(WORKCD));
            }
            if ((CARCD == null)) {
                throw new global::System.ArgumentNullException("CARCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(CARCD));
            }
            if ((EMPCD == null)) {
                throw new global::System.ArgumentNullException("EMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(EMPCD));
            }
            if ((OUTCD == null)) {
                throw new global::System.ArgumentNullException("OUTCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(OUTCD));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(CALABS));
            if ((CALOT == null)) {
                throw new global::System.ArgumentNullException("CALOT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(CALOT));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(FULATT));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(NOTER));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(NOWEL));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(NORET));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(NOTLATE));
            if ((HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("HOLI_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(HOLI_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(NOOT));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(NOSPEC));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(NOCARD));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(NOEAT));
            if ((APGRPCD == null)) {
                throw new global::System.ArgumentNullException("APGRPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(APGRPCD));
            }
            if ((DEPTM == null)) {
                throw new global::System.ArgumentNullException("DEPTM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(DEPTM));
            }
            if ((TTSCD == null)) {
                throw new global::System.ArgumentNullException("TTSCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(TTSCD));
            }
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(MENO));
            }
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(SALADR));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(NOWAGE));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(MANGE));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(RETRATE));
            if ((RETDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(RETDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((RETCHOO == null)) {
                throw new global::System.ArgumentNullException("RETCHOO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(RETCHOO));
            }
            if ((RETDATE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(RETDATE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(ONLYONTIME));
            if ((JOBO == null)) {
                throw new global::System.ArgumentNullException("JOBO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(JOBO));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(COUNT_PASS));
            if ((PASS_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(PASS_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(MANG1));
            if ((AP_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(AP_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(GRP_AMT));
            if ((TAX_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(TAX_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(NOSPAMT));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(FIXRATE));
            if ((TAX_EDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(TAX_EDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(IS_SELFOUT));
            if ((INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSG_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(INSG_TYPE));
            }
            if ((OldSaladr == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(OldSaladr));
            }
            if ((STATION == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(STATION));
            }
            if ((CardJobName == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(CardJobName));
            }
            if ((CardJobEnName == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(CardJobEnName));
            }
            if ((OilSubsidy == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(OilSubsidy));
            }
            if ((CardID == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(CardID));
            }
            if ((DoorGuard == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(DoorGuard));
            }
            if ((OutPost == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(OutPost));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_TTSCODE == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_TTSCODE));
            }
            if ((Original_DDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_DDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_INDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_INDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_CINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Original_CINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_OUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(Original_OUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_STDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(Original_STDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_STINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((System.DateTime)(Original_STINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_STOUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_STOUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_COMP));
            }
            if ((Original_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_DEPT));
            }
            if ((Original_DEPTS == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_DEPTS));
            }
            if ((Original_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_JOB));
            }
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_JOBL));
            }
            if ((Original_CARD == null)) {
                throw new global::System.ArgumentNullException("Original_CARD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_CARD));
            }
            if ((Original_ROTET == null)) {
                throw new global::System.ArgumentNullException("Original_ROTET");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_ROTET));
            }
            if ((Original_DI == null)) {
                throw new global::System.ArgumentNullException("Original_DI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_DI));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[99].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(Original_MANG));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_YR_DAYS));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(Original_WK_YRS));
            if ((Original_SALTP == null)) {
                throw new global::System.ArgumentNullException("Original_SALTP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_SALTP));
            }
            if ((Original_JOBS == null)) {
                throw new global::System.ArgumentNullException("Original_JOBS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_JOBS));
            }
            if ((Original_WORKCD == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_WORKCD));
            }
            if ((Original_CARCD == null)) {
                throw new global::System.ArgumentNullException("Original_CARCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_CARCD));
            }
            if ((Original_EMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_EMPCD));
            }
            if ((Original_OUTCD == null)) {
                throw new global::System.ArgumentNullException("Original_OUTCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_OUTCD));
            }
            this.Adapter.UpdateCommand.Parameters[109].Value = ((bool)(Original_CALABS));
            if ((Original_CALOT == null)) {
                throw new global::System.ArgumentNullException("Original_CALOT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_CALOT));
            }
            this.Adapter.UpdateCommand.Parameters[111].Value = ((bool)(Original_FULATT));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((bool)(Original_NOTER));
            this.Adapter.UpdateCommand.Parameters[113].Value = ((bool)(Original_NOWEL));
            this.Adapter.UpdateCommand.Parameters[114].Value = ((bool)(Original_NORET));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((bool)(Original_NOTLATE));
            if ((Original_HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_HOLI_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_HOLI_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[117].Value = ((bool)(Original_NOOT));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((bool)(Original_NOSPEC));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((bool)(Original_NOCARD));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((bool)(Original_NOEAT));
            if ((Original_APGRPCD == null)) {
                throw new global::System.ArgumentNullException("Original_APGRPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_APGRPCD));
            }
            if ((Original_DEPTM == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_DEPTM));
            }
            if ((Original_TTSCD == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_TTSCD));
            }
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_MENO));
            }
            if ((Original_SALADR == null)) {
                throw new global::System.ArgumentNullException("Original_SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_SALADR));
            }
            this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(Original_NOWAGE));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((bool)(Original_MANGE));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(Original_RETRATE));
            if ((Original_RETDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_RETDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_RETCHOO == null)) {
                throw new global::System.ArgumentNullException("Original_RETCHOO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_RETCHOO));
            }
            if ((Original_RETDATE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((System.DateTime)(Original_RETDATE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(Original_ONLYONTIME));
            if ((Original_JOBO == null)) {
                throw new global::System.ArgumentNullException("Original_JOBO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_JOBO));
            }
            this.Adapter.UpdateCommand.Parameters[136].Value = ((bool)(Original_COUNT_PASS));
            if ((Original_PASS_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((System.DateTime)(Original_PASS_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[139].Value = ((bool)(Original_MANG1));
            if ((Original_AP_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((System.DateTime)(Original_AP_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[142].Value = ((decimal)(Original_GRP_AMT));
            if ((Original_TAX_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((System.DateTime)(Original_TAX_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[145].Value = ((bool)(Original_NOSPAMT));
            this.Adapter.UpdateCommand.Parameters[146].Value = ((bool)(Original_FIXRATE));
            if ((Original_TAX_EDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((System.DateTime)(Original_TAX_EDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[149].Value = ((bool)(Original_IS_SELFOUT));
            if ((Original_INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INSG_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_INSG_TYPE));
            }
            if ((Original_OldSaladr == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_OldSaladr));
            }
            if ((Original_STATION == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_STATION));
            }
            if ((Original_CardJobName == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_CardJobName));
            }
            if ((Original_CardJobEnName == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_CardJobEnName));
            }
            if ((Original_OilSubsidy == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(Original_OilSubsidy));
            }
            if ((Original_CardID == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(Original_CardID));
            }
            if ((Original_DoorGuard == null)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((string)(Original_DoorGuard));
            }
            if ((Original_OutPost == null)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((string)(Original_OutPost));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    global::System.Nullable<global::System.DateTime> INDT, 
                    global::System.Nullable<global::System.DateTime> CINDT, 
                    global::System.Nullable<global::System.DateTime> OUDT, 
                    global::System.Nullable<global::System.DateTime> STDT, 
                    global::System.Nullable<global::System.DateTime> STINDT, 
                    global::System.Nullable<global::System.DateTime> STOUDT, 
                    string COMP, 
                    string DEPT, 
                    string DEPTS, 
                    string JOB, 
                    string JOBL, 
                    string CARD, 
                    string ROTET, 
                    string DI, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool MANG, 
                    decimal YR_DAYS, 
                    decimal WK_YRS, 
                    string SALTP, 
                    string JOBS, 
                    string WORKCD, 
                    string CARCD, 
                    string EMPCD, 
                    string OUTCD, 
                    bool CALABS, 
                    string CALOT, 
                    bool FULATT, 
                    bool NOTER, 
                    bool NOWEL, 
                    bool NORET, 
                    bool NOTLATE, 
                    string HOLI_CODE, 
                    bool NOOT, 
                    bool NOSPEC, 
                    bool NOCARD, 
                    bool NOEAT, 
                    string APGRPCD, 
                    string DEPTM, 
                    string TTSCD, 
                    string MENO, 
                    string SALADR, 
                    bool NOWAGE, 
                    bool MANGE, 
                    decimal RETRATE, 
                    global::System.Nullable<global::System.DateTime> RETDATE, 
                    string RETCHOO, 
                    global::System.Nullable<global::System.DateTime> RETDATE1, 
                    bool ONLYONTIME, 
                    string JOBO, 
                    bool COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> PASS_DATE, 
                    bool MANG1, 
                    global::System.Nullable<global::System.DateTime> AP_DATE, 
                    decimal GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> TAX_DATE, 
                    bool NOSPAMT, 
                    bool FIXRATE, 
                    global::System.Nullable<global::System.DateTime> TAX_EDATE, 
                    bool IS_SELFOUT, 
                    string INSG_TYPE, 
                    string OldSaladr, 
                    string STATION, 
                    string CardJobName, 
                    string CardJobEnName, 
                    string OilSubsidy, 
                    string CardID, 
                    string DoorGuard, 
                    string OutPost, 
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_TTSCODE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    global::System.Nullable<global::System.DateTime> Original_INDT, 
                    global::System.Nullable<global::System.DateTime> Original_CINDT, 
                    global::System.Nullable<global::System.DateTime> Original_OUDT, 
                    global::System.Nullable<global::System.DateTime> Original_STDT, 
                    global::System.Nullable<global::System.DateTime> Original_STINDT, 
                    global::System.Nullable<global::System.DateTime> Original_STOUDT, 
                    string Original_COMP, 
                    string Original_DEPT, 
                    string Original_DEPTS, 
                    string Original_JOB, 
                    string Original_JOBL, 
                    string Original_CARD, 
                    string Original_ROTET, 
                    string Original_DI, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    bool Original_MANG, 
                    decimal Original_YR_DAYS, 
                    decimal Original_WK_YRS, 
                    string Original_SALTP, 
                    string Original_JOBS, 
                    string Original_WORKCD, 
                    string Original_CARCD, 
                    string Original_EMPCD, 
                    string Original_OUTCD, 
                    bool Original_CALABS, 
                    string Original_CALOT, 
                    bool Original_FULATT, 
                    bool Original_NOTER, 
                    bool Original_NOWEL, 
                    bool Original_NORET, 
                    bool Original_NOTLATE, 
                    string Original_HOLI_CODE, 
                    bool Original_NOOT, 
                    bool Original_NOSPEC, 
                    bool Original_NOCARD, 
                    bool Original_NOEAT, 
                    string Original_APGRPCD, 
                    string Original_DEPTM, 
                    string Original_TTSCD, 
                    string Original_MENO, 
                    string Original_SALADR, 
                    bool Original_NOWAGE, 
                    bool Original_MANGE, 
                    decimal Original_RETRATE, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE, 
                    string Original_RETCHOO, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE1, 
                    bool Original_ONLYONTIME, 
                    string Original_JOBO, 
                    bool Original_COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> Original_PASS_DATE, 
                    bool Original_MANG1, 
                    global::System.Nullable<global::System.DateTime> Original_AP_DATE, 
                    decimal Original_GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_DATE, 
                    bool Original_NOSPAMT, 
                    bool Original_FIXRATE, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_EDATE, 
                    bool Original_IS_SELFOUT, 
                    string Original_INSG_TYPE, 
                    string Original_OldSaladr, 
                    string Original_STATION, 
                    string Original_CardJobName, 
                    string Original_CardJobEnName, 
                    string Original_OilSubsidy, 
                    string Original_CardID, 
                    string Original_DoorGuard, 
                    string Original_OutPost) {
            return this.Update(Original_NOBR, Original_ADATE, Original_TTSCODE, DDATE, INDT, CINDT, OUDT, STDT, STINDT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, KEY_MAN, KEY_DATE, MANG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUTCD, CALABS, CALOT, FULATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCARD, NOEAT, APGRPCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE, RETCHOO, RETDATE1, ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP_AMT, TAX_DATE, NOSPAMT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, STATION, CardJobName, CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost, Original_NOBR, Original_ADATE, Original_TTSCODE, Original_DDATE, Original_INDT, Original_CINDT, Original_OUDT, Original_STDT, Original_STINDT, Original_STOUDT, Original_COMP, Original_DEPT, Original_DEPTS, Original_JOB, Original_JOBL, Original_CARD, Original_ROTET, Original_DI, Original_KEY_MAN, Original_KEY_DATE, Original_MANG, Original_YR_DAYS, Original_WK_YRS, Original_SALTP, Original_JOBS, Original_WORKCD, Original_CARCD, Original_EMPCD, Original_OUTCD, Original_CALABS, Original_CALOT, Original_FULATT, Original_NOTER, Original_NOWEL, Original_NORET, Original_NOTLATE, Original_HOLI_CODE, Original_NOOT, Original_NOSPEC, Original_NOCARD, Original_NOEAT, Original_APGRPCD, Original_DEPTM, Original_TTSCD, Original_MENO, Original_SALADR, Original_NOWAGE, Original_MANGE, Original_RETRATE, Original_RETDATE, Original_RETCHOO, Original_RETDATE1, Original_ONLYONTIME, Original_JOBO, Original_COUNT_PASS, Original_PASS_DATE, Original_MANG1, Original_AP_DATE, Original_GRP_AMT, Original_TAX_DATE, Original_NOSPAMT, Original_FIXRATE, Original_TAX_EDATE, Original_IS_SELFOUT, Original_INSG_TYPE, Original_OldSaladr, Original_STATION, Original_CardJobName, Original_CardJobEnName, Original_OilSubsidy, Original_CardID, Original_DoorGuard, Original_OutPost);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSGLVTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public INSGLVTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSGLV";
            tableMapping.ColumnMappings.Add("INS_TYPE", "INS_TYPE");
            tableMapping.ColumnMappings.Add("LIFE_A", "LIFE_A");
            tableMapping.ColumnMappings.Add("LIFE_B", "LIFE_B");
            tableMapping.ColumnMappings.Add("LIFE_C", "LIFE_C");
            tableMapping.ColumnMappings.Add("LIFE_D", "LIFE_D");
            tableMapping.ColumnMappings.Add("CHANCE_A", "CHANCE_A");
            tableMapping.ColumnMappings.Add("CHANCE_B", "CHANCE_B");
            tableMapping.ColumnMappings.Add("CHANCE_C", "CHANCE_C");
            tableMapping.ColumnMappings.Add("CHANCE_D", "CHANCE_D");
            tableMapping.ColumnMappings.Add("HOSPITAL_A", "HOSPITAL_A");
            tableMapping.ColumnMappings.Add("HOSPITAL_B", "HOSPITAL_B");
            tableMapping.ColumnMappings.Add("HOSPITAL_C", "HOSPITAL_C");
            tableMapping.ColumnMappings.Add("HOSPITAL_D", "HOSPITAL_D");
            tableMapping.ColumnMappings.Add("OUTPAT_A", "OUTPAT_A");
            tableMapping.ColumnMappings.Add("OUTPAT_B", "OUTPAT_B");
            tableMapping.ColumnMappings.Add("OUTPAT_C", "OUTPAT_C");
            tableMapping.ColumnMappings.Add("OUTPAT_D", "OUTPAT_D");
            tableMapping.ColumnMappings.Add("CANCER_A", "CANCER_A");
            tableMapping.ColumnMappings.Add("CANCER_B", "CANCER_B");
            tableMapping.ColumnMappings.Add("CANCER_C", "CANCER_C");
            tableMapping.ColumnMappings.Add("CANCER_D", "CANCER_D");
            tableMapping.ColumnMappings.Add("EXP_A", "EXP_A");
            tableMapping.ColumnMappings.Add("EXP_B", "EXP_B");
            tableMapping.ColumnMappings.Add("EXP_C", "EXP_C");
            tableMapping.ColumnMappings.Add("EXP_D", "EXP_D");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [INSGLV] WHERE (([INS_TYPE] = @Original_INS_TYPE) AND ([LIFE_A] = @Original_LIFE_A) AND ([LIFE_B] = @Original_LIFE_B) AND ([LIFE_C] = @Original_LIFE_C) AND ([LIFE_D] = @Original_LIFE_D) AND ([CHANCE_A] = @Original_CHANCE_A) AND ([CHANCE_B] = @Original_CHANCE_B) AND ([CHANCE_C] = @Original_CHANCE_C) AND ([CHANCE_D] = @Original_CHANCE_D) AND ([HOSPITAL_A] = @Original_HOSPITAL_A) AND ([HOSPITAL_B] = @Original_HOSPITAL_B) AND ([HOSPITAL_C] = @Original_HOSPITAL_C) AND ([HOSPITAL_D] = @Original_HOSPITAL_D) AND ([OUTPAT_A] = @Original_OUTPAT_A) AND ([OUTPAT_B] = @Original_OUTPAT_B) AND ([OUTPAT_C] = @Original_OUTPAT_C) AND ([OUTPAT_D] = @Original_OUTPAT_D) AND ([CANCER_A] = @Original_CANCER_A) AND ([CANCER_B] = @Original_CANCER_B) AND ([CANCER_C] = @Original_CANCER_C) AND ([CANCER_D] = @Original_CANCER_D) AND ([EXP_A] = @Original_EXP_A) AND ([EXP_B] = @Original_EXP_B) AND ([EXP_C] = @Original_EXP_C) AND ([EXP_D] = @Original_EXP_D) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INS_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INS_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [INSGLV] ([INS_TYPE], [LIFE_A], [LIFE_B], [LIFE_C], [LIFE_D], [CHANCE_A], [CHANCE_B], [CHANCE_C], [CHANCE_D], [HOSPITAL_A], [HOSPITAL_B], [HOSPITAL_C], [HOSPITAL_D], [OUTPAT_A], [OUTPAT_B], [OUTPAT_C], [OUTPAT_D], [CANCER_A], [CANCER_B], [CANCER_C], [CANCER_D], [EXP_A], [EXP_B], [EXP_C], [EXP_D], [KEY_MAN], [KEY_DATE]) VALUES (@INS_TYPE, @LIFE_A, @LIFE_B, @LIFE_C, @LIFE_D, @CHANCE_A, @CHANCE_B, @CHANCE_C, @CHANCE_D, @HOSPITAL_A, @HOSPITAL_B, @HOSPITAL_C, @HOSPITAL_D, @OUTPAT_A, @OUTPAT_B, @OUTPAT_C, @OUTPAT_D, @CANCER_A, @CANCER_B, @CANCER_C, @CANCER_D, @EXP_A, @EXP_B, @EXP_C, @EXP_D, @KEY_MAN, @KEY_DATE);
SELECT INS_TYPE, LIFE_A, LIFE_B, LIFE_C, LIFE_D, CHANCE_A, CHANCE_B, CHANCE_C, CHANCE_D, HOSPITAL_A, HOSPITAL_B, HOSPITAL_C, HOSPITAL_D, OUTPAT_A, OUTPAT_B, OUTPAT_C, OUTPAT_D, CANCER_A, CANCER_B, CANCER_C, CANCER_D, EXP_A, EXP_B, EXP_C, EXP_D, KEY_MAN, KEY_DATE FROM INSGLV WHERE (INS_TYPE = @INS_TYPE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INS_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INS_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [INSGLV] SET [INS_TYPE] = @INS_TYPE, [LIFE_A] = @LIFE_A, [LIFE_B] = @LIFE_" +
                "B, [LIFE_C] = @LIFE_C, [LIFE_D] = @LIFE_D, [CHANCE_A] = @CHANCE_A, [CHANCE_B] = " +
                "@CHANCE_B, [CHANCE_C] = @CHANCE_C, [CHANCE_D] = @CHANCE_D, [HOSPITAL_A] = @HOSPI" +
                "TAL_A, [HOSPITAL_B] = @HOSPITAL_B, [HOSPITAL_C] = @HOSPITAL_C, [HOSPITAL_D] = @H" +
                "OSPITAL_D, [OUTPAT_A] = @OUTPAT_A, [OUTPAT_B] = @OUTPAT_B, [OUTPAT_C] = @OUTPAT_" +
                "C, [OUTPAT_D] = @OUTPAT_D, [CANCER_A] = @CANCER_A, [CANCER_B] = @CANCER_B, [CANC" +
                "ER_C] = @CANCER_C, [CANCER_D] = @CANCER_D, [EXP_A] = @EXP_A, [EXP_B] = @EXP_B, [" +
                "EXP_C] = @EXP_C, [EXP_D] = @EXP_D, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE " +
                "WHERE (([INS_TYPE] = @Original_INS_TYPE) AND ([LIFE_A] = @Original_LIFE_A) AND (" +
                "[LIFE_B] = @Original_LIFE_B) AND ([LIFE_C] = @Original_LIFE_C) AND ([LIFE_D] = @" +
                "Original_LIFE_D) AND ([CHANCE_A] = @Original_CHANCE_A) AND ([CHANCE_B] = @Origin" +
                "al_CHANCE_B) AND ([CHANCE_C] = @Original_CHANCE_C) AND ([CHANCE_D] = @Original_C" +
                "HANCE_D) AND ([HOSPITAL_A] = @Original_HOSPITAL_A) AND ([HOSPITAL_B] = @Original" +
                "_HOSPITAL_B) AND ([HOSPITAL_C] = @Original_HOSPITAL_C) AND ([HOSPITAL_D] = @Orig" +
                "inal_HOSPITAL_D) AND ([OUTPAT_A] = @Original_OUTPAT_A) AND ([OUTPAT_B] = @Origin" +
                "al_OUTPAT_B) AND ([OUTPAT_C] = @Original_OUTPAT_C) AND ([OUTPAT_D] = @Original_O" +
                "UTPAT_D) AND ([CANCER_A] = @Original_CANCER_A) AND ([CANCER_B] = @Original_CANCE" +
                "R_B) AND ([CANCER_C] = @Original_CANCER_C) AND ([CANCER_D] = @Original_CANCER_D)" +
                " AND ([EXP_A] = @Original_EXP_A) AND ([EXP_B] = @Original_EXP_B) AND ([EXP_C] = " +
                "@Original_EXP_C) AND ([EXP_D] = @Original_EXP_D) AND ([KEY_MAN] = @Original_KEY_" +
                "MAN) AND ([KEY_DATE] = @Original_KEY_DATE));\r\nSELECT INS_TYPE, LIFE_A, LIFE_B, L" +
                "IFE_C, LIFE_D, CHANCE_A, CHANCE_B, CHANCE_C, CHANCE_D, HOSPITAL_A, HOSPITAL_B, H" +
                "OSPITAL_C, HOSPITAL_D, OUTPAT_A, OUTPAT_B, OUTPAT_C, OUTPAT_D, CANCER_A, CANCER_" +
                "B, CANCER_C, CANCER_D, EXP_A, EXP_B, EXP_C, EXP_D, KEY_MAN, KEY_DATE FROM INSGLV" +
                " WHERE (INS_TYPE = @INS_TYPE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INS_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INS_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIFE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHANCE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOSPITAL_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTPAT_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CANCER_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_A", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_D", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INS_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INS_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIFE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "LIFE_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHANCE_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CHANCE_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOSPITAL_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOSPITAL_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTPAT_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "OUTPAT_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CANCER_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "CANCER_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_A", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_A", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_B", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_C", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXP_D", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP_D", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          INS_TYPE, LIFE_A, LIFE_B, LIFE_C, LIFE_D, CHANCE_A, CHANCE_B, CHANCE_C, CHANCE_D, HOSPITAL_A, 
                            HOSPITAL_B, HOSPITAL_C, HOSPITAL_D, OUTPAT_A, OUTPAT_B, OUTPAT_C, OUTPAT_D, CANCER_A, CANCER_B, 
                            CANCER_C, CANCER_D, EXP_A, EXP_B, EXP_C, EXP_D, KEY_MAN, KEY_DATE
FROM              INSGLV";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.INSGLVDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.INSGLVDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.INSGLVDataTable dataTable = new SalaryDS.INSGLVDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.INSGLVDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "INSGLV");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_INS_TYPE, 
                    decimal Original_LIFE_A, 
                    decimal Original_LIFE_B, 
                    decimal Original_LIFE_C, 
                    decimal Original_LIFE_D, 
                    decimal Original_CHANCE_A, 
                    decimal Original_CHANCE_B, 
                    decimal Original_CHANCE_C, 
                    decimal Original_CHANCE_D, 
                    decimal Original_HOSPITAL_A, 
                    decimal Original_HOSPITAL_B, 
                    decimal Original_HOSPITAL_C, 
                    decimal Original_HOSPITAL_D, 
                    decimal Original_OUTPAT_A, 
                    decimal Original_OUTPAT_B, 
                    decimal Original_OUTPAT_C, 
                    decimal Original_OUTPAT_D, 
                    decimal Original_CANCER_A, 
                    decimal Original_CANCER_B, 
                    decimal Original_CANCER_C, 
                    decimal Original_CANCER_D, 
                    decimal Original_EXP_A, 
                    decimal Original_EXP_B, 
                    decimal Original_EXP_C, 
                    decimal Original_EXP_D, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE) {
            if ((Original_INS_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INS_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_INS_TYPE));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_LIFE_A));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_LIFE_B));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_LIFE_C));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_LIFE_D));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_CHANCE_A));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_CHANCE_B));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_CHANCE_C));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_CHANCE_D));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_HOSPITAL_A));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_HOSPITAL_B));
            this.Adapter.DeleteCommand.Parameters[11].Value = ((decimal)(Original_HOSPITAL_C));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_HOSPITAL_D));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_OUTPAT_A));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_OUTPAT_B));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_OUTPAT_C));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_OUTPAT_D));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_CANCER_A));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_CANCER_B));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_CANCER_C));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_CANCER_D));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_EXP_A));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_EXP_B));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_EXP_C));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_EXP_D));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string INS_TYPE, 
                    decimal LIFE_A, 
                    decimal LIFE_B, 
                    decimal LIFE_C, 
                    decimal LIFE_D, 
                    decimal CHANCE_A, 
                    decimal CHANCE_B, 
                    decimal CHANCE_C, 
                    decimal CHANCE_D, 
                    decimal HOSPITAL_A, 
                    decimal HOSPITAL_B, 
                    decimal HOSPITAL_C, 
                    decimal HOSPITAL_D, 
                    decimal OUTPAT_A, 
                    decimal OUTPAT_B, 
                    decimal OUTPAT_C, 
                    decimal OUTPAT_D, 
                    decimal CANCER_A, 
                    decimal CANCER_B, 
                    decimal CANCER_C, 
                    decimal CANCER_D, 
                    decimal EXP_A, 
                    decimal EXP_B, 
                    decimal EXP_C, 
                    decimal EXP_D, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE) {
            if ((INS_TYPE == null)) {
                throw new global::System.ArgumentNullException("INS_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(INS_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(LIFE_A));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(LIFE_B));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(LIFE_C));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(LIFE_D));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(CHANCE_A));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(CHANCE_B));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(CHANCE_C));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(CHANCE_D));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(HOSPITAL_A));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(HOSPITAL_B));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(HOSPITAL_C));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(HOSPITAL_D));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(OUTPAT_A));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(OUTPAT_B));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(OUTPAT_C));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(OUTPAT_D));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(CANCER_A));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(CANCER_B));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(CANCER_C));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(CANCER_D));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(EXP_A));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(EXP_B));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(EXP_C));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(EXP_D));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((System.DateTime)(KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string INS_TYPE, 
                    decimal LIFE_A, 
                    decimal LIFE_B, 
                    decimal LIFE_C, 
                    decimal LIFE_D, 
                    decimal CHANCE_A, 
                    decimal CHANCE_B, 
                    decimal CHANCE_C, 
                    decimal CHANCE_D, 
                    decimal HOSPITAL_A, 
                    decimal HOSPITAL_B, 
                    decimal HOSPITAL_C, 
                    decimal HOSPITAL_D, 
                    decimal OUTPAT_A, 
                    decimal OUTPAT_B, 
                    decimal OUTPAT_C, 
                    decimal OUTPAT_D, 
                    decimal CANCER_A, 
                    decimal CANCER_B, 
                    decimal CANCER_C, 
                    decimal CANCER_D, 
                    decimal EXP_A, 
                    decimal EXP_B, 
                    decimal EXP_C, 
                    decimal EXP_D, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string Original_INS_TYPE, 
                    decimal Original_LIFE_A, 
                    decimal Original_LIFE_B, 
                    decimal Original_LIFE_C, 
                    decimal Original_LIFE_D, 
                    decimal Original_CHANCE_A, 
                    decimal Original_CHANCE_B, 
                    decimal Original_CHANCE_C, 
                    decimal Original_CHANCE_D, 
                    decimal Original_HOSPITAL_A, 
                    decimal Original_HOSPITAL_B, 
                    decimal Original_HOSPITAL_C, 
                    decimal Original_HOSPITAL_D, 
                    decimal Original_OUTPAT_A, 
                    decimal Original_OUTPAT_B, 
                    decimal Original_OUTPAT_C, 
                    decimal Original_OUTPAT_D, 
                    decimal Original_CANCER_A, 
                    decimal Original_CANCER_B, 
                    decimal Original_CANCER_C, 
                    decimal Original_CANCER_D, 
                    decimal Original_EXP_A, 
                    decimal Original_EXP_B, 
                    decimal Original_EXP_C, 
                    decimal Original_EXP_D, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE) {
            if ((INS_TYPE == null)) {
                throw new global::System.ArgumentNullException("INS_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(INS_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(LIFE_A));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(LIFE_B));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(LIFE_C));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(LIFE_D));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(CHANCE_A));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(CHANCE_B));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(CHANCE_C));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(CHANCE_D));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(HOSPITAL_A));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(HOSPITAL_B));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(HOSPITAL_C));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(HOSPITAL_D));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(OUTPAT_A));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(OUTPAT_B));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(OUTPAT_C));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(OUTPAT_D));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(CANCER_A));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(CANCER_B));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(CANCER_C));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(CANCER_D));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(EXP_A));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(EXP_B));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(EXP_C));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(EXP_D));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(KEY_DATE));
            if ((Original_INS_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INS_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_INS_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_LIFE_A));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_LIFE_B));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_LIFE_C));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_LIFE_D));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_CHANCE_A));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_CHANCE_B));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_CHANCE_C));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_CHANCE_D));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((decimal)(Original_HOSPITAL_A));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_HOSPITAL_B));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(Original_HOSPITAL_C));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_HOSPITAL_D));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_OUTPAT_A));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_OUTPAT_B));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_OUTPAT_C));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_OUTPAT_D));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_CANCER_A));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_CANCER_B));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_CANCER_C));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_CANCER_D));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(Original_EXP_A));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(Original_EXP_B));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(Original_EXP_C));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(Original_EXP_D));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((System.DateTime)(Original_KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal LIFE_A, 
                    decimal LIFE_B, 
                    decimal LIFE_C, 
                    decimal LIFE_D, 
                    decimal CHANCE_A, 
                    decimal CHANCE_B, 
                    decimal CHANCE_C, 
                    decimal CHANCE_D, 
                    decimal HOSPITAL_A, 
                    decimal HOSPITAL_B, 
                    decimal HOSPITAL_C, 
                    decimal HOSPITAL_D, 
                    decimal OUTPAT_A, 
                    decimal OUTPAT_B, 
                    decimal OUTPAT_C, 
                    decimal OUTPAT_D, 
                    decimal CANCER_A, 
                    decimal CANCER_B, 
                    decimal CANCER_C, 
                    decimal CANCER_D, 
                    decimal EXP_A, 
                    decimal EXP_B, 
                    decimal EXP_C, 
                    decimal EXP_D, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string Original_INS_TYPE, 
                    decimal Original_LIFE_A, 
                    decimal Original_LIFE_B, 
                    decimal Original_LIFE_C, 
                    decimal Original_LIFE_D, 
                    decimal Original_CHANCE_A, 
                    decimal Original_CHANCE_B, 
                    decimal Original_CHANCE_C, 
                    decimal Original_CHANCE_D, 
                    decimal Original_HOSPITAL_A, 
                    decimal Original_HOSPITAL_B, 
                    decimal Original_HOSPITAL_C, 
                    decimal Original_HOSPITAL_D, 
                    decimal Original_OUTPAT_A, 
                    decimal Original_OUTPAT_B, 
                    decimal Original_OUTPAT_C, 
                    decimal Original_OUTPAT_D, 
                    decimal Original_CANCER_A, 
                    decimal Original_CANCER_B, 
                    decimal Original_CANCER_C, 
                    decimal Original_CANCER_D, 
                    decimal Original_EXP_A, 
                    decimal Original_EXP_B, 
                    decimal Original_EXP_C, 
                    decimal Original_EXP_D, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE) {
            return this.Update(Original_INS_TYPE, LIFE_A, LIFE_B, LIFE_C, LIFE_D, CHANCE_A, CHANCE_B, CHANCE_C, CHANCE_D, HOSPITAL_A, HOSPITAL_B, HOSPITAL_C, HOSPITAL_D, OUTPAT_A, OUTPAT_B, OUTPAT_C, OUTPAT_D, CANCER_A, CANCER_B, CANCER_C, CANCER_D, EXP_A, EXP_B, EXP_C, EXP_D, KEY_MAN, KEY_DATE, Original_INS_TYPE, Original_LIFE_A, Original_LIFE_B, Original_LIFE_C, Original_LIFE_D, Original_CHANCE_A, Original_CHANCE_B, Original_CHANCE_C, Original_CHANCE_D, Original_HOSPITAL_A, Original_HOSPITAL_B, Original_HOSPITAL_C, Original_HOSPITAL_D, Original_OUTPAT_A, Original_OUTPAT_B, Original_OUTPAT_C, Original_OUTPAT_D, Original_CANCER_A, Original_CANCER_B, Original_CANCER_C, Original_CANCER_D, Original_EXP_A, Original_EXP_B, Original_EXP_C, Original_EXP_D, Original_KEY_MAN, Original_KEY_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FRM47TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FRM47TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FRM47";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("BDATE", "BDATE");
            tableMapping.ColumnMappings.Add("BTIME", "BTIME");
            tableMapping.ColumnMappings.Add("ETIME", "ETIME");
            tableMapping.ColumnMappings.Add("TOT_HOURS", "TOT_HOURS");
            tableMapping.ColumnMappings.Add("OT_HRS", "OT_HRS");
            tableMapping.ColumnMappings.Add("REST_HRS", "REST_HRS");
            tableMapping.ColumnMappings.Add("OT_CAR", "OT_CAR");
            tableMapping.ColumnMappings.Add("OT_DEPT", "OT_DEPT");
            tableMapping.ColumnMappings.Add("DEPT_NAME", "DEPT_NAME");
            tableMapping.ColumnMappings.Add("DEPTS_NAME", "DEPTS_NAME");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("OT_FOOD", "OT_FOOD");
            tableMapping.ColumnMappings.Add("NOTE", "NOTE");
            tableMapping.ColumnMappings.Add("NOT_W_133", "NOT_W_133");
            tableMapping.ColumnMappings.Add("NOT_W_167", "NOT_W_167");
            tableMapping.ColumnMappings.Add("NOT_W_200", "NOT_W_200");
            tableMapping.ColumnMappings.Add("NOT_H_200", "NOT_H_200");
            tableMapping.ColumnMappings.Add("TOT_W_133", "TOT_W_133");
            tableMapping.ColumnMappings.Add("TOT_W_167", "TOT_W_167");
            tableMapping.ColumnMappings.Add("TOT_W_200", "TOT_W_200");
            tableMapping.ColumnMappings.Add("NOT_EXP", "NOT_EXP");
            tableMapping.ColumnMappings.Add("TOT_EXP", "TOT_EXP");
            tableMapping.ColumnMappings.Add("SALARY", "SALARY");
            tableMapping.ColumnMappings.Add("NOTMODI", "NOTMODI");
            tableMapping.ColumnMappings.Add("OTRCD", "OTRCD");
            tableMapping.ColumnMappings.Add("NOFOOD", "NOFOOD");
            tableMapping.ColumnMappings.Add("OT_ROTE", "OT_ROTE");
            tableMapping.ColumnMappings.Add("OT_FOOD1", "OT_FOOD1");
            tableMapping.ColumnMappings.Add("OT_FOODH", "OT_FOODH");
            tableMapping.ColumnMappings.Add("OT_FOODH1", "OT_FOODH1");
            tableMapping.ColumnMappings.Add("SYSCREAT", "SYSCREAT");
            tableMapping.ColumnMappings.Add("OTRATE_CODE", "OTRATE_CODE");
            tableMapping.ColumnMappings.Add("SERNO", "SERNO");
            tableMapping.ColumnMappings.Add("NOFOOD1", "NOFOOD1");
            tableMapping.ColumnMappings.Add("JOB_NAME", "JOB_NAME");
            tableMapping.ColumnMappings.Add("DEPT", "DEPT");
            tableMapping.ColumnMappings.Add("isHoli", "isHoli");
            tableMapping.ColumnMappings.Add("OT_TYPE", "OT_TYPE");
            tableMapping.ColumnMappings.Add("COUNT_MA", "COUNT_MA");
            tableMapping.ColumnMappings.Add("SYS_OT", "SYS_OT");
            tableMapping.ColumnMappings.Add("NOT_H_167", "NOT_H_167");
            tableMapping.ColumnMappings.Add("NOT_H_133", "NOT_H_133");
            tableMapping.ColumnMappings.Add("HOLI_TYPE", "HOLI_TYPE");
            tableMapping.ColumnMappings.Add("Att_Rote", "Att_Rote");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          OT
SET                   OT_CAR = @OT_CAR, KEY_MAN = @KEY_MAN, KEY_DATE = @KEY_DATE, OT_FOOD = @OT_FOOD, 
                            NOTE = @NOTE, YYMM = @YYMM, NOT_W_133 = @NOT_W_133, NOT_W_167 = @NOT_W_167, 
                            NOT_W_200 = @NOT_W_200, NOT_H_200 = @NOT_H_200, TOT_W_133 = @TOT_W_133, 
                            TOT_W_167 = @TOT_W_167, TOT_W_200 = @TOT_W_200, NOT_EXP = @NOT_EXP, TOT_EXP = @TOT_EXP, 
                            SALARY = @SALARY, NOTMODI = @NOTMODI, OTRCD = @OTRCD, NOFOOD = @NOFOOD, OT_ROTE = @OT_ROTE, 
                            OT_FOOD1 = @OT_FOOD1, OT_FOODH = @OT_FOODH, OT_FOODH1 = @OT_FOODH1, NOT_H_133 = @NOT_H_133, 
                            NOT_H_167 = @NOT_H_167, SYSCREAT = @SYSCREAT, SYS_OT = @SYS_OT, SERNO = @SERNO
WHERE          (NOBR = @Original_NOBR) AND (BDATE = @Original_BDATE) AND (BTIME = @Original_BTIME) AND 
                            (OTRCD = @Original_OTRCD)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_CAR", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_CAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOOD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_W_200", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_W_200", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOT_EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "TOT_EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALARY", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "SALARY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTMODI", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOTMODI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OTRCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTRCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOFOOD", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOFOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_ROTE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OT_ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOOD1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOOD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOODH", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_FOODH1", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "OT_FOODH1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_133", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_133", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_H_167", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "NOT_H_167", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYSCREAT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYSCREAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SYS_OT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "SYS_OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SERNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SERNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "BDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BTIME", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "BTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OTRCD", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "OTRCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          NOBR, NAME_C, YYMM, BDATE, BTIME, ETIME, TOT_HOURS, OT_HRS, REST_HRS, OT_CAR, OT_DEPT, 
                            DEPT_NAME, DEPTS_NAME, KEY_MAN, KEY_DATE, OT_FOOD, NOTE, NOT_W_133, NOT_W_167, NOT_W_200, 
                            NOT_H_200, TOT_W_133, TOT_W_167, TOT_W_200, NOT_EXP, TOT_EXP, SALARY, NOTMODI, OTRCD, NOFOOD, 
                            OT_ROTE, OT_FOOD1, OT_FOODH, OT_FOODH1, SYSCREAT, OTRATE_CODE, SERNO, NOFOOD1, JOB_NAME, DEPT, 
                            isHoli, OT_TYPE, COUNT_MA, SYS_OT, NOT_H_167, NOT_H_133, HOLI_TYPE, Att_Rote
FROM              FRM47";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT Att_Rote, BDATE, BTIME, COUNT_MA, DEPT, DEPTS_NAME, DEPT_NAME, ETIME, HOLI_TYPE, JOB_NAME, KEY_DATE, KEY_MAN, NAME_C, NOBR, NOFOOD, NOFOOD1, NOTE, NOTMODI, NOT_EXP, NOT_H_133, NOT_H_167, NOT_H_200, NOT_W_133, NOT_W_167, NOT_W_200, OTRATE_CODE, OTRCD, OT_CAR, OT_DEPT, OT_FOOD, OT_FOOD1, OT_FOODH, OT_FOODH1, OT_HRS, OT_ROTE, OT_TYPE, REST_HRS, SALARY, SERNO, SYSCREAT, SYS_OT, TOT_EXP, TOT_HOURS, TOT_W_133, TOT_W_167, TOT_W_200, YYMM, isHoli FROM FRM47 WHERE (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.FRM47DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.FRM47DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.FRM47DataTable dataTable = new SalaryDS.FRM47DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.FRM47DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.FRM47DataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.FRM47DataTable dataTable = new SalaryDS.FRM47DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.FRM47DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "FRM47");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ENRICHTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ENRICHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ENRICH";
            tableMapping.ColumnMappings.Add("AUTOKEY", "AUTOKEY");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("MEMO", "MEMO");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("IMPORT", "IMPORT");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ENRICH] WHERE (([AUTOKEY] = @Original_AUTOKEY))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ENRICH] ([NOBR], [YYMM], [SEQ], [SAL_CODE], [AMT], [KEY_MAN], [KEY_DATE], [MEMO], [FA_IDNO], [IMPORT]) VALUES (@NOBR, @YYMM, @SEQ, @SAL_CODE, @AMT, @KEY_MAN, @KEY_DATE, @MEMO, @FA_IDNO, @IMPORT);
SELECT AUTOKEY, NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, FA_IDNO, IMPORT FROM ENRICH WHERE (AUTOKEY = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMPORT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ENRICH] SET [NOBR] = @NOBR, [YYMM] = @YYMM, [SEQ] = @SEQ, [SAL_CODE] = @SAL_CODE, [AMT] = @AMT, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [MEMO] = @MEMO, [FA_IDNO] = @FA_IDNO, [IMPORT] = @IMPORT WHERE (([AUTOKEY] = @Original_AUTOKEY));
SELECT AUTOKEY, NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, FA_IDNO, IMPORT FROM ENRICH WHERE (AUTOKEY = @AUTOKEY)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMPORT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IMPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTOKEY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          AUTOKEY, NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO," +
                " FA_IDNO, IMPORT, NAME_C, \r\n                            SAL_NAME\r\nFROM          " +
                "    FRM4L";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          AUTOKEY, NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO," +
                " FA_IDNO, IMPORT, NAME_C, \r\n                            SAL_NAME\r\nFROM          " +
                "    FRM4L\r\nWHERE 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.ENRICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.ENRICHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.ENRICHDataTable dataTable = new SalaryDS.ENRICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.ENRICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.ENRICHDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.ENRICHDataTable dataTable = new SalaryDS.ENRICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.ENRICHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "ENRICH");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AUTOKEY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AUTOKEY));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, string MEMO, string FA_IDNO, bool IMPORT) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SEQ));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(KEY_DATE));
            if ((MEMO == null)) {
                throw new global::System.ArgumentNullException("MEMO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MEMO));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(FA_IDNO));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(IMPORT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, string MEMO, string FA_IDNO, bool IMPORT, int Original_AUTOKEY, int AUTOKEY) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SEQ));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(KEY_DATE));
            if ((MEMO == null)) {
                throw new global::System.ArgumentNullException("MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MEMO));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(IMPORT));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Original_AUTOKEY));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(AUTOKEY));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string YYMM, string SEQ, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, string MEMO, string FA_IDNO, bool IMPORT, int Original_AUTOKEY) {
            return this.Update(NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, FA_IDNO, IMPORT, Original_AUTOKEY, Original_AUTOKEY);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALBASD1TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALBASD1TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALBASD1";
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("AMTB", "AMTB");
            tableMapping.ColumnMappings.Add("MENO", "MENO");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SALBASD1] WHERE (([YYMM] = @Original_YYMM) AND ([NOBR] = @Original_NOBR) AND ([SAL_CODE] = @Original_SAL_CODE) AND ([AMT] = @Original_AMT) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([AMTB] = @Original_AMTB) AND ([MENO] = @Original_MENO) AND ([SEQ] = @Original_SEQ))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALBASD1] ([YYMM], [NOBR], [SAL_CODE], [AMT], [KEY_MAN], [KEY_DATE], [AMTB], [MENO], [SEQ]) VALUES (@YYMM, @NOBR, @SAL_CODE, @AMT, @KEY_MAN, @KEY_DATE, @AMTB, @MENO, @SEQ);
SELECT YYMM, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, SEQ FROM SALBASD1 WHERE (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SALBASD1] SET [YYMM] = @YYMM, [NOBR] = @NOBR, [SAL_CODE] = @SAL_CODE, [AMT] = @AMT, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [AMTB] = @AMTB, [MENO] = @MENO, [SEQ] = @SEQ WHERE (([YYMM] = @Original_YYMM) AND ([NOBR] = @Original_NOBR) AND ([SAL_CODE] = @Original_SAL_CODE) AND ([AMT] = @Original_AMT) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([AMTB] = @Original_AMTB) AND ([MENO] = @Original_MENO) AND ([SEQ] = @Original_SEQ));
SELECT YYMM, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, SEQ FROM SALBASD1 WHERE (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          YYMM, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, SEQ\r\nFR" +
                "OM              SALBASD1";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          YYMM, NOBR, SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, SEQ\r\nFR" +
                "OM              SALBASD1\r\nwhere 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALBASD1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALBASD1DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALBASD1DataTable dataTable = new SalaryDS.SALBASD1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.SALBASD1DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASD1DataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.SALBASD1DataTable dataTable = new SalaryDS.SALBASD1DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALBASD1DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALBASD1");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_YYMM, string Original_NOBR, string Original_SAL_CODE, decimal Original_AMT, string Original_KEY_MAN, System.DateTime Original_KEY_DATE, decimal Original_AMTB, string Original_MENO, string Original_SEQ) {
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_YYMM));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NOBR));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SAL_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_AMT));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_AMTB));
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_MENO));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_SEQ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string YYMM, string NOBR, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, string SEQ) {
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(YYMM));
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOBR));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(AMTB));
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(MENO));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(SEQ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string YYMM, 
                    string NOBR, 
                    string SAL_CODE, 
                    decimal AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal AMTB, 
                    string MENO, 
                    string SEQ, 
                    string Original_YYMM, 
                    string Original_NOBR, 
                    string Original_SAL_CODE, 
                    decimal Original_AMT, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    decimal Original_AMTB, 
                    string Original_MENO, 
                    string Original_SEQ) {
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(YYMM));
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOBR));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(AMTB));
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(MENO));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(SEQ));
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_YYMM));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_NOBR));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_AMT));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_AMTB));
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_MENO));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_SEQ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, decimal AMTB, string MENO, string Original_YYMM, string Original_NOBR, string Original_SAL_CODE, decimal Original_AMT, string Original_KEY_MAN, System.DateTime Original_KEY_DATE, decimal Original_AMTB, string Original_MENO, string Original_SEQ) {
            return this.Update(Original_YYMM, Original_NOBR, Original_SAL_CODE, AMT, KEY_MAN, KEY_DATE, AMTB, MENO, Original_SEQ, Original_YYMM, Original_NOBR, Original_SAL_CODE, Original_AMT, Original_KEY_MAN, Original_KEY_DATE, Original_AMTB, Original_MENO, Original_SEQ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXPLABTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public EXPLABTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXPLAB";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("EXP", "EXP");
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("NOTEDIT", "NOTEDIT");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DAYS", "DAYS");
            tableMapping.ColumnMappings.Add("RATE_CODE", "RATE_CODE");
            tableMapping.ColumnMappings.Add("INSUR_TYPE", "INSUR_TYPE");
            tableMapping.ColumnMappings.Add("INSCD", "INSCD");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("JOBAMT", "JOBAMT");
            tableMapping.ColumnMappings.Add("FUNDAMT", "FUNDAMT");
            tableMapping.ColumnMappings.Add("S_NO", "S_NO");
            tableMapping.ColumnMappings.Add("FA_NAME", "FA_NAME");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("SAL_YYMM", "SAL_YYMM");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM EXPLAB
WHERE          (NOBR = @Original_NOBR) AND (FA_IDNO = @Original_FA_IDNO) AND (YYMM = @Original_YYMM) AND 
                            (NOTEDIT = @Original_NOTEDIT) AND (KEY_DATE = @Original_KEY_DATE) AND (KEY_MAN = @Original_KEY_MAN) 
                            AND (ADATE = @Original_ADATE) AND (DAYS = @Original_DAYS) AND (RATE_CODE = @Original_RATE_CODE) AND 
                            (INSUR_TYPE = @Original_INSUR_TYPE) AND (INSCD = @Original_INSCD) AND (SAL_CODE = @Original_SAL_CODE)
                             AND (S_NO = @Original_S_NO) AND (SAL_YYMM = @Original_SAL_YYMM)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTEDIT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOTEDIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAYS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "DAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATE_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSCD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "INSCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_NO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO EXPLAB
                            (NOBR, FA_IDNO, YYMM, EXP, COMP, NOTEDIT, KEY_DATE, KEY_MAN, ADATE, DAYS, RATE_CODE, INSUR_TYPE, 
                            INSCD, SAL_CODE, JOBAMT, FUNDAMT, S_NO, SAL_YYMM)
VALUES          (@NOBR,@FA_IDNO,@YYMM,@EXP,@COMP,@NOTEDIT,@KEY_DATE,@KEY_MAN,@ADATE,@DAYS,@RATE_CODE,@INSUR_TYPE,@INSCD,@SAL_CODE,@JOBAMT,@FUNDAMT,@S_NO,@SAL_YYMM)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTEDIT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOTEDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSCD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "INSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBAMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "JOBAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUNDAMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FUNDAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          EXPLAB
SET                   NOBR = @NOBR, FA_IDNO = @FA_IDNO, YYMM = @YYMM, EXP = @EXP, COMP = @COMP, NOTEDIT = @NOTEDIT, 
                            KEY_DATE = @KEY_DATE, KEY_MAN = @KEY_MAN, ADATE = @ADATE, DAYS = @DAYS, 
                            RATE_CODE = @RATE_CODE, INSUR_TYPE = @INSUR_TYPE, INSCD = @INSCD, SAL_CODE = @SAL_CODE, 
                            JOBAMT = @JOBAMT, FUNDAMT = @FUNDAMT, S_NO = @S_NO, SAL_YYMM = @SAL_YYMM
WHERE          (NOBR = @Original_NOBR) AND (FA_IDNO = @Original_FA_IDNO) AND (YYMM = @Original_YYMM) AND 
                            (NOTEDIT = @Original_NOTEDIT) AND (KEY_DATE = @Original_KEY_DATE) AND (KEY_MAN = @Original_KEY_MAN) 
                            AND (ADATE = @Original_ADATE) AND (DAYS = @Original_DAYS) AND (RATE_CODE = @Original_RATE_CODE) AND 
                            (INSUR_TYPE = @Original_INSUR_TYPE) AND (INSCD = @Original_INSCD) AND (SAL_CODE = @Original_SAL_CODE)
                             AND (S_NO = @Original_S_NO) AND (SAL_YYMM = @Original_SAL_YYMM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTEDIT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOTEDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSCD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "INSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBAMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "JOBAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FUNDAMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "FUNDAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTEDIT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "NOTEDIT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAYS", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "DAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATE_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSCD", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "INSCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_NO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, FA_IDNO, YYMM, EXP, COMP, NOTEDIT, KEY_DATE, KEY_MAN, ADATE" +
                ", DAYS, RATE_CODE, INSUR_TYPE, \r\n                            INSCD, SAL_CODE, JO" +
                "BAMT, FUNDAMT, S_NO, FA_NAME, NAME_C, SAL_YYMM\r\nFROM              FRM49";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ADATE, COMP, DAYS, EXP, FA_IDNO, FA_NAME, FUNDAMT, INSCD, INSUR_TYPE, JOBA" +
                "MT, KEY_DATE, KEY_MAN, NAME_C, NOBR, NOTEDIT, RATE_CODE, SAL_CODE, SAL_YYMM, S_N" +
                "O, YYMM FROM FRM49 WHERE (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.EXPLABDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.EXPLABDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.EXPLABDataTable dataTable = new SalaryDS.EXPLABDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.EXPLABDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.EXPLABDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.EXPLABDataTable dataTable = new SalaryDS.EXPLABDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.EXPLABDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "EXPLAB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALBASD_TMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALBASD_TMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALBASD_TMP";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("MEMO", "MEMO");
            tableMapping.ColumnMappings.Add("COMMITED", "COMMITED");
            tableMapping.ColumnMappings.Add("COMMITTER", "COMMITTER");
            tableMapping.ColumnMappings.Add("TRANS", "TRANS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SALBASD_TMP] WHERE (([NOBR] = @Original_NOBR) AND ([ADATE] = @Original_ADATE) AND ([SAL_CODE] = @Original_SAL_CODE) AND ([AMT] = @Original_AMT) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([MEMO] = @Original_MEMO) AND ([COMMITED] = @Original_COMMITED) AND ((@IsNull_COMMITTER = 1 AND [COMMITTER] IS NULL) OR ([COMMITTER] = @Original_COMMITTER)) AND ([TRANS] = @Original_TRANS))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMITED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMMITTER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITTER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMITTER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TRANS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALBASD_TMP] ([NOBR], [ADATE], [SAL_CODE], [AMT], [KEY_MAN], [KEY_DATE], [MEMO], [COMMITED], [COMMITTER], [TRANS]) VALUES (@NOBR, @ADATE, @SAL_CODE, @AMT, @KEY_MAN, @KEY_DATE, @MEMO, @COMMITED, @COMMITTER, @TRANS);
SELECT NOBR, ADATE, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, COMMITED, COMMITTER, TRANS FROM SALBASD_TMP WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMITED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMITTER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRANS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SALBASD_TMP] SET [NOBR] = @NOBR, [ADATE] = @ADATE, [SAL_CODE] = @SAL_CODE, [AMT] = @AMT, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [MEMO] = @MEMO, [COMMITED] = @COMMITED, [COMMITTER] = @COMMITTER, [TRANS] = @TRANS WHERE (([NOBR] = @Original_NOBR) AND ([ADATE] = @Original_ADATE) AND ([SAL_CODE] = @Original_SAL_CODE) AND ([AMT] = @Original_AMT) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([MEMO] = @Original_MEMO) AND ([COMMITED] = @Original_COMMITED) AND ((@IsNull_COMMITTER = 1 AND [COMMITTER] IS NULL) OR ([COMMITTER] = @Original_COMMITTER)) AND ([TRANS] = @Original_TRANS));
SELECT NOBR, ADATE, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, COMMITED, COMMITTER, TRANS FROM SALBASD_TMP WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMITED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITED", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMMITTER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TRANS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRANS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMITED", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITED", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMMITTER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITTER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMMITTER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMMITTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TRANS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TRANS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          SALBASD_TMP.*\r\nFROM              SALBASD_TMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          SALBASD_TMP.*\r\nFROM              SALBASD_TMP\r\nwhere 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALBASD_TMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALBASD_TMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALBASD_TMPDataTable dataTable = new SalaryDS.SALBASD_TMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.SALBASD_TMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASD_TMPDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.SALBASD_TMPDataTable dataTable = new SalaryDS.SALBASD_TMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALBASD_TMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALBASD_TMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, System.DateTime Original_ADATE, string Original_SAL_CODE, decimal Original_AMT, string Original_KEY_MAN, System.DateTime Original_KEY_DATE, string Original_MEMO, bool Original_COMMITED, string Original_COMMITTER, bool Original_TRANS) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SAL_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_AMT));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_MEMO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_MEMO));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_COMMITED));
            if ((Original_COMMITTER == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_COMMITTER));
            }
            this.Adapter.DeleteCommand.Parameters[10].Value = ((bool)(Original_TRANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, System.DateTime ADATE, string SAL_CODE, decimal AMT, string KEY_MAN, System.DateTime KEY_DATE, string MEMO, bool COMMITED, string COMMITTER, bool TRANS) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ADATE));
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((MEMO == null)) {
                throw new global::System.ArgumentNullException("MEMO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(MEMO));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(COMMITED));
            if ((COMMITTER == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(COMMITTER));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(TRANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    System.DateTime ADATE, 
                    string SAL_CODE, 
                    decimal AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string MEMO, 
                    bool COMMITED, 
                    string COMMITTER, 
                    bool TRANS, 
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_SAL_CODE, 
                    decimal Original_AMT, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_MEMO, 
                    bool Original_COMMITED, 
                    string Original_COMMITTER, 
                    bool Original_TRANS) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ADATE));
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((MEMO == null)) {
                throw new global::System.ArgumentNullException("MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(MEMO));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(COMMITED));
            if ((COMMITTER == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(COMMITTER));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(TRANS));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_AMT));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_MEMO == null)) {
                throw new global::System.ArgumentNullException("Original_MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_MEMO));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(Original_COMMITED));
            if ((Original_COMMITTER == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_COMMITTER));
            }
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(Original_TRANS));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string MEMO, 
                    bool COMMITED, 
                    string COMMITTER, 
                    bool TRANS, 
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_SAL_CODE, 
                    decimal Original_AMT, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_MEMO, 
                    bool Original_COMMITED, 
                    string Original_COMMITTER, 
                    bool Original_TRANS) {
            return this.Update(Original_NOBR, Original_ADATE, Original_SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, COMMITED, COMMITTER, TRANS, Original_NOBR, Original_ADATE, Original_SAL_CODE, Original_AMT, Original_KEY_MAN, Original_KEY_DATE, Original_MEMO, Original_COMMITED, Original_COMMITTER, Original_TRANS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ExplabCNTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ExplabCNTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ExplabCN";
            tableMapping.ColumnMappings.Add("AUTOKEY", "AUTOKEY");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("INSUR_TYPE", "INSUR_TYPE");
            tableMapping.ColumnMappings.Add("EXP", "EXP");
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("SAL_YYMM", "SAL_YYMM");
            tableMapping.ColumnMappings.Add("S_NO", "S_NO");
            tableMapping.ColumnMappings.Add("NOTEDIT", "NOTEDIT");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [ExplabCN] WHERE (([AUTOKEY] = @Original_AUTOKEY))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [ExplabCN] ([NOBR], [YYMM], [INSUR_TYPE], [EXP], [COMP], [SAL_CODE], [AMT], [SAL_YYMM], [S_NO], [NOTEDIT], [KEY_DATE], [KEY_MAN]) VALUES (@NOBR, @YYMM, @INSUR_TYPE, @EXP, @COMP, @SAL_CODE, @AMT, @SAL_YYMM, @S_NO, @NOTEDIT, @KEY_DATE, @KEY_MAN);
SELECT AUTOKEY, NOBR, YYMM, INSUR_TYPE, EXP, COMP, SAL_CODE, AMT, SAL_YYMM, S_NO, NOTEDIT, KEY_DATE, KEY_MAN FROM ExplabCN WHERE (AUTOKEY = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTEDIT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTEDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [ExplabCN] SET [NOBR] = @NOBR, [YYMM] = @YYMM, [INSUR_TYPE] = @INSUR_TYPE, [EXP] = @EXP, [COMP] = @COMP, [SAL_CODE] = @SAL_CODE, [AMT] = @AMT, [SAL_YYMM] = @SAL_YYMM, [S_NO] = @S_NO, [NOTEDIT] = @NOTEDIT, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([AUTOKEY] = @Original_AUTOKEY));
SELECT AUTOKEY, NOBR, YYMM, INSUR_TYPE, EXP, COMP, SAL_CODE, AMT, SAL_YYMM, S_NO, NOTEDIT, KEY_DATE, KEY_MAN FROM ExplabCN WHERE (AUTOKEY = @AUTOKEY)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTEDIT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTEDIT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOKEY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTOKEY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          AUTOKEY, NOBR, YYMM, INSUR_TYPE, EXP, COMP, SAL_CODE, AMT, SAL_YY" +
                "MM, S_NO, NOTEDIT, KEY_DATE, \r\n                            KEY_MAN\r\nFROM        " +
                "      ExplabCN";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT AMT, AUTOKEY, COMP, EXP, INSUR_TYPE, KEY_DATE, KEY_MAN, NOBR, NOTEDIT, SAL" +
                "_CODE, SAL_YYMM, S_NO, YYMM FROM ExplabCN WHERE (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.ExplabCNDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.ExplabCNDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.ExplabCNDataTable dataTable = new SalaryDS.ExplabCNDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.ExplabCNDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.ExplabCNDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.ExplabCNDataTable dataTable = new SalaryDS.ExplabCNDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.ExplabCNDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "ExplabCN");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AUTOKEY) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AUTOKEY));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, string YYMM, string INSUR_TYPE, decimal EXP, decimal COMP, string SAL_CODE, decimal AMT, string SAL_YYMM, string S_NO, bool NOTEDIT, System.DateTime KEY_DATE, string KEY_MAN) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((INSUR_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSUR_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(INSUR_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(EXP));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(COMP));
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(AMT));
            if ((SAL_YYMM == null)) {
                throw new global::System.ArgumentNullException("SAL_YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(SAL_YYMM));
            }
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(S_NO));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(NOTEDIT));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string YYMM, string INSUR_TYPE, decimal EXP, decimal COMP, string SAL_CODE, decimal AMT, string SAL_YYMM, string S_NO, bool NOTEDIT, System.DateTime KEY_DATE, string KEY_MAN, int Original_AUTOKEY, int AUTOKEY) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((INSUR_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSUR_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(INSUR_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(EXP));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(COMP));
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(AMT));
            if ((SAL_YYMM == null)) {
                throw new global::System.ArgumentNullException("SAL_YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(SAL_YYMM));
            }
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(S_NO));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(NOTEDIT));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_AUTOKEY));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(AUTOKEY));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string YYMM, string INSUR_TYPE, decimal EXP, decimal COMP, string SAL_CODE, decimal AMT, string SAL_YYMM, string S_NO, bool NOTEDIT, System.DateTime KEY_DATE, string KEY_MAN, int Original_AUTOKEY) {
            return this.Update(NOBR, YYMM, INSUR_TYPE, EXP, COMP, SAL_CODE, AMT, SAL_YYMM, S_NO, NOTEDIT, KEY_DATE, KEY_MAN, Original_AUTOKEY, Original_AUTOKEY);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EXPSUPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public EXPSUPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EXPSUP";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("PAY_DATE", "PAY_DATE");
            tableMapping.ColumnMappings.Add("FORMAT", "FORMAT");
            tableMapping.ColumnMappings.Add("PAY_AMT", "PAY_AMT");
            tableMapping.ColumnMappings.Add("SUP_AMT", "SUP_AMT");
            tableMapping.ColumnMappings.Add("INS_HAMT", "INS_HAMT");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("TOTAL_AMT", "TOTAL_AMT");
            tableMapping.ColumnMappings.Add("S_NO", "S_NO");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [EXPSUP] WHERE (([NOBR] = @Original_NOBR) AND ([YYMM] = @Original_YYM" +
                "M) AND ([SEQ] = @Original_SEQ) AND ([SAL_CODE] = @Original_SAL_CODE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO EXPSUP
                            (NOBR, YYMM, SEQ, SAL_CODE, PAY_DATE, FORMAT, PAY_AMT, SUP_AMT, INS_HAMT, ADATE, DDATE, 
                            TOTAL_AMT, S_NO, KEY_DATE, KEY_MAN)
VALUES          (@NOBR,@YYMM,@SEQ,@SAL_CODE,@PAY_DATE,@FORMAT,@PAY_AMT,@SUP_AMT,@INS_HAMT,@ADATE,@DDATE,@TOTAL_AMT,@S_NO,@KEY_DATE,@KEY_MAN)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "PAY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORMAT", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAY_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 14, 4, "PAY_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUP_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 14, 4, "SUP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INS_HAMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 14, 4, "INS_HAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 14, 4, "TOTAL_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [EXPSUP] SET [NOBR] = @NOBR, [YYMM] = @YYMM, [SEQ] = @SEQ, [SAL_CODE] = @SAL_CODE, [PAY_DATE] = @PAY_DATE, [FORMAT] = @FORMAT, [PAY_AMT] = @PAY_AMT, [SUP_AMT] = @SUP_AMT, [INS_HAMT] = @INS_HAMT, [ADATE] = @ADATE, [DDATE] = @DDATE, [TOTAL_AMT] = @TOTAL_AMT, [S_NO] = @S_NO, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([NOBR] = @Original_NOBR) AND ([YYMM] = @Original_YYMM) AND ([SEQ] = @Original_SEQ) AND ([SAL_CODE] = @Original_SAL_CODE));
SELECT NOBR, YYMM, SEQ, SAL_CODE, PAY_DATE, FORMAT, PAY_AMT, SUP_AMT, INS_HAMT, ADATE, DDATE, TOTAL_AMT, S_NO, KEY_DATE, KEY_MAN FROM EXPSUP WHERE (NOBR = @NOBR) AND (SAL_CODE = @SAL_CODE) AND (SEQ = @SEQ) AND (YYMM = @YYMM)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORMAT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAY_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "PAY_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "SUP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INS_HAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "INS_HAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTAL_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "TOTAL_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, YYMM, SEQ, SAL_CODE, PAY_DATE, FORMAT, PAY_AMT, SUP_AMT, IN" +
                "S_HAMT, ADATE, DDATE, TOTAL_AMT, \r\n                            S_NO, KEY_DATE, K" +
                "EY_MAN\r\nFROM              EXPSUP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT ADATE, DDATE, FORMAT, INS_HAMT, KEY_DATE, KEY_MAN, NOBR, PAY_AMT, PAY_DATE" +
                ", SAL_CODE, SEQ, SUP_AMT, S_NO, TOTAL_AMT, YYMM FROM EXPSUP WHERE (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.EXPSUPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.EXPSUPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.EXPSUPDataTable dataTable = new SalaryDS.EXPSUPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.EXPSUPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.EXPSUPDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.EXPSUPDataTable dataTable = new SalaryDS.EXPSUPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.EXPSUPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "EXPSUP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_YYMM, string Original_SEQ, string Original_SAL_CODE) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_YYMM));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SEQ));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_SAL_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, string YYMM, string SEQ, string SAL_CODE, System.DateTime PAY_DATE, string FORMAT, decimal PAY_AMT, decimal SUP_AMT, decimal INS_HAMT, System.DateTime ADATE, System.DateTime DDATE, decimal TOTAL_AMT, string S_NO, System.DateTime KEY_DATE, string KEY_MAN) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SEQ));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(PAY_DATE));
            if ((FORMAT == null)) {
                throw new global::System.ArgumentNullException("FORMAT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FORMAT));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(PAY_AMT));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(SUP_AMT));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(INS_HAMT));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(ADATE));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(DDATE));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(TOTAL_AMT));
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(S_NO));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    string YYMM, 
                    string SEQ, 
                    string SAL_CODE, 
                    System.DateTime PAY_DATE, 
                    string FORMAT, 
                    decimal PAY_AMT, 
                    decimal SUP_AMT, 
                    decimal INS_HAMT, 
                    System.DateTime ADATE, 
                    System.DateTime DDATE, 
                    decimal TOTAL_AMT, 
                    string S_NO, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string Original_NOBR, 
                    string Original_YYMM, 
                    string Original_SEQ, 
                    string Original_SAL_CODE) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YYMM));
            }
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SEQ));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(PAY_DATE));
            if ((FORMAT == null)) {
                throw new global::System.ArgumentNullException("FORMAT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FORMAT));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(PAY_AMT));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(SUP_AMT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(INS_HAMT));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(ADATE));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(DDATE));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(TOTAL_AMT));
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(S_NO));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(KEY_MAN));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_NOBR));
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_YYMM));
            }
            if ((Original_SEQ == null)) {
                throw new global::System.ArgumentNullException("Original_SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_SEQ));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_SAL_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime PAY_DATE, string FORMAT, decimal PAY_AMT, decimal SUP_AMT, decimal INS_HAMT, System.DateTime ADATE, System.DateTime DDATE, decimal TOTAL_AMT, string S_NO, System.DateTime KEY_DATE, string KEY_MAN, string Original_NOBR, string Original_YYMM, string Original_SEQ, string Original_SAL_CODE) {
            return this.Update(Original_NOBR, Original_YYMM, Original_SEQ, Original_SAL_CODE, PAY_DATE, FORMAT, PAY_AMT, SUP_AMT, INS_HAMT, ADATE, DDATE, TOTAL_AMT, S_NO, KEY_DATE, KEY_MAN, Original_NOBR, Original_YYMM, Original_SEQ, Original_SAL_CODE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALBASETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALBASETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALBASE";
            tableMapping.ColumnMappings.Add("AUTO", "AUTO");
            tableMapping.ColumnMappings.Add("CALCTYPE", "CALCTYPE");
            tableMapping.ColumnMappings.Add("SALNAME", "SALNAME");
            tableMapping.ColumnMappings.Add("REFFUNCTION", "REFFUNCTION");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[SALBASE] WHERE (([AUTO] = @Original_AUTO) AND ([CALCTYPE] = @O" +
                "riginal_CALCTYPE) AND ([SALNAME] = @Original_SALNAME))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[SALBASE] ([CALCTYPE], [SALNAME], [REFFUNCTION]) VALUES (@CALCT" +
                "YPE, @SALNAME, @REFFUNCTION);\r\nSELECT AUTO, CALCTYPE, SALNAME, REFFUNCTION FROM " +
                "SALBASE WHERE (AUTO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFFUNCTION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFFUNCTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SALBASE] SET [CALCTYPE] = @CALCTYPE, [SALNAME] = @SALNAME, [REFFUNCTION] = @REFFUNCTION WHERE (([AUTO] = @Original_AUTO) AND ([CALCTYPE] = @Original_CALCTYPE) AND ([SALNAME] = @Original_SALNAME));
SELECT AUTO, CALCTYPE, SALNAME, REFFUNCTION FROM SALBASE WHERE (AUTO = @AUTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REFFUNCTION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REFFUNCTION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT AUTO, CALCTYPE, SALNAME, REFFUNCTION FROM dbo.SALBASE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT AUTO, CALCTYPE, REFFUNCTION, SALNAME FROM SALBASE WHERE (CALCTYPE = @calcT" +
                "ype)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calcType", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALBASEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALBASEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALBASEDataTable dataTable = new SalaryDS.SALBASEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCalcType(SalaryDS.SALBASEDataTable dataTable, string calcType) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((calcType == null)) {
                throw new global::System.ArgumentNullException("calcType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(calcType));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASEDataTable GetDataByCalcType(string calcType) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((calcType == null)) {
                throw new global::System.ArgumentNullException("calcType");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(calcType));
            }
            SalaryDS.SALBASEDataTable dataTable = new SalaryDS.SALBASEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALBASEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALBASE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AUTO, string Original_CALCTYPE, string Original_SALNAME) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AUTO));
            if ((Original_CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CALCTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CALCTYPE));
            }
            if ((Original_SALNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SALNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SALNAME));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CALCTYPE, string SALNAME, string REFFUNCTION) {
            if ((CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("CALCTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CALCTYPE));
            }
            if ((SALNAME == null)) {
                throw new global::System.ArgumentNullException("SALNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SALNAME));
            }
            if ((REFFUNCTION == null)) {
                throw new global::System.ArgumentNullException("REFFUNCTION");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(REFFUNCTION));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CALCTYPE, string SALNAME, string REFFUNCTION, int Original_AUTO, string Original_CALCTYPE, string Original_SALNAME, int AUTO) {
            if ((CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("CALCTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CALCTYPE));
            }
            if ((SALNAME == null)) {
                throw new global::System.ArgumentNullException("SALNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SALNAME));
            }
            if ((REFFUNCTION == null)) {
                throw new global::System.ArgumentNullException("REFFUNCTION");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(REFFUNCTION));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_AUTO));
            if ((Original_CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CALCTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_CALCTYPE));
            }
            if ((Original_SALNAME == null)) {
                throw new global::System.ArgumentNullException("Original_SALNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_SALNAME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(AUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CALCTYPE, string SALNAME, string REFFUNCTION, int Original_AUTO, string Original_CALCTYPE, string Original_SALNAME) {
            return this.Update(CALCTYPE, SALNAME, REFFUNCTION, Original_AUTO, Original_CALCTYPE, Original_SALNAME, Original_AUTO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALFUNCTIONTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALFUNCTIONTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALFUNCTION";
            tableMapping.ColumnMappings.Add("AUTO", "AUTO");
            tableMapping.ColumnMappings.Add("CALCTYPE", "CALCTYPE");
            tableMapping.ColumnMappings.Add("ITEM", "ITEM");
            tableMapping.ColumnMappings.Add("SCRIPT", "SCRIPT");
            tableMapping.ColumnMappings.Add("SORT", "SORT");
            tableMapping.ColumnMappings.Add("CALC", "CALC");
            tableMapping.ColumnMappings.Add("REF", "REF");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [SALFUNCTION] WHERE (([AUTO] = @Original_AUTO) AND ([CALCTYPE] = @Ori" +
                "ginal_CALCTYPE) AND ([ITEM] = @Original_ITEM) AND ([SORT] = @Original_SORT) AND " +
                "([CALC] = @Original_CALC) AND ([REF] = @Original_REF))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [SALFUNCTION] ([CALCTYPE], [ITEM], [SCRIPT], [SORT], [CALC], [REF]) V" +
                "ALUES (@CALCTYPE, @ITEM, @SCRIPT, @SORT, @CALC, @REF);\r\nSELECT AUTO, CALCTYPE, I" +
                "TEM, SCRIPT, SORT, CALC, REF FROM SALFUNCTION WHERE (AUTO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCRIPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCRIPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SALFUNCTION] SET [CALCTYPE] = @CALCTYPE, [ITEM] = @ITEM, [SCRIPT] = @SCRIPT, [SORT] = @SORT, [CALC] = @CALC, [REF] = @REF WHERE (([AUTO] = @Original_AUTO) AND ([CALCTYPE] = @Original_CALCTYPE) AND ([ITEM] = @Original_ITEM) AND ([SORT] = @Original_SORT) AND ([CALC] = @Original_CALC) AND ([REF] = @Original_REF));
SELECT AUTO, CALCTYPE, ITEM, SCRIPT, SORT, CALC, REF FROM SALFUNCTION WHERE (AUTO = @AUTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCRIPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SCRIPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALCTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ITEM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ITEM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT  AUTO, CALCTYPE, ITEM, SCRIPT, SORT, CALC, REF\r\nFROM      SALFUNCTION";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT AUTO, CALC, CALCTYPE, ITEM, REF, SCRIPT, SORT FROM SALFUNCTION WHERE (CALC" +
                "TYPE = @calctype)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@calctype", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "CALCTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALFUNCTIONDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALFUNCTIONDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALFUNCTIONDataTable dataTable = new SalaryDS.SALFUNCTIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByCalcType(SalaryDS.SALFUNCTIONDataTable dataTable, string calctype) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((calctype == null)) {
                throw new global::System.ArgumentNullException("calctype");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(calctype));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALFUNCTIONDataTable GetDataByCalcType(string calctype) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((calctype == null)) {
                throw new global::System.ArgumentNullException("calctype");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(calctype));
            }
            SalaryDS.SALFUNCTIONDataTable dataTable = new SalaryDS.SALFUNCTIONDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALFUNCTIONDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALFUNCTION");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AUTO, string Original_CALCTYPE, string Original_ITEM, int Original_SORT, bool Original_CALC, bool Original_REF) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AUTO));
            if ((Original_CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CALCTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_CALCTYPE));
            }
            if ((Original_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_ITEM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ITEM));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SORT));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((bool)(Original_CALC));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_REF));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CALCTYPE, string ITEM, string SCRIPT, int SORT, bool CALC, bool REF) {
            if ((CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("CALCTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CALCTYPE));
            }
            if ((ITEM == null)) {
                throw new global::System.ArgumentNullException("ITEM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ITEM));
            }
            if ((SCRIPT == null)) {
                throw new global::System.ArgumentNullException("SCRIPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SCRIPT));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((int)(SORT));
            this.Adapter.InsertCommand.Parameters[4].Value = ((bool)(CALC));
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(REF));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CALCTYPE, string ITEM, string SCRIPT, int SORT, bool CALC, bool REF, int Original_AUTO, string Original_CALCTYPE, string Original_ITEM, int Original_SORT, bool Original_CALC, bool Original_REF, int AUTO) {
            if ((CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("CALCTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(CALCTYPE));
            }
            if ((ITEM == null)) {
                throw new global::System.ArgumentNullException("ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ITEM));
            }
            if ((SCRIPT == null)) {
                throw new global::System.ArgumentNullException("SCRIPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SCRIPT));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(SORT));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((bool)(CALC));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(REF));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_AUTO));
            if ((Original_CALCTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CALCTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_CALCTYPE));
            }
            if ((Original_ITEM == null)) {
                throw new global::System.ArgumentNullException("Original_ITEM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ITEM));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_SORT));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_CALC));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(Original_REF));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(AUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string CALCTYPE, string ITEM, string SCRIPT, int SORT, bool CALC, bool REF, int Original_AUTO, string Original_CALCTYPE, string Original_ITEM, int Original_SORT, bool Original_CALC, bool Original_REF) {
            return this.Update(CALCTYPE, ITEM, SCRIPT, SORT, CALC, REF, Original_AUTO, Original_CALCTYPE, Original_ITEM, Original_SORT, Original_CALC, Original_REF, Original_AUTO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALBASNDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALBASNDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALBASND";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM_B", "YYMM_B");
            tableMapping.ColumnMappings.Add("YYMM_E", "YYMM_E");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("A_DATE", "A_DATE");
            tableMapping.ColumnMappings.Add("A_TYPE", "A_TYPE");
            tableMapping.ColumnMappings.Add("A_PER", "A_PER");
            tableMapping.ColumnMappings.Add("F_AMT", "F_AMT");
            tableMapping.ColumnMappings.Add("P_AMT", "P_AMT");
            tableMapping.ColumnMappings.Add("T_AMT", "T_AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("MEMO", "MEMO");
            tableMapping.ColumnMappings.Add("DISPATCH", "DISPATCH");
            tableMapping.ColumnMappings.Add("DE_DEPT", "DE_DEPT");
            tableMapping.ColumnMappings.Add("DE_MAN", "DE_MAN");
            tableMapping.ColumnMappings.Add("DE_TEL", "DE_TEL");
            tableMapping.ColumnMappings.Add("DE_ADD", "DE_ADD");
            tableMapping.ColumnMappings.Add("LAW_DEPT", "LAW_DEPT");
            tableMapping.ColumnMappings.Add("LAW_MAN", "LAW_MAN");
            tableMapping.ColumnMappings.Add("LAW_TEL", "LAW_TEL");
            tableMapping.ColumnMappings.Add("P_DATE", "P_DATE");
            tableMapping.ColumnMappings.Add("F_DATE", "F_DATE");
            tableMapping.ColumnMappings.Add("T_DATE", "T_DATE");
            tableMapping.ColumnMappings.Add("C_DATE", "C_DATE");
            tableMapping.ColumnMappings.Add("P_PER", "P_PER");
            tableMapping.ColumnMappings.Add("ACNO", "ACNO");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("DEPT_NAME", "DEPT_NAME");
            tableMapping.ColumnMappings.Add("D_NO", "D_NO");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            tableMapping.ColumnMappings.Add("MIN_COST_LIVING", "MIN_COST_LIVING");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM SALBASND\r\nWHERE          (ACNO = @Original_ACNO)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO SALBASND
                            (NOBR, YYMM_B, YYMM_E, SAL_CODE, SEQ, A_DATE, A_TYPE, A_PER, F_AMT, P_AMT, T_AMT, KEY_MAN, 
                            KEY_DATE, MEMO, DISPATCH, DE_DEPT, DE_MAN, DE_TEL, DE_ADD, LAW_DEPT, LAW_MAN, LAW_TEL, P_DATE, 
                            F_DATE, T_DATE, C_DATE, P_PER, MIN_COST_LIVING)
VALUES          (@NOBR,@YYMM_B,@YYMM_E,@SAL_CODE,@SEQ,@A_DATE,@A_TYPE,@A_PER,@F_AMT,@P_AMT,@T_AMT,@KEY_MAN,@KEY_DATE,@MEMO,@DISPATCH,@DE_DEPT,@DE_MAN,@DE_TEL,@DE_ADD,@LAW_DEPT,@LAW_MAN,@LAW_TEL,@P_DATE,@F_DATE,@T_DATE,@C_DATE,@P_PER,@MIN_COST_LIVING);  
SELECT NOBR, YYMM_B, YYMM_E, SAL_CODE, SEQ, A_DATE, A_TYPE, A_PER, F_AMT, P_AMT, T_AMT, KEY_MAN, KEY_DATE, MEMO, DISPATCH, DE_DEPT, DE_MAN, DE_TEL, DE_ADD, LAW_DEPT, LAW_MAN, LAW_TEL, P_DATE, F_DATE, T_DATE, C_DATE, P_PER, ACNO FROM SALBASND WHERE (ACNO = @ACNO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM_B", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM_E", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "A_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_TYPE", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "A_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_PER", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "A_PER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "F_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "P_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@T_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "T_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 120, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DISPATCH", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "DISPATCH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_DEPT", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "DE_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_MAN", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "DE_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_TEL", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "DE_TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_ADD", global::System.Data.SqlDbType.NVarChar, 60, global::System.Data.ParameterDirection.Input, 0, 0, "DE_ADD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAW_DEPT", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LAW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAW_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LAW_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAW_TEL", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LAW_TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "P_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "F_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@T_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "T_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "C_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_PER", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "P_PER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_COST_LIVING", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_COST_LIVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          SALBASND
SET                   NOBR = @NOBR, YYMM_B = @YYMM_B, YYMM_E = @YYMM_E, SAL_CODE = @SAL_CODE, SEQ = @SEQ, 
                            A_DATE = @A_DATE, A_TYPE = @A_TYPE, A_PER = @A_PER, F_AMT = @F_AMT, P_AMT = @P_AMT, 
                            T_AMT = @T_AMT, KEY_MAN = @KEY_MAN, KEY_DATE = @KEY_DATE, MEMO = @MEMO, 
                            DISPATCH = @DISPATCH, DE_DEPT = @DE_DEPT, DE_MAN = @DE_MAN, DE_TEL = @DE_TEL, 
                            DE_ADD = @DE_ADD, LAW_DEPT = @LAW_DEPT, LAW_MAN = @LAW_MAN, LAW_TEL = @LAW_TEL, 
                            P_DATE = @P_DATE, F_DATE = @F_DATE, T_DATE = @T_DATE, C_DATE = @C_DATE, P_PER = @P_PER, 
                            ACNO = @ACNO, MIN_COST_LIVING = @MIN_COST_LIVING
WHERE          (ACNO = @Original_ACNO);  
SELECT NOBR, YYMM_B, YYMM_E, SAL_CODE, SEQ, A_DATE, A_TYPE, A_PER, F_AMT, P_AMT, T_AMT, KEY_MAN, KEY_DATE, MEMO, DISPATCH, DE_DEPT, DE_MAN, DE_TEL, DE_ADD, LAW_DEPT, LAW_MAN, LAW_TEL, P_DATE, F_DATE, T_DATE, C_DATE, P_PER, ACNO FROM SALBASND WHERE (ACNO = @ACNO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM_B", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM_E", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "A_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_TYPE", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "A_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@A_PER", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "A_PER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "F_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "P_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@T_AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "T_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 120, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DISPATCH", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "DISPATCH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_DEPT", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "DE_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_MAN", global::System.Data.SqlDbType.NVarChar, 200, global::System.Data.ParameterDirection.Input, 0, 0, "DE_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_TEL", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "DE_TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DE_ADD", global::System.Data.SqlDbType.NVarChar, 60, global::System.Data.ParameterDirection.Input, 0, 0, "DE_ADD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAW_DEPT", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LAW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAW_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LAW_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LAW_TEL", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "LAW_TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "P_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "F_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@T_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "T_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@C_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "C_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@P_PER", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "P_PER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_COST_LIVING", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_COST_LIVING", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          NOBR, YYMM_B, YYMM_E, SAL_CODE, SEQ, A_DATE, A_TYPE, A_PER, F_AMT, P_AMT, T_AMT, KEY_MAN, 
                            KEY_DATE, MEMO, DISPATCH, DE_DEPT, DE_MAN, DE_TEL, DE_ADD, LAW_DEPT, LAW_MAN, LAW_TEL, P_DATE, 
                            F_DATE, T_DATE, C_DATE, P_PER, ACNO, NAME_C, DEPT_NAME, D_NO, SAL_NAME, MIN_COST_LIVING
FROM              FRM46B";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT          NOBR, YYMM_B, YYMM_E, SAL_CODE, SEQ, A_DATE, A_TYPE, A_PER, F_AMT, P_AMT, T_AMT, KEY_MAN, 
                            KEY_DATE, MEMO, DISPATCH, DE_DEPT, DE_MAN, DE_TEL, DE_ADD, LAW_DEPT, LAW_MAN, LAW_TEL, P_DATE, 
                            F_DATE, T_DATE, C_DATE, P_PER, ACNO, NAME_C, DEPT_NAME, D_NO, SAL_NAME, MIN_COST_LIVING
FROM              FRM46B
WHERE          (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALBASNDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALBASNDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALBASNDDataTable dataTable = new SalaryDS.SALBASNDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.SALBASNDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALBASNDDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.SALBASNDDataTable dataTable = new SalaryDS.SALBASNDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALBASNDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALBASND");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ACNO) {
            if ((Original_ACNO == null)) {
                throw new global::System.ArgumentNullException("Original_ACNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ACNO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NOBR, 
                    string YYMM_B, 
                    string YYMM_E, 
                    string SAL_CODE, 
                    decimal SEQ, 
                    System.DateTime A_DATE, 
                    bool A_TYPE, 
                    decimal A_PER, 
                    decimal F_AMT, 
                    decimal P_AMT, 
                    decimal T_AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string MEMO, 
                    string DISPATCH, 
                    string DE_DEPT, 
                    string DE_MAN, 
                    string DE_TEL, 
                    string DE_ADD, 
                    string LAW_DEPT, 
                    string LAW_MAN, 
                    string LAW_TEL, 
                    System.DateTime P_DATE, 
                    System.DateTime F_DATE, 
                    System.DateTime T_DATE, 
                    System.DateTime C_DATE, 
                    decimal P_PER, 
                    decimal MIN_COST_LIVING, 
                    string ACNO) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM_B == null)) {
                throw new global::System.ArgumentNullException("YYMM_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(YYMM_B));
            }
            if ((YYMM_E == null)) {
                throw new global::System.ArgumentNullException("YYMM_E");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(YYMM_E));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(SEQ));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(A_DATE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(A_TYPE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(A_PER));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(F_AMT));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(P_AMT));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(T_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(KEY_DATE));
            if ((MEMO == null)) {
                throw new global::System.ArgumentNullException("MEMO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MEMO));
            }
            if ((DISPATCH == null)) {
                throw new global::System.ArgumentNullException("DISPATCH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(DISPATCH));
            }
            if ((DE_DEPT == null)) {
                throw new global::System.ArgumentNullException("DE_DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(DE_DEPT));
            }
            if ((DE_MAN == null)) {
                throw new global::System.ArgumentNullException("DE_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(DE_MAN));
            }
            if ((DE_TEL == null)) {
                throw new global::System.ArgumentNullException("DE_TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DE_TEL));
            }
            if ((DE_ADD == null)) {
                throw new global::System.ArgumentNullException("DE_ADD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(DE_ADD));
            }
            if ((LAW_DEPT == null)) {
                throw new global::System.ArgumentNullException("LAW_DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(LAW_DEPT));
            }
            if ((LAW_MAN == null)) {
                throw new global::System.ArgumentNullException("LAW_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(LAW_MAN));
            }
            if ((LAW_TEL == null)) {
                throw new global::System.ArgumentNullException("LAW_TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(LAW_TEL));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((System.DateTime)(P_DATE));
            this.Adapter.InsertCommand.Parameters[23].Value = ((System.DateTime)(F_DATE));
            this.Adapter.InsertCommand.Parameters[24].Value = ((System.DateTime)(T_DATE));
            this.Adapter.InsertCommand.Parameters[25].Value = ((System.DateTime)(C_DATE));
            this.Adapter.InsertCommand.Parameters[26].Value = ((decimal)(P_PER));
            this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(MIN_COST_LIVING));
            if ((ACNO == null)) {
                throw new global::System.ArgumentNullException("ACNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(ACNO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    string YYMM_B, 
                    string YYMM_E, 
                    string SAL_CODE, 
                    decimal SEQ, 
                    System.DateTime A_DATE, 
                    bool A_TYPE, 
                    decimal A_PER, 
                    decimal F_AMT, 
                    decimal P_AMT, 
                    decimal T_AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string MEMO, 
                    string DISPATCH, 
                    string DE_DEPT, 
                    string DE_MAN, 
                    string DE_TEL, 
                    string DE_ADD, 
                    string LAW_DEPT, 
                    string LAW_MAN, 
                    string LAW_TEL, 
                    System.DateTime P_DATE, 
                    System.DateTime F_DATE, 
                    System.DateTime T_DATE, 
                    System.DateTime C_DATE, 
                    decimal P_PER, 
                    string ACNO, 
                    decimal MIN_COST_LIVING, 
                    string Original_ACNO) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((YYMM_B == null)) {
                throw new global::System.ArgumentNullException("YYMM_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(YYMM_B));
            }
            if ((YYMM_E == null)) {
                throw new global::System.ArgumentNullException("YYMM_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(YYMM_E));
            }
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(SAL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(SEQ));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(A_DATE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(A_TYPE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(A_PER));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(F_AMT));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(P_AMT));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(T_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(KEY_DATE));
            if ((MEMO == null)) {
                throw new global::System.ArgumentNullException("MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MEMO));
            }
            if ((DISPATCH == null)) {
                throw new global::System.ArgumentNullException("DISPATCH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(DISPATCH));
            }
            if ((DE_DEPT == null)) {
                throw new global::System.ArgumentNullException("DE_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(DE_DEPT));
            }
            if ((DE_MAN == null)) {
                throw new global::System.ArgumentNullException("DE_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(DE_MAN));
            }
            if ((DE_TEL == null)) {
                throw new global::System.ArgumentNullException("DE_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DE_TEL));
            }
            if ((DE_ADD == null)) {
                throw new global::System.ArgumentNullException("DE_ADD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(DE_ADD));
            }
            if ((LAW_DEPT == null)) {
                throw new global::System.ArgumentNullException("LAW_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(LAW_DEPT));
            }
            if ((LAW_MAN == null)) {
                throw new global::System.ArgumentNullException("LAW_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(LAW_MAN));
            }
            if ((LAW_TEL == null)) {
                throw new global::System.ArgumentNullException("LAW_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(LAW_TEL));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((System.DateTime)(P_DATE));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(F_DATE));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((System.DateTime)(T_DATE));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(C_DATE));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(P_PER));
            if ((ACNO == null)) {
                throw new global::System.ArgumentNullException("ACNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(ACNO));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(MIN_COST_LIVING));
            if ((Original_ACNO == null)) {
                throw new global::System.ArgumentNullException("Original_ACNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_ACNO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    string YYMM_B, 
                    string YYMM_E, 
                    string SAL_CODE, 
                    decimal SEQ, 
                    System.DateTime A_DATE, 
                    bool A_TYPE, 
                    decimal A_PER, 
                    decimal F_AMT, 
                    decimal P_AMT, 
                    decimal T_AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string MEMO, 
                    string DISPATCH, 
                    string DE_DEPT, 
                    string DE_MAN, 
                    string DE_TEL, 
                    string DE_ADD, 
                    string LAW_DEPT, 
                    string LAW_MAN, 
                    string LAW_TEL, 
                    System.DateTime P_DATE, 
                    System.DateTime F_DATE, 
                    System.DateTime T_DATE, 
                    System.DateTime C_DATE, 
                    decimal P_PER, 
                    decimal MIN_COST_LIVING, 
                    string Original_ACNO) {
            return this.Update(NOBR, YYMM_B, YYMM_E, SAL_CODE, SEQ, A_DATE, A_TYPE, A_PER, F_AMT, P_AMT, T_AMT, KEY_MAN, KEY_DATE, MEMO, DISPATCH, DE_DEPT, DE_MAN, DE_TEL, DE_ADD, LAW_DEPT, LAW_MAN, LAW_TEL, P_DATE, F_DATE, T_DATE, C_DATE, P_PER, Original_ACNO, MIN_COST_LIVING, Original_ACNO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALENRICHTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALENRICHTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALENRICH";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("MEMO", "MEMO");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("IMPORT", "IMPORT");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            tableMapping.ColumnMappings.Add("AUTOKEY", "AUTOKEY");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM SALENRICH\r\nWHERE          (AUTOKEY = @Original_AUTOKEY)";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOKEY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO SALENRICH
                            (NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, FA_IDNO, IMPORT)
VALUES          (@NOBR,@YYMM,@SEQ,@SAL_CODE,@AMT,@KEY_MAN,@KEY_DATE,@MEMO,@FA_IDNO,@IMPORT);
SELECT AUTOKEY, NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, FA_IDNO, IMPORT FROM SALENRICH WHERE (AUTOKEY = SCOPE_IDENTITY())
";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 120, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMPORT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IMPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE          SALENRICH
SET                   NOBR = @NOBR, YYMM = @YYMM, SEQ = @SEQ, SAL_CODE = @SAL_CODE, AMT = @AMT, 
                            KEY_MAN = @KEY_MAN, KEY_DATE = @KEY_DATE, MEMO = @MEMO, FA_IDNO = @FA_IDNO, 
                            IMPORT = @IMPORT
WHERE          (AUTOKEY = @Original_AUTOKEY)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 9, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MEMO", global::System.Data.SqlDbType.NVarChar, 120, global::System.Data.ParameterDirection.Input, 0, 0, "MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IMPORT", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "IMPORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOKEY", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOKEY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO, FA_IDNO," +
                " IMPORT, NAME_C, SAL_NAME, \r\n                            AUTOKEY\r\nFROM          " +
                "    FRM4K";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          AUTOKEY, NOBR, YYMM, SEQ, SAL_CODE, AMT, KEY_MAN, KEY_DATE, MEMO," +
                " FA_IDNO, IMPORT, NAME_C, \r\n                            SAL_NAME\r\nFROM          " +
                "    FRM4K\r\nWHERE          (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(SalaryDS.SALENRICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual SalaryDS.SALENRICHDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            SalaryDS.SALENRICHDataTable dataTable = new SalaryDS.SALENRICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(SalaryDS.SALENRICHDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual SalaryDS.SALENRICHDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            SalaryDS.SALENRICHDataTable dataTable = new SalaryDS.SALENRICHDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS.SALENRICHDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(SalaryDS dataSet) {
            return this.Adapter.Update(dataSet, "SALENRICH");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private ACCCDTableAdapter _aCCCDTableAdapter;
        
        private SALTYCDTableAdapter _sALTYCDTableAdapter;
        
        private SALATTRTableAdapter _sALATTRTableAdapter;
        
        private SALCODETableAdapter _sALCODETableAdapter;
        
        private SALADRTableAdapter _sALADRTableAdapter;
        
        private WAGETableAdapter _wAGETableAdapter;
        
        private WAGEDTableAdapter _wAGEDTableAdapter;
        
        private SALBASDTableAdapter _sALBASDTableAdapter;
        
        private SALBASTDTableAdapter _sALBASTDTableAdapter;
        
        private TAXLVLTableAdapter _tAXLVLTableAdapter;
        
        private MA_FOODTableAdapter _mA_FOODTableAdapter;
        
        private WAGEDDTableAdapter _wAGEDDTableAdapter;
        
        private SALABSTableAdapter _sALABSTableAdapter;
        
        private OTTableAdapter _oTTableAdapter;
        
        private BASETableAdapter _bASETableAdapter;
        
        private BASETTSTableAdapter _bASETTSTableAdapter;
        
        private INSGLVTableAdapter _iNSGLVTableAdapter;
        
        private FRM47TableAdapter _fRM47TableAdapter;
        
        private ENRICHTableAdapter _eNRICHTableAdapter;
        
        private SALBASD1TableAdapter _sALBASD1TableAdapter;
        
        private EXPLABTableAdapter _eXPLABTableAdapter;
        
        private SALBASD_TMPTableAdapter _sALBASD_TMPTableAdapter;
        
        private ExplabCNTableAdapter _explabCNTableAdapter;
        
        private EXPSUPTableAdapter _eXPSUPTableAdapter;
        
        private SALBASETableAdapter _sALBASETableAdapter;
        
        private SALFUNCTIONTableAdapter _sALFUNCTIONTableAdapter;
        
        private SALBASNDTableAdapter _sALBASNDTableAdapter;
        
        private SALENRICHTableAdapter _sALENRICHTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ACCCDTableAdapter ACCCDTableAdapter {
            get {
                return this._aCCCDTableAdapter;
            }
            set {
                this._aCCCDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALTYCDTableAdapter SALTYCDTableAdapter {
            get {
                return this._sALTYCDTableAdapter;
            }
            set {
                this._sALTYCDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALATTRTableAdapter SALATTRTableAdapter {
            get {
                return this._sALATTRTableAdapter;
            }
            set {
                this._sALATTRTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALCODETableAdapter SALCODETableAdapter {
            get {
                return this._sALCODETableAdapter;
            }
            set {
                this._sALCODETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALADRTableAdapter SALADRTableAdapter {
            get {
                return this._sALADRTableAdapter;
            }
            set {
                this._sALADRTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public WAGETableAdapter WAGETableAdapter {
            get {
                return this._wAGETableAdapter;
            }
            set {
                this._wAGETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public WAGEDTableAdapter WAGEDTableAdapter {
            get {
                return this._wAGEDTableAdapter;
            }
            set {
                this._wAGEDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALBASDTableAdapter SALBASDTableAdapter {
            get {
                return this._sALBASDTableAdapter;
            }
            set {
                this._sALBASDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALBASTDTableAdapter SALBASTDTableAdapter {
            get {
                return this._sALBASTDTableAdapter;
            }
            set {
                this._sALBASTDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TAXLVLTableAdapter TAXLVLTableAdapter {
            get {
                return this._tAXLVLTableAdapter;
            }
            set {
                this._tAXLVLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MA_FOODTableAdapter MA_FOODTableAdapter {
            get {
                return this._mA_FOODTableAdapter;
            }
            set {
                this._mA_FOODTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public WAGEDDTableAdapter WAGEDDTableAdapter {
            get {
                return this._wAGEDDTableAdapter;
            }
            set {
                this._wAGEDDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALABSTableAdapter SALABSTableAdapter {
            get {
                return this._sALABSTableAdapter;
            }
            set {
                this._sALABSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OTTableAdapter OTTableAdapter {
            get {
                return this._oTTableAdapter;
            }
            set {
                this._oTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BASETableAdapter BASETableAdapter {
            get {
                return this._bASETableAdapter;
            }
            set {
                this._bASETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BASETTSTableAdapter BASETTSTableAdapter {
            get {
                return this._bASETTSTableAdapter;
            }
            set {
                this._bASETTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSGLVTableAdapter INSGLVTableAdapter {
            get {
                return this._iNSGLVTableAdapter;
            }
            set {
                this._iNSGLVTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FRM47TableAdapter FRM47TableAdapter {
            get {
                return this._fRM47TableAdapter;
            }
            set {
                this._fRM47TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ENRICHTableAdapter ENRICHTableAdapter {
            get {
                return this._eNRICHTableAdapter;
            }
            set {
                this._eNRICHTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALBASD1TableAdapter SALBASD1TableAdapter {
            get {
                return this._sALBASD1TableAdapter;
            }
            set {
                this._sALBASD1TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EXPLABTableAdapter EXPLABTableAdapter {
            get {
                return this._eXPLABTableAdapter;
            }
            set {
                this._eXPLABTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALBASD_TMPTableAdapter SALBASD_TMPTableAdapter {
            get {
                return this._sALBASD_TMPTableAdapter;
            }
            set {
                this._sALBASD_TMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ExplabCNTableAdapter ExplabCNTableAdapter {
            get {
                return this._explabCNTableAdapter;
            }
            set {
                this._explabCNTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EXPSUPTableAdapter EXPSUPTableAdapter {
            get {
                return this._eXPSUPTableAdapter;
            }
            set {
                this._eXPSUPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALBASETableAdapter SALBASETableAdapter {
            get {
                return this._sALBASETableAdapter;
            }
            set {
                this._sALBASETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALFUNCTIONTableAdapter SALFUNCTIONTableAdapter {
            get {
                return this._sALFUNCTIONTableAdapter;
            }
            set {
                this._sALFUNCTIONTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALBASNDTableAdapter SALBASNDTableAdapter {
            get {
                return this._sALBASNDTableAdapter;
            }
            set {
                this._sALBASNDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALENRICHTableAdapter SALENRICHTableAdapter {
            get {
                return this._sALENRICHTableAdapter;
            }
            set {
                this._sALENRICHTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aCCCDTableAdapter != null) 
                            && (this._aCCCDTableAdapter.Connection != null))) {
                    return this._aCCCDTableAdapter.Connection;
                }
                if (((this._sALTYCDTableAdapter != null) 
                            && (this._sALTYCDTableAdapter.Connection != null))) {
                    return this._sALTYCDTableAdapter.Connection;
                }
                if (((this._sALATTRTableAdapter != null) 
                            && (this._sALATTRTableAdapter.Connection != null))) {
                    return this._sALATTRTableAdapter.Connection;
                }
                if (((this._sALCODETableAdapter != null) 
                            && (this._sALCODETableAdapter.Connection != null))) {
                    return this._sALCODETableAdapter.Connection;
                }
                if (((this._sALADRTableAdapter != null) 
                            && (this._sALADRTableAdapter.Connection != null))) {
                    return this._sALADRTableAdapter.Connection;
                }
                if (((this._wAGETableAdapter != null) 
                            && (this._wAGETableAdapter.Connection != null))) {
                    return this._wAGETableAdapter.Connection;
                }
                if (((this._wAGEDTableAdapter != null) 
                            && (this._wAGEDTableAdapter.Connection != null))) {
                    return this._wAGEDTableAdapter.Connection;
                }
                if (((this._sALBASDTableAdapter != null) 
                            && (this._sALBASDTableAdapter.Connection != null))) {
                    return this._sALBASDTableAdapter.Connection;
                }
                if (((this._sALBASTDTableAdapter != null) 
                            && (this._sALBASTDTableAdapter.Connection != null))) {
                    return this._sALBASTDTableAdapter.Connection;
                }
                if (((this._tAXLVLTableAdapter != null) 
                            && (this._tAXLVLTableAdapter.Connection != null))) {
                    return this._tAXLVLTableAdapter.Connection;
                }
                if (((this._mA_FOODTableAdapter != null) 
                            && (this._mA_FOODTableAdapter.Connection != null))) {
                    return this._mA_FOODTableAdapter.Connection;
                }
                if (((this._wAGEDDTableAdapter != null) 
                            && (this._wAGEDDTableAdapter.Connection != null))) {
                    return this._wAGEDDTableAdapter.Connection;
                }
                if (((this._sALABSTableAdapter != null) 
                            && (this._sALABSTableAdapter.Connection != null))) {
                    return this._sALABSTableAdapter.Connection;
                }
                if (((this._oTTableAdapter != null) 
                            && (this._oTTableAdapter.Connection != null))) {
                    return this._oTTableAdapter.Connection;
                }
                if (((this._bASETableAdapter != null) 
                            && (this._bASETableAdapter.Connection != null))) {
                    return this._bASETableAdapter.Connection;
                }
                if (((this._bASETTSTableAdapter != null) 
                            && (this._bASETTSTableAdapter.Connection != null))) {
                    return this._bASETTSTableAdapter.Connection;
                }
                if (((this._iNSGLVTableAdapter != null) 
                            && (this._iNSGLVTableAdapter.Connection != null))) {
                    return this._iNSGLVTableAdapter.Connection;
                }
                if (((this._fRM47TableAdapter != null) 
                            && (this._fRM47TableAdapter.Connection != null))) {
                    return this._fRM47TableAdapter.Connection;
                }
                if (((this._eNRICHTableAdapter != null) 
                            && (this._eNRICHTableAdapter.Connection != null))) {
                    return this._eNRICHTableAdapter.Connection;
                }
                if (((this._sALBASD1TableAdapter != null) 
                            && (this._sALBASD1TableAdapter.Connection != null))) {
                    return this._sALBASD1TableAdapter.Connection;
                }
                if (((this._eXPLABTableAdapter != null) 
                            && (this._eXPLABTableAdapter.Connection != null))) {
                    return this._eXPLABTableAdapter.Connection;
                }
                if (((this._sALBASD_TMPTableAdapter != null) 
                            && (this._sALBASD_TMPTableAdapter.Connection != null))) {
                    return this._sALBASD_TMPTableAdapter.Connection;
                }
                if (((this._explabCNTableAdapter != null) 
                            && (this._explabCNTableAdapter.Connection != null))) {
                    return this._explabCNTableAdapter.Connection;
                }
                if (((this._eXPSUPTableAdapter != null) 
                            && (this._eXPSUPTableAdapter.Connection != null))) {
                    return this._eXPSUPTableAdapter.Connection;
                }
                if (((this._sALBASETableAdapter != null) 
                            && (this._sALBASETableAdapter.Connection != null))) {
                    return this._sALBASETableAdapter.Connection;
                }
                if (((this._sALFUNCTIONTableAdapter != null) 
                            && (this._sALFUNCTIONTableAdapter.Connection != null))) {
                    return this._sALFUNCTIONTableAdapter.Connection;
                }
                if (((this._sALBASNDTableAdapter != null) 
                            && (this._sALBASNDTableAdapter.Connection != null))) {
                    return this._sALBASNDTableAdapter.Connection;
                }
                if (((this._sALENRICHTableAdapter != null) 
                            && (this._sALENRICHTableAdapter.Connection != null))) {
                    return this._sALENRICHTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aCCCDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALTYCDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALATTRTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALCODETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALADRTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wAGETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wAGEDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALBASDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALBASTDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tAXLVLTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._mA_FOODTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._wAGEDDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALABSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._oTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bASETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bASETTSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSGLVTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fRM47TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eNRICHTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALBASD1TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eXPLABTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALBASD_TMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._explabCNTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eXPSUPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALBASETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALFUNCTIONTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALBASNDTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALENRICHTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(SalaryDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aCCCDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ACCCD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aCCCDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALFUNCTIONTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALFUNCTION.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALFUNCTIONTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALBASETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALBASE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALBASETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eXPSUPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXPSUP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXPSUPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._explabCNTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ExplabCN.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._explabCNTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALBASD_TMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALBASD_TMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALBASD_TMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eXPLABTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EXPLAB.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eXPLABTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALBASD1TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALBASD1.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALBASD1TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eNRICHTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ENRICH.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eNRICHTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fRM47TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FRM47.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fRM47TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSGLVTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSGLV.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSGLVTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._oTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.OT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._oTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALBASTDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALBASTD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALBASTDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bASETTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BASETTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bASETTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bASETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BASE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bASETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALABSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALABS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALABSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wAGEDDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WAGEDD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wAGEDDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._mA_FOODTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.MA_FOOD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._mA_FOODTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tAXLVLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TAXLVL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tAXLVLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALBASDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALBASD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALBASDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wAGEDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WAGED.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wAGEDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._wAGETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.WAGE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._wAGETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALADRTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALADR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALADRTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALATTRTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALATTR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALATTRTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALTYCDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALTYCD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALTYCDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALBASNDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALBASND.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALBASNDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALENRICHTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALENRICH.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALENRICHTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(SalaryDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aCCCDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ACCCD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aCCCDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALFUNCTIONTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALFUNCTION.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALFUNCTIONTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALBASETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALBASE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALBASETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eXPSUPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXPSUP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXPSUPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._explabCNTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ExplabCN.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._explabCNTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALBASD_TMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALBASD_TMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALBASD_TMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eXPLABTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EXPLAB.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eXPLABTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALBASD1TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALBASD1.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALBASD1TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eNRICHTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ENRICH.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eNRICHTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fRM47TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FRM47.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fRM47TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSGLVTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSGLV.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSGLVTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._oTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.OT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._oTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALBASTDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALBASTD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALBASTDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bASETTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BASETTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bASETTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bASETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BASE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bASETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALABSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALABS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALABSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wAGEDDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WAGEDD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wAGEDDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._mA_FOODTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.MA_FOOD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._mA_FOODTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tAXLVLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TAXLVL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tAXLVLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALBASDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALBASD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALBASDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wAGEDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WAGED.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wAGEDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._wAGETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.WAGE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._wAGETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALADRTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALADR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALADRTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALATTRTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALATTR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALATTRTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALTYCDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALTYCD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALTYCDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALBASNDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALBASND.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALBASNDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALENRICHTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALENRICH.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALENRICHTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(SalaryDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sALENRICHTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALENRICH.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALENRICHTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALBASNDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALBASND.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALBASNDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALTYCDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALTYCD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALTYCDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALATTRTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALATTR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALATTRTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALADRTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALADR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALADRTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wAGETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WAGE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wAGETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wAGEDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WAGED.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wAGEDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALBASDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALBASD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALBASDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tAXLVLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TAXLVL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tAXLVLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._mA_FOODTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.MA_FOOD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._mA_FOODTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._wAGEDDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.WAGEDD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._wAGEDDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALABSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALABS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALABSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bASETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BASE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bASETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bASETTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BASETTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bASETTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALBASTDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALBASTD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALBASTDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._oTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.OT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._oTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSGLVTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSGLV.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSGLVTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fRM47TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FRM47.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fRM47TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eNRICHTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ENRICH.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eNRICHTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALBASD1TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALBASD1.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALBASD1TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eXPLABTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXPLAB.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXPLABTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALBASD_TMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALBASD_TMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALBASD_TMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._explabCNTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ExplabCN.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._explabCNTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._eXPSUPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EXPSUP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eXPSUPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALBASETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALBASE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALBASETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALFUNCTIONTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALFUNCTION.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALFUNCTIONTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aCCCDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ACCCD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aCCCDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(SalaryDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aCCCDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aCCCDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALTYCDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALTYCDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALATTRTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALATTRTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALCODETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALCODETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALADRTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALADRTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._wAGETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wAGETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._wAGEDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wAGEDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALBASDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALBASDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALBASTDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALBASTDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._tAXLVLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tAXLVLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._mA_FOODTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._mA_FOODTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._wAGEDDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._wAGEDDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALABSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALABSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._oTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._oTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._bASETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bASETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._bASETTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bASETTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSGLVTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSGLVTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._fRM47TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fRM47TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._eNRICHTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eNRICHTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALBASD1TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALBASD1TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._eXPLABTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXPLABTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALBASD_TMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALBASD_TMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._explabCNTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._explabCNTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._eXPSUPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eXPSUPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALBASETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALBASETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALFUNCTIONTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALFUNCTIONTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALBASNDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALBASNDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALENRICHTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALENRICHTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aCCCDTableAdapter != null)) {
                    revertConnections.Add(this._aCCCDTableAdapter, this._aCCCDTableAdapter.Connection);
                    this._aCCCDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._aCCCDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._aCCCDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aCCCDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aCCCDTableAdapter.Adapter);
                    }
                }
                if ((this._sALTYCDTableAdapter != null)) {
                    revertConnections.Add(this._sALTYCDTableAdapter, this._sALTYCDTableAdapter.Connection);
                    this._sALTYCDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALTYCDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALTYCDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALTYCDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALTYCDTableAdapter.Adapter);
                    }
                }
                if ((this._sALATTRTableAdapter != null)) {
                    revertConnections.Add(this._sALATTRTableAdapter, this._sALATTRTableAdapter.Connection);
                    this._sALATTRTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALATTRTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALATTRTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALATTRTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALATTRTableAdapter.Adapter);
                    }
                }
                if ((this._sALCODETableAdapter != null)) {
                    revertConnections.Add(this._sALCODETableAdapter, this._sALCODETableAdapter.Connection);
                    this._sALCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALCODETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALCODETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALCODETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALCODETableAdapter.Adapter);
                    }
                }
                if ((this._sALADRTableAdapter != null)) {
                    revertConnections.Add(this._sALADRTableAdapter, this._sALADRTableAdapter.Connection);
                    this._sALADRTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALADRTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALADRTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALADRTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALADRTableAdapter.Adapter);
                    }
                }
                if ((this._wAGETableAdapter != null)) {
                    revertConnections.Add(this._wAGETableAdapter, this._wAGETableAdapter.Connection);
                    this._wAGETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._wAGETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._wAGETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wAGETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wAGETableAdapter.Adapter);
                    }
                }
                if ((this._wAGEDTableAdapter != null)) {
                    revertConnections.Add(this._wAGEDTableAdapter, this._wAGEDTableAdapter.Connection);
                    this._wAGEDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._wAGEDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._wAGEDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wAGEDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wAGEDTableAdapter.Adapter);
                    }
                }
                if ((this._sALBASDTableAdapter != null)) {
                    revertConnections.Add(this._sALBASDTableAdapter, this._sALBASDTableAdapter.Connection);
                    this._sALBASDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALBASDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALBASDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALBASDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALBASDTableAdapter.Adapter);
                    }
                }
                if ((this._sALBASTDTableAdapter != null)) {
                    revertConnections.Add(this._sALBASTDTableAdapter, this._sALBASTDTableAdapter.Connection);
                    this._sALBASTDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALBASTDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALBASTDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALBASTDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALBASTDTableAdapter.Adapter);
                    }
                }
                if ((this._tAXLVLTableAdapter != null)) {
                    revertConnections.Add(this._tAXLVLTableAdapter, this._tAXLVLTableAdapter.Connection);
                    this._tAXLVLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tAXLVLTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tAXLVLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tAXLVLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tAXLVLTableAdapter.Adapter);
                    }
                }
                if ((this._mA_FOODTableAdapter != null)) {
                    revertConnections.Add(this._mA_FOODTableAdapter, this._mA_FOODTableAdapter.Connection);
                    this._mA_FOODTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._mA_FOODTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._mA_FOODTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._mA_FOODTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._mA_FOODTableAdapter.Adapter);
                    }
                }
                if ((this._wAGEDDTableAdapter != null)) {
                    revertConnections.Add(this._wAGEDDTableAdapter, this._wAGEDDTableAdapter.Connection);
                    this._wAGEDDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._wAGEDDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._wAGEDDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._wAGEDDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._wAGEDDTableAdapter.Adapter);
                    }
                }
                if ((this._sALABSTableAdapter != null)) {
                    revertConnections.Add(this._sALABSTableAdapter, this._sALABSTableAdapter.Connection);
                    this._sALABSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALABSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALABSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALABSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALABSTableAdapter.Adapter);
                    }
                }
                if ((this._oTTableAdapter != null)) {
                    revertConnections.Add(this._oTTableAdapter, this._oTTableAdapter.Connection);
                    this._oTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._oTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._oTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._oTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._oTTableAdapter.Adapter);
                    }
                }
                if ((this._bASETableAdapter != null)) {
                    revertConnections.Add(this._bASETableAdapter, this._bASETableAdapter.Connection);
                    this._bASETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bASETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bASETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bASETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bASETableAdapter.Adapter);
                    }
                }
                if ((this._bASETTSTableAdapter != null)) {
                    revertConnections.Add(this._bASETTSTableAdapter, this._bASETTSTableAdapter.Connection);
                    this._bASETTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bASETTSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bASETTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bASETTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bASETTSTableAdapter.Adapter);
                    }
                }
                if ((this._iNSGLVTableAdapter != null)) {
                    revertConnections.Add(this._iNSGLVTableAdapter, this._iNSGLVTableAdapter.Connection);
                    this._iNSGLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSGLVTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSGLVTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSGLVTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSGLVTableAdapter.Adapter);
                    }
                }
                if ((this._fRM47TableAdapter != null)) {
                    revertConnections.Add(this._fRM47TableAdapter, this._fRM47TableAdapter.Connection);
                    this._fRM47TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fRM47TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fRM47TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fRM47TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fRM47TableAdapter.Adapter);
                    }
                }
                if ((this._eNRICHTableAdapter != null)) {
                    revertConnections.Add(this._eNRICHTableAdapter, this._eNRICHTableAdapter.Connection);
                    this._eNRICHTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eNRICHTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eNRICHTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eNRICHTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eNRICHTableAdapter.Adapter);
                    }
                }
                if ((this._sALBASD1TableAdapter != null)) {
                    revertConnections.Add(this._sALBASD1TableAdapter, this._sALBASD1TableAdapter.Connection);
                    this._sALBASD1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALBASD1TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALBASD1TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALBASD1TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALBASD1TableAdapter.Adapter);
                    }
                }
                if ((this._eXPLABTableAdapter != null)) {
                    revertConnections.Add(this._eXPLABTableAdapter, this._eXPLABTableAdapter.Connection);
                    this._eXPLABTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eXPLABTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eXPLABTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXPLABTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXPLABTableAdapter.Adapter);
                    }
                }
                if ((this._sALBASD_TMPTableAdapter != null)) {
                    revertConnections.Add(this._sALBASD_TMPTableAdapter, this._sALBASD_TMPTableAdapter.Connection);
                    this._sALBASD_TMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALBASD_TMPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALBASD_TMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALBASD_TMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALBASD_TMPTableAdapter.Adapter);
                    }
                }
                if ((this._explabCNTableAdapter != null)) {
                    revertConnections.Add(this._explabCNTableAdapter, this._explabCNTableAdapter.Connection);
                    this._explabCNTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._explabCNTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._explabCNTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._explabCNTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._explabCNTableAdapter.Adapter);
                    }
                }
                if ((this._eXPSUPTableAdapter != null)) {
                    revertConnections.Add(this._eXPSUPTableAdapter, this._eXPSUPTableAdapter.Connection);
                    this._eXPSUPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eXPSUPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eXPSUPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eXPSUPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eXPSUPTableAdapter.Adapter);
                    }
                }
                if ((this._sALBASETableAdapter != null)) {
                    revertConnections.Add(this._sALBASETableAdapter, this._sALBASETableAdapter.Connection);
                    this._sALBASETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALBASETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALBASETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALBASETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALBASETableAdapter.Adapter);
                    }
                }
                if ((this._sALFUNCTIONTableAdapter != null)) {
                    revertConnections.Add(this._sALFUNCTIONTableAdapter, this._sALFUNCTIONTableAdapter.Connection);
                    this._sALFUNCTIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALFUNCTIONTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALFUNCTIONTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALFUNCTIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALFUNCTIONTableAdapter.Adapter);
                    }
                }
                if ((this._sALBASNDTableAdapter != null)) {
                    revertConnections.Add(this._sALBASNDTableAdapter, this._sALBASNDTableAdapter.Connection);
                    this._sALBASNDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALBASNDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALBASNDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALBASNDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALBASNDTableAdapter.Adapter);
                    }
                }
                if ((this._sALENRICHTableAdapter != null)) {
                    revertConnections.Add(this._sALENRICHTableAdapter, this._sALENRICHTableAdapter.Connection);
                    this._sALENRICHTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALENRICHTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALENRICHTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALENRICHTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALENRICHTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aCCCDTableAdapter != null)) {
                    this._aCCCDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._aCCCDTableAdapter]));
                    this._aCCCDTableAdapter.Transaction = null;
                }
                if ((this._sALTYCDTableAdapter != null)) {
                    this._sALTYCDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALTYCDTableAdapter]));
                    this._sALTYCDTableAdapter.Transaction = null;
                }
                if ((this._sALATTRTableAdapter != null)) {
                    this._sALATTRTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALATTRTableAdapter]));
                    this._sALATTRTableAdapter.Transaction = null;
                }
                if ((this._sALCODETableAdapter != null)) {
                    this._sALCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALCODETableAdapter]));
                    this._sALCODETableAdapter.Transaction = null;
                }
                if ((this._sALADRTableAdapter != null)) {
                    this._sALADRTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALADRTableAdapter]));
                    this._sALADRTableAdapter.Transaction = null;
                }
                if ((this._wAGETableAdapter != null)) {
                    this._wAGETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._wAGETableAdapter]));
                    this._wAGETableAdapter.Transaction = null;
                }
                if ((this._wAGEDTableAdapter != null)) {
                    this._wAGEDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._wAGEDTableAdapter]));
                    this._wAGEDTableAdapter.Transaction = null;
                }
                if ((this._sALBASDTableAdapter != null)) {
                    this._sALBASDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALBASDTableAdapter]));
                    this._sALBASDTableAdapter.Transaction = null;
                }
                if ((this._sALBASTDTableAdapter != null)) {
                    this._sALBASTDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALBASTDTableAdapter]));
                    this._sALBASTDTableAdapter.Transaction = null;
                }
                if ((this._tAXLVLTableAdapter != null)) {
                    this._tAXLVLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tAXLVLTableAdapter]));
                    this._tAXLVLTableAdapter.Transaction = null;
                }
                if ((this._mA_FOODTableAdapter != null)) {
                    this._mA_FOODTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._mA_FOODTableAdapter]));
                    this._mA_FOODTableAdapter.Transaction = null;
                }
                if ((this._wAGEDDTableAdapter != null)) {
                    this._wAGEDDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._wAGEDDTableAdapter]));
                    this._wAGEDDTableAdapter.Transaction = null;
                }
                if ((this._sALABSTableAdapter != null)) {
                    this._sALABSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALABSTableAdapter]));
                    this._sALABSTableAdapter.Transaction = null;
                }
                if ((this._oTTableAdapter != null)) {
                    this._oTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._oTTableAdapter]));
                    this._oTTableAdapter.Transaction = null;
                }
                if ((this._bASETableAdapter != null)) {
                    this._bASETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bASETableAdapter]));
                    this._bASETableAdapter.Transaction = null;
                }
                if ((this._bASETTSTableAdapter != null)) {
                    this._bASETTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bASETTSTableAdapter]));
                    this._bASETTSTableAdapter.Transaction = null;
                }
                if ((this._iNSGLVTableAdapter != null)) {
                    this._iNSGLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSGLVTableAdapter]));
                    this._iNSGLVTableAdapter.Transaction = null;
                }
                if ((this._fRM47TableAdapter != null)) {
                    this._fRM47TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fRM47TableAdapter]));
                    this._fRM47TableAdapter.Transaction = null;
                }
                if ((this._eNRICHTableAdapter != null)) {
                    this._eNRICHTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eNRICHTableAdapter]));
                    this._eNRICHTableAdapter.Transaction = null;
                }
                if ((this._sALBASD1TableAdapter != null)) {
                    this._sALBASD1TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALBASD1TableAdapter]));
                    this._sALBASD1TableAdapter.Transaction = null;
                }
                if ((this._eXPLABTableAdapter != null)) {
                    this._eXPLABTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eXPLABTableAdapter]));
                    this._eXPLABTableAdapter.Transaction = null;
                }
                if ((this._sALBASD_TMPTableAdapter != null)) {
                    this._sALBASD_TMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALBASD_TMPTableAdapter]));
                    this._sALBASD_TMPTableAdapter.Transaction = null;
                }
                if ((this._explabCNTableAdapter != null)) {
                    this._explabCNTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._explabCNTableAdapter]));
                    this._explabCNTableAdapter.Transaction = null;
                }
                if ((this._eXPSUPTableAdapter != null)) {
                    this._eXPSUPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eXPSUPTableAdapter]));
                    this._eXPSUPTableAdapter.Transaction = null;
                }
                if ((this._sALBASETableAdapter != null)) {
                    this._sALBASETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALBASETableAdapter]));
                    this._sALBASETableAdapter.Transaction = null;
                }
                if ((this._sALFUNCTIONTableAdapter != null)) {
                    this._sALFUNCTIONTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALFUNCTIONTableAdapter]));
                    this._sALFUNCTIONTableAdapter.Transaction = null;
                }
                if ((this._sALBASNDTableAdapter != null)) {
                    this._sALBASNDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALBASNDTableAdapter]));
                    this._sALBASNDTableAdapter.Transaction = null;
                }
                if ((this._sALENRICHTableAdapter != null)) {
                    this._sALENRICHTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALENRICHTableAdapter]));
                    this._sALENRICHTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591