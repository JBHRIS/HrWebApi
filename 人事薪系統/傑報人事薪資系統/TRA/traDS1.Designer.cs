//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JBHR.TRA {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("traDS1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class traDS1 : global::System.Data.DataSet {
        
        private TRTYPEDataTable tableTRTYPE;
        
        private TRCOMPDataTable tableTRCOMP;
        
        private TRASSCODEDataTable tableTRASSCODE;
        
        private TR_INOUTDataTable tableTR_INOUT;
        
        private TRCOSFDataTable tableTRCOSF;
        
        private TRCOSCDataTable tableTRCOSC;
        
        private TRCOSPDataTable tableTRCOSP;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public traDS1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected traDS1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TRTYPE"] != null)) {
                    base.Tables.Add(new TRTYPEDataTable(ds.Tables["TRTYPE"]));
                }
                if ((ds.Tables["TRCOMP"] != null)) {
                    base.Tables.Add(new TRCOMPDataTable(ds.Tables["TRCOMP"]));
                }
                if ((ds.Tables["TRASSCODE"] != null)) {
                    base.Tables.Add(new TRASSCODEDataTable(ds.Tables["TRASSCODE"]));
                }
                if ((ds.Tables["TR_INOUT"] != null)) {
                    base.Tables.Add(new TR_INOUTDataTable(ds.Tables["TR_INOUT"]));
                }
                if ((ds.Tables["TRCOSF"] != null)) {
                    base.Tables.Add(new TRCOSFDataTable(ds.Tables["TRCOSF"]));
                }
                if ((ds.Tables["TRCOSC"] != null)) {
                    base.Tables.Add(new TRCOSCDataTable(ds.Tables["TRCOSC"]));
                }
                if ((ds.Tables["TRCOSP"] != null)) {
                    base.Tables.Add(new TRCOSPDataTable(ds.Tables["TRCOSP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRTYPEDataTable TRTYPE {
            get {
                return this.tableTRTYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRCOMPDataTable TRCOMP {
            get {
                return this.tableTRCOMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRASSCODEDataTable TRASSCODE {
            get {
                return this.tableTRASSCODE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TR_INOUTDataTable TR_INOUT {
            get {
                return this.tableTR_INOUT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRCOSFDataTable TRCOSF {
            get {
                return this.tableTRCOSF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRCOSCDataTable TRCOSC {
            get {
                return this.tableTRCOSC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TRCOSPDataTable TRCOSP {
            get {
                return this.tableTRCOSP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            traDS1 cln = ((traDS1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TRTYPE"] != null)) {
                    base.Tables.Add(new TRTYPEDataTable(ds.Tables["TRTYPE"]));
                }
                if ((ds.Tables["TRCOMP"] != null)) {
                    base.Tables.Add(new TRCOMPDataTable(ds.Tables["TRCOMP"]));
                }
                if ((ds.Tables["TRASSCODE"] != null)) {
                    base.Tables.Add(new TRASSCODEDataTable(ds.Tables["TRASSCODE"]));
                }
                if ((ds.Tables["TR_INOUT"] != null)) {
                    base.Tables.Add(new TR_INOUTDataTable(ds.Tables["TR_INOUT"]));
                }
                if ((ds.Tables["TRCOSF"] != null)) {
                    base.Tables.Add(new TRCOSFDataTable(ds.Tables["TRCOSF"]));
                }
                if ((ds.Tables["TRCOSC"] != null)) {
                    base.Tables.Add(new TRCOSCDataTable(ds.Tables["TRCOSC"]));
                }
                if ((ds.Tables["TRCOSP"] != null)) {
                    base.Tables.Add(new TRCOSPDataTable(ds.Tables["TRCOSP"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableTRTYPE = ((TRTYPEDataTable)(base.Tables["TRTYPE"]));
            if ((initTable == true)) {
                if ((this.tableTRTYPE != null)) {
                    this.tableTRTYPE.InitVars();
                }
            }
            this.tableTRCOMP = ((TRCOMPDataTable)(base.Tables["TRCOMP"]));
            if ((initTable == true)) {
                if ((this.tableTRCOMP != null)) {
                    this.tableTRCOMP.InitVars();
                }
            }
            this.tableTRASSCODE = ((TRASSCODEDataTable)(base.Tables["TRASSCODE"]));
            if ((initTable == true)) {
                if ((this.tableTRASSCODE != null)) {
                    this.tableTRASSCODE.InitVars();
                }
            }
            this.tableTR_INOUT = ((TR_INOUTDataTable)(base.Tables["TR_INOUT"]));
            if ((initTable == true)) {
                if ((this.tableTR_INOUT != null)) {
                    this.tableTR_INOUT.InitVars();
                }
            }
            this.tableTRCOSF = ((TRCOSFDataTable)(base.Tables["TRCOSF"]));
            if ((initTable == true)) {
                if ((this.tableTRCOSF != null)) {
                    this.tableTRCOSF.InitVars();
                }
            }
            this.tableTRCOSC = ((TRCOSCDataTable)(base.Tables["TRCOSC"]));
            if ((initTable == true)) {
                if ((this.tableTRCOSC != null)) {
                    this.tableTRCOSC.InitVars();
                }
            }
            this.tableTRCOSP = ((TRCOSPDataTable)(base.Tables["TRCOSP"]));
            if ((initTable == true)) {
                if ((this.tableTRCOSP != null)) {
                    this.tableTRCOSP.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "traDS1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/traDS1.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("zh-TW");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTRTYPE = new TRTYPEDataTable();
            base.Tables.Add(this.tableTRTYPE);
            this.tableTRCOMP = new TRCOMPDataTable();
            base.Tables.Add(this.tableTRCOMP);
            this.tableTRASSCODE = new TRASSCODEDataTable();
            base.Tables.Add(this.tableTRASSCODE);
            this.tableTR_INOUT = new TR_INOUTDataTable();
            base.Tables.Add(this.tableTR_INOUT);
            this.tableTRCOSF = new TRCOSFDataTable();
            base.Tables.Add(this.tableTRCOSF);
            this.tableTRCOSC = new TRCOSCDataTable();
            base.Tables.Add(this.tableTRCOSC);
            this.tableTRCOSP = new TRCOSPDataTable();
            base.Tables.Add(this.tableTRCOSP);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTRTYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTRCOMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTRASSCODE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTR_INOUT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTRCOSF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTRCOSC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTRCOSP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            traDS1 ds = new traDS1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TRTYPERowChangeEventHandler(object sender, TRTYPERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TRCOMPRowChangeEventHandler(object sender, TRCOMPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TRASSCODERowChangeEventHandler(object sender, TRASSCODERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TR_INOUTRowChangeEventHandler(object sender, TR_INOUTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TRCOSFRowChangeEventHandler(object sender, TRCOSFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TRCOSCRowChangeEventHandler(object sender, TRCOSCRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TRCOSPRowChangeEventHandler(object sender, TRCOSPRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRTYPEDataTable : global::System.Data.TypedTableBase<TRTYPERow> {
            
            private global::System.Data.DataColumn columnTR_TYPE;
            
            private global::System.Data.DataColumn columnTR_TYPE_DISP;
            
            private global::System.Data.DataColumn columnDESCR;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRTYPEDataTable() {
                this.TableName = "TRTYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRTYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TRTYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_TYPEColumn {
                get {
                    return this.columnTR_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_TYPE_DISPColumn {
                get {
                    return this.columnTR_TYPE_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DESCRColumn {
                get {
                    return this.columnDESCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRTYPERow this[int index] {
                get {
                    return ((TRTYPERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRTYPERowChangeEventHandler TRTYPERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRTYPERowChangeEventHandler TRTYPERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRTYPERowChangeEventHandler TRTYPERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRTYPERowChangeEventHandler TRTYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTRTYPERow(TRTYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRTYPERow AddTRTYPERow(string TR_TYPE, string TR_TYPE_DISP, string DESCR, System.DateTime KEY_DATE, string KEY_MAN) {
                TRTYPERow rowTRTYPERow = ((TRTYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TR_TYPE,
                        TR_TYPE_DISP,
                        DESCR,
                        KEY_DATE,
                        KEY_MAN};
                rowTRTYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRTYPERow);
                return rowTRTYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRTYPERow FindByTR_TYPE(string TR_TYPE) {
                return ((TRTYPERow)(this.Rows.Find(new object[] {
                            TR_TYPE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRTYPEDataTable cln = ((TRTYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRTYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTR_TYPE = base.Columns["TR_TYPE"];
                this.columnTR_TYPE_DISP = base.Columns["TR_TYPE_DISP"];
                this.columnDESCR = base.Columns["DESCR"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTR_TYPE = new global::System.Data.DataColumn("TR_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_TYPE);
                this.columnTR_TYPE_DISP = new global::System.Data.DataColumn("TR_TYPE_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_TYPE_DISP);
                this.columnDESCR = new global::System.Data.DataColumn("DESCR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDESCR);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTR_TYPE}, true));
                this.columnTR_TYPE.AllowDBNull = false;
                this.columnTR_TYPE.Unique = true;
                this.columnTR_TYPE.Caption = "課程類別代碼";
                this.columnTR_TYPE.MaxLength = 50;
                this.columnTR_TYPE_DISP.Caption = "課程類別代碼";
                this.columnTR_TYPE_DISP.MaxLength = 50;
                this.columnDESCR.Caption = "課程類別名稱";
                this.columnDESCR.MaxLength = 50;
                this.columnKEY_DATE.Caption = "建檔日期";
                this.columnKEY_MAN.Caption = "建檔人員";
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRTYPERow NewTRTYPERow() {
                return ((TRTYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRTYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRTYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRTYPERowChanged != null)) {
                    this.TRTYPERowChanged(this, new TRTYPERowChangeEvent(((TRTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRTYPERowChanging != null)) {
                    this.TRTYPERowChanging(this, new TRTYPERowChangeEvent(((TRTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRTYPERowDeleted != null)) {
                    this.TRTYPERowDeleted(this, new TRTYPERowChangeEvent(((TRTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRTYPERowDeleting != null)) {
                    this.TRTYPERowDeleting(this, new TRTYPERowChangeEvent(((TRTYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTRTYPERow(TRTYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                traDS1 ds = new traDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRTYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRCOMPDataTable : global::System.Data.TypedTableBase<TRCOMPRow> {
            
            private global::System.Data.DataColumn columnTR_COMP;
            
            private global::System.Data.DataColumn columnTR_COMP_DISP;
            
            private global::System.Data.DataColumn columnTR_COMP_NAME;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOMPDataTable() {
                this.TableName = "TRCOMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TRCOMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_COMPColumn {
                get {
                    return this.columnTR_COMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_COMP_DISPColumn {
                get {
                    return this.columnTR_COMP_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_COMP_NAMEColumn {
                get {
                    return this.columnTR_COMP_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOMPRow this[int index] {
                get {
                    return ((TRCOMPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOMPRowChangeEventHandler TRCOMPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOMPRowChangeEventHandler TRCOMPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOMPRowChangeEventHandler TRCOMPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOMPRowChangeEventHandler TRCOMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTRCOMPRow(TRCOMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOMPRow AddTRCOMPRow(string TR_COMP, string TR_COMP_DISP, string TR_COMP_NAME, string TEL, System.DateTime KEY_DATE, string KEY_MAN) {
                TRCOMPRow rowTRCOMPRow = ((TRCOMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TR_COMP,
                        TR_COMP_DISP,
                        TR_COMP_NAME,
                        TEL,
                        KEY_DATE,
                        KEY_MAN};
                rowTRCOMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRCOMPRow);
                return rowTRCOMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOMPRow FindByTR_COMP(string TR_COMP) {
                return ((TRCOMPRow)(this.Rows.Find(new object[] {
                            TR_COMP})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRCOMPDataTable cln = ((TRCOMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRCOMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTR_COMP = base.Columns["TR_COMP"];
                this.columnTR_COMP_DISP = base.Columns["TR_COMP_DISP"];
                this.columnTR_COMP_NAME = base.Columns["TR_COMP_NAME"];
                this.columnTEL = base.Columns["TEL"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTR_COMP = new global::System.Data.DataColumn("TR_COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_COMP);
                this.columnTR_COMP_DISP = new global::System.Data.DataColumn("TR_COMP_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_COMP_DISP);
                this.columnTR_COMP_NAME = new global::System.Data.DataColumn("TR_COMP_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_COMP_NAME);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTR_COMP}, true));
                this.columnTR_COMP.AllowDBNull = false;
                this.columnTR_COMP.Unique = true;
                this.columnTR_COMP.Caption = "承辦單位代碼";
                this.columnTR_COMP.MaxLength = 50;
                this.columnTR_COMP_DISP.AllowDBNull = false;
                this.columnTR_COMP_DISP.Caption = "承辦單位代碼";
                this.columnTR_COMP_DISP.MaxLength = 50;
                this.columnTR_COMP_NAME.AllowDBNull = false;
                this.columnTR_COMP_NAME.Caption = "承辦單位";
                this.columnTR_COMP_NAME.MaxLength = 50;
                this.columnTEL.Caption = "聯絡電話";
                this.columnTEL.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "建檔日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "建檔人員";
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOMPRow NewTRCOMPRow() {
                return ((TRCOMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRCOMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRCOMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRCOMPRowChanged != null)) {
                    this.TRCOMPRowChanged(this, new TRCOMPRowChangeEvent(((TRCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRCOMPRowChanging != null)) {
                    this.TRCOMPRowChanging(this, new TRCOMPRowChangeEvent(((TRCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRCOMPRowDeleted != null)) {
                    this.TRCOMPRowDeleted(this, new TRCOMPRowChangeEvent(((TRCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRCOMPRowDeleting != null)) {
                    this.TRCOMPRowDeleting(this, new TRCOMPRowChangeEvent(((TRCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTRCOMPRow(TRCOMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                traDS1 ds = new traDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRCOMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRASSCODEDataTable : global::System.Data.TypedTableBase<TRASSCODERow> {
            
            private global::System.Data.DataColumn columnTR_ASNO;
            
            private global::System.Data.DataColumn columnTR_ASNO_DISP;
            
            private global::System.Data.DataColumn columnTR_ASNAME;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRASSCODEDataTable() {
                this.TableName = "TRASSCODE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRASSCODEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TRASSCODEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ASNOColumn {
                get {
                    return this.columnTR_ASNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ASNO_DISPColumn {
                get {
                    return this.columnTR_ASNO_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ASNAMEColumn {
                get {
                    return this.columnTR_ASNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRASSCODERow this[int index] {
                get {
                    return ((TRASSCODERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRASSCODERowChangeEventHandler TRASSCODERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRASSCODERowChangeEventHandler TRASSCODERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRASSCODERowChangeEventHandler TRASSCODERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRASSCODERowChangeEventHandler TRASSCODERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTRASSCODERow(TRASSCODERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRASSCODERow AddTRASSCODERow(string TR_ASNO, string TR_ASNO_DISP, string TR_ASNAME, string TEL, System.DateTime KEY_DATE, string KEY_MAN) {
                TRASSCODERow rowTRASSCODERow = ((TRASSCODERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        TR_ASNO,
                        TR_ASNO_DISP,
                        TR_ASNAME,
                        TEL,
                        KEY_DATE,
                        KEY_MAN};
                rowTRASSCODERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRASSCODERow);
                return rowTRASSCODERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRASSCODERow FindByTR_ASNO(string TR_ASNO) {
                return ((TRASSCODERow)(this.Rows.Find(new object[] {
                            TR_ASNO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRASSCODEDataTable cln = ((TRASSCODEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRASSCODEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnTR_ASNO = base.Columns["TR_ASNO"];
                this.columnTR_ASNO_DISP = base.Columns["TR_ASNO_DISP"];
                this.columnTR_ASNAME = base.Columns["TR_ASNAME"];
                this.columnTEL = base.Columns["TEL"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnTR_ASNO = new global::System.Data.DataColumn("TR_ASNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ASNO);
                this.columnTR_ASNO_DISP = new global::System.Data.DataColumn("TR_ASNO_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ASNO_DISP);
                this.columnTR_ASNAME = new global::System.Data.DataColumn("TR_ASNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ASNAME);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTR_ASNO}, true));
                this.columnTR_ASNO.AllowDBNull = false;
                this.columnTR_ASNO.Unique = true;
                this.columnTR_ASNO.Caption = "課程評估代碼";
                this.columnTR_ASNO.MaxLength = 50;
                this.columnTR_ASNO_DISP.Caption = "課程評估代碼";
                this.columnTR_ASNO_DISP.MaxLength = 50;
                this.columnTR_ASNAME.Caption = "課程評估名稱";
                this.columnTR_ASNAME.MaxLength = 50;
                this.columnTEL.Caption = "聯絡電話";
                this.columnTEL.MaxLength = 50;
                this.columnKEY_DATE.Caption = "建檔日期";
                this.columnKEY_MAN.Caption = "建檔人員";
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRASSCODERow NewTRASSCODERow() {
                return ((TRASSCODERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRASSCODERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRASSCODERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRASSCODERowChanged != null)) {
                    this.TRASSCODERowChanged(this, new TRASSCODERowChangeEvent(((TRASSCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRASSCODERowChanging != null)) {
                    this.TRASSCODERowChanging(this, new TRASSCODERowChangeEvent(((TRASSCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRASSCODERowDeleted != null)) {
                    this.TRASSCODERowDeleted(this, new TRASSCODERowChangeEvent(((TRASSCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRASSCODERowDeleting != null)) {
                    this.TRASSCODERowDeleting(this, new TRASSCODERowChangeEvent(((TRASSCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTRASSCODERow(TRASSCODERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                traDS1 ds = new traDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRASSCODEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TR_INOUTDataTable : global::System.Data.TypedTableBase<TR_INOUTRow> {
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TR_INOUTDataTable() {
                this.TableName = "TR_INOUT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TR_INOUTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TR_INOUTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TR_INOUTRow this[int index] {
                get {
                    return ((TR_INOUTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TR_INOUTRowChangeEventHandler TR_INOUTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TR_INOUTRowChangeEventHandler TR_INOUTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TR_INOUTRowChangeEventHandler TR_INOUTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TR_INOUTRowChangeEventHandler TR_INOUTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTR_INOUTRow(TR_INOUTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TR_INOUTRow AddTR_INOUTRow(string CODE, string NAME) {
                TR_INOUTRow rowTR_INOUTRow = ((TR_INOUTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODE,
                        NAME};
                rowTR_INOUTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTR_INOUTRow);
                return rowTR_INOUTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TR_INOUTDataTable cln = ((TR_INOUTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TR_INOUTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCODE = base.Columns["CODE"];
                this.columnNAME = base.Columns["NAME"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TR_INOUTRow NewTR_INOUTRow() {
                return ((TR_INOUTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TR_INOUTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TR_INOUTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TR_INOUTRowChanged != null)) {
                    this.TR_INOUTRowChanged(this, new TR_INOUTRowChangeEvent(((TR_INOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TR_INOUTRowChanging != null)) {
                    this.TR_INOUTRowChanging(this, new TR_INOUTRowChangeEvent(((TR_INOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TR_INOUTRowDeleted != null)) {
                    this.TR_INOUTRowDeleted(this, new TR_INOUTRowChangeEvent(((TR_INOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TR_INOUTRowDeleting != null)) {
                    this.TR_INOUTRowDeleting(this, new TR_INOUTRowChangeEvent(((TR_INOUTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTR_INOUTRow(TR_INOUTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                traDS1 ds = new traDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TR_INOUTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRCOSFDataTable : global::System.Data.TypedTableBase<TRCOSFRow> {
            
            private global::System.Data.DataColumn columnAUTO;
            
            private global::System.Data.DataColumn columnCOURSE;
            
            private global::System.Data.DataColumn columnDATE_B;
            
            private global::System.Data.DataColumn columnDATE_E;
            
            private global::System.Data.DataColumn columnCOS_FEE;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnTR_COMP;
            
            private global::System.Data.DataColumn columnTR_HRS;
            
            private global::System.Data.DataColumn columnABORAD;
            
            private global::System.Data.DataColumn columnCLOSE_;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnCOUNTRY;
            
            private global::System.Data.DataColumn columnAT_HRS;
            
            private global::System.Data.DataColumn columnTR_TYPE;
            
            private global::System.Data.DataColumn columnTR_MEMO;
            
            private global::System.Data.DataColumn columnPROVE;
            
            private global::System.Data.DataColumn columnTR_REPO;
            
            private global::System.Data.DataColumn columnTR_ASDATE;
            
            private global::System.Data.DataColumn columnTR_ASNO;
            
            private global::System.Data.DataColumn columnAPPLYNO;
            
            private global::System.Data.DataColumn columnHANDOUT;
            
            private global::System.Data.DataColumn columnRECEIVER;
            
            private global::System.Data.DataColumn columnPLANIN;
            
            private global::System.Data.DataColumn columnPLANTO;
            
            private global::System.Data.DataColumn columnTR_PERSON;
            
            private global::System.Data.DataColumn columnTR_ISO;
            
            private global::System.Data.DataColumn columnTR_INOUT;
            
            private global::System.Data.DataColumn columnTR_TEACH;
            
            private global::System.Data.DataColumn columnCOSCODE;
            
            private global::System.Data.DataColumn columnKAVL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSFDataTable() {
                this.TableName = "TRCOSF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOSFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TRCOSFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOColumn {
                get {
                    return this.columnAUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COURSEColumn {
                get {
                    return this.columnCOURSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_BColumn {
                get {
                    return this.columnDATE_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_EColumn {
                get {
                    return this.columnDATE_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COS_FEEColumn {
                get {
                    return this.columnCOS_FEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_COMPColumn {
                get {
                    return this.columnTR_COMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_HRSColumn {
                get {
                    return this.columnTR_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ABORADColumn {
                get {
                    return this.columnABORAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLOSE_Column {
                get {
                    return this.columnCLOSE_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COUNTRYColumn {
                get {
                    return this.columnCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AT_HRSColumn {
                get {
                    return this.columnAT_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_TYPEColumn {
                get {
                    return this.columnTR_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_MEMOColumn {
                get {
                    return this.columnTR_MEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROVEColumn {
                get {
                    return this.columnPROVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_REPOColumn {
                get {
                    return this.columnTR_REPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ASDATEColumn {
                get {
                    return this.columnTR_ASDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ASNOColumn {
                get {
                    return this.columnTR_ASNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APPLYNOColumn {
                get {
                    return this.columnAPPLYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HANDOUTColumn {
                get {
                    return this.columnHANDOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECEIVERColumn {
                get {
                    return this.columnRECEIVER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLANINColumn {
                get {
                    return this.columnPLANIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLANTOColumn {
                get {
                    return this.columnPLANTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_PERSONColumn {
                get {
                    return this.columnTR_PERSON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ISOColumn {
                get {
                    return this.columnTR_ISO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_INOUTColumn {
                get {
                    return this.columnTR_INOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_TEACHColumn {
                get {
                    return this.columnTR_TEACH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COSCODEColumn {
                get {
                    return this.columnCOSCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KAVLColumn {
                get {
                    return this.columnKAVL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSFRow this[int index] {
                get {
                    return ((TRCOSFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSFRowChangeEventHandler TRCOSFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSFRowChangeEventHandler TRCOSFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSFRowChangeEventHandler TRCOSFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSFRowChangeEventHandler TRCOSFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTRCOSFRow(TRCOSFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSFRow AddTRCOSFRow(
                        string COURSE, 
                        System.DateTime DATE_B, 
                        System.DateTime DATE_E, 
                        decimal COS_FEE, 
                        string NOBR, 
                        string TR_COMP, 
                        decimal TR_HRS, 
                        bool ABORAD, 
                        bool CLOSE_, 
                        System.DateTime KEY_DATE, 
                        string KEY_MAN, 
                        string COUNTRY, 
                        decimal AT_HRS, 
                        string TR_TYPE, 
                        string TR_MEMO, 
                        string PROVE, 
                        bool TR_REPO, 
                        System.DateTime TR_ASDATE, 
                        string TR_ASNO, 
                        string APPLYNO, 
                        string HANDOUT, 
                        string RECEIVER, 
                        bool PLANIN, 
                        bool PLANTO, 
                        string TR_PERSON, 
                        string TR_ISO, 
                        string TR_INOUT, 
                        string TR_TEACH, 
                        string COSCODE, 
                        string KAVL) {
                TRCOSFRow rowTRCOSFRow = ((TRCOSFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        COURSE,
                        DATE_B,
                        DATE_E,
                        COS_FEE,
                        NOBR,
                        TR_COMP,
                        TR_HRS,
                        ABORAD,
                        CLOSE_,
                        KEY_DATE,
                        KEY_MAN,
                        COUNTRY,
                        AT_HRS,
                        TR_TYPE,
                        TR_MEMO,
                        PROVE,
                        TR_REPO,
                        TR_ASDATE,
                        TR_ASNO,
                        APPLYNO,
                        HANDOUT,
                        RECEIVER,
                        PLANIN,
                        PLANTO,
                        TR_PERSON,
                        TR_ISO,
                        TR_INOUT,
                        TR_TEACH,
                        COSCODE,
                        KAVL};
                rowTRCOSFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRCOSFRow);
                return rowTRCOSFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSFRow FindByAUTO(int AUTO) {
                return ((TRCOSFRow)(this.Rows.Find(new object[] {
                            AUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRCOSFDataTable cln = ((TRCOSFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRCOSFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAUTO = base.Columns["AUTO"];
                this.columnCOURSE = base.Columns["COURSE"];
                this.columnDATE_B = base.Columns["DATE_B"];
                this.columnDATE_E = base.Columns["DATE_E"];
                this.columnCOS_FEE = base.Columns["COS_FEE"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnTR_COMP = base.Columns["TR_COMP"];
                this.columnTR_HRS = base.Columns["TR_HRS"];
                this.columnABORAD = base.Columns["ABORAD"];
                this.columnCLOSE_ = base.Columns["CLOSE_"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnCOUNTRY = base.Columns["COUNTRY"];
                this.columnAT_HRS = base.Columns["AT_HRS"];
                this.columnTR_TYPE = base.Columns["TR_TYPE"];
                this.columnTR_MEMO = base.Columns["TR_MEMO"];
                this.columnPROVE = base.Columns["PROVE"];
                this.columnTR_REPO = base.Columns["TR_REPO"];
                this.columnTR_ASDATE = base.Columns["TR_ASDATE"];
                this.columnTR_ASNO = base.Columns["TR_ASNO"];
                this.columnAPPLYNO = base.Columns["APPLYNO"];
                this.columnHANDOUT = base.Columns["HANDOUT"];
                this.columnRECEIVER = base.Columns["RECEIVER"];
                this.columnPLANIN = base.Columns["PLANIN"];
                this.columnPLANTO = base.Columns["PLANTO"];
                this.columnTR_PERSON = base.Columns["TR_PERSON"];
                this.columnTR_ISO = base.Columns["TR_ISO"];
                this.columnTR_INOUT = base.Columns["TR_INOUT"];
                this.columnTR_TEACH = base.Columns["TR_TEACH"];
                this.columnCOSCODE = base.Columns["COSCODE"];
                this.columnKAVL = base.Columns["KAVL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAUTO = new global::System.Data.DataColumn("AUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO);
                this.columnCOURSE = new global::System.Data.DataColumn("COURSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOURSE);
                this.columnDATE_B = new global::System.Data.DataColumn("DATE_B", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_B);
                this.columnDATE_E = new global::System.Data.DataColumn("DATE_E", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_E);
                this.columnCOS_FEE = new global::System.Data.DataColumn("COS_FEE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOS_FEE);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnTR_COMP = new global::System.Data.DataColumn("TR_COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_COMP);
                this.columnTR_HRS = new global::System.Data.DataColumn("TR_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_HRS);
                this.columnABORAD = new global::System.Data.DataColumn("ABORAD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABORAD);
                this.columnCLOSE_ = new global::System.Data.DataColumn("CLOSE_", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLOSE_);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnCOUNTRY = new global::System.Data.DataColumn("COUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTRY);
                this.columnAT_HRS = new global::System.Data.DataColumn("AT_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAT_HRS);
                this.columnTR_TYPE = new global::System.Data.DataColumn("TR_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_TYPE);
                this.columnTR_MEMO = new global::System.Data.DataColumn("TR_MEMO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_MEMO);
                this.columnPROVE = new global::System.Data.DataColumn("PROVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROVE);
                this.columnTR_REPO = new global::System.Data.DataColumn("TR_REPO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_REPO);
                this.columnTR_ASDATE = new global::System.Data.DataColumn("TR_ASDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ASDATE);
                this.columnTR_ASNO = new global::System.Data.DataColumn("TR_ASNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ASNO);
                this.columnAPPLYNO = new global::System.Data.DataColumn("APPLYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLYNO);
                this.columnHANDOUT = new global::System.Data.DataColumn("HANDOUT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHANDOUT);
                this.columnRECEIVER = new global::System.Data.DataColumn("RECEIVER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVER);
                this.columnPLANIN = new global::System.Data.DataColumn("PLANIN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANIN);
                this.columnPLANTO = new global::System.Data.DataColumn("PLANTO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANTO);
                this.columnTR_PERSON = new global::System.Data.DataColumn("TR_PERSON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_PERSON);
                this.columnTR_ISO = new global::System.Data.DataColumn("TR_ISO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ISO);
                this.columnTR_INOUT = new global::System.Data.DataColumn("TR_INOUT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_INOUT);
                this.columnTR_TEACH = new global::System.Data.DataColumn("TR_TEACH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_TEACH);
                this.columnCOSCODE = new global::System.Data.DataColumn("COSCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOSCODE);
                this.columnKAVL = new global::System.Data.DataColumn("KAVL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKAVL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTO}, true));
                this.columnAUTO.AutoIncrement = true;
                this.columnAUTO.AutoIncrementSeed = -1;
                this.columnAUTO.AutoIncrementStep = -1;
                this.columnAUTO.AllowDBNull = false;
                this.columnAUTO.Unique = true;
                this.columnCOURSE.AllowDBNull = false;
                this.columnCOURSE.Caption = "課程名稱";
                this.columnCOURSE.MaxLength = 50;
                this.columnDATE_B.AllowDBNull = false;
                this.columnDATE_B.Caption = "開訓日期";
                this.columnDATE_E.AllowDBNull = false;
                this.columnDATE_E.Caption = "結訓日期";
                this.columnCOS_FEE.AllowDBNull = false;
                this.columnCOS_FEE.Caption = "上課費用";
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工代號";
                this.columnNOBR.MaxLength = 50;
                this.columnTR_COMP.AllowDBNull = false;
                this.columnTR_COMP.Caption = "承辦單位";
                this.columnTR_COMP.MaxLength = 60;
                this.columnTR_HRS.AllowDBNull = false;
                this.columnTR_HRS.Caption = "總時數";
                this.columnABORAD.AllowDBNull = false;
                this.columnABORAD.Caption = "國外";
                this.columnCLOSE_.AllowDBNull = false;
                this.columnCLOSE_.Caption = "結訓";
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "建檔日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "建檔人員";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnCOUNTRY.AllowDBNull = false;
                this.columnCOUNTRY.Caption = "國家";
                this.columnCOUNTRY.MaxLength = 50;
                this.columnAT_HRS.AllowDBNull = false;
                this.columnAT_HRS.Caption = "缺課時數";
                this.columnTR_TYPE.AllowDBNull = false;
                this.columnTR_TYPE.Caption = "課程類別";
                this.columnTR_TYPE.MaxLength = 50;
                this.columnTR_MEMO.AllowDBNull = false;
                this.columnTR_MEMO.Caption = "備註";
                this.columnTR_MEMO.MaxLength = 200;
                this.columnPROVE.AllowDBNull = false;
                this.columnPROVE.Caption = "取得證照";
                this.columnPROVE.MaxLength = 50;
                this.columnTR_REPO.AllowDBNull = false;
                this.columnTR_REPO.Caption = "完成評核";
                this.columnTR_ASDATE.Caption = "完成評核日";
                this.columnTR_ASNO.AllowDBNull = false;
                this.columnTR_ASNO.Caption = "評核方式";
                this.columnTR_ASNO.MaxLength = 50;
                this.columnAPPLYNO.AllowDBNull = false;
                this.columnAPPLYNO.Caption = "申請編號";
                this.columnAPPLYNO.MaxLength = 50;
                this.columnHANDOUT.AllowDBNull = false;
                this.columnHANDOUT.Caption = "講義";
                this.columnHANDOUT.MaxLength = 50;
                this.columnRECEIVER.AllowDBNull = false;
                this.columnRECEIVER.Caption = "收據";
                this.columnRECEIVER.MaxLength = 50;
                this.columnPLANIN.AllowDBNull = false;
                this.columnPLANIN.Caption = "計劃內";
                this.columnPLANTO.AllowDBNull = false;
                this.columnPLANTO.Caption = "課後問卷";
                this.columnTR_PERSON.AllowDBNull = false;
                this.columnTR_PERSON.Caption = "訓練對象";
                this.columnTR_PERSON.MaxLength = 60;
                this.columnTR_ISO.AllowDBNull = false;
                this.columnTR_ISO.Caption = "ISO";
                this.columnTR_ISO.MaxLength = 60;
                this.columnTR_INOUT.AllowDBNull = false;
                this.columnTR_INOUT.Caption = "訓練型式";
                this.columnTR_INOUT.MaxLength = 50;
                this.columnTR_TEACH.AllowDBNull = false;
                this.columnTR_TEACH.Caption = "講師";
                this.columnTR_TEACH.MaxLength = 50;
                this.columnCOSCODE.MaxLength = 50;
                this.columnKAVL.Caption = "合格否";
                this.columnKAVL.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSFRow NewTRCOSFRow() {
                return ((TRCOSFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRCOSFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRCOSFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRCOSFRowChanged != null)) {
                    this.TRCOSFRowChanged(this, new TRCOSFRowChangeEvent(((TRCOSFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRCOSFRowChanging != null)) {
                    this.TRCOSFRowChanging(this, new TRCOSFRowChangeEvent(((TRCOSFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRCOSFRowDeleted != null)) {
                    this.TRCOSFRowDeleted(this, new TRCOSFRowChangeEvent(((TRCOSFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRCOSFRowDeleting != null)) {
                    this.TRCOSFRowDeleting(this, new TRCOSFRowChangeEvent(((TRCOSFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTRCOSFRow(TRCOSFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                traDS1 ds = new traDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRCOSFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRCOSCDataTable : global::System.Data.TypedTableBase<TRCOSCRow> {
            
            private global::System.Data.DataColumn columnGUID;
            
            private global::System.Data.DataColumn columnCOURSE;
            
            private global::System.Data.DataColumn columnDATE_B;
            
            private global::System.Data.DataColumn columnDATE_E;
            
            private global::System.Data.DataColumn columnCOS_FEE;
            
            private global::System.Data.DataColumn columnTR_COMP;
            
            private global::System.Data.DataColumn columnTR_HRS;
            
            private global::System.Data.DataColumn columnABORAD;
            
            private global::System.Data.DataColumn columnCOUNTRY;
            
            private global::System.Data.DataColumn columnTR_DEPT;
            
            private global::System.Data.DataColumn columnTR_TYPE;
            
            private global::System.Data.DataColumn columnTR_MEMO;
            
            private global::System.Data.DataColumn columnTR_ASNO;
            
            private global::System.Data.DataColumn columnHANDOUT;
            
            private global::System.Data.DataColumn columnPLANIN;
            
            private global::System.Data.DataColumn columnPLANTO;
            
            private global::System.Data.DataColumn columnTR_PERSON;
            
            private global::System.Data.DataColumn columnTR_ISO;
            
            private global::System.Data.DataColumn columnTR_INOUT;
            
            private global::System.Data.DataColumn columnTR_TEACH;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSCDataTable() {
                this.TableName = "TRCOSC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOSCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TRCOSCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GUIDColumn {
                get {
                    return this.columnGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COURSEColumn {
                get {
                    return this.columnCOURSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_BColumn {
                get {
                    return this.columnDATE_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DATE_EColumn {
                get {
                    return this.columnDATE_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COS_FEEColumn {
                get {
                    return this.columnCOS_FEE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_COMPColumn {
                get {
                    return this.columnTR_COMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_HRSColumn {
                get {
                    return this.columnTR_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ABORADColumn {
                get {
                    return this.columnABORAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COUNTRYColumn {
                get {
                    return this.columnCOUNTRY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_DEPTColumn {
                get {
                    return this.columnTR_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_TYPEColumn {
                get {
                    return this.columnTR_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_MEMOColumn {
                get {
                    return this.columnTR_MEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ASNOColumn {
                get {
                    return this.columnTR_ASNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HANDOUTColumn {
                get {
                    return this.columnHANDOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLANINColumn {
                get {
                    return this.columnPLANIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PLANTOColumn {
                get {
                    return this.columnPLANTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_PERSONColumn {
                get {
                    return this.columnTR_PERSON;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ISOColumn {
                get {
                    return this.columnTR_ISO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_INOUTColumn {
                get {
                    return this.columnTR_INOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_TEACHColumn {
                get {
                    return this.columnTR_TEACH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSCRow this[int index] {
                get {
                    return ((TRCOSCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSCRowChangeEventHandler TRCOSCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSCRowChangeEventHandler TRCOSCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSCRowChangeEventHandler TRCOSCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSCRowChangeEventHandler TRCOSCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTRCOSCRow(TRCOSCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSCRow AddTRCOSCRow(
                        string GUID, 
                        string COURSE, 
                        System.DateTime DATE_B, 
                        System.DateTime DATE_E, 
                        decimal COS_FEE, 
                        string TR_COMP, 
                        decimal TR_HRS, 
                        bool ABORAD, 
                        string COUNTRY, 
                        string TR_DEPT, 
                        string TR_TYPE, 
                        string TR_MEMO, 
                        string TR_ASNO, 
                        string HANDOUT, 
                        bool PLANIN, 
                        bool PLANTO, 
                        string TR_PERSON, 
                        string TR_ISO, 
                        string TR_INOUT, 
                        string TR_TEACH, 
                        System.DateTime KEY_DATE, 
                        string KEY_MAN, 
                        string CODE) {
                TRCOSCRow rowTRCOSCRow = ((TRCOSCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        GUID,
                        COURSE,
                        DATE_B,
                        DATE_E,
                        COS_FEE,
                        TR_COMP,
                        TR_HRS,
                        ABORAD,
                        COUNTRY,
                        TR_DEPT,
                        TR_TYPE,
                        TR_MEMO,
                        TR_ASNO,
                        HANDOUT,
                        PLANIN,
                        PLANTO,
                        TR_PERSON,
                        TR_ISO,
                        TR_INOUT,
                        TR_TEACH,
                        KEY_DATE,
                        KEY_MAN,
                        CODE};
                rowTRCOSCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRCOSCRow);
                return rowTRCOSCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSCRow FindByGUID(string GUID) {
                return ((TRCOSCRow)(this.Rows.Find(new object[] {
                            GUID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRCOSCDataTable cln = ((TRCOSCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRCOSCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnGUID = base.Columns["GUID"];
                this.columnCOURSE = base.Columns["COURSE"];
                this.columnDATE_B = base.Columns["DATE_B"];
                this.columnDATE_E = base.Columns["DATE_E"];
                this.columnCOS_FEE = base.Columns["COS_FEE"];
                this.columnTR_COMP = base.Columns["TR_COMP"];
                this.columnTR_HRS = base.Columns["TR_HRS"];
                this.columnABORAD = base.Columns["ABORAD"];
                this.columnCOUNTRY = base.Columns["COUNTRY"];
                this.columnTR_DEPT = base.Columns["TR_DEPT"];
                this.columnTR_TYPE = base.Columns["TR_TYPE"];
                this.columnTR_MEMO = base.Columns["TR_MEMO"];
                this.columnTR_ASNO = base.Columns["TR_ASNO"];
                this.columnHANDOUT = base.Columns["HANDOUT"];
                this.columnPLANIN = base.Columns["PLANIN"];
                this.columnPLANTO = base.Columns["PLANTO"];
                this.columnTR_PERSON = base.Columns["TR_PERSON"];
                this.columnTR_ISO = base.Columns["TR_ISO"];
                this.columnTR_INOUT = base.Columns["TR_INOUT"];
                this.columnTR_TEACH = base.Columns["TR_TEACH"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnCODE = base.Columns["CODE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnGUID = new global::System.Data.DataColumn("GUID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGUID);
                this.columnCOURSE = new global::System.Data.DataColumn("COURSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOURSE);
                this.columnDATE_B = new global::System.Data.DataColumn("DATE_B", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_B);
                this.columnDATE_E = new global::System.Data.DataColumn("DATE_E", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDATE_E);
                this.columnCOS_FEE = new global::System.Data.DataColumn("COS_FEE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOS_FEE);
                this.columnTR_COMP = new global::System.Data.DataColumn("TR_COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_COMP);
                this.columnTR_HRS = new global::System.Data.DataColumn("TR_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_HRS);
                this.columnABORAD = new global::System.Data.DataColumn("ABORAD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABORAD);
                this.columnCOUNTRY = new global::System.Data.DataColumn("COUNTRY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNTRY);
                this.columnTR_DEPT = new global::System.Data.DataColumn("TR_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_DEPT);
                this.columnTR_TYPE = new global::System.Data.DataColumn("TR_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_TYPE);
                this.columnTR_MEMO = new global::System.Data.DataColumn("TR_MEMO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_MEMO);
                this.columnTR_ASNO = new global::System.Data.DataColumn("TR_ASNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ASNO);
                this.columnHANDOUT = new global::System.Data.DataColumn("HANDOUT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHANDOUT);
                this.columnPLANIN = new global::System.Data.DataColumn("PLANIN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANIN);
                this.columnPLANTO = new global::System.Data.DataColumn("PLANTO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLANTO);
                this.columnTR_PERSON = new global::System.Data.DataColumn("TR_PERSON", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_PERSON);
                this.columnTR_ISO = new global::System.Data.DataColumn("TR_ISO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ISO);
                this.columnTR_INOUT = new global::System.Data.DataColumn("TR_INOUT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_INOUT);
                this.columnTR_TEACH = new global::System.Data.DataColumn("TR_TEACH", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_TEACH);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnGUID}, true));
                this.columnGUID.AllowDBNull = false;
                this.columnGUID.Unique = true;
                this.columnCOURSE.AllowDBNull = false;
                this.columnCOURSE.Caption = "課程名稱";
                this.columnCOURSE.MaxLength = 50;
                this.columnDATE_B.AllowDBNull = false;
                this.columnDATE_B.Caption = "開訓日期";
                this.columnDATE_E.AllowDBNull = false;
                this.columnDATE_E.Caption = "結訓日期";
                this.columnCOS_FEE.AllowDBNull = false;
                this.columnCOS_FEE.Caption = "上課費用";
                this.columnTR_COMP.AllowDBNull = false;
                this.columnTR_COMP.Caption = "承辦單位";
                this.columnTR_COMP.MaxLength = 60;
                this.columnTR_HRS.AllowDBNull = false;
                this.columnTR_HRS.Caption = "總時數";
                this.columnABORAD.AllowDBNull = false;
                this.columnABORAD.Caption = "國外";
                this.columnCOUNTRY.AllowDBNull = false;
                this.columnCOUNTRY.Caption = "國家";
                this.columnCOUNTRY.MaxLength = 50;
                this.columnTR_DEPT.AllowDBNull = false;
                this.columnTR_DEPT.Caption = "開課部門";
                this.columnTR_DEPT.MaxLength = 50;
                this.columnTR_TYPE.AllowDBNull = false;
                this.columnTR_TYPE.Caption = "課程類別";
                this.columnTR_TYPE.MaxLength = 50;
                this.columnTR_MEMO.AllowDBNull = false;
                this.columnTR_MEMO.Caption = "備註";
                this.columnTR_MEMO.MaxLength = 200;
                this.columnTR_ASNO.AllowDBNull = false;
                this.columnTR_ASNO.Caption = "評核方式";
                this.columnTR_ASNO.MaxLength = 50;
                this.columnHANDOUT.AllowDBNull = false;
                this.columnHANDOUT.Caption = "講義";
                this.columnHANDOUT.MaxLength = 50;
                this.columnPLANIN.AllowDBNull = false;
                this.columnPLANIN.Caption = "計劃內";
                this.columnPLANTO.AllowDBNull = false;
                this.columnPLANTO.Caption = "課後問卷";
                this.columnTR_PERSON.AllowDBNull = false;
                this.columnTR_PERSON.Caption = "訓練對象";
                this.columnTR_PERSON.MaxLength = 60;
                this.columnTR_ISO.AllowDBNull = false;
                this.columnTR_ISO.Caption = "ISO";
                this.columnTR_ISO.MaxLength = 60;
                this.columnTR_INOUT.AllowDBNull = false;
                this.columnTR_INOUT.Caption = "訓練型式";
                this.columnTR_INOUT.MaxLength = 50;
                this.columnTR_TEACH.AllowDBNull = false;
                this.columnTR_TEACH.Caption = "講師";
                this.columnTR_TEACH.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "建立日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "建立者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.Caption = "課程代碼";
                this.columnCODE.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSCRow NewTRCOSCRow() {
                return ((TRCOSCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRCOSCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRCOSCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRCOSCRowChanged != null)) {
                    this.TRCOSCRowChanged(this, new TRCOSCRowChangeEvent(((TRCOSCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRCOSCRowChanging != null)) {
                    this.TRCOSCRowChanging(this, new TRCOSCRowChangeEvent(((TRCOSCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRCOSCRowDeleted != null)) {
                    this.TRCOSCRowDeleted(this, new TRCOSCRowChangeEvent(((TRCOSCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRCOSCRowDeleting != null)) {
                    this.TRCOSCRowDeleting(this, new TRCOSCRowChangeEvent(((TRCOSCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTRCOSCRow(TRCOSCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                traDS1 ds = new traDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRCOSCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TRCOSPDataTable : global::System.Data.TypedTableBase<TRCOSPRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnCLOSE_;
            
            private global::System.Data.DataColumn columnAT_HRS;
            
            private global::System.Data.DataColumn columnTR_MEMO;
            
            private global::System.Data.DataColumn columnPROVE;
            
            private global::System.Data.DataColumn columnTR_REPO;
            
            private global::System.Data.DataColumn columnTR_ASDATE;
            
            private global::System.Data.DataColumn columnAPPLYNO;
            
            private global::System.Data.DataColumn columnRECEIVER;
            
            private global::System.Data.DataColumn columnKAVL;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnCOURSE;
            
            private global::System.Data.DataColumn columnAUTO;
            
            private global::System.Data.DataColumn columnST_HRS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSPDataTable() {
                this.TableName = "TRCOSP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOSPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TRCOSPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CLOSE_Column {
                get {
                    return this.columnCLOSE_;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AT_HRSColumn {
                get {
                    return this.columnAT_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_MEMOColumn {
                get {
                    return this.columnTR_MEMO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PROVEColumn {
                get {
                    return this.columnPROVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_REPOColumn {
                get {
                    return this.columnTR_REPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TR_ASDATEColumn {
                get {
                    return this.columnTR_ASDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APPLYNOColumn {
                get {
                    return this.columnAPPLYNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RECEIVERColumn {
                get {
                    return this.columnRECEIVER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KAVLColumn {
                get {
                    return this.columnKAVL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COURSEColumn {
                get {
                    return this.columnCOURSE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOColumn {
                get {
                    return this.columnAUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ST_HRSColumn {
                get {
                    return this.columnST_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSPRow this[int index] {
                get {
                    return ((TRCOSPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSPRowChangeEventHandler TRCOSPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSPRowChangeEventHandler TRCOSPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSPRowChangeEventHandler TRCOSPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TRCOSPRowChangeEventHandler TRCOSPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTRCOSPRow(TRCOSPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSPRow AddTRCOSPRow(string NOBR, bool CLOSE_, decimal AT_HRS, string TR_MEMO, string PROVE, bool TR_REPO, System.DateTime TR_ASDATE, string APPLYNO, string RECEIVER, string KAVL, System.DateTime KEY_DATE, string KEY_MAN, string COURSE, decimal ST_HRS) {
                TRCOSPRow rowTRCOSPRow = ((TRCOSPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        CLOSE_,
                        AT_HRS,
                        TR_MEMO,
                        PROVE,
                        TR_REPO,
                        TR_ASDATE,
                        APPLYNO,
                        RECEIVER,
                        KAVL,
                        KEY_DATE,
                        KEY_MAN,
                        COURSE,
                        null,
                        ST_HRS};
                rowTRCOSPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTRCOSPRow);
                return rowTRCOSPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSPRow FindByAUTO(int AUTO) {
                return ((TRCOSPRow)(this.Rows.Find(new object[] {
                            AUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TRCOSPDataTable cln = ((TRCOSPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TRCOSPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnCLOSE_ = base.Columns["CLOSE_"];
                this.columnAT_HRS = base.Columns["AT_HRS"];
                this.columnTR_MEMO = base.Columns["TR_MEMO"];
                this.columnPROVE = base.Columns["PROVE"];
                this.columnTR_REPO = base.Columns["TR_REPO"];
                this.columnTR_ASDATE = base.Columns["TR_ASDATE"];
                this.columnAPPLYNO = base.Columns["APPLYNO"];
                this.columnRECEIVER = base.Columns["RECEIVER"];
                this.columnKAVL = base.Columns["KAVL"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnCOURSE = base.Columns["COURSE"];
                this.columnAUTO = base.Columns["AUTO"];
                this.columnST_HRS = base.Columns["ST_HRS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnCLOSE_ = new global::System.Data.DataColumn("CLOSE_", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCLOSE_);
                this.columnAT_HRS = new global::System.Data.DataColumn("AT_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAT_HRS);
                this.columnTR_MEMO = new global::System.Data.DataColumn("TR_MEMO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_MEMO);
                this.columnPROVE = new global::System.Data.DataColumn("PROVE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROVE);
                this.columnTR_REPO = new global::System.Data.DataColumn("TR_REPO", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_REPO);
                this.columnTR_ASDATE = new global::System.Data.DataColumn("TR_ASDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTR_ASDATE);
                this.columnAPPLYNO = new global::System.Data.DataColumn("APPLYNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPPLYNO);
                this.columnRECEIVER = new global::System.Data.DataColumn("RECEIVER", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRECEIVER);
                this.columnKAVL = new global::System.Data.DataColumn("KAVL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKAVL);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnCOURSE = new global::System.Data.DataColumn("COURSE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOURSE);
                this.columnAUTO = new global::System.Data.DataColumn("AUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO);
                this.columnST_HRS = new global::System.Data.DataColumn("ST_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnST_HRS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTO}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工代號";
                this.columnNOBR.MaxLength = 50;
                this.columnCLOSE_.AllowDBNull = false;
                this.columnCLOSE_.Caption = "結訓";
                this.columnAT_HRS.AllowDBNull = false;
                this.columnAT_HRS.Caption = "缺課時數";
                this.columnTR_MEMO.AllowDBNull = false;
                this.columnTR_MEMO.Caption = "備註";
                this.columnTR_MEMO.MaxLength = 200;
                this.columnPROVE.AllowDBNull = false;
                this.columnPROVE.Caption = "取得證照";
                this.columnPROVE.MaxLength = 50;
                this.columnTR_REPO.AllowDBNull = false;
                this.columnTR_REPO.Caption = "完成評核";
                this.columnTR_ASDATE.Caption = "完成評核日";
                this.columnAPPLYNO.AllowDBNull = false;
                this.columnAPPLYNO.Caption = "申請編號";
                this.columnAPPLYNO.MaxLength = 50;
                this.columnRECEIVER.AllowDBNull = false;
                this.columnRECEIVER.Caption = "收據";
                this.columnRECEIVER.MaxLength = 50;
                this.columnKAVL.Caption = "合格否";
                this.columnKAVL.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "建立日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "建立者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnCOURSE.AllowDBNull = false;
                this.columnCOURSE.MaxLength = 50;
                this.columnAUTO.AutoIncrement = true;
                this.columnAUTO.AutoIncrementSeed = -1;
                this.columnAUTO.AutoIncrementStep = -1;
                this.columnAUTO.AllowDBNull = false;
                this.columnAUTO.ReadOnly = true;
                this.columnAUTO.Unique = true;
                this.columnST_HRS.Caption = "已訓時數";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSPRow NewTRCOSPRow() {
                return ((TRCOSPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TRCOSPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TRCOSPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TRCOSPRowChanged != null)) {
                    this.TRCOSPRowChanged(this, new TRCOSPRowChangeEvent(((TRCOSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TRCOSPRowChanging != null)) {
                    this.TRCOSPRowChanging(this, new TRCOSPRowChangeEvent(((TRCOSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TRCOSPRowDeleted != null)) {
                    this.TRCOSPRowDeleted(this, new TRCOSPRowChangeEvent(((TRCOSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TRCOSPRowDeleting != null)) {
                    this.TRCOSPRowDeleting(this, new TRCOSPRowChangeEvent(((TRCOSPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTRCOSPRow(TRCOSPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                traDS1 ds = new traDS1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TRCOSPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRTYPERow : global::System.Data.DataRow {
            
            private TRTYPEDataTable tableTRTYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRTYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRTYPE = ((TRTYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_TYPE {
                get {
                    return ((string)(this[this.tableTRTYPE.TR_TYPEColumn]));
                }
                set {
                    this[this.tableTRTYPE.TR_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_TYPE_DISP {
                get {
                    try {
                        return ((string)(this[this.tableTRTYPE.TR_TYPE_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRTYPE\' 中資料行 \'TR_TYPE_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRTYPE.TR_TYPE_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DESCR {
                get {
                    try {
                        return ((string)(this[this.tableTRTYPE.DESCRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRTYPE\' 中資料行 \'DESCR\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRTYPE.DESCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRTYPE.KEY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRTYPE\' 中資料行 \'KEY_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRTYPE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    try {
                        return ((string)(this[this.tableTRTYPE.KEY_MANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRTYPE\' 中資料行 \'KEY_MAN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRTYPE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTR_TYPE_DISPNull() {
                return this.IsNull(this.tableTRTYPE.TR_TYPE_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTR_TYPE_DISPNull() {
                this[this.tableTRTYPE.TR_TYPE_DISPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDESCRNull() {
                return this.IsNull(this.tableTRTYPE.DESCRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDESCRNull() {
                this[this.tableTRTYPE.DESCRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKEY_DATENull() {
                return this.IsNull(this.tableTRTYPE.KEY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKEY_DATENull() {
                this[this.tableTRTYPE.KEY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKEY_MANNull() {
                return this.IsNull(this.tableTRTYPE.KEY_MANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKEY_MANNull() {
                this[this.tableTRTYPE.KEY_MANColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRCOMPRow : global::System.Data.DataRow {
            
            private TRCOMPDataTable tableTRCOMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRCOMP = ((TRCOMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_COMP {
                get {
                    return ((string)(this[this.tableTRCOMP.TR_COMPColumn]));
                }
                set {
                    this[this.tableTRCOMP.TR_COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_COMP_DISP {
                get {
                    return ((string)(this[this.tableTRCOMP.TR_COMP_DISPColumn]));
                }
                set {
                    this[this.tableTRCOMP.TR_COMP_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_COMP_NAME {
                get {
                    return ((string)(this[this.tableTRCOMP.TR_COMP_NAMEColumn]));
                }
                set {
                    this[this.tableTRCOMP.TR_COMP_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEL {
                get {
                    try {
                        return ((string)(this[this.tableTRCOMP.TELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRCOMP\' 中資料行 \'TEL\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRCOMP.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOMP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableTRCOMP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableTRCOMP.KEY_MANColumn]));
                }
                set {
                    this[this.tableTRCOMP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTELNull() {
                return this.IsNull(this.tableTRCOMP.TELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTELNull() {
                this[this.tableTRCOMP.TELColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRASSCODERow : global::System.Data.DataRow {
            
            private TRASSCODEDataTable tableTRASSCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRASSCODERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRASSCODE = ((TRASSCODEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_ASNO {
                get {
                    return ((string)(this[this.tableTRASSCODE.TR_ASNOColumn]));
                }
                set {
                    this[this.tableTRASSCODE.TR_ASNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_ASNO_DISP {
                get {
                    try {
                        return ((string)(this[this.tableTRASSCODE.TR_ASNO_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRASSCODE\' 中資料行 \'TR_ASNO_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRASSCODE.TR_ASNO_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_ASNAME {
                get {
                    try {
                        return ((string)(this[this.tableTRASSCODE.TR_ASNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRASSCODE\' 中資料行 \'TR_ASNAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRASSCODE.TR_ASNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEL {
                get {
                    try {
                        return ((string)(this[this.tableTRASSCODE.TELColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRASSCODE\' 中資料行 \'TEL\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRASSCODE.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRASSCODE.KEY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRASSCODE\' 中資料行 \'KEY_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRASSCODE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    try {
                        return ((string)(this[this.tableTRASSCODE.KEY_MANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRASSCODE\' 中資料行 \'KEY_MAN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRASSCODE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTR_ASNO_DISPNull() {
                return this.IsNull(this.tableTRASSCODE.TR_ASNO_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTR_ASNO_DISPNull() {
                this[this.tableTRASSCODE.TR_ASNO_DISPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTR_ASNAMENull() {
                return this.IsNull(this.tableTRASSCODE.TR_ASNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTR_ASNAMENull() {
                this[this.tableTRASSCODE.TR_ASNAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTELNull() {
                return this.IsNull(this.tableTRASSCODE.TELColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTELNull() {
                this[this.tableTRASSCODE.TELColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKEY_DATENull() {
                return this.IsNull(this.tableTRASSCODE.KEY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKEY_DATENull() {
                this[this.tableTRASSCODE.KEY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKEY_MANNull() {
                return this.IsNull(this.tableTRASSCODE.KEY_MANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKEY_MANNull() {
                this[this.tableTRASSCODE.KEY_MANColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TR_INOUTRow : global::System.Data.DataRow {
            
            private TR_INOUTDataTable tableTR_INOUT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TR_INOUTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTR_INOUT = ((TR_INOUTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableTR_INOUT.CODEColumn]));
                }
                set {
                    this[this.tableTR_INOUT.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableTR_INOUT.NAMEColumn]));
                }
                set {
                    this[this.tableTR_INOUT.NAMEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRCOSFRow : global::System.Data.DataRow {
            
            private TRCOSFDataTable tableTRCOSF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOSFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRCOSF = ((TRCOSFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AUTO {
                get {
                    return ((int)(this[this.tableTRCOSF.AUTOColumn]));
                }
                set {
                    this[this.tableTRCOSF.AUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COURSE {
                get {
                    return ((string)(this[this.tableTRCOSF.COURSEColumn]));
                }
                set {
                    this[this.tableTRCOSF.COURSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_B {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOSF.DATE_BColumn]));
                }
                set {
                    this[this.tableTRCOSF.DATE_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_E {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOSF.DATE_EColumn]));
                }
                set {
                    this[this.tableTRCOSF.DATE_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal COS_FEE {
                get {
                    return ((decimal)(this[this.tableTRCOSF.COS_FEEColumn]));
                }
                set {
                    this[this.tableTRCOSF.COS_FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableTRCOSF.NOBRColumn]));
                }
                set {
                    this[this.tableTRCOSF.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_COMP {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_COMPColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TR_HRS {
                get {
                    return ((decimal)(this[this.tableTRCOSF.TR_HRSColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ABORAD {
                get {
                    return ((bool)(this[this.tableTRCOSF.ABORADColumn]));
                }
                set {
                    this[this.tableTRCOSF.ABORADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CLOSE_ {
                get {
                    return ((bool)(this[this.tableTRCOSF.CLOSE_Column]));
                }
                set {
                    this[this.tableTRCOSF.CLOSE_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOSF.KEY_DATEColumn]));
                }
                set {
                    this[this.tableTRCOSF.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableTRCOSF.KEY_MANColumn]));
                }
                set {
                    this[this.tableTRCOSF.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COUNTRY {
                get {
                    return ((string)(this[this.tableTRCOSF.COUNTRYColumn]));
                }
                set {
                    this[this.tableTRCOSF.COUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AT_HRS {
                get {
                    return ((decimal)(this[this.tableTRCOSF.AT_HRSColumn]));
                }
                set {
                    this[this.tableTRCOSF.AT_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_TYPE {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_TYPEColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_MEMO {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_MEMOColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_MEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PROVE {
                get {
                    return ((string)(this[this.tableTRCOSF.PROVEColumn]));
                }
                set {
                    this[this.tableTRCOSF.PROVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TR_REPO {
                get {
                    return ((bool)(this[this.tableTRCOSF.TR_REPOColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_REPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TR_ASDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRCOSF.TR_ASDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRCOSF\' 中資料行 \'TR_ASDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRCOSF.TR_ASDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_ASNO {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_ASNOColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_ASNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APPLYNO {
                get {
                    return ((string)(this[this.tableTRCOSF.APPLYNOColumn]));
                }
                set {
                    this[this.tableTRCOSF.APPLYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HANDOUT {
                get {
                    return ((string)(this[this.tableTRCOSF.HANDOUTColumn]));
                }
                set {
                    this[this.tableTRCOSF.HANDOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RECEIVER {
                get {
                    return ((string)(this[this.tableTRCOSF.RECEIVERColumn]));
                }
                set {
                    this[this.tableTRCOSF.RECEIVERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PLANIN {
                get {
                    return ((bool)(this[this.tableTRCOSF.PLANINColumn]));
                }
                set {
                    this[this.tableTRCOSF.PLANINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PLANTO {
                get {
                    return ((bool)(this[this.tableTRCOSF.PLANTOColumn]));
                }
                set {
                    this[this.tableTRCOSF.PLANTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_PERSON {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_PERSONColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_PERSONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_ISO {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_ISOColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_ISOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_INOUT {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_INOUTColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_INOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_TEACH {
                get {
                    return ((string)(this[this.tableTRCOSF.TR_TEACHColumn]));
                }
                set {
                    this[this.tableTRCOSF.TR_TEACHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COSCODE {
                get {
                    try {
                        return ((string)(this[this.tableTRCOSF.COSCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRCOSF\' 中資料行 \'COSCODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRCOSF.COSCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KAVL {
                get {
                    try {
                        return ((string)(this[this.tableTRCOSF.KAVLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRCOSF\' 中資料行 \'KAVL\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRCOSF.KAVLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTR_ASDATENull() {
                return this.IsNull(this.tableTRCOSF.TR_ASDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTR_ASDATENull() {
                this[this.tableTRCOSF.TR_ASDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOSCODENull() {
                return this.IsNull(this.tableTRCOSF.COSCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOSCODENull() {
                this[this.tableTRCOSF.COSCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKAVLNull() {
                return this.IsNull(this.tableTRCOSF.KAVLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKAVLNull() {
                this[this.tableTRCOSF.KAVLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRCOSCRow : global::System.Data.DataRow {
            
            private TRCOSCDataTable tableTRCOSC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOSCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRCOSC = ((TRCOSCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GUID {
                get {
                    return ((string)(this[this.tableTRCOSC.GUIDColumn]));
                }
                set {
                    this[this.tableTRCOSC.GUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COURSE {
                get {
                    return ((string)(this[this.tableTRCOSC.COURSEColumn]));
                }
                set {
                    this[this.tableTRCOSC.COURSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_B {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOSC.DATE_BColumn]));
                }
                set {
                    this[this.tableTRCOSC.DATE_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DATE_E {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOSC.DATE_EColumn]));
                }
                set {
                    this[this.tableTRCOSC.DATE_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal COS_FEE {
                get {
                    return ((decimal)(this[this.tableTRCOSC.COS_FEEColumn]));
                }
                set {
                    this[this.tableTRCOSC.COS_FEEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_COMP {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_COMPColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TR_HRS {
                get {
                    return ((decimal)(this[this.tableTRCOSC.TR_HRSColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ABORAD {
                get {
                    return ((bool)(this[this.tableTRCOSC.ABORADColumn]));
                }
                set {
                    this[this.tableTRCOSC.ABORADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COUNTRY {
                get {
                    return ((string)(this[this.tableTRCOSC.COUNTRYColumn]));
                }
                set {
                    this[this.tableTRCOSC.COUNTRYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_DEPT {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_DEPTColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_TYPE {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_TYPEColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_MEMO {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_MEMOColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_MEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_ASNO {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_ASNOColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_ASNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HANDOUT {
                get {
                    return ((string)(this[this.tableTRCOSC.HANDOUTColumn]));
                }
                set {
                    this[this.tableTRCOSC.HANDOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PLANIN {
                get {
                    return ((bool)(this[this.tableTRCOSC.PLANINColumn]));
                }
                set {
                    this[this.tableTRCOSC.PLANINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool PLANTO {
                get {
                    return ((bool)(this[this.tableTRCOSC.PLANTOColumn]));
                }
                set {
                    this[this.tableTRCOSC.PLANTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_PERSON {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_PERSONColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_PERSONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_ISO {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_ISOColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_ISOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_INOUT {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_INOUTColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_INOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_TEACH {
                get {
                    return ((string)(this[this.tableTRCOSC.TR_TEACHColumn]));
                }
                set {
                    this[this.tableTRCOSC.TR_TEACHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOSC.KEY_DATEColumn]));
                }
                set {
                    this[this.tableTRCOSC.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableTRCOSC.KEY_MANColumn]));
                }
                set {
                    this[this.tableTRCOSC.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableTRCOSC.CODEColumn]));
                }
                set {
                    this[this.tableTRCOSC.CODEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TRCOSPRow : global::System.Data.DataRow {
            
            private TRCOSPDataTable tableTRCOSP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TRCOSPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTRCOSP = ((TRCOSPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableTRCOSP.NOBRColumn]));
                }
                set {
                    this[this.tableTRCOSP.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CLOSE_ {
                get {
                    return ((bool)(this[this.tableTRCOSP.CLOSE_Column]));
                }
                set {
                    this[this.tableTRCOSP.CLOSE_Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AT_HRS {
                get {
                    return ((decimal)(this[this.tableTRCOSP.AT_HRSColumn]));
                }
                set {
                    this[this.tableTRCOSP.AT_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TR_MEMO {
                get {
                    return ((string)(this[this.tableTRCOSP.TR_MEMOColumn]));
                }
                set {
                    this[this.tableTRCOSP.TR_MEMOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PROVE {
                get {
                    return ((string)(this[this.tableTRCOSP.PROVEColumn]));
                }
                set {
                    this[this.tableTRCOSP.PROVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TR_REPO {
                get {
                    return ((bool)(this[this.tableTRCOSP.TR_REPOColumn]));
                }
                set {
                    this[this.tableTRCOSP.TR_REPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TR_ASDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTRCOSP.TR_ASDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRCOSP\' 中資料行 \'TR_ASDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRCOSP.TR_ASDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APPLYNO {
                get {
                    return ((string)(this[this.tableTRCOSP.APPLYNOColumn]));
                }
                set {
                    this[this.tableTRCOSP.APPLYNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RECEIVER {
                get {
                    return ((string)(this[this.tableTRCOSP.RECEIVERColumn]));
                }
                set {
                    this[this.tableTRCOSP.RECEIVERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KAVL {
                get {
                    try {
                        return ((string)(this[this.tableTRCOSP.KAVLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRCOSP\' 中資料行 \'KAVL\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRCOSP.KAVLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableTRCOSP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableTRCOSP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableTRCOSP.KEY_MANColumn]));
                }
                set {
                    this[this.tableTRCOSP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COURSE {
                get {
                    return ((string)(this[this.tableTRCOSP.COURSEColumn]));
                }
                set {
                    this[this.tableTRCOSP.COURSEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AUTO {
                get {
                    return ((int)(this[this.tableTRCOSP.AUTOColumn]));
                }
                set {
                    this[this.tableTRCOSP.AUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ST_HRS {
                get {
                    try {
                        return ((decimal)(this[this.tableTRCOSP.ST_HRSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'TRCOSP\' 中資料行 \'ST_HRS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableTRCOSP.ST_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTR_ASDATENull() {
                return this.IsNull(this.tableTRCOSP.TR_ASDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTR_ASDATENull() {
                this[this.tableTRCOSP.TR_ASDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKAVLNull() {
                return this.IsNull(this.tableTRCOSP.KAVLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKAVLNull() {
                this[this.tableTRCOSP.KAVLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsST_HRSNull() {
                return this.IsNull(this.tableTRCOSP.ST_HRSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetST_HRSNull() {
                this[this.tableTRCOSP.ST_HRSColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TRTYPERowChangeEvent : global::System.EventArgs {
            
            private TRTYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRTYPERowChangeEvent(TRTYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRTYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TRCOMPRowChangeEvent : global::System.EventArgs {
            
            private TRCOMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOMPRowChangeEvent(TRCOMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TRASSCODERowChangeEvent : global::System.EventArgs {
            
            private TRASSCODERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRASSCODERowChangeEvent(TRASSCODERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRASSCODERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TR_INOUTRowChangeEvent : global::System.EventArgs {
            
            private TR_INOUTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TR_INOUTRowChangeEvent(TR_INOUTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TR_INOUTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TRCOSFRowChangeEvent : global::System.EventArgs {
            
            private TRCOSFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSFRowChangeEvent(TRCOSFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TRCOSCRowChangeEvent : global::System.EventArgs {
            
            private TRCOSCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSCRowChangeEvent(TRCOSCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TRCOSPRowChangeEvent : global::System.EventArgs {
            
            private TRCOSPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSPRowChangeEvent(TRCOSPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TRCOSPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JBHR.TRA.traDS1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRTYPETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRTYPETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRTYPE";
            tableMapping.ColumnMappings.Add("TR_TYPE", "TR_TYPE");
            tableMapping.ColumnMappings.Add("TR_TYPE_DISP", "TR_TYPE_DISP");
            tableMapping.ColumnMappings.Add("DESCR", "DESCR");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TRTYPE] WHERE (([TR_TYPE] = @Original_TR_TYPE) AND ((@IsNull_TR_TYPE_DISP = 1 AND [TR_TYPE_DISP] IS NULL) OR ([TR_TYPE_DISP] = @Original_TR_TYPE_DISP)) AND ((@IsNull_DESCR = 1 AND [DESCR] IS NULL) OR ([DESCR] = @Original_DESCR)) AND ((@IsNull_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_MAN)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_TYPE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TRTYPE] ([TR_TYPE], [TR_TYPE_DISP], [DESCR], [KEY_DATE], [KEY_" +
                "MAN]) VALUES (@TR_TYPE, @TR_TYPE_DISP, @DESCR, @KEY_DATE, @KEY_MAN);\r\nSELECT TR_" +
                "TYPE, TR_TYPE_DISP, DESCR, KEY_DATE, KEY_MAN FROM TRTYPE WHERE (TR_TYPE = @TR_TY" +
                "PE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TRTYPE] SET [TR_TYPE] = @TR_TYPE, [TR_TYPE_DISP] = @TR_TYPE_DISP, [DESCR] = @DESCR, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([TR_TYPE] = @Original_TR_TYPE) AND ((@IsNull_TR_TYPE_DISP = 1 AND [TR_TYPE_DISP] IS NULL) OR ([TR_TYPE_DISP] = @Original_TR_TYPE_DISP)) AND ((@IsNull_DESCR = 1 AND [DESCR] IS NULL) OR ([DESCR] = @Original_DESCR)) AND ((@IsNull_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_MAN)));
SELECT TR_TYPE, TR_TYPE_DISP, DESCR, KEY_DATE, KEY_MAN FROM TRTYPE WHERE (TR_TYPE = @TR_TYPE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_TYPE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DESCR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DESCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TR_TYPE, TR_TYPE_DISP, DESCR, KEY_DATE, KEY_MAN FROM dbo.TRTYPE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(traDS1.TRTYPEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual traDS1.TRTYPEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            traDS1.TRTYPEDataTable dataTable = new traDS1.TRTYPEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1.TRTYPEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1 dataSet) {
            return this.Adapter.Update(dataSet, "TRTYPE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TR_TYPE, string Original_TR_TYPE_DISP, string Original_DESCR, global::System.Nullable<global::System.DateTime> Original_KEY_DATE, string Original_KEY_MAN) {
            if ((Original_TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TR_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TR_TYPE));
            }
            if ((Original_TR_TYPE_DISP == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TR_TYPE_DISP));
            }
            if ((Original_DESCR == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DESCR));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TR_TYPE, string TR_TYPE_DISP, string DESCR, global::System.Nullable<global::System.DateTime> KEY_DATE, string KEY_MAN) {
            if ((TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("TR_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TR_TYPE));
            }
            if ((TR_TYPE_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TR_TYPE_DISP));
            }
            if ((DESCR == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(DESCR));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TR_TYPE, string TR_TYPE_DISP, string DESCR, global::System.Nullable<global::System.DateTime> KEY_DATE, string KEY_MAN, string Original_TR_TYPE, string Original_TR_TYPE_DISP, string Original_DESCR, global::System.Nullable<global::System.DateTime> Original_KEY_DATE, string Original_KEY_MAN) {
            if ((TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("TR_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TR_TYPE));
            }
            if ((TR_TYPE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TR_TYPE_DISP));
            }
            if ((DESCR == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(DESCR));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            if ((Original_TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TR_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_TR_TYPE));
            }
            if ((Original_TR_TYPE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_TR_TYPE_DISP));
            }
            if ((Original_DESCR == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_DESCR));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TR_TYPE_DISP, string DESCR, global::System.Nullable<global::System.DateTime> KEY_DATE, string KEY_MAN, string Original_TR_TYPE, string Original_TR_TYPE_DISP, string Original_DESCR, global::System.Nullable<global::System.DateTime> Original_KEY_DATE, string Original_KEY_MAN) {
            return this.Update(Original_TR_TYPE, TR_TYPE_DISP, DESCR, KEY_DATE, KEY_MAN, Original_TR_TYPE, Original_TR_TYPE_DISP, Original_DESCR, Original_KEY_DATE, Original_KEY_MAN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRCOMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRCOMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRCOMP";
            tableMapping.ColumnMappings.Add("TR_COMP", "TR_COMP");
            tableMapping.ColumnMappings.Add("TR_COMP_DISP", "TR_COMP_DISP");
            tableMapping.ColumnMappings.Add("TR_COMP_NAME", "TR_COMP_NAME");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TRCOMPY] WHERE (([TR_COMP] = @Original_TR_COMP) AND ([TR_COMP_DISP] = @Original_TR_COMP_DISP) AND ([TR_COMP_NAME] = @Original_TR_COMP_NAME) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TRCOMPY] ([TR_COMP], [TR_COMP_DISP], [TR_COMP_NAME], [TEL], [KEY_DAT" +
                "E], [KEY_MAN]) VALUES (@TR_COMP, @TR_COMP_DISP, @TR_COMP_NAME, @TEL, @KEY_DATE, " +
                "@KEY_MAN)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TRCOMPY] SET [TR_COMP] = @TR_COMP, [TR_COMP_DISP] = @TR_COMP_DISP, [TR_COMP_NAME] = @TR_COMP_NAME, [TEL] = @TEL, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([TR_COMP] = @Original_TR_COMP) AND ([TR_COMP_DISP] = @Original_TR_COMP_DISP) AND ([TR_COMP_NAME] = @Original_TR_COMP_NAME) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          TR_COMP, TR_COMP_DISP, TR_COMP_NAME, TEL, KEY_DATE, KEY_MAN\r\nFROM" +
                "              TRCOMPY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(traDS1.TRCOMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual traDS1.TRCOMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            traDS1.TRCOMPDataTable dataTable = new traDS1.TRCOMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1.TRCOMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1 dataSet) {
            return this.Adapter.Update(dataSet, "TRCOMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TR_COMP, string Original_TR_COMP_DISP, string Original_TR_COMP_NAME, string Original_TEL, System.DateTime Original_KEY_DATE, string Original_KEY_MAN) {
            if ((Original_TR_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TR_COMP));
            }
            if ((Original_TR_COMP_DISP == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP_DISP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TR_COMP_DISP));
            }
            if ((Original_TR_COMP_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TR_COMP_NAME));
            }
            if ((Original_TEL == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TEL));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TR_COMP, string TR_COMP_DISP, string TR_COMP_NAME, string TEL, System.DateTime KEY_DATE, string KEY_MAN) {
            if ((TR_COMP == null)) {
                throw new global::System.ArgumentNullException("TR_COMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TR_COMP));
            }
            if ((TR_COMP_DISP == null)) {
                throw new global::System.ArgumentNullException("TR_COMP_DISP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TR_COMP_DISP));
            }
            if ((TR_COMP_NAME == null)) {
                throw new global::System.ArgumentNullException("TR_COMP_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TR_COMP_NAME));
            }
            if ((TEL == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TEL));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TR_COMP, string TR_COMP_DISP, string TR_COMP_NAME, string TEL, System.DateTime KEY_DATE, string KEY_MAN, string Original_TR_COMP, string Original_TR_COMP_DISP, string Original_TR_COMP_NAME, string Original_TEL, System.DateTime Original_KEY_DATE, string Original_KEY_MAN) {
            if ((TR_COMP == null)) {
                throw new global::System.ArgumentNullException("TR_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TR_COMP));
            }
            if ((TR_COMP_DISP == null)) {
                throw new global::System.ArgumentNullException("TR_COMP_DISP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TR_COMP_DISP));
            }
            if ((TR_COMP_NAME == null)) {
                throw new global::System.ArgumentNullException("TR_COMP_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TR_COMP_NAME));
            }
            if ((TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TEL));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((Original_TR_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TR_COMP));
            }
            if ((Original_TR_COMP_DISP == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP_DISP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_TR_COMP_DISP));
            }
            if ((Original_TR_COMP_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TR_COMP_NAME));
            }
            if ((Original_TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TEL));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TR_COMP_DISP, string TR_COMP_NAME, string TEL, System.DateTime KEY_DATE, string KEY_MAN, string Original_TR_COMP, string Original_TR_COMP_DISP, string Original_TR_COMP_NAME, string Original_TEL, System.DateTime Original_KEY_DATE, string Original_KEY_MAN) {
            return this.Update(Original_TR_COMP, TR_COMP_DISP, TR_COMP_NAME, TEL, KEY_DATE, KEY_MAN, Original_TR_COMP, Original_TR_COMP_DISP, Original_TR_COMP_NAME, Original_TEL, Original_KEY_DATE, Original_KEY_MAN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRASSCODETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRASSCODETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRASSCODE";
            tableMapping.ColumnMappings.Add("TR_ASNO", "TR_ASNO");
            tableMapping.ColumnMappings.Add("TR_ASNO_DISP", "TR_ASNO_DISP");
            tableMapping.ColumnMappings.Add("TR_ASNAME", "TR_ASNAME");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TRASSCODE] WHERE (([TR_ASNO] = @Original_TR_ASNO) AND ((@IsNull_TR_ASNO_DISP = 1 AND [TR_ASNO_DISP] IS NULL) OR ([TR_ASNO_DISP] = @Original_TR_ASNO_DISP)) AND ((@IsNull_TR_ASNAME = 1 AND [TR_ASNAME] IS NULL) OR ([TR_ASNAME] = @Original_TR_ASNAME)) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)) AND ((@IsNull_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_MAN)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASNO_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TRASSCODE] ([TR_ASNO], [TR_ASNO_DISP], [TR_ASNAME], [TEL], [KEY_DATE], [KEY_MAN]) VALUES (@TR_ASNO, @TR_ASNO_DISP, @TR_ASNAME, @TEL, @KEY_DATE, @KEY_MAN);
SELECT TR_ASNO, TR_ASNO_DISP, TR_ASNAME, TEL, KEY_DATE, KEY_MAN FROM TRASSCODE WHERE (TR_ASNO = @TR_ASNO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TRASSCODE] SET [TR_ASNO] = @TR_ASNO, [TR_ASNO_DISP] = @TR_ASNO_DISP, [TR_ASNAME] = @TR_ASNAME, [TEL] = @TEL, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([TR_ASNO] = @Original_TR_ASNO) AND ((@IsNull_TR_ASNO_DISP = 1 AND [TR_ASNO_DISP] IS NULL) OR ([TR_ASNO_DISP] = @Original_TR_ASNO_DISP)) AND ((@IsNull_TR_ASNAME = 1 AND [TR_ASNAME] IS NULL) OR ([TR_ASNAME] = @Original_TR_ASNAME)) AND ((@IsNull_TEL = 1 AND [TEL] IS NULL) OR ([TEL] = @Original_TEL)) AND ((@IsNull_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_MAN)));
SELECT TR_ASNO, TR_ASNO_DISP, TR_ASNAME, TEL, KEY_DATE, KEY_MAN FROM TRASSCODE WHERE (TR_ASNO = @TR_ASNO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASNO_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASNAME", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNAME", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TEL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT TR_ASNO, TR_ASNO_DISP, TR_ASNAME, TEL, KEY_DATE, KEY_MAN FROM dbo.TRASSCOD" +
                "E";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(traDS1.TRASSCODEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual traDS1.TRASSCODEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            traDS1.TRASSCODEDataTable dataTable = new traDS1.TRASSCODEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1.TRASSCODEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1 dataSet) {
            return this.Adapter.Update(dataSet, "TRASSCODE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_TR_ASNO, string Original_TR_ASNO_DISP, string Original_TR_ASNAME, string Original_TEL, global::System.Nullable<global::System.DateTime> Original_KEY_DATE, string Original_KEY_MAN) {
            if ((Original_TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_ASNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_TR_ASNO));
            }
            if ((Original_TR_ASNO_DISP == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TR_ASNO_DISP));
            }
            if ((Original_TR_ASNAME == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TR_ASNAME));
            }
            if ((Original_TEL == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TEL));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TR_ASNO, string TR_ASNO_DISP, string TR_ASNAME, string TEL, global::System.Nullable<global::System.DateTime> KEY_DATE, string KEY_MAN) {
            if ((TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("TR_ASNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TR_ASNO));
            }
            if ((TR_ASNO_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(TR_ASNO_DISP));
            }
            if ((TR_ASNAME == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TR_ASNAME));
            }
            if ((TEL == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TEL));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TR_ASNO, string TR_ASNO_DISP, string TR_ASNAME, string TEL, global::System.Nullable<global::System.DateTime> KEY_DATE, string KEY_MAN, string Original_TR_ASNO, string Original_TR_ASNO_DISP, string Original_TR_ASNAME, string Original_TEL, global::System.Nullable<global::System.DateTime> Original_KEY_DATE, string Original_KEY_MAN) {
            if ((TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("TR_ASNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TR_ASNO));
            }
            if ((TR_ASNO_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(TR_ASNO_DISP));
            }
            if ((TR_ASNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TR_ASNAME));
            }
            if ((TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TEL));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((Original_TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_ASNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_TR_ASNO));
            }
            if ((Original_TR_ASNO_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_TR_ASNO_DISP));
            }
            if ((Original_TR_ASNAME == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_TR_ASNAME));
            }
            if ((Original_TEL == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_TEL));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TR_ASNO_DISP, string TR_ASNAME, string TEL, global::System.Nullable<global::System.DateTime> KEY_DATE, string KEY_MAN, string Original_TR_ASNO, string Original_TR_ASNO_DISP, string Original_TR_ASNAME, string Original_TEL, global::System.Nullable<global::System.DateTime> Original_KEY_DATE, string Original_KEY_MAN) {
            return this.Update(Original_TR_ASNO, TR_ASNO_DISP, TR_ASNAME, TEL, KEY_DATE, KEY_MAN, Original_TR_ASNO, Original_TR_ASNO_DISP, Original_TR_ASNAME, Original_TEL, Original_KEY_DATE, Original_KEY_MAN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TR_INOUTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TR_INOUTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TR_INOUT";
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          CODE, NAME\r\nFROM              MTCODE\r\nWHERE          (CATEGORY = " +
                "\'TR_INOUT\')";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(traDS1.TR_INOUTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual traDS1.TR_INOUTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            traDS1.TR_INOUTDataTable dataTable = new traDS1.TR_INOUTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRCOSFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRCOSFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRCOSF";
            tableMapping.ColumnMappings.Add("AUTO", "AUTO");
            tableMapping.ColumnMappings.Add("COURSE", "COURSE");
            tableMapping.ColumnMappings.Add("DATE_B", "DATE_B");
            tableMapping.ColumnMappings.Add("DATE_E", "DATE_E");
            tableMapping.ColumnMappings.Add("COS_FEE", "COS_FEE");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("TR_COMP", "TR_COMP");
            tableMapping.ColumnMappings.Add("TR_HRS", "TR_HRS");
            tableMapping.ColumnMappings.Add("ABORAD", "ABORAD");
            tableMapping.ColumnMappings.Add("CLOSE_", "CLOSE_");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("COUNTRY", "COUNTRY");
            tableMapping.ColumnMappings.Add("AT_HRS", "AT_HRS");
            tableMapping.ColumnMappings.Add("TR_TYPE", "TR_TYPE");
            tableMapping.ColumnMappings.Add("TR_MEMO", "TR_MEMO");
            tableMapping.ColumnMappings.Add("PROVE", "PROVE");
            tableMapping.ColumnMappings.Add("TR_REPO", "TR_REPO");
            tableMapping.ColumnMappings.Add("TR_ASDATE", "TR_ASDATE");
            tableMapping.ColumnMappings.Add("TR_ASNO", "TR_ASNO");
            tableMapping.ColumnMappings.Add("APPLYNO", "APPLYNO");
            tableMapping.ColumnMappings.Add("HANDOUT", "HANDOUT");
            tableMapping.ColumnMappings.Add("RECEIVER", "RECEIVER");
            tableMapping.ColumnMappings.Add("PLANIN", "PLANIN");
            tableMapping.ColumnMappings.Add("PLANTO", "PLANTO");
            tableMapping.ColumnMappings.Add("TR_PERSON", "TR_PERSON");
            tableMapping.ColumnMappings.Add("TR_ISO", "TR_ISO");
            tableMapping.ColumnMappings.Add("TR_INOUT", "TR_INOUT");
            tableMapping.ColumnMappings.Add("TR_TEACH", "TR_TEACH");
            tableMapping.ColumnMappings.Add("COSCODE", "COSCODE");
            tableMapping.ColumnMappings.Add("KAVL", "KAVL");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TRCOSF] WHERE (([AUTO] = @Original_AUTO) AND ([COURSE] = @Original_COURSE) AND ([DATE_B] = @Original_DATE_B) AND ([DATE_E] = @Original_DATE_E) AND ([COS_FEE] = @Original_COS_FEE) AND ([NOBR] = @Original_NOBR) AND ([TR_COMP] = @Original_TR_COMP) AND ([TR_HRS] = @Original_TR_HRS) AND ([ABORAD] = @Original_ABORAD) AND ([CLOSE_] = @Original_CLOSE_) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([COUNTRY] = @Original_COUNTRY) AND ([AT_HRS] = @Original_AT_HRS) AND ([TR_TYPE] = @Original_TR_TYPE) AND ([TR_MEMO] = @Original_TR_MEMO) AND ([PROVE] = @Original_PROVE) AND ([TR_REPO] = @Original_TR_REPO) AND ((@IsNull_TR_ASDATE = 1 AND [TR_ASDATE] IS NULL) OR ([TR_ASDATE] = @Original_TR_ASDATE)) AND ([TR_ASNO] = @Original_TR_ASNO) AND ([APPLYNO] = @Original_APPLYNO) AND ([HANDOUT] = @Original_HANDOUT) AND ([RECEIVER] = @Original_RECEIVER) AND ([PLANIN] = @Original_PLANIN) AND ([PLANTO] = @Original_PLANTO) AND ([TR_PERSON] = @Original_TR_PERSON) AND ([TR_ISO] = @Original_TR_ISO) AND ([TR_INOUT] = @Original_TR_INOUT) AND ([TR_TEACH] = @Original_TR_TEACH) AND ((@IsNull_COSCODE = 1 AND [COSCODE] IS NULL) OR ([COSCODE] = @Original_COSCODE)) AND ((@IsNull_KAVL = 1 AND [KAVL] IS NULL) OR ([KAVL] = @Original_KAVL)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COSCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COSCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KAVL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TRCOSF] ([COURSE], [DATE_B], [DATE_E], [COS_FEE], [NOBR], [TR_COMP], [TR_HRS], [ABORAD], [CLOSE_], [KEY_DATE], [KEY_MAN], [COUNTRY], [AT_HRS], [TR_TYPE], [TR_MEMO], [PROVE], [TR_REPO], [TR_ASDATE], [TR_ASNO], [APPLYNO], [HANDOUT], [RECEIVER], [PLANIN], [PLANTO], [TR_PERSON], [TR_ISO], [TR_INOUT], [TR_TEACH], [COSCODE], [KAVL]) VALUES (@COURSE, @DATE_B, @DATE_E, @COS_FEE, @NOBR, @TR_COMP, @TR_HRS, @ABORAD, @CLOSE_, @KEY_DATE, @KEY_MAN, @COUNTRY, @AT_HRS, @TR_TYPE, @TR_MEMO, @PROVE, @TR_REPO, @TR_ASDATE, @TR_ASNO, @APPLYNO, @HANDOUT, @RECEIVER, @PLANIN, @PLANTO, @TR_PERSON, @TR_ISO, @TR_INOUT, @TR_TEACH, @COSCODE, @KAVL);
SELECT AUTO, COURSE, DATE_B, DATE_E, COS_FEE, NOBR, TR_COMP, TR_HRS, ABORAD, CLOSE_, KEY_DATE, KEY_MAN, COUNTRY, AT_HRS, TR_TYPE, TR_MEMO, PROVE, TR_REPO, TR_ASDATE, TR_ASNO, APPLYNO, HANDOUT, RECEIVER, PLANIN, PLANTO, TR_PERSON, TR_ISO, TR_INOUT, TR_TEACH, COSCODE, KAVL FROM TRCOSF WHERE (AUTO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TRCOSF] SET [COURSE] = @COURSE, [DATE_B] = @DATE_B, [DATE_E] = @DATE_E, [" +
                "COS_FEE] = @COS_FEE, [NOBR] = @NOBR, [TR_COMP] = @TR_COMP, [TR_HRS] = @TR_HRS, [" +
                "ABORAD] = @ABORAD, [CLOSE_] = @CLOSE_, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_" +
                "MAN, [COUNTRY] = @COUNTRY, [AT_HRS] = @AT_HRS, [TR_TYPE] = @TR_TYPE, [TR_MEMO] =" +
                " @TR_MEMO, [PROVE] = @PROVE, [TR_REPO] = @TR_REPO, [TR_ASDATE] = @TR_ASDATE, [TR" +
                "_ASNO] = @TR_ASNO, [APPLYNO] = @APPLYNO, [HANDOUT] = @HANDOUT, [RECEIVER] = @REC" +
                "EIVER, [PLANIN] = @PLANIN, [PLANTO] = @PLANTO, [TR_PERSON] = @TR_PERSON, [TR_ISO" +
                "] = @TR_ISO, [TR_INOUT] = @TR_INOUT, [TR_TEACH] = @TR_TEACH, [COSCODE] = @COSCOD" +
                "E, [KAVL] = @KAVL WHERE (([AUTO] = @Original_AUTO) AND ([COURSE] = @Original_COU" +
                "RSE) AND ([DATE_B] = @Original_DATE_B) AND ([DATE_E] = @Original_DATE_E) AND ([C" +
                "OS_FEE] = @Original_COS_FEE) AND ([NOBR] = @Original_NOBR) AND ([TR_COMP] = @Ori" +
                "ginal_TR_COMP) AND ([TR_HRS] = @Original_TR_HRS) AND ([ABORAD] = @Original_ABORA" +
                "D) AND ([CLOSE_] = @Original_CLOSE_) AND ([KEY_DATE] = @Original_KEY_DATE) AND (" +
                "[KEY_MAN] = @Original_KEY_MAN) AND ([COUNTRY] = @Original_COUNTRY) AND ([AT_HRS]" +
                " = @Original_AT_HRS) AND ([TR_TYPE] = @Original_TR_TYPE) AND ([TR_MEMO] = @Origi" +
                "nal_TR_MEMO) AND ([PROVE] = @Original_PROVE) AND ([TR_REPO] = @Original_TR_REPO)" +
                " AND ((@IsNull_TR_ASDATE = 1 AND [TR_ASDATE] IS NULL) OR ([TR_ASDATE] = @Origina" +
                "l_TR_ASDATE)) AND ([TR_ASNO] = @Original_TR_ASNO) AND ([APPLYNO] = @Original_APP" +
                "LYNO) AND ([HANDOUT] = @Original_HANDOUT) AND ([RECEIVER] = @Original_RECEIVER) " +
                "AND ([PLANIN] = @Original_PLANIN) AND ([PLANTO] = @Original_PLANTO) AND ([TR_PER" +
                "SON] = @Original_TR_PERSON) AND ([TR_ISO] = @Original_TR_ISO) AND ([TR_INOUT] = " +
                "@Original_TR_INOUT) AND ([TR_TEACH] = @Original_TR_TEACH) AND ((@IsNull_COSCODE " +
                "= 1 AND [COSCODE] IS NULL) OR ([COSCODE] = @Original_COSCODE)) AND ((@IsNull_KAV" +
                "L = 1 AND [KAVL] IS NULL) OR ([KAVL] = @Original_KAVL)));\r\nSELECT AUTO, COURSE, " +
                "DATE_B, DATE_E, COS_FEE, NOBR, TR_COMP, TR_HRS, ABORAD, CLOSE_, KEY_DATE, KEY_MA" +
                "N, COUNTRY, AT_HRS, TR_TYPE, TR_MEMO, PROVE, TR_REPO, TR_ASDATE, TR_ASNO, APPLYN" +
                "O, HANDOUT, RECEIVER, PLANIN, PLANTO, TR_PERSON, TR_ISO, TR_INOUT, TR_TEACH, COS" +
                "CODE, KAVL FROM TRCOSF WHERE (AUTO = @AUTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COSCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COSCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KAVL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          TRCOSF.*\r\nFROM              TRCOSF";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(traDS1.TRCOSFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual traDS1.TRCOSFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            traDS1.TRCOSFDataTable dataTable = new traDS1.TRCOSFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1.TRCOSFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1 dataSet) {
            return this.Adapter.Update(dataSet, "TRCOSF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_AUTO, 
                    string Original_COURSE, 
                    System.DateTime Original_DATE_B, 
                    System.DateTime Original_DATE_E, 
                    decimal Original_COS_FEE, 
                    string Original_NOBR, 
                    string Original_TR_COMP, 
                    decimal Original_TR_HRS, 
                    bool Original_ABORAD, 
                    bool Original_CLOSE_, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_COUNTRY, 
                    decimal Original_AT_HRS, 
                    string Original_TR_TYPE, 
                    string Original_TR_MEMO, 
                    string Original_PROVE, 
                    bool Original_TR_REPO, 
                    global::System.Nullable<global::System.DateTime> Original_TR_ASDATE, 
                    string Original_TR_ASNO, 
                    string Original_APPLYNO, 
                    string Original_HANDOUT, 
                    string Original_RECEIVER, 
                    bool Original_PLANIN, 
                    bool Original_PLANTO, 
                    string Original_TR_PERSON, 
                    string Original_TR_ISO, 
                    string Original_TR_INOUT, 
                    string Original_TR_TEACH, 
                    string Original_COSCODE, 
                    string Original_KAVL) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AUTO));
            if ((Original_COURSE == null)) {
                throw new global::System.ArgumentNullException("Original_COURSE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_COURSE));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_DATE_B));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_DATE_E));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_COS_FEE));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_NOBR));
            }
            if ((Original_TR_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_TR_COMP));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_TR_HRS));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((bool)(Original_ABORAD));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((bool)(Original_CLOSE_));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_COUNTRY == null)) {
                throw new global::System.ArgumentNullException("Original_COUNTRY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_COUNTRY));
            }
            this.Adapter.DeleteCommand.Parameters[13].Value = ((decimal)(Original_AT_HRS));
            if ((Original_TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TR_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_TR_TYPE));
            }
            if ((Original_TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_MEMO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_TR_MEMO));
            }
            if ((Original_PROVE == null)) {
                throw new global::System.ArgumentNullException("Original_PROVE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_PROVE));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_TR_REPO));
            if ((Original_TR_ASDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((System.DateTime)(Original_TR_ASDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_ASNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_TR_ASNO));
            }
            if ((Original_APPLYNO == null)) {
                throw new global::System.ArgumentNullException("Original_APPLYNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_APPLYNO));
            }
            if ((Original_HANDOUT == null)) {
                throw new global::System.ArgumentNullException("Original_HANDOUT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_HANDOUT));
            }
            if ((Original_RECEIVER == null)) {
                throw new global::System.ArgumentNullException("Original_RECEIVER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_RECEIVER));
            }
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_PLANIN));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_PLANTO));
            if ((Original_TR_PERSON == null)) {
                throw new global::System.ArgumentNullException("Original_TR_PERSON");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_TR_PERSON));
            }
            if ((Original_TR_ISO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_ISO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_TR_ISO));
            }
            if ((Original_TR_INOUT == null)) {
                throw new global::System.ArgumentNullException("Original_TR_INOUT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_TR_INOUT));
            }
            if ((Original_TR_TEACH == null)) {
                throw new global::System.ArgumentNullException("Original_TR_TEACH");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((string)(Original_TR_TEACH));
            }
            if ((Original_COSCODE == null)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_COSCODE));
            }
            if ((Original_KAVL == null)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_KAVL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COURSE, 
                    System.DateTime DATE_B, 
                    System.DateTime DATE_E, 
                    decimal COS_FEE, 
                    string NOBR, 
                    string TR_COMP, 
                    decimal TR_HRS, 
                    bool ABORAD, 
                    bool CLOSE_, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string COUNTRY, 
                    decimal AT_HRS, 
                    string TR_TYPE, 
                    string TR_MEMO, 
                    string PROVE, 
                    bool TR_REPO, 
                    global::System.Nullable<global::System.DateTime> TR_ASDATE, 
                    string TR_ASNO, 
                    string APPLYNO, 
                    string HANDOUT, 
                    string RECEIVER, 
                    bool PLANIN, 
                    bool PLANTO, 
                    string TR_PERSON, 
                    string TR_ISO, 
                    string TR_INOUT, 
                    string TR_TEACH, 
                    string COSCODE, 
                    string KAVL) {
            if ((COURSE == null)) {
                throw new global::System.ArgumentNullException("COURSE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COURSE));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(DATE_B));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(DATE_E));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(COS_FEE));
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NOBR));
            }
            if ((TR_COMP == null)) {
                throw new global::System.ArgumentNullException("TR_COMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(TR_COMP));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(TR_HRS));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(ABORAD));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(CLOSE_));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(KEY_MAN));
            }
            if ((COUNTRY == null)) {
                throw new global::System.ArgumentNullException("COUNTRY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(COUNTRY));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(AT_HRS));
            if ((TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("TR_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(TR_TYPE));
            }
            if ((TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("TR_MEMO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(TR_MEMO));
            }
            if ((PROVE == null)) {
                throw new global::System.ArgumentNullException("PROVE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(PROVE));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(TR_REPO));
            if ((TR_ASDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(TR_ASDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("TR_ASNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(TR_ASNO));
            }
            if ((APPLYNO == null)) {
                throw new global::System.ArgumentNullException("APPLYNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(APPLYNO));
            }
            if ((HANDOUT == null)) {
                throw new global::System.ArgumentNullException("HANDOUT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(HANDOUT));
            }
            if ((RECEIVER == null)) {
                throw new global::System.ArgumentNullException("RECEIVER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(RECEIVER));
            }
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(PLANIN));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(PLANTO));
            if ((TR_PERSON == null)) {
                throw new global::System.ArgumentNullException("TR_PERSON");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(TR_PERSON));
            }
            if ((TR_ISO == null)) {
                throw new global::System.ArgumentNullException("TR_ISO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(TR_ISO));
            }
            if ((TR_INOUT == null)) {
                throw new global::System.ArgumentNullException("TR_INOUT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(TR_INOUT));
            }
            if ((TR_TEACH == null)) {
                throw new global::System.ArgumentNullException("TR_TEACH");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(TR_TEACH));
            }
            if ((COSCODE == null)) {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(COSCODE));
            }
            if ((KAVL == null)) {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(KAVL));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COURSE, 
                    System.DateTime DATE_B, 
                    System.DateTime DATE_E, 
                    decimal COS_FEE, 
                    string NOBR, 
                    string TR_COMP, 
                    decimal TR_HRS, 
                    bool ABORAD, 
                    bool CLOSE_, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string COUNTRY, 
                    decimal AT_HRS, 
                    string TR_TYPE, 
                    string TR_MEMO, 
                    string PROVE, 
                    bool TR_REPO, 
                    global::System.Nullable<global::System.DateTime> TR_ASDATE, 
                    string TR_ASNO, 
                    string APPLYNO, 
                    string HANDOUT, 
                    string RECEIVER, 
                    bool PLANIN, 
                    bool PLANTO, 
                    string TR_PERSON, 
                    string TR_ISO, 
                    string TR_INOUT, 
                    string TR_TEACH, 
                    string COSCODE, 
                    string KAVL, 
                    int Original_AUTO, 
                    string Original_COURSE, 
                    System.DateTime Original_DATE_B, 
                    System.DateTime Original_DATE_E, 
                    decimal Original_COS_FEE, 
                    string Original_NOBR, 
                    string Original_TR_COMP, 
                    decimal Original_TR_HRS, 
                    bool Original_ABORAD, 
                    bool Original_CLOSE_, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_COUNTRY, 
                    decimal Original_AT_HRS, 
                    string Original_TR_TYPE, 
                    string Original_TR_MEMO, 
                    string Original_PROVE, 
                    bool Original_TR_REPO, 
                    global::System.Nullable<global::System.DateTime> Original_TR_ASDATE, 
                    string Original_TR_ASNO, 
                    string Original_APPLYNO, 
                    string Original_HANDOUT, 
                    string Original_RECEIVER, 
                    bool Original_PLANIN, 
                    bool Original_PLANTO, 
                    string Original_TR_PERSON, 
                    string Original_TR_ISO, 
                    string Original_TR_INOUT, 
                    string Original_TR_TEACH, 
                    string Original_COSCODE, 
                    string Original_KAVL, 
                    int AUTO) {
            if ((COURSE == null)) {
                throw new global::System.ArgumentNullException("COURSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COURSE));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(DATE_B));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(DATE_E));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(COS_FEE));
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NOBR));
            }
            if ((TR_COMP == null)) {
                throw new global::System.ArgumentNullException("TR_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(TR_COMP));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(TR_HRS));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(ABORAD));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(CLOSE_));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(KEY_MAN));
            }
            if ((COUNTRY == null)) {
                throw new global::System.ArgumentNullException("COUNTRY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(COUNTRY));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(AT_HRS));
            if ((TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("TR_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(TR_TYPE));
            }
            if ((TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("TR_MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(TR_MEMO));
            }
            if ((PROVE == null)) {
                throw new global::System.ArgumentNullException("PROVE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(PROVE));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(TR_REPO));
            if ((TR_ASDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(TR_ASDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("TR_ASNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(TR_ASNO));
            }
            if ((APPLYNO == null)) {
                throw new global::System.ArgumentNullException("APPLYNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(APPLYNO));
            }
            if ((HANDOUT == null)) {
                throw new global::System.ArgumentNullException("HANDOUT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(HANDOUT));
            }
            if ((RECEIVER == null)) {
                throw new global::System.ArgumentNullException("RECEIVER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(RECEIVER));
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(PLANIN));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(PLANTO));
            if ((TR_PERSON == null)) {
                throw new global::System.ArgumentNullException("TR_PERSON");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(TR_PERSON));
            }
            if ((TR_ISO == null)) {
                throw new global::System.ArgumentNullException("TR_ISO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(TR_ISO));
            }
            if ((TR_INOUT == null)) {
                throw new global::System.ArgumentNullException("TR_INOUT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(TR_INOUT));
            }
            if ((TR_TEACH == null)) {
                throw new global::System.ArgumentNullException("TR_TEACH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(TR_TEACH));
            }
            if ((COSCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(COSCODE));
            }
            if ((KAVL == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(KAVL));
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((int)(Original_AUTO));
            if ((Original_COURSE == null)) {
                throw new global::System.ArgumentNullException("Original_COURSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_COURSE));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(Original_DATE_B));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_DATE_E));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_COS_FEE));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_NOBR));
            }
            if ((Original_TR_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_TR_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_TR_COMP));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_TR_HRS));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(Original_ABORAD));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_CLOSE_));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_COUNTRY == null)) {
                throw new global::System.ArgumentNullException("Original_COUNTRY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_COUNTRY));
            }
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_AT_HRS));
            if ((Original_TR_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TR_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_TR_TYPE));
            }
            if ((Original_TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_TR_MEMO));
            }
            if ((Original_PROVE == null)) {
                throw new global::System.ArgumentNullException("Original_PROVE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_PROVE));
            }
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_TR_REPO));
            if ((Original_TR_ASDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(Original_TR_ASDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_TR_ASNO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_ASNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(Original_TR_ASNO));
            }
            if ((Original_APPLYNO == null)) {
                throw new global::System.ArgumentNullException("Original_APPLYNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((string)(Original_APPLYNO));
            }
            if ((Original_HANDOUT == null)) {
                throw new global::System.ArgumentNullException("Original_HANDOUT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(Original_HANDOUT));
            }
            if ((Original_RECEIVER == null)) {
                throw new global::System.ArgumentNullException("Original_RECEIVER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_RECEIVER));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(Original_PLANIN));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(Original_PLANTO));
            if ((Original_TR_PERSON == null)) {
                throw new global::System.ArgumentNullException("Original_TR_PERSON");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(Original_TR_PERSON));
            }
            if ((Original_TR_ISO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_ISO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(Original_TR_ISO));
            }
            if ((Original_TR_INOUT == null)) {
                throw new global::System.ArgumentNullException("Original_TR_INOUT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(Original_TR_INOUT));
            }
            if ((Original_TR_TEACH == null)) {
                throw new global::System.ArgumentNullException("Original_TR_TEACH");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(Original_TR_TEACH));
            }
            if ((Original_COSCODE == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(Original_COSCODE));
            }
            if ((Original_KAVL == null)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((string)(Original_KAVL));
            }
            this.Adapter.UpdateCommand.Parameters[64].Value = ((int)(AUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COURSE, 
                    System.DateTime DATE_B, 
                    System.DateTime DATE_E, 
                    decimal COS_FEE, 
                    string NOBR, 
                    string TR_COMP, 
                    decimal TR_HRS, 
                    bool ABORAD, 
                    bool CLOSE_, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string COUNTRY, 
                    decimal AT_HRS, 
                    string TR_TYPE, 
                    string TR_MEMO, 
                    string PROVE, 
                    bool TR_REPO, 
                    global::System.Nullable<global::System.DateTime> TR_ASDATE, 
                    string TR_ASNO, 
                    string APPLYNO, 
                    string HANDOUT, 
                    string RECEIVER, 
                    bool PLANIN, 
                    bool PLANTO, 
                    string TR_PERSON, 
                    string TR_ISO, 
                    string TR_INOUT, 
                    string TR_TEACH, 
                    string COSCODE, 
                    string KAVL, 
                    int Original_AUTO, 
                    string Original_COURSE, 
                    System.DateTime Original_DATE_B, 
                    System.DateTime Original_DATE_E, 
                    decimal Original_COS_FEE, 
                    string Original_NOBR, 
                    string Original_TR_COMP, 
                    decimal Original_TR_HRS, 
                    bool Original_ABORAD, 
                    bool Original_CLOSE_, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_COUNTRY, 
                    decimal Original_AT_HRS, 
                    string Original_TR_TYPE, 
                    string Original_TR_MEMO, 
                    string Original_PROVE, 
                    bool Original_TR_REPO, 
                    global::System.Nullable<global::System.DateTime> Original_TR_ASDATE, 
                    string Original_TR_ASNO, 
                    string Original_APPLYNO, 
                    string Original_HANDOUT, 
                    string Original_RECEIVER, 
                    bool Original_PLANIN, 
                    bool Original_PLANTO, 
                    string Original_TR_PERSON, 
                    string Original_TR_ISO, 
                    string Original_TR_INOUT, 
                    string Original_TR_TEACH, 
                    string Original_COSCODE, 
                    string Original_KAVL) {
            return this.Update(COURSE, DATE_B, DATE_E, COS_FEE, NOBR, TR_COMP, TR_HRS, ABORAD, CLOSE_, KEY_DATE, KEY_MAN, COUNTRY, AT_HRS, TR_TYPE, TR_MEMO, PROVE, TR_REPO, TR_ASDATE, TR_ASNO, APPLYNO, HANDOUT, RECEIVER, PLANIN, PLANTO, TR_PERSON, TR_ISO, TR_INOUT, TR_TEACH, COSCODE, KAVL, Original_AUTO, Original_COURSE, Original_DATE_B, Original_DATE_E, Original_COS_FEE, Original_NOBR, Original_TR_COMP, Original_TR_HRS, Original_ABORAD, Original_CLOSE_, Original_KEY_DATE, Original_KEY_MAN, Original_COUNTRY, Original_AT_HRS, Original_TR_TYPE, Original_TR_MEMO, Original_PROVE, Original_TR_REPO, Original_TR_ASDATE, Original_TR_ASNO, Original_APPLYNO, Original_HANDOUT, Original_RECEIVER, Original_PLANIN, Original_PLANTO, Original_TR_PERSON, Original_TR_ISO, Original_TR_INOUT, Original_TR_TEACH, Original_COSCODE, Original_KAVL, Original_AUTO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRCOSCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRCOSCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRCOSC";
            tableMapping.ColumnMappings.Add("COURSE", "COURSE");
            tableMapping.ColumnMappings.Add("DATE_B", "DATE_B");
            tableMapping.ColumnMappings.Add("DATE_E", "DATE_E");
            tableMapping.ColumnMappings.Add("COS_FEE", "COS_FEE");
            tableMapping.ColumnMappings.Add("TR_COMP", "TR_COMP");
            tableMapping.ColumnMappings.Add("TR_HRS", "TR_HRS");
            tableMapping.ColumnMappings.Add("ABORAD", "ABORAD");
            tableMapping.ColumnMappings.Add("COUNTRY", "COUNTRY");
            tableMapping.ColumnMappings.Add("TR_DEPT", "TR_DEPT");
            tableMapping.ColumnMappings.Add("TR_TYPE", "TR_TYPE");
            tableMapping.ColumnMappings.Add("TR_MEMO", "TR_MEMO");
            tableMapping.ColumnMappings.Add("TR_ASNO", "TR_ASNO");
            tableMapping.ColumnMappings.Add("HANDOUT", "HANDOUT");
            tableMapping.ColumnMappings.Add("PLANIN", "PLANIN");
            tableMapping.ColumnMappings.Add("PLANTO", "PLANTO");
            tableMapping.ColumnMappings.Add("TR_PERSON", "TR_PERSON");
            tableMapping.ColumnMappings.Add("TR_ISO", "TR_ISO");
            tableMapping.ColumnMappings.Add("TR_INOUT", "TR_INOUT");
            tableMapping.ColumnMappings.Add("TR_TEACH", "TR_TEACH");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("GUID", "GUID");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TRCOSC] WHERE (([COURSE] = @Original_COURSE) AND ([DATE_B] = @Original_DATE_B) AND ([DATE_E] = @Original_DATE_E) AND ([COS_FEE] = @Original_COS_FEE) AND ([TR_COMP] = @Original_TR_COMP) AND ([TR_HRS] = @Original_TR_HRS) AND ([ABORAD] = @Original_ABORAD) AND ([COUNTRY] = @Original_COUNTRY) AND ([TR_DEPT] = @Original_TR_DEPT) AND ([TR_TYPE] = @Original_TR_TYPE) AND ([TR_MEMO] = @Original_TR_MEMO) AND ([TR_ASNO] = @Original_TR_ASNO) AND ([HANDOUT] = @Original_HANDOUT) AND ([PLANIN] = @Original_PLANIN) AND ([PLANTO] = @Original_PLANTO) AND ([TR_PERSON] = @Original_TR_PERSON) AND ([TR_ISO] = @Original_TR_ISO) AND ([TR_INOUT] = @Original_TR_INOUT) AND ([TR_TEACH] = @Original_TR_TEACH) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([GUID] = @Original_GUID) AND ([CODE] = @Original_CODE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GUID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TRCOSC] ([COURSE], [DATE_B], [DATE_E], [COS_FEE], [TR_COMP], [TR_HRS], [ABORAD], [COUNTRY], [TR_DEPT], [TR_TYPE], [TR_MEMO], [TR_ASNO], [HANDOUT], [PLANIN], [PLANTO], [TR_PERSON], [TR_ISO], [TR_INOUT], [TR_TEACH], [KEY_DATE], [KEY_MAN], [GUID], [CODE]) VALUES (@COURSE, @DATE_B, @DATE_E, @COS_FEE, @TR_COMP, @TR_HRS, @ABORAD, @COUNTRY, @TR_DEPT, @TR_TYPE, @TR_MEMO, @TR_ASNO, @HANDOUT, @PLANIN, @PLANTO, @TR_PERSON, @TR_ISO, @TR_INOUT, @TR_TEACH, @KEY_DATE, @KEY_MAN, @GUID, @CODE);
SELECT COURSE, DATE_B, DATE_E, COS_FEE, TR_COMP, TR_HRS, ABORAD, COUNTRY, TR_DEPT, TR_TYPE, TR_MEMO, TR_ASNO, HANDOUT, PLANIN, PLANTO, TR_PERSON, TR_ISO, TR_INOUT, TR_TEACH, KEY_DATE, KEY_MAN, GUID, CODE FROM TRCOSC WHERE (GUID = @GUID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GUID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [TRCOSC] SET [COURSE] = @COURSE, [DATE_B] = @DATE_B, [DATE_E] = @DATE_E, [" +
                "COS_FEE] = @COS_FEE, [TR_COMP] = @TR_COMP, [TR_HRS] = @TR_HRS, [ABORAD] = @ABORA" +
                "D, [COUNTRY] = @COUNTRY, [TR_DEPT] = @TR_DEPT, [TR_TYPE] = @TR_TYPE, [TR_MEMO] =" +
                " @TR_MEMO, [TR_ASNO] = @TR_ASNO, [HANDOUT] = @HANDOUT, [PLANIN] = @PLANIN, [PLAN" +
                "TO] = @PLANTO, [TR_PERSON] = @TR_PERSON, [TR_ISO] = @TR_ISO, [TR_INOUT] = @TR_IN" +
                "OUT, [TR_TEACH] = @TR_TEACH, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [GUID" +
                "] = @GUID, [CODE] = @CODE WHERE (([COURSE] = @Original_COURSE) AND ([DATE_B] = @" +
                "Original_DATE_B) AND ([DATE_E] = @Original_DATE_E) AND ([COS_FEE] = @Original_CO" +
                "S_FEE) AND ([TR_COMP] = @Original_TR_COMP) AND ([TR_HRS] = @Original_TR_HRS) AND" +
                " ([ABORAD] = @Original_ABORAD) AND ([COUNTRY] = @Original_COUNTRY) AND ([TR_DEPT" +
                "] = @Original_TR_DEPT) AND ([TR_TYPE] = @Original_TR_TYPE) AND ([TR_MEMO] = @Ori" +
                "ginal_TR_MEMO) AND ([TR_ASNO] = @Original_TR_ASNO) AND ([HANDOUT] = @Original_HA" +
                "NDOUT) AND ([PLANIN] = @Original_PLANIN) AND ([PLANTO] = @Original_PLANTO) AND (" +
                "[TR_PERSON] = @Original_TR_PERSON) AND ([TR_ISO] = @Original_TR_ISO) AND ([TR_IN" +
                "OUT] = @Original_TR_INOUT) AND ([TR_TEACH] = @Original_TR_TEACH) AND ([KEY_DATE]" +
                " = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([GUID] = @Origin" +
                "al_GUID) AND ([CODE] = @Original_CODE));\r\nSELECT COURSE, DATE_B, DATE_E, COS_FEE" +
                ", TR_COMP, TR_HRS, ABORAD, COUNTRY, TR_DEPT, TR_TYPE, TR_MEMO, TR_ASNO, HANDOUT," +
                " PLANIN, PLANTO, TR_PERSON, TR_ISO, TR_INOUT, TR_TEACH, KEY_DATE, KEY_MAN, GUID," +
                " CODE FROM TRCOSC WHERE (GUID = @GUID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GUID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GUID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_B", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DATE_E", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DATE_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COS_FEE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COS_FEE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TR_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABORAD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABORAD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNTRY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNTRY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HANDOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HANDOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANIN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLANTO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLANTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_PERSON", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_PERSON", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ISO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ISO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_INOUT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_INOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_TEACH", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_TEACH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GUID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GUID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          COURSE, DATE_B, DATE_E, COS_FEE, TR_COMP, TR_HRS, ABORAD, COUNTRY, TR_DEPT, TR_TYPE, TR_MEMO, 
                            TR_ASNO, HANDOUT, PLANIN, PLANTO, TR_PERSON, TR_ISO, TR_INOUT, TR_TEACH, KEY_DATE, KEY_MAN, GUID, 
                            CODE
FROM              TRCOSC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(traDS1.TRCOSCDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual traDS1.TRCOSCDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            traDS1.TRCOSCDataTable dataTable = new traDS1.TRCOSCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1.TRCOSCDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1 dataSet) {
            return this.Adapter.Update(dataSet, "TRCOSC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TRCOSPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TRCOSPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TRCOSP";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("CLOSE_", "CLOSE_");
            tableMapping.ColumnMappings.Add("AT_HRS", "AT_HRS");
            tableMapping.ColumnMappings.Add("TR_MEMO", "TR_MEMO");
            tableMapping.ColumnMappings.Add("PROVE", "PROVE");
            tableMapping.ColumnMappings.Add("TR_REPO", "TR_REPO");
            tableMapping.ColumnMappings.Add("TR_ASDATE", "TR_ASDATE");
            tableMapping.ColumnMappings.Add("APPLYNO", "APPLYNO");
            tableMapping.ColumnMappings.Add("RECEIVER", "RECEIVER");
            tableMapping.ColumnMappings.Add("KAVL", "KAVL");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("COURSE", "COURSE");
            tableMapping.ColumnMappings.Add("AUTO", "AUTO");
            tableMapping.ColumnMappings.Add("ST_HRS", "ST_HRS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [TRCOSP] WHERE (([NOBR] = @Original_NOBR) AND ([CLOSE_] = @Original_CLOSE_) AND ([AT_HRS] = @Original_AT_HRS) AND ([TR_MEMO] = @Original_TR_MEMO) AND ([PROVE] = @Original_PROVE) AND ([TR_REPO] = @Original_TR_REPO) AND ((@IsNull_TR_ASDATE = 1 AND [TR_ASDATE] IS NULL) OR ([TR_ASDATE] = @Original_TR_ASDATE)) AND ([APPLYNO] = @Original_APPLYNO) AND ([RECEIVER] = @Original_RECEIVER) AND ((@IsNull_KAVL = 1 AND [KAVL] IS NULL) OR ([KAVL] = @Original_KAVL)) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([COURSE] = @Original_COURSE) AND ([AUTO] = @Original_AUTO) AND ((@IsNull_ST_HRS = 1 AND [ST_HRS] IS NULL) OR ([ST_HRS] = @Original_ST_HRS)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KAVL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ST_HRS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ST_HRS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ST_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ST_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [TRCOSP] ([NOBR], [CLOSE_], [AT_HRS], [TR_MEMO], [PROVE], [TR_REPO], [TR_ASDATE], [APPLYNO], [RECEIVER], [KAVL], [KEY_DATE], [KEY_MAN], [COURSE], [ST_HRS]) VALUES (@NOBR, @CLOSE_, @AT_HRS, @TR_MEMO, @PROVE, @TR_REPO, @TR_ASDATE, @APPLYNO, @RECEIVER, @KAVL, @KEY_DATE, @KEY_MAN, @COURSE, @ST_HRS);
SELECT NOBR, CLOSE_, AT_HRS, TR_MEMO, PROVE, TR_REPO, TR_ASDATE, APPLYNO, RECEIVER, KAVL, KEY_DATE, KEY_MAN, COURSE, AUTO, ST_HRS FROM TRCOSP WHERE (AUTO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ST_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ST_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [TRCOSP] SET [NOBR] = @NOBR, [CLOSE_] = @CLOSE_, [AT_HRS] = @AT_HRS, [TR_MEMO] = @TR_MEMO, [PROVE] = @PROVE, [TR_REPO] = @TR_REPO, [TR_ASDATE] = @TR_ASDATE, [APPLYNO] = @APPLYNO, [RECEIVER] = @RECEIVER, [KAVL] = @KAVL, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [COURSE] = @COURSE, [ST_HRS] = @ST_HRS WHERE (([NOBR] = @Original_NOBR) AND ([CLOSE_] = @Original_CLOSE_) AND ([AT_HRS] = @Original_AT_HRS) AND ([TR_MEMO] = @Original_TR_MEMO) AND ([PROVE] = @Original_PROVE) AND ([TR_REPO] = @Original_TR_REPO) AND ((@IsNull_TR_ASDATE = 1 AND [TR_ASDATE] IS NULL) OR ([TR_ASDATE] = @Original_TR_ASDATE)) AND ([APPLYNO] = @Original_APPLYNO) AND ([RECEIVER] = @Original_RECEIVER) AND ((@IsNull_KAVL = 1 AND [KAVL] IS NULL) OR ([KAVL] = @Original_KAVL)) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([COURSE] = @Original_COURSE) AND ([AUTO] = @Original_AUTO) AND ((@IsNull_ST_HRS = 1 AND [ST_HRS] IS NULL) OR ([ST_HRS] = @Original_ST_HRS)));
SELECT NOBR, CLOSE_, AT_HRS, TR_MEMO, PROVE, TR_REPO, TR_ASDATE, APPLYNO, RECEIVER, KAVL, KEY_DATE, KEY_MAN, COURSE, AUTO, ST_HRS FROM TRCOSP WHERE (AUTO = @AUTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ST_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ST_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CLOSE_", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CLOSE_", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AT_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AT_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_MEMO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_MEMO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PROVE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PROVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_REPO", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_REPO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TR_ASDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TR_ASDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TR_ASDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APPLYNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APPLYNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RECEIVER", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RECEIVER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KAVL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KAVL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KAVL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COURSE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COURSE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ST_HRS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ST_HRS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ST_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ST_HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, CLOSE_, AT_HRS, TR_MEMO, PROVE, TR_REPO, TR_ASDATE, APPLYNO" +
                ", RECEIVER, KAVL, KEY_DATE, \r\n                            KEY_MAN, COURSE, AUTO," +
                " ST_HRS\r\nFROM              TRCOSP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT APPLYNO, AT_HRS, AUTO, CLOSE_, COURSE, KAVL, KEY_DATE, KEY_MAN, NOBR, PROV" +
                "E, RECEIVER, ST_HRS, TR_ASDATE, TR_MEMO, TR_REPO FROM TRCOSP WHERE (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(traDS1.TRCOSPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual traDS1.TRCOSPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            traDS1.TRCOSPDataTable dataTable = new traDS1.TRCOSPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(traDS1.TRCOSPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual traDS1.TRCOSPDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            traDS1.TRCOSPDataTable dataTable = new traDS1.TRCOSPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1.TRCOSPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(traDS1 dataSet) {
            return this.Adapter.Update(dataSet, "TRCOSP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, bool Original_CLOSE_, decimal Original_AT_HRS, string Original_TR_MEMO, string Original_PROVE, bool Original_TR_REPO, global::System.Nullable<global::System.DateTime> Original_TR_ASDATE, string Original_APPLYNO, string Original_RECEIVER, string Original_KAVL, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_COURSE, int Original_AUTO, global::System.Nullable<decimal> Original_ST_HRS) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((bool)(Original_CLOSE_));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_AT_HRS));
            if ((Original_TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_MEMO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_TR_MEMO));
            }
            if ((Original_PROVE == null)) {
                throw new global::System.ArgumentNullException("Original_PROVE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PROVE));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((bool)(Original_TR_REPO));
            if ((Original_TR_ASDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_TR_ASDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_APPLYNO == null)) {
                throw new global::System.ArgumentNullException("Original_APPLYNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_APPLYNO));
            }
            if ((Original_RECEIVER == null)) {
                throw new global::System.ArgumentNullException("Original_RECEIVER");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_RECEIVER));
            }
            if ((Original_KAVL == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_KAVL));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_COURSE == null)) {
                throw new global::System.ArgumentNullException("Original_COURSE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_COURSE));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_AUTO));
            if ((Original_ST_HRS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_ST_HRS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, bool CLOSE_, decimal AT_HRS, string TR_MEMO, string PROVE, bool TR_REPO, global::System.Nullable<global::System.DateTime> TR_ASDATE, string APPLYNO, string RECEIVER, string KAVL, System.DateTime KEY_DATE, string KEY_MAN, string COURSE, global::System.Nullable<decimal> ST_HRS) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((bool)(CLOSE_));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(AT_HRS));
            if ((TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("TR_MEMO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(TR_MEMO));
            }
            if ((PROVE == null)) {
                throw new global::System.ArgumentNullException("PROVE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PROVE));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((bool)(TR_REPO));
            if ((TR_ASDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(TR_ASDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((APPLYNO == null)) {
                throw new global::System.ArgumentNullException("APPLYNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(APPLYNO));
            }
            if ((RECEIVER == null)) {
                throw new global::System.ArgumentNullException("RECEIVER");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(RECEIVER));
            }
            if ((KAVL == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(KAVL));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            if ((COURSE == null)) {
                throw new global::System.ArgumentNullException("COURSE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(COURSE));
            }
            if ((ST_HRS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(ST_HRS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    bool CLOSE_, 
                    decimal AT_HRS, 
                    string TR_MEMO, 
                    string PROVE, 
                    bool TR_REPO, 
                    global::System.Nullable<global::System.DateTime> TR_ASDATE, 
                    string APPLYNO, 
                    string RECEIVER, 
                    string KAVL, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string COURSE, 
                    global::System.Nullable<decimal> ST_HRS, 
                    string Original_NOBR, 
                    bool Original_CLOSE_, 
                    decimal Original_AT_HRS, 
                    string Original_TR_MEMO, 
                    string Original_PROVE, 
                    bool Original_TR_REPO, 
                    global::System.Nullable<global::System.DateTime> Original_TR_ASDATE, 
                    string Original_APPLYNO, 
                    string Original_RECEIVER, 
                    string Original_KAVL, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_COURSE, 
                    int Original_AUTO, 
                    global::System.Nullable<decimal> Original_ST_HRS, 
                    int AUTO) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((bool)(CLOSE_));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(AT_HRS));
            if ((TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("TR_MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(TR_MEMO));
            }
            if ((PROVE == null)) {
                throw new global::System.ArgumentNullException("PROVE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PROVE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((bool)(TR_REPO));
            if ((TR_ASDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(TR_ASDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((APPLYNO == null)) {
                throw new global::System.ArgumentNullException("APPLYNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(APPLYNO));
            }
            if ((RECEIVER == null)) {
                throw new global::System.ArgumentNullException("RECEIVER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(RECEIVER));
            }
            if ((KAVL == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(KAVL));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            if ((COURSE == null)) {
                throw new global::System.ArgumentNullException("COURSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(COURSE));
            }
            if ((ST_HRS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(ST_HRS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(Original_CLOSE_));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(Original_AT_HRS));
            if ((Original_TR_MEMO == null)) {
                throw new global::System.ArgumentNullException("Original_TR_MEMO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_TR_MEMO));
            }
            if ((Original_PROVE == null)) {
                throw new global::System.ArgumentNullException("Original_PROVE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_PROVE));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(Original_TR_REPO));
            if ((Original_TR_ASDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_TR_ASDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_APPLYNO == null)) {
                throw new global::System.ArgumentNullException("Original_APPLYNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_APPLYNO));
            }
            if ((Original_RECEIVER == null)) {
                throw new global::System.ArgumentNullException("Original_RECEIVER");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_RECEIVER));
            }
            if ((Original_KAVL == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_KAVL));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_COURSE == null)) {
                throw new global::System.ArgumentNullException("Original_COURSE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_COURSE));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(Original_AUTO));
            if ((Original_ST_HRS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_ST_HRS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(AUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    bool CLOSE_, 
                    decimal AT_HRS, 
                    string TR_MEMO, 
                    string PROVE, 
                    bool TR_REPO, 
                    global::System.Nullable<global::System.DateTime> TR_ASDATE, 
                    string APPLYNO, 
                    string RECEIVER, 
                    string KAVL, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string COURSE, 
                    global::System.Nullable<decimal> ST_HRS, 
                    string Original_NOBR, 
                    bool Original_CLOSE_, 
                    decimal Original_AT_HRS, 
                    string Original_TR_MEMO, 
                    string Original_PROVE, 
                    bool Original_TR_REPO, 
                    global::System.Nullable<global::System.DateTime> Original_TR_ASDATE, 
                    string Original_APPLYNO, 
                    string Original_RECEIVER, 
                    string Original_KAVL, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_COURSE, 
                    int Original_AUTO, 
                    global::System.Nullable<decimal> Original_ST_HRS) {
            return this.Update(NOBR, CLOSE_, AT_HRS, TR_MEMO, PROVE, TR_REPO, TR_ASDATE, APPLYNO, RECEIVER, KAVL, KEY_DATE, KEY_MAN, COURSE, ST_HRS, Original_NOBR, Original_CLOSE_, Original_AT_HRS, Original_TR_MEMO, Original_PROVE, Original_TR_REPO, Original_TR_ASDATE, Original_APPLYNO, Original_RECEIVER, Original_KAVL, Original_KEY_DATE, Original_KEY_MAN, Original_COURSE, Original_AUTO, Original_ST_HRS, Original_AUTO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private TRTYPETableAdapter _tRTYPETableAdapter;
        
        private TRCOMPTableAdapter _tRCOMPTableAdapter;
        
        private TRASSCODETableAdapter _tRASSCODETableAdapter;
        
        private TRCOSFTableAdapter _tRCOSFTableAdapter;
        
        private TRCOSCTableAdapter _tRCOSCTableAdapter;
        
        private TRCOSPTableAdapter _tRCOSPTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRTYPETableAdapter TRTYPETableAdapter {
            get {
                return this._tRTYPETableAdapter;
            }
            set {
                this._tRTYPETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRCOMPTableAdapter TRCOMPTableAdapter {
            get {
                return this._tRCOMPTableAdapter;
            }
            set {
                this._tRCOMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRASSCODETableAdapter TRASSCODETableAdapter {
            get {
                return this._tRASSCODETableAdapter;
            }
            set {
                this._tRASSCODETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRCOSFTableAdapter TRCOSFTableAdapter {
            get {
                return this._tRCOSFTableAdapter;
            }
            set {
                this._tRCOSFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRCOSCTableAdapter TRCOSCTableAdapter {
            get {
                return this._tRCOSCTableAdapter;
            }
            set {
                this._tRCOSCTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TRCOSPTableAdapter TRCOSPTableAdapter {
            get {
                return this._tRCOSPTableAdapter;
            }
            set {
                this._tRCOSPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._tRTYPETableAdapter != null) 
                            && (this._tRTYPETableAdapter.Connection != null))) {
                    return this._tRTYPETableAdapter.Connection;
                }
                if (((this._tRCOMPTableAdapter != null) 
                            && (this._tRCOMPTableAdapter.Connection != null))) {
                    return this._tRCOMPTableAdapter.Connection;
                }
                if (((this._tRASSCODETableAdapter != null) 
                            && (this._tRASSCODETableAdapter.Connection != null))) {
                    return this._tRASSCODETableAdapter.Connection;
                }
                if (((this._tRCOSFTableAdapter != null) 
                            && (this._tRCOSFTableAdapter.Connection != null))) {
                    return this._tRCOSFTableAdapter.Connection;
                }
                if (((this._tRCOSCTableAdapter != null) 
                            && (this._tRCOSCTableAdapter.Connection != null))) {
                    return this._tRCOSCTableAdapter.Connection;
                }
                if (((this._tRCOSPTableAdapter != null) 
                            && (this._tRCOSPTableAdapter.Connection != null))) {
                    return this._tRCOSPTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._tRTYPETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRCOMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRASSCODETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRCOSFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRCOSCTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tRCOSPTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(traDS1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tRTYPETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRTYPE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRTYPETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRCOMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRCOMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRCOMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRASSCODETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRASSCODE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRASSCODETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRCOSFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRCOSF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRCOSFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRCOSCTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRCOSC.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRCOSCTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tRCOSPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TRCOSP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tRCOSPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(traDS1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._tRTYPETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRTYPE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRTYPETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRCOMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRCOMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRCOMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRASSCODETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRASSCODE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRASSCODETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRCOSFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRCOSF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRCOSFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRCOSCTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRCOSC.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRCOSCTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tRCOSPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TRCOSP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tRCOSPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(traDS1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._tRCOSPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRCOSP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRCOSPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRCOSCTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRCOSC.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRCOSCTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRCOSFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRCOSF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRCOSFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRASSCODETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRASSCODE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRASSCODETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRCOMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRCOMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRCOMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tRTYPETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TRTYPE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tRTYPETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(traDS1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._tRTYPETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRTYPETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._tRCOMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRCOMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._tRASSCODETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRASSCODETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._tRCOSFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRCOSFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._tRCOSCTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRCOSCTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._tRCOSPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tRCOSPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._tRTYPETableAdapter != null)) {
                    revertConnections.Add(this._tRTYPETableAdapter, this._tRTYPETableAdapter.Connection);
                    this._tRTYPETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRTYPETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRTYPETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRTYPETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRTYPETableAdapter.Adapter);
                    }
                }
                if ((this._tRCOMPTableAdapter != null)) {
                    revertConnections.Add(this._tRCOMPTableAdapter, this._tRCOMPTableAdapter.Connection);
                    this._tRCOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRCOMPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRCOMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRCOMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRCOMPTableAdapter.Adapter);
                    }
                }
                if ((this._tRASSCODETableAdapter != null)) {
                    revertConnections.Add(this._tRASSCODETableAdapter, this._tRASSCODETableAdapter.Connection);
                    this._tRASSCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRASSCODETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRASSCODETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRASSCODETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRASSCODETableAdapter.Adapter);
                    }
                }
                if ((this._tRCOSFTableAdapter != null)) {
                    revertConnections.Add(this._tRCOSFTableAdapter, this._tRCOSFTableAdapter.Connection);
                    this._tRCOSFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRCOSFTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRCOSFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRCOSFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRCOSFTableAdapter.Adapter);
                    }
                }
                if ((this._tRCOSCTableAdapter != null)) {
                    revertConnections.Add(this._tRCOSCTableAdapter, this._tRCOSCTableAdapter.Connection);
                    this._tRCOSCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRCOSCTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRCOSCTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRCOSCTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRCOSCTableAdapter.Adapter);
                    }
                }
                if ((this._tRCOSPTableAdapter != null)) {
                    revertConnections.Add(this._tRCOSPTableAdapter, this._tRCOSPTableAdapter.Connection);
                    this._tRCOSPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tRCOSPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tRCOSPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tRCOSPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tRCOSPTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._tRTYPETableAdapter != null)) {
                    this._tRTYPETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRTYPETableAdapter]));
                    this._tRTYPETableAdapter.Transaction = null;
                }
                if ((this._tRCOMPTableAdapter != null)) {
                    this._tRCOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRCOMPTableAdapter]));
                    this._tRCOMPTableAdapter.Transaction = null;
                }
                if ((this._tRASSCODETableAdapter != null)) {
                    this._tRASSCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRASSCODETableAdapter]));
                    this._tRASSCODETableAdapter.Transaction = null;
                }
                if ((this._tRCOSFTableAdapter != null)) {
                    this._tRCOSFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRCOSFTableAdapter]));
                    this._tRCOSFTableAdapter.Transaction = null;
                }
                if ((this._tRCOSCTableAdapter != null)) {
                    this._tRCOSCTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRCOSCTableAdapter]));
                    this._tRCOSCTableAdapter.Transaction = null;
                }
                if ((this._tRCOSPTableAdapter != null)) {
                    this._tRCOSPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tRCOSPTableAdapter]));
                    this._tRCOSPTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591