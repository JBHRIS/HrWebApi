//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:2.0.50727.42
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 2.0.50727.42。
// 
#pragma warning disable 1591

namespace ezSendMail.localhost {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetProcessIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FlowStartOperationCompleted;
        
        private System.Threading.SendOrPostCallback FlowShareOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApParmOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetApViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetApViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback WorkFinishOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::ezSendMail.Properties.Settings.Default.ezSendMail_localhost_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetProcessIDCompletedEventHandler GetProcessIDCompleted;
        
        /// <remarks/>
        public event FlowStartCompletedEventHandler FlowStartCompleted;
        
        /// <remarks/>
        public event FlowShareCompletedEventHandler FlowShareCompleted;
        
        /// <remarks/>
        public event GetApParmCompletedEventHandler GetApParmCompleted;
        
        /// <remarks/>
        public event GetApViewCompletedEventHandler GetApViewCompleted;
        
        /// <remarks/>
        public event SetApViewCompletedEventHandler SetApViewCompleted;
        
        /// <remarks/>
        public event WorkFinishCompletedEventHandler WorkFinishCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProcessID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetProcessID() {
            object[] results = this.Invoke("GetProcessID", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessIDAsync() {
            this.GetProcessIDAsync(null);
        }
        
        /// <remarks/>
        public void GetProcessIDAsync(object userState) {
            if ((this.GetProcessIDOperationCompleted == null)) {
                this.GetProcessIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessIDOperationCompleted);
            }
            this.InvokeAsync("GetProcessID", new object[0], this.GetProcessIDOperationCompleted, userState);
        }
        
        private void OnGetProcessIDOperationCompleted(object arg) {
            if ((this.GetProcessIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessIDCompleted(this, new GetProcessIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FlowStart", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool FlowStart(int idProcess, string idFlowTree, string idRole_Start, string idEmp_Start, string idRole_Agent, string idEmp_Agent) {
            object[] results = this.Invoke("FlowStart", new object[] {
                        idProcess,
                        idFlowTree,
                        idRole_Start,
                        idEmp_Start,
                        idRole_Agent,
                        idEmp_Agent});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FlowStartAsync(int idProcess, string idFlowTree, string idRole_Start, string idEmp_Start, string idRole_Agent, string idEmp_Agent) {
            this.FlowStartAsync(idProcess, idFlowTree, idRole_Start, idEmp_Start, idRole_Agent, idEmp_Agent, null);
        }
        
        /// <remarks/>
        public void FlowStartAsync(int idProcess, string idFlowTree, string idRole_Start, string idEmp_Start, string idRole_Agent, string idEmp_Agent, object userState) {
            if ((this.FlowStartOperationCompleted == null)) {
                this.FlowStartOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlowStartOperationCompleted);
            }
            this.InvokeAsync("FlowStart", new object[] {
                        idProcess,
                        idFlowTree,
                        idRole_Start,
                        idEmp_Start,
                        idRole_Agent,
                        idEmp_Agent}, this.FlowStartOperationCompleted, userState);
        }
        
        private void OnFlowStartOperationCompleted(object arg) {
            if ((this.FlowStartCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlowStartCompleted(this, new FlowStartCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FlowShare", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FlowShare(int idProcess, string idRole_Share, string idEmp_Share) {
            this.Invoke("FlowShare", new object[] {
                        idProcess,
                        idRole_Share,
                        idEmp_Share});
        }
        
        /// <remarks/>
        public void FlowShareAsync(int idProcess, string idRole_Share, string idEmp_Share) {
            this.FlowShareAsync(idProcess, idRole_Share, idEmp_Share, null);
        }
        
        /// <remarks/>
        public void FlowShareAsync(int idProcess, string idRole_Share, string idEmp_Share, object userState) {
            if ((this.FlowShareOperationCompleted == null)) {
                this.FlowShareOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlowShareOperationCompleted);
            }
            this.InvokeAsync("FlowShare", new object[] {
                        idProcess,
                        idRole_Share,
                        idEmp_Share}, this.FlowShareOperationCompleted, userState);
        }
        
        private void OnFlowShareOperationCompleted(object arg) {
            if ((this.FlowShareCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlowShareCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApParm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CApParm GetApParm(int idApParm) {
            object[] results = this.Invoke("GetApParm", new object[] {
                        idApParm});
            return ((CApParm)(results[0]));
        }
        
        /// <remarks/>
        public void GetApParmAsync(int idApParm) {
            this.GetApParmAsync(idApParm, null);
        }
        
        /// <remarks/>
        public void GetApParmAsync(int idApParm, object userState) {
            if ((this.GetApParmOperationCompleted == null)) {
                this.GetApParmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApParmOperationCompleted);
            }
            this.InvokeAsync("GetApParm", new object[] {
                        idApParm}, this.GetApParmOperationCompleted, userState);
        }
        
        private void OnGetApParmOperationCompleted(object arg) {
            if ((this.GetApParmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApParmCompleted(this, new GetApParmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetApView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CApView GetApView(int idApView) {
            object[] results = this.Invoke("GetApView", new object[] {
                        idApView});
            return ((CApView)(results[0]));
        }
        
        /// <remarks/>
        public void GetApViewAsync(int idApView) {
            this.GetApViewAsync(idApView, null);
        }
        
        /// <remarks/>
        public void GetApViewAsync(int idApView, object userState) {
            if ((this.GetApViewOperationCompleted == null)) {
                this.GetApViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetApViewOperationCompleted);
            }
            this.InvokeAsync("GetApView", new object[] {
                        idApView}, this.GetApViewOperationCompleted, userState);
        }
        
        private void OnGetApViewOperationCompleted(object arg) {
            if ((this.GetApViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetApViewCompleted(this, new GetApViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetApView", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetApView(int idProcess, string tag1, string tag2, string tag3) {
            this.Invoke("SetApView", new object[] {
                        idProcess,
                        tag1,
                        tag2,
                        tag3});
        }
        
        /// <remarks/>
        public void SetApViewAsync(int idProcess, string tag1, string tag2, string tag3) {
            this.SetApViewAsync(idProcess, tag1, tag2, tag3, null);
        }
        
        /// <remarks/>
        public void SetApViewAsync(int idProcess, string tag1, string tag2, string tag3, object userState) {
            if ((this.SetApViewOperationCompleted == null)) {
                this.SetApViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetApViewOperationCompleted);
            }
            this.InvokeAsync("SetApView", new object[] {
                        idProcess,
                        tag1,
                        tag2,
                        tag3}, this.SetApViewOperationCompleted, userState);
        }
        
        private void OnSetApViewOperationCompleted(object arg) {
            if ((this.SetApViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetApViewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WorkFinish", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool WorkFinish(int idApParm) {
            object[] results = this.Invoke("WorkFinish", new object[] {
                        idApParm});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void WorkFinishAsync(int idApParm) {
            this.WorkFinishAsync(idApParm, null);
        }
        
        /// <remarks/>
        public void WorkFinishAsync(int idApParm, object userState) {
            if ((this.WorkFinishOperationCompleted == null)) {
                this.WorkFinishOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWorkFinishOperationCompleted);
            }
            this.InvokeAsync("WorkFinish", new object[] {
                        idApParm}, this.WorkFinishOperationCompleted, userState);
        }
        
        private void OnWorkFinishOperationCompleted(object arg) {
            if ((this.WorkFinishCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WorkFinishCompleted(this, new WorkFinishCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CApParm {
        
        private int processFlow_idField;
        
        private int processNode_autoField;
        
        private int processCheck_autoField;
        
        private string role_idField;
        
        private string emp_idField;
        
        /// <remarks/>
        public int ProcessFlow_id {
            get {
                return this.processFlow_idField;
            }
            set {
                this.processFlow_idField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessNode_auto {
            get {
                return this.processNode_autoField;
            }
            set {
                this.processNode_autoField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessCheck_auto {
            get {
                return this.processCheck_autoField;
            }
            set {
                this.processCheck_autoField = value;
            }
        }
        
        /// <remarks/>
        public string Role_id {
            get {
                return this.role_idField;
            }
            set {
                this.role_idField = value;
            }
        }
        
        /// <remarks/>
        public string Emp_id {
            get {
                return this.emp_idField;
            }
            set {
                this.emp_idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CApView {
        
        private int processFlow_idField;
        
        private string role_idField;
        
        private string emp_idField;
        
        private string tag1Field;
        
        private string tag2Field;
        
        private string tag3Field;
        
        /// <remarks/>
        public int ProcessFlow_id {
            get {
                return this.processFlow_idField;
            }
            set {
                this.processFlow_idField = value;
            }
        }
        
        /// <remarks/>
        public string Role_id {
            get {
                return this.role_idField;
            }
            set {
                this.role_idField = value;
            }
        }
        
        /// <remarks/>
        public string Emp_id {
            get {
                return this.emp_idField;
            }
            set {
                this.emp_idField = value;
            }
        }
        
        /// <remarks/>
        public string tag1 {
            get {
                return this.tag1Field;
            }
            set {
                this.tag1Field = value;
            }
        }
        
        /// <remarks/>
        public string tag2 {
            get {
                return this.tag2Field;
            }
            set {
                this.tag2Field = value;
            }
        }
        
        /// <remarks/>
        public string tag3 {
            get {
                return this.tag3Field;
            }
            set {
                this.tag3Field = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetProcessIDCompletedEventHandler(object sender, GetProcessIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void FlowStartCompletedEventHandler(object sender, FlowStartCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FlowStartCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FlowStartCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void FlowShareCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetApParmCompletedEventHandler(object sender, GetApParmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApParmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApParmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CApParm Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CApParm)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetApViewCompletedEventHandler(object sender, GetApViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetApViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetApViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CApView Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CApView)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void SetApViewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void WorkFinishCompletedEventHandler(object sender, WorkFinishCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WorkFinishCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WorkFinishCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591