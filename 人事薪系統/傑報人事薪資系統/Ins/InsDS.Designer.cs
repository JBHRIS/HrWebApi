//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JBHR.Ins {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("InsDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class InsDS : global::System.Data.DataSet {
        
        private INSURLVDataTable tableINSURLV;
        
        private INSLABDataTable tableINSLAB;
        
        private LARCODEDataTable tableLARCODE;
        
        private HARCODEDataTable tableHARCODE;
        
        private INSNAMEDataTable tableINSNAME;
        
        private INSCOMPDataTable tableINSCOMP;
        
        private INPOLABDataTable tableINPOLAB;
        
        private INSURCDDataTable tableINSURCD;
        
        private INSUR_TYPEDataTable tableINSUR_TYPE;
        
        private SPTYPDataTable tableSPTYP;
        
        private WBSPTYPDataTable tableWBSPTYP;
        
        private FAMILYDataTable tableFAMILY;
        
        private INSCOUNTRYDataTable tableINSCOUNTRY;
        
        private U_SYS4DataTable tableU_SYS4;
        
        private V_BASEDataTable tableV_BASE;
        
        private INSGRPDataTable tableINSGRP;
        
        private INSGRFDataTable tableINSGRF;
        
        private INSGRLVDataTable tableINSGRLV;
        
        private YRINSURDataTable tableYRINSUR;
        
        private FRM3AZDataTable tableFRM3AZ;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public InsDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected InsDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["INSURLV"] != null)) {
                    base.Tables.Add(new INSURLVDataTable(ds.Tables["INSURLV"]));
                }
                if ((ds.Tables["INSLAB"] != null)) {
                    base.Tables.Add(new INSLABDataTable(ds.Tables["INSLAB"]));
                }
                if ((ds.Tables["LARCODE"] != null)) {
                    base.Tables.Add(new LARCODEDataTable(ds.Tables["LARCODE"]));
                }
                if ((ds.Tables["HARCODE"] != null)) {
                    base.Tables.Add(new HARCODEDataTable(ds.Tables["HARCODE"]));
                }
                if ((ds.Tables["INSNAME"] != null)) {
                    base.Tables.Add(new INSNAMEDataTable(ds.Tables["INSNAME"]));
                }
                if ((ds.Tables["INSCOMP"] != null)) {
                    base.Tables.Add(new INSCOMPDataTable(ds.Tables["INSCOMP"]));
                }
                if ((ds.Tables["INPOLAB"] != null)) {
                    base.Tables.Add(new INPOLABDataTable(ds.Tables["INPOLAB"]));
                }
                if ((ds.Tables["INSURCD"] != null)) {
                    base.Tables.Add(new INSURCDDataTable(ds.Tables["INSURCD"]));
                }
                if ((ds.Tables["INSUR_TYPE"] != null)) {
                    base.Tables.Add(new INSUR_TYPEDataTable(ds.Tables["INSUR_TYPE"]));
                }
                if ((ds.Tables["SPTYP"] != null)) {
                    base.Tables.Add(new SPTYPDataTable(ds.Tables["SPTYP"]));
                }
                if ((ds.Tables["WBSPTYP"] != null)) {
                    base.Tables.Add(new WBSPTYPDataTable(ds.Tables["WBSPTYP"]));
                }
                if ((ds.Tables["FAMILY"] != null)) {
                    base.Tables.Add(new FAMILYDataTable(ds.Tables["FAMILY"]));
                }
                if ((ds.Tables["INSCOUNTRY"] != null)) {
                    base.Tables.Add(new INSCOUNTRYDataTable(ds.Tables["INSCOUNTRY"]));
                }
                if ((ds.Tables["U_SYS4"] != null)) {
                    base.Tables.Add(new U_SYS4DataTable(ds.Tables["U_SYS4"]));
                }
                if ((ds.Tables["V_BASE"] != null)) {
                    base.Tables.Add(new V_BASEDataTable(ds.Tables["V_BASE"]));
                }
                if ((ds.Tables["INSGRP"] != null)) {
                    base.Tables.Add(new INSGRPDataTable(ds.Tables["INSGRP"]));
                }
                if ((ds.Tables["INSGRF"] != null)) {
                    base.Tables.Add(new INSGRFDataTable(ds.Tables["INSGRF"]));
                }
                if ((ds.Tables["INSGRLV"] != null)) {
                    base.Tables.Add(new INSGRLVDataTable(ds.Tables["INSGRLV"]));
                }
                if ((ds.Tables["YRINSUR"] != null)) {
                    base.Tables.Add(new YRINSURDataTable(ds.Tables["YRINSUR"]));
                }
                if ((ds.Tables["FRM3AZ"] != null)) {
                    base.Tables.Add(new FRM3AZDataTable(ds.Tables["FRM3AZ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSURLVDataTable INSURLV {
            get {
                return this.tableINSURLV;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSLABDataTable INSLAB {
            get {
                return this.tableINSLAB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LARCODEDataTable LARCODE {
            get {
                return this.tableLARCODE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HARCODEDataTable HARCODE {
            get {
                return this.tableHARCODE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSNAMEDataTable INSNAME {
            get {
                return this.tableINSNAME;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSCOMPDataTable INSCOMP {
            get {
                return this.tableINSCOMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INPOLABDataTable INPOLAB {
            get {
                return this.tableINPOLAB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSURCDDataTable INSURCD {
            get {
                return this.tableINSURCD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSUR_TYPEDataTable INSUR_TYPE {
            get {
                return this.tableINSUR_TYPE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SPTYPDataTable SPTYP {
            get {
                return this.tableSPTYP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public WBSPTYPDataTable WBSPTYP {
            get {
                return this.tableWBSPTYP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FAMILYDataTable FAMILY {
            get {
                return this.tableFAMILY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSCOUNTRYDataTable INSCOUNTRY {
            get {
                return this.tableINSCOUNTRY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public U_SYS4DataTable U_SYS4 {
            get {
                return this.tableU_SYS4;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public V_BASEDataTable V_BASE {
            get {
                return this.tableV_BASE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSGRPDataTable INSGRP {
            get {
                return this.tableINSGRP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSGRFDataTable INSGRF {
            get {
                return this.tableINSGRF;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSGRLVDataTable INSGRLV {
            get {
                return this.tableINSGRLV;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public YRINSURDataTable YRINSUR {
            get {
                return this.tableYRINSUR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FRM3AZDataTable FRM3AZ {
            get {
                return this.tableFRM3AZ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            InsDS cln = ((InsDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["INSURLV"] != null)) {
                    base.Tables.Add(new INSURLVDataTable(ds.Tables["INSURLV"]));
                }
                if ((ds.Tables["INSLAB"] != null)) {
                    base.Tables.Add(new INSLABDataTable(ds.Tables["INSLAB"]));
                }
                if ((ds.Tables["LARCODE"] != null)) {
                    base.Tables.Add(new LARCODEDataTable(ds.Tables["LARCODE"]));
                }
                if ((ds.Tables["HARCODE"] != null)) {
                    base.Tables.Add(new HARCODEDataTable(ds.Tables["HARCODE"]));
                }
                if ((ds.Tables["INSNAME"] != null)) {
                    base.Tables.Add(new INSNAMEDataTable(ds.Tables["INSNAME"]));
                }
                if ((ds.Tables["INSCOMP"] != null)) {
                    base.Tables.Add(new INSCOMPDataTable(ds.Tables["INSCOMP"]));
                }
                if ((ds.Tables["INPOLAB"] != null)) {
                    base.Tables.Add(new INPOLABDataTable(ds.Tables["INPOLAB"]));
                }
                if ((ds.Tables["INSURCD"] != null)) {
                    base.Tables.Add(new INSURCDDataTable(ds.Tables["INSURCD"]));
                }
                if ((ds.Tables["INSUR_TYPE"] != null)) {
                    base.Tables.Add(new INSUR_TYPEDataTable(ds.Tables["INSUR_TYPE"]));
                }
                if ((ds.Tables["SPTYP"] != null)) {
                    base.Tables.Add(new SPTYPDataTable(ds.Tables["SPTYP"]));
                }
                if ((ds.Tables["WBSPTYP"] != null)) {
                    base.Tables.Add(new WBSPTYPDataTable(ds.Tables["WBSPTYP"]));
                }
                if ((ds.Tables["FAMILY"] != null)) {
                    base.Tables.Add(new FAMILYDataTable(ds.Tables["FAMILY"]));
                }
                if ((ds.Tables["INSCOUNTRY"] != null)) {
                    base.Tables.Add(new INSCOUNTRYDataTable(ds.Tables["INSCOUNTRY"]));
                }
                if ((ds.Tables["U_SYS4"] != null)) {
                    base.Tables.Add(new U_SYS4DataTable(ds.Tables["U_SYS4"]));
                }
                if ((ds.Tables["V_BASE"] != null)) {
                    base.Tables.Add(new V_BASEDataTable(ds.Tables["V_BASE"]));
                }
                if ((ds.Tables["INSGRP"] != null)) {
                    base.Tables.Add(new INSGRPDataTable(ds.Tables["INSGRP"]));
                }
                if ((ds.Tables["INSGRF"] != null)) {
                    base.Tables.Add(new INSGRFDataTable(ds.Tables["INSGRF"]));
                }
                if ((ds.Tables["INSGRLV"] != null)) {
                    base.Tables.Add(new INSGRLVDataTable(ds.Tables["INSGRLV"]));
                }
                if ((ds.Tables["YRINSUR"] != null)) {
                    base.Tables.Add(new YRINSURDataTable(ds.Tables["YRINSUR"]));
                }
                if ((ds.Tables["FRM3AZ"] != null)) {
                    base.Tables.Add(new FRM3AZDataTable(ds.Tables["FRM3AZ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableINSURLV = ((INSURLVDataTable)(base.Tables["INSURLV"]));
            if ((initTable == true)) {
                if ((this.tableINSURLV != null)) {
                    this.tableINSURLV.InitVars();
                }
            }
            this.tableINSLAB = ((INSLABDataTable)(base.Tables["INSLAB"]));
            if ((initTable == true)) {
                if ((this.tableINSLAB != null)) {
                    this.tableINSLAB.InitVars();
                }
            }
            this.tableLARCODE = ((LARCODEDataTable)(base.Tables["LARCODE"]));
            if ((initTable == true)) {
                if ((this.tableLARCODE != null)) {
                    this.tableLARCODE.InitVars();
                }
            }
            this.tableHARCODE = ((HARCODEDataTable)(base.Tables["HARCODE"]));
            if ((initTable == true)) {
                if ((this.tableHARCODE != null)) {
                    this.tableHARCODE.InitVars();
                }
            }
            this.tableINSNAME = ((INSNAMEDataTable)(base.Tables["INSNAME"]));
            if ((initTable == true)) {
                if ((this.tableINSNAME != null)) {
                    this.tableINSNAME.InitVars();
                }
            }
            this.tableINSCOMP = ((INSCOMPDataTable)(base.Tables["INSCOMP"]));
            if ((initTable == true)) {
                if ((this.tableINSCOMP != null)) {
                    this.tableINSCOMP.InitVars();
                }
            }
            this.tableINPOLAB = ((INPOLABDataTable)(base.Tables["INPOLAB"]));
            if ((initTable == true)) {
                if ((this.tableINPOLAB != null)) {
                    this.tableINPOLAB.InitVars();
                }
            }
            this.tableINSURCD = ((INSURCDDataTable)(base.Tables["INSURCD"]));
            if ((initTable == true)) {
                if ((this.tableINSURCD != null)) {
                    this.tableINSURCD.InitVars();
                }
            }
            this.tableINSUR_TYPE = ((INSUR_TYPEDataTable)(base.Tables["INSUR_TYPE"]));
            if ((initTable == true)) {
                if ((this.tableINSUR_TYPE != null)) {
                    this.tableINSUR_TYPE.InitVars();
                }
            }
            this.tableSPTYP = ((SPTYPDataTable)(base.Tables["SPTYP"]));
            if ((initTable == true)) {
                if ((this.tableSPTYP != null)) {
                    this.tableSPTYP.InitVars();
                }
            }
            this.tableWBSPTYP = ((WBSPTYPDataTable)(base.Tables["WBSPTYP"]));
            if ((initTable == true)) {
                if ((this.tableWBSPTYP != null)) {
                    this.tableWBSPTYP.InitVars();
                }
            }
            this.tableFAMILY = ((FAMILYDataTable)(base.Tables["FAMILY"]));
            if ((initTable == true)) {
                if ((this.tableFAMILY != null)) {
                    this.tableFAMILY.InitVars();
                }
            }
            this.tableINSCOUNTRY = ((INSCOUNTRYDataTable)(base.Tables["INSCOUNTRY"]));
            if ((initTable == true)) {
                if ((this.tableINSCOUNTRY != null)) {
                    this.tableINSCOUNTRY.InitVars();
                }
            }
            this.tableU_SYS4 = ((U_SYS4DataTable)(base.Tables["U_SYS4"]));
            if ((initTable == true)) {
                if ((this.tableU_SYS4 != null)) {
                    this.tableU_SYS4.InitVars();
                }
            }
            this.tableV_BASE = ((V_BASEDataTable)(base.Tables["V_BASE"]));
            if ((initTable == true)) {
                if ((this.tableV_BASE != null)) {
                    this.tableV_BASE.InitVars();
                }
            }
            this.tableINSGRP = ((INSGRPDataTable)(base.Tables["INSGRP"]));
            if ((initTable == true)) {
                if ((this.tableINSGRP != null)) {
                    this.tableINSGRP.InitVars();
                }
            }
            this.tableINSGRF = ((INSGRFDataTable)(base.Tables["INSGRF"]));
            if ((initTable == true)) {
                if ((this.tableINSGRF != null)) {
                    this.tableINSGRF.InitVars();
                }
            }
            this.tableINSGRLV = ((INSGRLVDataTable)(base.Tables["INSGRLV"]));
            if ((initTable == true)) {
                if ((this.tableINSGRLV != null)) {
                    this.tableINSGRLV.InitVars();
                }
            }
            this.tableYRINSUR = ((YRINSURDataTable)(base.Tables["YRINSUR"]));
            if ((initTable == true)) {
                if ((this.tableYRINSUR != null)) {
                    this.tableYRINSUR.InitVars();
                }
            }
            this.tableFRM3AZ = ((FRM3AZDataTable)(base.Tables["FRM3AZ"]));
            if ((initTable == true)) {
                if ((this.tableFRM3AZ != null)) {
                    this.tableFRM3AZ.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "InsDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MainDS.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableINSURLV = new INSURLVDataTable();
            base.Tables.Add(this.tableINSURLV);
            this.tableINSLAB = new INSLABDataTable();
            base.Tables.Add(this.tableINSLAB);
            this.tableLARCODE = new LARCODEDataTable();
            base.Tables.Add(this.tableLARCODE);
            this.tableHARCODE = new HARCODEDataTable();
            base.Tables.Add(this.tableHARCODE);
            this.tableINSNAME = new INSNAMEDataTable();
            base.Tables.Add(this.tableINSNAME);
            this.tableINSCOMP = new INSCOMPDataTable();
            base.Tables.Add(this.tableINSCOMP);
            this.tableINPOLAB = new INPOLABDataTable();
            base.Tables.Add(this.tableINPOLAB);
            this.tableINSURCD = new INSURCDDataTable();
            base.Tables.Add(this.tableINSURCD);
            this.tableINSUR_TYPE = new INSUR_TYPEDataTable();
            base.Tables.Add(this.tableINSUR_TYPE);
            this.tableSPTYP = new SPTYPDataTable();
            base.Tables.Add(this.tableSPTYP);
            this.tableWBSPTYP = new WBSPTYPDataTable();
            base.Tables.Add(this.tableWBSPTYP);
            this.tableFAMILY = new FAMILYDataTable();
            base.Tables.Add(this.tableFAMILY);
            this.tableINSCOUNTRY = new INSCOUNTRYDataTable();
            base.Tables.Add(this.tableINSCOUNTRY);
            this.tableU_SYS4 = new U_SYS4DataTable();
            base.Tables.Add(this.tableU_SYS4);
            this.tableV_BASE = new V_BASEDataTable();
            base.Tables.Add(this.tableV_BASE);
            this.tableINSGRP = new INSGRPDataTable();
            base.Tables.Add(this.tableINSGRP);
            this.tableINSGRF = new INSGRFDataTable();
            base.Tables.Add(this.tableINSGRF);
            this.tableINSGRLV = new INSGRLVDataTable();
            base.Tables.Add(this.tableINSGRLV);
            this.tableYRINSUR = new YRINSURDataTable();
            base.Tables.Add(this.tableYRINSUR);
            this.tableFRM3AZ = new FRM3AZDataTable();
            base.Tables.Add(this.tableFRM3AZ);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSURLV() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSLAB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeLARCODE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeHARCODE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSNAME() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSCOMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINPOLAB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSURCD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSUR_TYPE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeSPTYP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeWBSPTYP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeFAMILY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSCOUNTRY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeU_SYS4() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeV_BASE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSGRP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSGRF() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeINSGRLV() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeYRINSUR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeFRM3AZ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            InsDS ds = new InsDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSURLVRowChangeEventHandler(object sender, INSURLVRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSLABRowChangeEventHandler(object sender, INSLABRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void LARCODERowChangeEventHandler(object sender, LARCODERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void HARCODERowChangeEventHandler(object sender, HARCODERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSNAMERowChangeEventHandler(object sender, INSNAMERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSCOMPRowChangeEventHandler(object sender, INSCOMPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INPOLABRowChangeEventHandler(object sender, INPOLABRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSURCDRowChangeEventHandler(object sender, INSURCDRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSUR_TYPERowChangeEventHandler(object sender, INSUR_TYPERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void SPTYPRowChangeEventHandler(object sender, SPTYPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void WBSPTYPRowChangeEventHandler(object sender, WBSPTYPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void FAMILYRowChangeEventHandler(object sender, FAMILYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSCOUNTRYRowChangeEventHandler(object sender, INSCOUNTRYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void U_SYS4RowChangeEventHandler(object sender, U_SYS4RowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void V_BASERowChangeEventHandler(object sender, V_BASERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSGRPRowChangeEventHandler(object sender, INSGRPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSGRFRowChangeEventHandler(object sender, INSGRFRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void INSGRLVRowChangeEventHandler(object sender, INSGRLVRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void YRINSURRowChangeEventHandler(object sender, YRINSURRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void FRM3AZRowChangeEventHandler(object sender, FRM3AZRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSURLVDataTable : global::System.Data.TypedTableBase<INSURLVRow> {
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnEFF_DATEL;
            
            private global::System.Data.DataColumn columnLFF_DATEL;
            
            private global::System.Data.DataColumn columnEFF_DATEH;
            
            private global::System.Data.DataColumn columnLFF_DATEH;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnEFF_DATER;
            
            private global::System.Data.DataColumn columnLFF_DATER;
            
            private global::System.Data.DataColumn columnEFF_RATE;
            
            private global::System.Data.DataColumn columnEFF_DATEJ;
            
            private global::System.Data.DataColumn columnLFF_DATEJ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURLVDataTable() {
                this.TableName = "INSURLV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSURLVDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSURLVDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EFF_DATELColumn {
                get {
                    return this.columnEFF_DATEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LFF_DATELColumn {
                get {
                    return this.columnLFF_DATEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EFF_DATEHColumn {
                get {
                    return this.columnEFF_DATEH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LFF_DATEHColumn {
                get {
                    return this.columnLFF_DATEH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EFF_DATERColumn {
                get {
                    return this.columnEFF_DATER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LFF_DATERColumn {
                get {
                    return this.columnLFF_DATER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EFF_RATEColumn {
                get {
                    return this.columnEFF_RATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EFF_DATEJColumn {
                get {
                    return this.columnEFF_DATEJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LFF_DATEJColumn {
                get {
                    return this.columnLFF_DATEJ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURLVRow this[int index] {
                get {
                    return ((INSURLVRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURLVRowChangeEventHandler INSURLVRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURLVRowChangeEventHandler INSURLVRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURLVRowChangeEventHandler INSURLVRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURLVRowChangeEventHandler INSURLVRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSURLVRow(INSURLVRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURLVRow AddINSURLVRow(decimal AMT, System.DateTime EFF_DATEL, System.DateTime LFF_DATEL, System.DateTime EFF_DATEH, System.DateTime LFF_DATEH, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime EFF_DATER, System.DateTime LFF_DATER, decimal EFF_RATE, System.DateTime EFF_DATEJ, System.DateTime LFF_DATEJ) {
                INSURLVRow rowINSURLVRow = ((INSURLVRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AMT,
                        EFF_DATEL,
                        LFF_DATEL,
                        EFF_DATEH,
                        LFF_DATEH,
                        KEY_MAN,
                        KEY_DATE,
                        EFF_DATER,
                        LFF_DATER,
                        EFF_RATE,
                        EFF_DATEJ,
                        LFF_DATEJ};
                rowINSURLVRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSURLVRow);
                return rowINSURLVRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURLVRow FindByAMT(decimal AMT) {
                return ((INSURLVRow)(this.Rows.Find(new object[] {
                            AMT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSURLVDataTable cln = ((INSURLVDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSURLVDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnAMT = base.Columns["AMT"];
                this.columnEFF_DATEL = base.Columns["EFF_DATEL"];
                this.columnLFF_DATEL = base.Columns["LFF_DATEL"];
                this.columnEFF_DATEH = base.Columns["EFF_DATEH"];
                this.columnLFF_DATEH = base.Columns["LFF_DATEH"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnEFF_DATER = base.Columns["EFF_DATER"];
                this.columnLFF_DATER = base.Columns["LFF_DATER"];
                this.columnEFF_RATE = base.Columns["EFF_RATE"];
                this.columnEFF_DATEJ = base.Columns["EFF_DATEJ"];
                this.columnLFF_DATEJ = base.Columns["LFF_DATEJ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnEFF_DATEL = new global::System.Data.DataColumn("EFF_DATEL", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEFF_DATEL);
                this.columnLFF_DATEL = new global::System.Data.DataColumn("LFF_DATEL", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFF_DATEL);
                this.columnEFF_DATEH = new global::System.Data.DataColumn("EFF_DATEH", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEFF_DATEH);
                this.columnLFF_DATEH = new global::System.Data.DataColumn("LFF_DATEH", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFF_DATEH);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnEFF_DATER = new global::System.Data.DataColumn("EFF_DATER", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEFF_DATER);
                this.columnLFF_DATER = new global::System.Data.DataColumn("LFF_DATER", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFF_DATER);
                this.columnEFF_RATE = new global::System.Data.DataColumn("EFF_RATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEFF_RATE);
                this.columnEFF_DATEJ = new global::System.Data.DataColumn("EFF_DATEJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEFF_DATEJ);
                this.columnLFF_DATEJ = new global::System.Data.DataColumn("LFF_DATEJ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLFF_DATEJ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAMT}, true));
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Unique = true;
                this.columnAMT.Caption = "投保金額";
                this.columnEFF_DATEL.AllowDBNull = false;
                this.columnEFF_DATEL.Caption = "勞保生效日";
                this.columnLFF_DATEL.AllowDBNull = false;
                this.columnLFF_DATEL.Caption = "勞保失效日";
                this.columnEFF_DATEH.AllowDBNull = false;
                this.columnEFF_DATEH.Caption = "健保生效日";
                this.columnLFF_DATEH.AllowDBNull = false;
                this.columnLFF_DATEH.Caption = "健保失效日";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnEFF_DATER.AllowDBNull = false;
                this.columnEFF_DATER.Caption = "勞退生效日";
                this.columnLFF_DATER.AllowDBNull = false;
                this.columnLFF_DATER.Caption = "勞退失效日";
                this.columnEFF_RATE.AllowDBNull = false;
                this.columnEFF_RATE.Caption = "健保費率";
                this.columnEFF_DATEJ.AllowDBNull = false;
                this.columnEFF_DATEJ.Caption = "職災生效日";
                this.columnLFF_DATEJ.AllowDBNull = false;
                this.columnLFF_DATEJ.Caption = "職災失效日";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURLVRow NewINSURLVRow() {
                return ((INSURLVRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSURLVRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSURLVRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSURLVRowChanged != null)) {
                    this.INSURLVRowChanged(this, new INSURLVRowChangeEvent(((INSURLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSURLVRowChanging != null)) {
                    this.INSURLVRowChanging(this, new INSURLVRowChangeEvent(((INSURLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSURLVRowDeleted != null)) {
                    this.INSURLVRowDeleted(this, new INSURLVRowChangeEvent(((INSURLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSURLVRowDeleting != null)) {
                    this.INSURLVRowDeleting(this, new INSURLVRowChangeEvent(((INSURLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSURLVRow(INSURLVRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSURLVDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSLABDataTable : global::System.Data.TypedTableBase<INSLABRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnIN_DATE;
            
            private global::System.Data.DataColumn columnOUT_DATE;
            
            private global::System.Data.DataColumn columnLRATE_CODE;
            
            private global::System.Data.DataColumn columnHRATE_CODE;
            
            private global::System.Data.DataColumn columnL_AMT;
            
            private global::System.Data.DataColumn columnH_AMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnCODE1;
            
            private global::System.Data.DataColumn columnNOTE;
            
            private global::System.Data.DataColumn columnS_NO;
            
            private global::System.Data.DataColumn columnR_AMT;
            
            private global::System.Data.DataColumn columnSPTYP;
            
            private global::System.Data.DataColumn columnWBSPTYP;
            
            private global::System.Data.DataColumn columnROUT_DATE;
            
            private global::System.Data.DataColumn columnNOSUP;
            
            private global::System.Data.DataColumn columnJ_AMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSLABDataTable() {
                this.TableName = "INSLAB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSLABDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSLABDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IN_DATEColumn {
                get {
                    return this.columnIN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OUT_DATEColumn {
                get {
                    return this.columnOUT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LRATE_CODEColumn {
                get {
                    return this.columnLRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn HRATE_CODEColumn {
                get {
                    return this.columnHRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn L_AMTColumn {
                get {
                    return this.columnL_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn H_AMTColumn {
                get {
                    return this.columnH_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODE1Column {
                get {
                    return this.columnCODE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOTEColumn {
                get {
                    return this.columnNOTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn S_NOColumn {
                get {
                    return this.columnS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn R_AMTColumn {
                get {
                    return this.columnR_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SPTYPColumn {
                get {
                    return this.columnSPTYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn WBSPTYPColumn {
                get {
                    return this.columnWBSPTYP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ROUT_DATEColumn {
                get {
                    return this.columnROUT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOSUPColumn {
                get {
                    return this.columnNOSUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn J_AMTColumn {
                get {
                    return this.columnJ_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSLABRow this[int index] {
                get {
                    return ((INSLABRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSLABRowChangeEventHandler INSLABRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSLABRowChangeEventHandler INSLABRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSLABRowChangeEventHandler INSLABRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSLABRowChangeEventHandler INSLABRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSLABRow(INSLABRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSLABRow AddINSLABRow(
                        string NOBR, 
                        string FA_IDNO, 
                        string CODE, 
                        System.DateTime IN_DATE, 
                        System.DateTime OUT_DATE, 
                        string LRATE_CODE, 
                        string HRATE_CODE, 
                        decimal L_AMT, 
                        decimal H_AMT, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string SEQ, 
                        string CODE1, 
                        string NOTE, 
                        string S_NO, 
                        decimal R_AMT, 
                        string SPTYP, 
                        string WBSPTYP, 
                        System.DateTime ROUT_DATE, 
                        bool NOSUP, 
                        decimal J_AMT) {
                INSLABRow rowINSLABRow = ((INSLABRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        FA_IDNO,
                        CODE,
                        IN_DATE,
                        OUT_DATE,
                        LRATE_CODE,
                        HRATE_CODE,
                        L_AMT,
                        H_AMT,
                        KEY_MAN,
                        KEY_DATE,
                        SEQ,
                        CODE1,
                        NOTE,
                        S_NO,
                        R_AMT,
                        SPTYP,
                        WBSPTYP,
                        ROUT_DATE,
                        NOSUP,
                        J_AMT};
                rowINSLABRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSLABRow);
                return rowINSLABRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSLABRow FindByNOBRFA_IDNOIN_DATE(string NOBR, string FA_IDNO, System.DateTime IN_DATE) {
                return ((INSLABRow)(this.Rows.Find(new object[] {
                            NOBR,
                            FA_IDNO,
                            IN_DATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSLABDataTable cln = ((INSLABDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSLABDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnCODE = base.Columns["CODE"];
                this.columnIN_DATE = base.Columns["IN_DATE"];
                this.columnOUT_DATE = base.Columns["OUT_DATE"];
                this.columnLRATE_CODE = base.Columns["LRATE_CODE"];
                this.columnHRATE_CODE = base.Columns["HRATE_CODE"];
                this.columnL_AMT = base.Columns["L_AMT"];
                this.columnH_AMT = base.Columns["H_AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnCODE1 = base.Columns["CODE1"];
                this.columnNOTE = base.Columns["NOTE"];
                this.columnS_NO = base.Columns["S_NO"];
                this.columnR_AMT = base.Columns["R_AMT"];
                this.columnSPTYP = base.Columns["SPTYP"];
                this.columnWBSPTYP = base.Columns["WBSPTYP"];
                this.columnROUT_DATE = base.Columns["ROUT_DATE"];
                this.columnNOSUP = base.Columns["NOSUP"];
                this.columnJ_AMT = base.Columns["J_AMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnIN_DATE = new global::System.Data.DataColumn("IN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_DATE);
                this.columnOUT_DATE = new global::System.Data.DataColumn("OUT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_DATE);
                this.columnLRATE_CODE = new global::System.Data.DataColumn("LRATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLRATE_CODE);
                this.columnHRATE_CODE = new global::System.Data.DataColumn("HRATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRATE_CODE);
                this.columnL_AMT = new global::System.Data.DataColumn("L_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_AMT);
                this.columnH_AMT = new global::System.Data.DataColumn("H_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH_AMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnCODE1 = new global::System.Data.DataColumn("CODE1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE1);
                this.columnNOTE = new global::System.Data.DataColumn("NOTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTE);
                this.columnS_NO = new global::System.Data.DataColumn("S_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NO);
                this.columnR_AMT = new global::System.Data.DataColumn("R_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR_AMT);
                this.columnSPTYP = new global::System.Data.DataColumn("SPTYP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPTYP);
                this.columnWBSPTYP = new global::System.Data.DataColumn("WBSPTYP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWBSPTYP);
                this.columnROUT_DATE = new global::System.Data.DataColumn("ROUT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROUT_DATE);
                this.columnNOSUP = new global::System.Data.DataColumn("NOSUP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOSUP);
                this.columnJ_AMT = new global::System.Data.DataColumn("J_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJ_AMT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnFA_IDNO,
                                this.columnIN_DATE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.Caption = "異動狀態";
                this.columnCODE.MaxLength = 50;
                this.columnIN_DATE.AllowDBNull = false;
                this.columnIN_DATE.Caption = "加保日期";
                this.columnOUT_DATE.AllowDBNull = false;
                this.columnOUT_DATE.Caption = "退保日期";
                this.columnLRATE_CODE.AllowDBNull = false;
                this.columnLRATE_CODE.Caption = "勞保負擔比率";
                this.columnLRATE_CODE.MaxLength = 50;
                this.columnHRATE_CODE.AllowDBNull = false;
                this.columnHRATE_CODE.Caption = "健保負擔比率";
                this.columnHRATE_CODE.MaxLength = 50;
                this.columnL_AMT.AllowDBNull = false;
                this.columnL_AMT.Caption = "勞保投保金額";
                this.columnH_AMT.AllowDBNull = false;
                this.columnH_AMT.Caption = "健保投保金額";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.MaxLength = 50;
                this.columnCODE1.AllowDBNull = false;
                this.columnCODE1.Caption = "異動原因";
                this.columnCODE1.MaxLength = 50;
                this.columnNOTE.AllowDBNull = false;
                this.columnNOTE.Caption = "備註";
                this.columnNOTE.MaxLength = 50;
                this.columnS_NO.AllowDBNull = false;
                this.columnS_NO.Caption = "投保單位";
                this.columnS_NO.MaxLength = 50;
                this.columnR_AMT.AllowDBNull = false;
                this.columnR_AMT.Caption = "勞退月提工資";
                this.columnSPTYP.AllowDBNull = false;
                this.columnSPTYP.Caption = "特殊身分別";
                this.columnSPTYP.MaxLength = 50;
                this.columnWBSPTYP.AllowDBNull = false;
                this.columnWBSPTYP.Caption = "法特殊身分別";
                this.columnWBSPTYP.MaxLength = 50;
                this.columnROUT_DATE.Caption = "勞退停繳日期";
                this.columnNOSUP.AllowDBNull = false;
                this.columnNOSUP.Caption = "免收補充保費";
                this.columnJ_AMT.AllowDBNull = false;
                this.columnJ_AMT.Caption = "職災投保金額";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSLABRow NewINSLABRow() {
                return ((INSLABRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSLABRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSLABRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSLABRowChanged != null)) {
                    this.INSLABRowChanged(this, new INSLABRowChangeEvent(((INSLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSLABRowChanging != null)) {
                    this.INSLABRowChanging(this, new INSLABRowChangeEvent(((INSLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSLABRowDeleted != null)) {
                    this.INSLABRowDeleted(this, new INSLABRowChangeEvent(((INSLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSLABRowDeleting != null)) {
                    this.INSLABRowDeleting(this, new INSLABRowChangeEvent(((INSLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSLABRow(INSLABRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSLABDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LARCODEDataTable : global::System.Data.TypedTableBase<LARCODERow> {
            
            private global::System.Data.DataColumn columnRATE_CODE;
            
            private global::System.Data.DataColumn columnRATE_NAME;
            
            private global::System.Data.DataColumn columnNORMALRATE;
            
            private global::System.Data.DataColumn columnLOSJOBRATE;
            
            private global::System.Data.DataColumn columnJOBACCRATE;
            
            private global::System.Data.DataColumn columnSELFCHARGE;
            
            private global::System.Data.DataColumn columnCOMPCHARGE;
            
            private global::System.Data.DataColumn columnPARTIAL;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnNOFUND;
            
            private global::System.Data.DataColumn columnNODISASTER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public LARCODEDataTable() {
                this.TableName = "LARCODE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal LARCODEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected LARCODEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RATE_CODEColumn {
                get {
                    return this.columnRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RATE_NAMEColumn {
                get {
                    return this.columnRATE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NORMALRATEColumn {
                get {
                    return this.columnNORMALRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LOSJOBRATEColumn {
                get {
                    return this.columnLOSJOBRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JOBACCRATEColumn {
                get {
                    return this.columnJOBACCRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SELFCHARGEColumn {
                get {
                    return this.columnSELFCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMPCHARGEColumn {
                get {
                    return this.columnCOMPCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTIALColumn {
                get {
                    return this.columnPARTIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOFUNDColumn {
                get {
                    return this.columnNOFUND;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NODISASTERColumn {
                get {
                    return this.columnNODISASTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public LARCODERow this[int index] {
                get {
                    return ((LARCODERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event LARCODERowChangeEventHandler LARCODERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event LARCODERowChangeEventHandler LARCODERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event LARCODERowChangeEventHandler LARCODERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event LARCODERowChangeEventHandler LARCODERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddLARCODERow(LARCODERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public LARCODERow AddLARCODERow(string RATE_CODE, string RATE_NAME, decimal NORMALRATE, decimal LOSJOBRATE, decimal JOBACCRATE, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, bool NOFUND, bool NODISASTER) {
                LARCODERow rowLARCODERow = ((LARCODERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RATE_CODE,
                        RATE_NAME,
                        NORMALRATE,
                        LOSJOBRATE,
                        JOBACCRATE,
                        SELFCHARGE,
                        COMPCHARGE,
                        PARTIAL,
                        KEY_MAN,
                        KEY_DATE,
                        ADATE,
                        NOFUND,
                        NODISASTER};
                rowLARCODERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLARCODERow);
                return rowLARCODERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public LARCODERow FindByRATE_CODE(string RATE_CODE) {
                return ((LARCODERow)(this.Rows.Find(new object[] {
                            RATE_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LARCODEDataTable cln = ((LARCODEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LARCODEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnRATE_CODE = base.Columns["RATE_CODE"];
                this.columnRATE_NAME = base.Columns["RATE_NAME"];
                this.columnNORMALRATE = base.Columns["NORMALRATE"];
                this.columnLOSJOBRATE = base.Columns["LOSJOBRATE"];
                this.columnJOBACCRATE = base.Columns["JOBACCRATE"];
                this.columnSELFCHARGE = base.Columns["SELFCHARGE"];
                this.columnCOMPCHARGE = base.Columns["COMPCHARGE"];
                this.columnPARTIAL = base.Columns["PARTIAL"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnNOFUND = base.Columns["NOFUND"];
                this.columnNODISASTER = base.Columns["NODISASTER"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnRATE_CODE = new global::System.Data.DataColumn("RATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE_CODE);
                this.columnRATE_NAME = new global::System.Data.DataColumn("RATE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE_NAME);
                this.columnNORMALRATE = new global::System.Data.DataColumn("NORMALRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNORMALRATE);
                this.columnLOSJOBRATE = new global::System.Data.DataColumn("LOSJOBRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOSJOBRATE);
                this.columnJOBACCRATE = new global::System.Data.DataColumn("JOBACCRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBACCRATE);
                this.columnSELFCHARGE = new global::System.Data.DataColumn("SELFCHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELFCHARGE);
                this.columnCOMPCHARGE = new global::System.Data.DataColumn("COMPCHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPCHARGE);
                this.columnPARTIAL = new global::System.Data.DataColumn("PARTIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTIAL);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnNOFUND = new global::System.Data.DataColumn("NOFUND", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOFUND);
                this.columnNODISASTER = new global::System.Data.DataColumn("NODISASTER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNODISASTER);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRATE_CODE}, true));
                this.columnRATE_CODE.AllowDBNull = false;
                this.columnRATE_CODE.Unique = true;
                this.columnRATE_CODE.Caption = "身分代碼";
                this.columnRATE_CODE.MaxLength = 50;
                this.columnRATE_NAME.AllowDBNull = false;
                this.columnRATE_NAME.Caption = "身分名稱";
                this.columnRATE_NAME.MaxLength = 50;
                this.columnNORMALRATE.AllowDBNull = false;
                this.columnNORMALRATE.Caption = "普通事故費率";
                this.columnLOSJOBRATE.AllowDBNull = false;
                this.columnLOSJOBRATE.Caption = "失業給付費率";
                this.columnJOBACCRATE.AllowDBNull = false;
                this.columnJOBACCRATE.Caption = "職業災害費率";
                this.columnSELFCHARGE.AllowDBNull = false;
                this.columnSELFCHARGE.Caption = "員工負擔比例";
                this.columnCOMPCHARGE.AllowDBNull = false;
                this.columnCOMPCHARGE.Caption = "公司負擔比例";
                this.columnPARTIAL.AllowDBNull = false;
                this.columnPARTIAL.Caption = "部份負擔比例";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "生效日期";
                this.columnNOFUND.AllowDBNull = false;
                this.columnNODISASTER.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public LARCODERow NewLARCODERow() {
                return ((LARCODERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LARCODERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LARCODERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LARCODERowChanged != null)) {
                    this.LARCODERowChanged(this, new LARCODERowChangeEvent(((LARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LARCODERowChanging != null)) {
                    this.LARCODERowChanging(this, new LARCODERowChangeEvent(((LARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LARCODERowDeleted != null)) {
                    this.LARCODERowDeleted(this, new LARCODERowChangeEvent(((LARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LARCODERowDeleting != null)) {
                    this.LARCODERowDeleting(this, new LARCODERowChangeEvent(((LARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveLARCODERow(LARCODERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LARCODEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HARCODEDataTable : global::System.Data.TypedTableBase<HARCODERow> {
            
            private global::System.Data.DataColumn columnRATE_CODE;
            
            private global::System.Data.DataColumn columnRATE_NAME;
            
            private global::System.Data.DataColumn columnSELFCHARGE;
            
            private global::System.Data.DataColumn columnCOMPCHARGE;
            
            private global::System.Data.DataColumn columnPARTIAL;
            
            private global::System.Data.DataColumn columnFIX_AMT;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnNOPAYTOP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public HARCODEDataTable() {
                this.TableName = "HARCODE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal HARCODEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected HARCODEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RATE_CODEColumn {
                get {
                    return this.columnRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RATE_NAMEColumn {
                get {
                    return this.columnRATE_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SELFCHARGEColumn {
                get {
                    return this.columnSELFCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMPCHARGEColumn {
                get {
                    return this.columnCOMPCHARGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PARTIALColumn {
                get {
                    return this.columnPARTIAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FIX_AMTColumn {
                get {
                    return this.columnFIX_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOPAYTOPColumn {
                get {
                    return this.columnNOPAYTOP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public HARCODERow this[int index] {
                get {
                    return ((HARCODERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event HARCODERowChangeEventHandler HARCODERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event HARCODERowChangeEventHandler HARCODERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event HARCODERowChangeEventHandler HARCODERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event HARCODERowChangeEventHandler HARCODERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddHARCODERow(HARCODERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public HARCODERow AddHARCODERow(string RATE_CODE, string RATE_NAME, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, decimal FIX_AMT, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, decimal NOPAYTOP) {
                HARCODERow rowHARCODERow = ((HARCODERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        RATE_CODE,
                        RATE_NAME,
                        SELFCHARGE,
                        COMPCHARGE,
                        PARTIAL,
                        FIX_AMT,
                        KEY_MAN,
                        KEY_DATE,
                        ADATE,
                        NOPAYTOP};
                rowHARCODERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHARCODERow);
                return rowHARCODERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public HARCODERow FindByRATE_CODE(string RATE_CODE) {
                return ((HARCODERow)(this.Rows.Find(new object[] {
                            RATE_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                HARCODEDataTable cln = ((HARCODEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HARCODEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnRATE_CODE = base.Columns["RATE_CODE"];
                this.columnRATE_NAME = base.Columns["RATE_NAME"];
                this.columnSELFCHARGE = base.Columns["SELFCHARGE"];
                this.columnCOMPCHARGE = base.Columns["COMPCHARGE"];
                this.columnPARTIAL = base.Columns["PARTIAL"];
                this.columnFIX_AMT = base.Columns["FIX_AMT"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnNOPAYTOP = base.Columns["NOPAYTOP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnRATE_CODE = new global::System.Data.DataColumn("RATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE_CODE);
                this.columnRATE_NAME = new global::System.Data.DataColumn("RATE_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE_NAME);
                this.columnSELFCHARGE = new global::System.Data.DataColumn("SELFCHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSELFCHARGE);
                this.columnCOMPCHARGE = new global::System.Data.DataColumn("COMPCHARGE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPCHARGE);
                this.columnPARTIAL = new global::System.Data.DataColumn("PARTIAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARTIAL);
                this.columnFIX_AMT = new global::System.Data.DataColumn("FIX_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIX_AMT);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnNOPAYTOP = new global::System.Data.DataColumn("NOPAYTOP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOPAYTOP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRATE_CODE}, true));
                this.columnRATE_CODE.AllowDBNull = false;
                this.columnRATE_CODE.Unique = true;
                this.columnRATE_CODE.Caption = "身分代碼";
                this.columnRATE_CODE.MaxLength = 50;
                this.columnRATE_NAME.AllowDBNull = false;
                this.columnRATE_NAME.Caption = "身分名稱";
                this.columnRATE_NAME.MaxLength = 50;
                this.columnSELFCHARGE.AllowDBNull = false;
                this.columnSELFCHARGE.Caption = "員工負擔費率";
                this.columnCOMPCHARGE.AllowDBNull = false;
                this.columnCOMPCHARGE.Caption = "公司負擔費率";
                this.columnPARTIAL.AllowDBNull = false;
                this.columnPARTIAL.Caption = "部份負擔比例";
                this.columnFIX_AMT.AllowDBNull = false;
                this.columnFIX_AMT.Caption = "固定保費";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnADATE.AllowDBNull = false;
                this.columnADATE.Caption = "生效日期";
                this.columnNOPAYTOP.AllowDBNull = false;
                this.columnNOPAYTOP.Caption = "補助上限";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public HARCODERow NewHARCODERow() {
                return ((HARCODERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HARCODERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(HARCODERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HARCODERowChanged != null)) {
                    this.HARCODERowChanged(this, new HARCODERowChangeEvent(((HARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HARCODERowChanging != null)) {
                    this.HARCODERowChanging(this, new HARCODERowChangeEvent(((HARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HARCODERowDeleted != null)) {
                    this.HARCODERowDeleted(this, new HARCODERowChangeEvent(((HARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HARCODERowDeleting != null)) {
                    this.HARCODERowDeleting(this, new HARCODERowChangeEvent(((HARCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveHARCODERow(HARCODERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HARCODEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSNAMEDataTable : global::System.Data.TypedTableBase<INSNAMERow> {
            
            private global::System.Data.DataColumn columnNO;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnNO1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSNAMEDataTable() {
                this.TableName = "INSNAME";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSNAMEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSNAMEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOColumn {
                get {
                    return this.columnNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NO1Column {
                get {
                    return this.columnNO1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSNAMERow this[int index] {
                get {
                    return ((INSNAMERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSNAMERowChangeEventHandler INSNAMERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSNAMERowChangeEventHandler INSNAMERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSNAMERowChangeEventHandler INSNAMERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSNAMERowChangeEventHandler INSNAMERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSNAMERow(INSNAMERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSNAMERow AddINSNAMERow(string NO, string NAME, string KEY_MAN, System.DateTime KEY_DATE, string NO1) {
                INSNAMERow rowINSNAMERow = ((INSNAMERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NO,
                        NAME,
                        KEY_MAN,
                        KEY_DATE,
                        NO1};
                rowINSNAMERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSNAMERow);
                return rowINSNAMERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSNAMERow FindByNO(string NO) {
                return ((INSNAMERow)(this.Rows.Find(new object[] {
                            NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSNAMEDataTable cln = ((INSNAMEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSNAMEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnNO = base.Columns["NO"];
                this.columnNAME = base.Columns["NAME"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnNO1 = base.Columns["NO1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnNO = new global::System.Data.DataColumn("NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnNO1 = new global::System.Data.DataColumn("NO1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO1);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNO}, true));
                this.columnNO.AllowDBNull = false;
                this.columnNO.Unique = true;
                this.columnNO.Caption = "代碼";
                this.columnNO.MaxLength = 50;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.Caption = "原因";
                this.columnNAME.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnNO1.AllowDBNull = false;
                this.columnNO1.Caption = "勞健保局原因代碼";
                this.columnNO1.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSNAMERow NewINSNAMERow() {
                return ((INSNAMERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSNAMERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSNAMERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSNAMERowChanged != null)) {
                    this.INSNAMERowChanged(this, new INSNAMERowChangeEvent(((INSNAMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSNAMERowChanging != null)) {
                    this.INSNAMERowChanging(this, new INSNAMERowChangeEvent(((INSNAMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSNAMERowDeleted != null)) {
                    this.INSNAMERowDeleted(this, new INSNAMERowChangeEvent(((INSNAMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSNAMERowDeleting != null)) {
                    this.INSNAMERowDeleting(this, new INSNAMERowChangeEvent(((INSNAMERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSNAMERow(INSNAMERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSNAMEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSCOMPDataTable : global::System.Data.TypedTableBase<INSCOMPRow> {
            
            private global::System.Data.DataColumn columnS_NO;
            
            private global::System.Data.DataColumn columnINSNO;
            
            private global::System.Data.DataColumn columnINSPO;
            
            private global::System.Data.DataColumn columnINSIDNO;
            
            private global::System.Data.DataColumn columnINSSUB;
            
            private global::System.Data.DataColumn columnINSTEL;
            
            private global::System.Data.DataColumn columnINSNAME;
            
            private global::System.Data.DataColumn columnINSADDR;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnINSMAN;
            
            private global::System.Data.DataColumn columnREL_MAN;
            
            private global::System.Data.DataColumn columnREL_TEL;
            
            private global::System.Data.DataColumn columnDEFA;
            
            private global::System.Data.DataColumn columnS_NO_DISP;
            
            private global::System.Data.DataColumn columnJOBACCRATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOMPDataTable() {
                this.TableName = "INSCOMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSCOMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSCOMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn S_NOColumn {
                get {
                    return this.columnS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSNOColumn {
                get {
                    return this.columnINSNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSPOColumn {
                get {
                    return this.columnINSPO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSIDNOColumn {
                get {
                    return this.columnINSIDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSSUBColumn {
                get {
                    return this.columnINSSUB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSTELColumn {
                get {
                    return this.columnINSTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSNAMEColumn {
                get {
                    return this.columnINSNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSADDRColumn {
                get {
                    return this.columnINSADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSMANColumn {
                get {
                    return this.columnINSMAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REL_MANColumn {
                get {
                    return this.columnREL_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REL_TELColumn {
                get {
                    return this.columnREL_TEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DEFAColumn {
                get {
                    return this.columnDEFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn S_NO_DISPColumn {
                get {
                    return this.columnS_NO_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn JOBACCRATEColumn {
                get {
                    return this.columnJOBACCRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOMPRow this[int index] {
                get {
                    return ((INSCOMPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOMPRowChangeEventHandler INSCOMPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOMPRowChangeEventHandler INSCOMPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOMPRowChangeEventHandler INSCOMPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOMPRowChangeEventHandler INSCOMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSCOMPRow(INSCOMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOMPRow AddINSCOMPRow(
                        string S_NO, 
                        string INSNO, 
                        string INSPO, 
                        string INSIDNO, 
                        string INSSUB, 
                        string INSTEL, 
                        string INSNAME, 
                        string INSADDR, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string INSMAN, 
                        string REL_MAN, 
                        string REL_TEL, 
                        bool DEFA, 
                        string S_NO_DISP, 
                        decimal JOBACCRATE) {
                INSCOMPRow rowINSCOMPRow = ((INSCOMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        S_NO,
                        INSNO,
                        INSPO,
                        INSIDNO,
                        INSSUB,
                        INSTEL,
                        INSNAME,
                        INSADDR,
                        KEY_MAN,
                        KEY_DATE,
                        INSMAN,
                        REL_MAN,
                        REL_TEL,
                        DEFA,
                        S_NO_DISP,
                        JOBACCRATE};
                rowINSCOMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSCOMPRow);
                return rowINSCOMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOMPRow FindByS_NO(string S_NO) {
                return ((INSCOMPRow)(this.Rows.Find(new object[] {
                            S_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSCOMPDataTable cln = ((INSCOMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSCOMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnS_NO = base.Columns["S_NO"];
                this.columnINSNO = base.Columns["INSNO"];
                this.columnINSPO = base.Columns["INSPO"];
                this.columnINSIDNO = base.Columns["INSIDNO"];
                this.columnINSSUB = base.Columns["INSSUB"];
                this.columnINSTEL = base.Columns["INSTEL"];
                this.columnINSNAME = base.Columns["INSNAME"];
                this.columnINSADDR = base.Columns["INSADDR"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnINSMAN = base.Columns["INSMAN"];
                this.columnREL_MAN = base.Columns["REL_MAN"];
                this.columnREL_TEL = base.Columns["REL_TEL"];
                this.columnDEFA = base.Columns["DEFA"];
                this.columnS_NO_DISP = base.Columns["S_NO_DISP"];
                this.columnJOBACCRATE = base.Columns["JOBACCRATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnS_NO = new global::System.Data.DataColumn("S_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NO);
                this.columnINSNO = new global::System.Data.DataColumn("INSNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSNO);
                this.columnINSPO = new global::System.Data.DataColumn("INSPO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSPO);
                this.columnINSIDNO = new global::System.Data.DataColumn("INSIDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSIDNO);
                this.columnINSSUB = new global::System.Data.DataColumn("INSSUB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSSUB);
                this.columnINSTEL = new global::System.Data.DataColumn("INSTEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSTEL);
                this.columnINSNAME = new global::System.Data.DataColumn("INSNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSNAME);
                this.columnINSADDR = new global::System.Data.DataColumn("INSADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSADDR);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnINSMAN = new global::System.Data.DataColumn("INSMAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSMAN);
                this.columnREL_MAN = new global::System.Data.DataColumn("REL_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_MAN);
                this.columnREL_TEL = new global::System.Data.DataColumn("REL_TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_TEL);
                this.columnDEFA = new global::System.Data.DataColumn("DEFA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFA);
                this.columnS_NO_DISP = new global::System.Data.DataColumn("S_NO_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NO_DISP);
                this.columnJOBACCRATE = new global::System.Data.DataColumn("JOBACCRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBACCRATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnS_NO}, true));
                this.columnS_NO.AllowDBNull = false;
                this.columnS_NO.Unique = true;
                this.columnS_NO.Caption = "保險代碼";
                this.columnS_NO.MaxLength = 50;
                this.columnINSNO.AllowDBNull = false;
                this.columnINSNO.Caption = "勞工保險證號";
                this.columnINSNO.MaxLength = 50;
                this.columnINSPO.AllowDBNull = false;
                this.columnINSPO.Caption = "投保單位代號";
                this.columnINSPO.MaxLength = 50;
                this.columnINSIDNO.AllowDBNull = false;
                this.columnINSIDNO.Caption = "統一編號";
                this.columnINSIDNO.MaxLength = 50;
                this.columnINSSUB.AllowDBNull = false;
                this.columnINSSUB.Caption = "轄區分局";
                this.columnINSSUB.MaxLength = 50;
                this.columnINSTEL.AllowDBNull = false;
                this.columnINSTEL.Caption = "電話";
                this.columnINSTEL.MaxLength = 50;
                this.columnINSNAME.AllowDBNull = false;
                this.columnINSNAME.Caption = "投保單位名稱";
                this.columnINSNAME.MaxLength = 50;
                this.columnINSADDR.AllowDBNull = false;
                this.columnINSADDR.Caption = "地址";
                this.columnINSADDR.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnINSMAN.AllowDBNull = false;
                this.columnINSMAN.Caption = "負責人";
                this.columnINSMAN.MaxLength = 50;
                this.columnREL_MAN.AllowDBNull = false;
                this.columnREL_MAN.MaxLength = 50;
                this.columnREL_TEL.AllowDBNull = false;
                this.columnREL_TEL.MaxLength = 50;
                this.columnDEFA.AllowDBNull = false;
                this.columnDEFA.Caption = "預設";
                this.columnS_NO_DISP.Caption = "保險代碼";
                this.columnS_NO_DISP.MaxLength = 50;
                this.columnJOBACCRATE.Caption = "職災費率";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOMPRow NewINSCOMPRow() {
                return ((INSCOMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSCOMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSCOMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSCOMPRowChanged != null)) {
                    this.INSCOMPRowChanged(this, new INSCOMPRowChangeEvent(((INSCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSCOMPRowChanging != null)) {
                    this.INSCOMPRowChanging(this, new INSCOMPRowChangeEvent(((INSCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSCOMPRowDeleted != null)) {
                    this.INSCOMPRowDeleted(this, new INSCOMPRowChangeEvent(((INSCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSCOMPRowDeleting != null)) {
                    this.INSCOMPRowDeleting(this, new INSCOMPRowChangeEvent(((INSCOMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSCOMPRow(INSCOMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSCOMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INPOLABDataTable : global::System.Data.TypedTableBase<INPOLABRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnYYMM;
            
            private global::System.Data.DataColumn columnEXP;
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDAYS;
            
            private global::System.Data.DataColumn columnRATE_CODE;
            
            private global::System.Data.DataColumn columnINSUR_TYPE;
            
            private global::System.Data.DataColumn columnINSCD;
            
            private global::System.Data.DataColumn columnSALADR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INPOLABDataTable() {
                this.TableName = "INPOLAB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INPOLABDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INPOLABDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YYMMColumn {
                get {
                    return this.columnYYMM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXPColumn {
                get {
                    return this.columnEXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DAYSColumn {
                get {
                    return this.columnDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RATE_CODEColumn {
                get {
                    return this.columnRATE_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSUR_TYPEColumn {
                get {
                    return this.columnINSUR_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn INSCDColumn {
                get {
                    return this.columnINSCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SALADRColumn {
                get {
                    return this.columnSALADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INPOLABRow this[int index] {
                get {
                    return ((INPOLABRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INPOLABRowChangeEventHandler INPOLABRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INPOLABRowChangeEventHandler INPOLABRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INPOLABRowChangeEventHandler INPOLABRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INPOLABRowChangeEventHandler INPOLABRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINPOLABRow(INPOLABRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INPOLABRow AddINPOLABRow(string NOBR, string FA_IDNO, string YYMM, decimal EXP, decimal COMP, System.DateTime KEY_DATE, string KEY_MAN, System.DateTime ADATE, decimal DAYS, string RATE_CODE, string INSUR_TYPE, decimal INSCD, string SALADR) {
                INPOLABRow rowINPOLABRow = ((INPOLABRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        FA_IDNO,
                        YYMM,
                        EXP,
                        COMP,
                        KEY_DATE,
                        KEY_MAN,
                        ADATE,
                        DAYS,
                        RATE_CODE,
                        INSUR_TYPE,
                        INSCD,
                        SALADR};
                rowINPOLABRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINPOLABRow);
                return rowINPOLABRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INPOLABRow FindByNOBRFA_IDNOYYMMINSUR_TYPE(string NOBR, string FA_IDNO, string YYMM, string INSUR_TYPE) {
                return ((INPOLABRow)(this.Rows.Find(new object[] {
                            NOBR,
                            FA_IDNO,
                            YYMM,
                            INSUR_TYPE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INPOLABDataTable cln = ((INPOLABDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INPOLABDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnYYMM = base.Columns["YYMM"];
                this.columnEXP = base.Columns["EXP"];
                this.columnCOMP = base.Columns["COMP"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDAYS = base.Columns["DAYS"];
                this.columnRATE_CODE = base.Columns["RATE_CODE"];
                this.columnINSUR_TYPE = base.Columns["INSUR_TYPE"];
                this.columnINSCD = base.Columns["INSCD"];
                this.columnSALADR = base.Columns["SALADR"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnYYMM = new global::System.Data.DataColumn("YYMM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYYMM);
                this.columnEXP = new global::System.Data.DataColumn("EXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP);
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDAYS = new global::System.Data.DataColumn("DAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAYS);
                this.columnRATE_CODE = new global::System.Data.DataColumn("RATE_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE_CODE);
                this.columnINSUR_TYPE = new global::System.Data.DataColumn("INSUR_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSUR_TYPE);
                this.columnINSCD = new global::System.Data.DataColumn("INSCD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSCD);
                this.columnSALADR = new global::System.Data.DataColumn("SALADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALADR);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnFA_IDNO,
                                this.columnYYMM,
                                this.columnINSUR_TYPE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "身分證號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnYYMM.AllowDBNull = false;
                this.columnYYMM.Caption = "扣款年月";
                this.columnYYMM.MaxLength = 50;
                this.columnEXP.AllowDBNull = false;
                this.columnEXP.Caption = "扣款費用";
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.Caption = "公司負擔";
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnDAYS.AllowDBNull = false;
                this.columnRATE_CODE.AllowDBNull = false;
                this.columnRATE_CODE.MaxLength = 50;
                this.columnINSUR_TYPE.AllowDBNull = false;
                this.columnINSUR_TYPE.Caption = "費用種類";
                this.columnINSUR_TYPE.MaxLength = 50;
                this.columnINSCD.AllowDBNull = false;
                this.columnSALADR.AllowDBNull = false;
                this.columnSALADR.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INPOLABRow NewINPOLABRow() {
                return ((INPOLABRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INPOLABRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INPOLABRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INPOLABRowChanged != null)) {
                    this.INPOLABRowChanged(this, new INPOLABRowChangeEvent(((INPOLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INPOLABRowChanging != null)) {
                    this.INPOLABRowChanging(this, new INPOLABRowChangeEvent(((INPOLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INPOLABRowDeleted != null)) {
                    this.INPOLABRowDeleted(this, new INPOLABRowChangeEvent(((INPOLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INPOLABRowDeleting != null)) {
                    this.INPOLABRowDeleting(this, new INPOLABRowChangeEvent(((INPOLABRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINPOLABRow(INPOLABRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INPOLABDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSURCDDataTable : global::System.Data.TypedTableBase<INSURCDRow> {
            
            private global::System.Data.DataColumn columnCATEGORY;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSORT;
            
            private global::System.Data.DataColumn columnDISPLAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURCDDataTable() {
                this.TableName = "INSURCD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSURCDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSURCDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SORTColumn {
                get {
                    return this.columnSORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DISPLAYColumn {
                get {
                    return this.columnDISPLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURCDRow this[int index] {
                get {
                    return ((INSURCDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURCDRowChangeEventHandler INSURCDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURCDRowChangeEventHandler INSURCDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURCDRowChangeEventHandler INSURCDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSURCDRowChangeEventHandler INSURCDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSURCDRow(INSURCDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURCDRow AddINSURCDRow(string CATEGORY, string CODE, string NAME, int SORT, bool DISPLAY) {
                INSURCDRow rowINSURCDRow = ((INSURCDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CATEGORY,
                        CODE,
                        NAME,
                        SORT,
                        DISPLAY};
                rowINSURCDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSURCDRow);
                return rowINSURCDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURCDRow FindByCATEGORYCODE(string CATEGORY, string CODE) {
                return ((INSURCDRow)(this.Rows.Find(new object[] {
                            CATEGORY,
                            CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSURCDDataTable cln = ((INSURCDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSURCDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCATEGORY = base.Columns["CATEGORY"];
                this.columnCODE = base.Columns["CODE"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSORT = base.Columns["SORT"];
                this.columnDISPLAY = base.Columns["DISPLAY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCATEGORY = new global::System.Data.DataColumn("CATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORY);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSORT = new global::System.Data.DataColumn("SORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT);
                this.columnDISPLAY = new global::System.Data.DataColumn("DISPLAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCATEGORY,
                                this.columnCODE}, true));
                this.columnCATEGORY.AllowDBNull = false;
                this.columnCATEGORY.MaxLength = 50;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 200;
                this.columnSORT.AllowDBNull = false;
                this.columnDISPLAY.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURCDRow NewINSURCDRow() {
                return ((INSURCDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSURCDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSURCDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSURCDRowChanged != null)) {
                    this.INSURCDRowChanged(this, new INSURCDRowChangeEvent(((INSURCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSURCDRowChanging != null)) {
                    this.INSURCDRowChanging(this, new INSURCDRowChangeEvent(((INSURCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSURCDRowDeleted != null)) {
                    this.INSURCDRowDeleted(this, new INSURCDRowChangeEvent(((INSURCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSURCDRowDeleting != null)) {
                    this.INSURCDRowDeleting(this, new INSURCDRowChangeEvent(((INSURCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSURCDRow(INSURCDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSURCDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSUR_TYPEDataTable : global::System.Data.TypedTableBase<INSUR_TYPERow> {
            
            private global::System.Data.DataColumn columnCATEGORY;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSORT;
            
            private global::System.Data.DataColumn columnDISPLAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSUR_TYPEDataTable() {
                this.TableName = "INSUR_TYPE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSUR_TYPEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSUR_TYPEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SORTColumn {
                get {
                    return this.columnSORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DISPLAYColumn {
                get {
                    return this.columnDISPLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSUR_TYPERow this[int index] {
                get {
                    return ((INSUR_TYPERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSUR_TYPERowChangeEventHandler INSUR_TYPERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSUR_TYPERowChangeEventHandler INSUR_TYPERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSUR_TYPERowChangeEventHandler INSUR_TYPERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSUR_TYPERowChangeEventHandler INSUR_TYPERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSUR_TYPERow(INSUR_TYPERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSUR_TYPERow AddINSUR_TYPERow(string CATEGORY, string CODE, string NAME, int SORT, bool DISPLAY) {
                INSUR_TYPERow rowINSUR_TYPERow = ((INSUR_TYPERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CATEGORY,
                        CODE,
                        NAME,
                        SORT,
                        DISPLAY};
                rowINSUR_TYPERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSUR_TYPERow);
                return rowINSUR_TYPERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSUR_TYPERow FindByCATEGORYCODE(string CATEGORY, string CODE) {
                return ((INSUR_TYPERow)(this.Rows.Find(new object[] {
                            CATEGORY,
                            CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSUR_TYPEDataTable cln = ((INSUR_TYPEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSUR_TYPEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCATEGORY = base.Columns["CATEGORY"];
                this.columnCODE = base.Columns["CODE"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSORT = base.Columns["SORT"];
                this.columnDISPLAY = base.Columns["DISPLAY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCATEGORY = new global::System.Data.DataColumn("CATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORY);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSORT = new global::System.Data.DataColumn("SORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT);
                this.columnDISPLAY = new global::System.Data.DataColumn("DISPLAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCATEGORY,
                                this.columnCODE}, true));
                this.columnCATEGORY.AllowDBNull = false;
                this.columnCATEGORY.MaxLength = 50;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 200;
                this.columnSORT.AllowDBNull = false;
                this.columnDISPLAY.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSUR_TYPERow NewINSUR_TYPERow() {
                return ((INSUR_TYPERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSUR_TYPERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSUR_TYPERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSUR_TYPERowChanged != null)) {
                    this.INSUR_TYPERowChanged(this, new INSUR_TYPERowChangeEvent(((INSUR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSUR_TYPERowChanging != null)) {
                    this.INSUR_TYPERowChanging(this, new INSUR_TYPERowChangeEvent(((INSUR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSUR_TYPERowDeleted != null)) {
                    this.INSUR_TYPERowDeleted(this, new INSUR_TYPERowChangeEvent(((INSUR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSUR_TYPERowDeleting != null)) {
                    this.INSUR_TYPERowDeleting(this, new INSUR_TYPERowChangeEvent(((INSUR_TYPERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSUR_TYPERow(INSUR_TYPERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSUR_TYPEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SPTYPDataTable : global::System.Data.TypedTableBase<SPTYPRow> {
            
            private global::System.Data.DataColumn columnCATEGORY;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSORT;
            
            private global::System.Data.DataColumn columnDISPLAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SPTYPDataTable() {
                this.TableName = "SPTYP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SPTYPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected SPTYPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SORTColumn {
                get {
                    return this.columnSORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DISPLAYColumn {
                get {
                    return this.columnDISPLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SPTYPRow this[int index] {
                get {
                    return ((SPTYPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SPTYPRowChangeEventHandler SPTYPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SPTYPRowChangeEventHandler SPTYPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SPTYPRowChangeEventHandler SPTYPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event SPTYPRowChangeEventHandler SPTYPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddSPTYPRow(SPTYPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SPTYPRow AddSPTYPRow(string CATEGORY, string CODE, string NAME, int SORT, bool DISPLAY) {
                SPTYPRow rowSPTYPRow = ((SPTYPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CATEGORY,
                        CODE,
                        NAME,
                        SORT,
                        DISPLAY};
                rowSPTYPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSPTYPRow);
                return rowSPTYPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SPTYPRow FindByCATEGORYCODE(string CATEGORY, string CODE) {
                return ((SPTYPRow)(this.Rows.Find(new object[] {
                            CATEGORY,
                            CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SPTYPDataTable cln = ((SPTYPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SPTYPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCATEGORY = base.Columns["CATEGORY"];
                this.columnCODE = base.Columns["CODE"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSORT = base.Columns["SORT"];
                this.columnDISPLAY = base.Columns["DISPLAY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCATEGORY = new global::System.Data.DataColumn("CATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORY);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSORT = new global::System.Data.DataColumn("SORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT);
                this.columnDISPLAY = new global::System.Data.DataColumn("DISPLAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCATEGORY,
                                this.columnCODE}, true));
                this.columnCATEGORY.AllowDBNull = false;
                this.columnCATEGORY.MaxLength = 50;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 200;
                this.columnSORT.AllowDBNull = false;
                this.columnDISPLAY.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SPTYPRow NewSPTYPRow() {
                return ((SPTYPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SPTYPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SPTYPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SPTYPRowChanged != null)) {
                    this.SPTYPRowChanged(this, new SPTYPRowChangeEvent(((SPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SPTYPRowChanging != null)) {
                    this.SPTYPRowChanging(this, new SPTYPRowChangeEvent(((SPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SPTYPRowDeleted != null)) {
                    this.SPTYPRowDeleted(this, new SPTYPRowChangeEvent(((SPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SPTYPRowDeleting != null)) {
                    this.SPTYPRowDeleting(this, new SPTYPRowChangeEvent(((SPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveSPTYPRow(SPTYPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SPTYPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class WBSPTYPDataTable : global::System.Data.TypedTableBase<WBSPTYPRow> {
            
            private global::System.Data.DataColumn columnCATEGORY;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnNAME;
            
            private global::System.Data.DataColumn columnSORT;
            
            private global::System.Data.DataColumn columnDISPLAY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public WBSPTYPDataTable() {
                this.TableName = "WBSPTYP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal WBSPTYPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected WBSPTYPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CATEGORYColumn {
                get {
                    return this.columnCATEGORY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAMEColumn {
                get {
                    return this.columnNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SORTColumn {
                get {
                    return this.columnSORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DISPLAYColumn {
                get {
                    return this.columnDISPLAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public WBSPTYPRow this[int index] {
                get {
                    return ((WBSPTYPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event WBSPTYPRowChangeEventHandler WBSPTYPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event WBSPTYPRowChangeEventHandler WBSPTYPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event WBSPTYPRowChangeEventHandler WBSPTYPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event WBSPTYPRowChangeEventHandler WBSPTYPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddWBSPTYPRow(WBSPTYPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public WBSPTYPRow AddWBSPTYPRow(string CATEGORY, string CODE, string NAME, int SORT, bool DISPLAY) {
                WBSPTYPRow rowWBSPTYPRow = ((WBSPTYPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CATEGORY,
                        CODE,
                        NAME,
                        SORT,
                        DISPLAY};
                rowWBSPTYPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowWBSPTYPRow);
                return rowWBSPTYPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public WBSPTYPRow FindByCATEGORYCODE(string CATEGORY, string CODE) {
                return ((WBSPTYPRow)(this.Rows.Find(new object[] {
                            CATEGORY,
                            CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                WBSPTYPDataTable cln = ((WBSPTYPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new WBSPTYPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCATEGORY = base.Columns["CATEGORY"];
                this.columnCODE = base.Columns["CODE"];
                this.columnNAME = base.Columns["NAME"];
                this.columnSORT = base.Columns["SORT"];
                this.columnDISPLAY = base.Columns["DISPLAY"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCATEGORY = new global::System.Data.DataColumn("CATEGORY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCATEGORY);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnNAME = new global::System.Data.DataColumn("NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME);
                this.columnSORT = new global::System.Data.DataColumn("SORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT);
                this.columnDISPLAY = new global::System.Data.DataColumn("DISPLAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDISPLAY);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCATEGORY,
                                this.columnCODE}, true));
                this.columnCATEGORY.AllowDBNull = false;
                this.columnCATEGORY.MaxLength = 50;
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columnNAME.AllowDBNull = false;
                this.columnNAME.MaxLength = 200;
                this.columnSORT.AllowDBNull = false;
                this.columnDISPLAY.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public WBSPTYPRow NewWBSPTYPRow() {
                return ((WBSPTYPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new WBSPTYPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(WBSPTYPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.WBSPTYPRowChanged != null)) {
                    this.WBSPTYPRowChanged(this, new WBSPTYPRowChangeEvent(((WBSPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.WBSPTYPRowChanging != null)) {
                    this.WBSPTYPRowChanging(this, new WBSPTYPRowChangeEvent(((WBSPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.WBSPTYPRowDeleted != null)) {
                    this.WBSPTYPRowDeleted(this, new WBSPTYPRowChangeEvent(((WBSPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.WBSPTYPRowDeleting != null)) {
                    this.WBSPTYPRowDeleting(this, new WBSPTYPRowChangeEvent(((WBSPTYPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveWBSPTYPRow(WBSPTYPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "WBSPTYPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FAMILYDataTable : global::System.Data.TypedTableBase<FAMILYRow> {
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnFA_NAME;
            
            private global::System.Data.DataColumn columnREL_CODE;
            
            private global::System.Data.DataColumn columnFA_BIRDT;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnADDR;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnGSM;
            
            private global::System.Data.DataColumn columnBBC;
            
            private global::System.Data.DataColumn columnTAX;
            
            private global::System.Data.DataColumn columnAUTOINSLAB;
            
            private global::System.Data.DataColumn columnLIVE;
            
            private global::System.Data.DataColumn columnEDUCODE;
            
            private global::System.Data.DataColumn columnCOMPNY;
            
            private global::System.Data.DataColumn columnTITLE;
            
            private global::System.Data.DataColumn columnFAMFORN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FAMILYDataTable() {
                this.TableName = "FAMILY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal FAMILYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected FAMILYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_NAMEColumn {
                get {
                    return this.columnFA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REL_CODEColumn {
                get {
                    return this.columnREL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_BIRDTColumn {
                get {
                    return this.columnFA_BIRDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ADDRColumn {
                get {
                    return this.columnADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GSMColumn {
                get {
                    return this.columnGSM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn BBCColumn {
                get {
                    return this.columnBBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TAXColumn {
                get {
                    return this.columnTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AUTOINSLABColumn {
                get {
                    return this.columnAUTOINSLAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LIVEColumn {
                get {
                    return this.columnLIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EDUCODEColumn {
                get {
                    return this.columnEDUCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COMPNYColumn {
                get {
                    return this.columnCOMPNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FAMFORNColumn {
                get {
                    return this.columnFAMFORN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FAMILYRow this[int index] {
                get {
                    return ((FAMILYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddFAMILYRow(FAMILYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FAMILYRow AddFAMILYRow(
                        string FA_IDNO, 
                        string FA_NAME, 
                        string REL_CODE, 
                        System.DateTime FA_BIRDT, 
                        string NOBR, 
                        System.DateTime KEY_DATE, 
                        string KEY_MAN, 
                        string ADDR, 
                        string TEL, 
                        string GSM, 
                        string BBC, 
                        bool TAX, 
                        bool AUTOINSLAB, 
                        bool LIVE, 
                        string EDUCODE, 
                        string COMPNY, 
                        string TITLE, 
                        bool FAMFORN) {
                FAMILYRow rowFAMILYRow = ((FAMILYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FA_IDNO,
                        FA_NAME,
                        REL_CODE,
                        FA_BIRDT,
                        NOBR,
                        KEY_DATE,
                        KEY_MAN,
                        ADDR,
                        TEL,
                        GSM,
                        BBC,
                        TAX,
                        AUTOINSLAB,
                        LIVE,
                        EDUCODE,
                        COMPNY,
                        TITLE,
                        FAMFORN};
                rowFAMILYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFAMILYRow);
                return rowFAMILYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FAMILYRow FindByFA_IDNONOBR(string FA_IDNO, string NOBR) {
                return ((FAMILYRow)(this.Rows.Find(new object[] {
                            FA_IDNO,
                            NOBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FAMILYDataTable cln = ((FAMILYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FAMILYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnFA_NAME = base.Columns["FA_NAME"];
                this.columnREL_CODE = base.Columns["REL_CODE"];
                this.columnFA_BIRDT = base.Columns["FA_BIRDT"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnADDR = base.Columns["ADDR"];
                this.columnTEL = base.Columns["TEL"];
                this.columnGSM = base.Columns["GSM"];
                this.columnBBC = base.Columns["BBC"];
                this.columnTAX = base.Columns["TAX"];
                this.columnAUTOINSLAB = base.Columns["AUTOINSLAB"];
                this.columnLIVE = base.Columns["LIVE"];
                this.columnEDUCODE = base.Columns["EDUCODE"];
                this.columnCOMPNY = base.Columns["COMPNY"];
                this.columnTITLE = base.Columns["TITLE"];
                this.columnFAMFORN = base.Columns["FAMFORN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnFA_NAME = new global::System.Data.DataColumn("FA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_NAME);
                this.columnREL_CODE = new global::System.Data.DataColumn("REL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_CODE);
                this.columnFA_BIRDT = new global::System.Data.DataColumn("FA_BIRDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_BIRDT);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnADDR = new global::System.Data.DataColumn("ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnGSM = new global::System.Data.DataColumn("GSM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSM);
                this.columnBBC = new global::System.Data.DataColumn("BBC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBC);
                this.columnTAX = new global::System.Data.DataColumn("TAX", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX);
                this.columnAUTOINSLAB = new global::System.Data.DataColumn("AUTOINSLAB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOINSLAB);
                this.columnLIVE = new global::System.Data.DataColumn("LIVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIVE);
                this.columnEDUCODE = new global::System.Data.DataColumn("EDUCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDUCODE);
                this.columnCOMPNY = new global::System.Data.DataColumn("COMPNY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPNY);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.columnFAMFORN = new global::System.Data.DataColumn("FAMFORN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAMFORN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFA_IDNO,
                                this.columnNOBR}, true));
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.MaxLength = 50;
                this.columnFA_NAME.AllowDBNull = false;
                this.columnFA_NAME.MaxLength = 50;
                this.columnREL_CODE.AllowDBNull = false;
                this.columnREL_CODE.MaxLength = 50;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnADDR.AllowDBNull = false;
                this.columnADDR.MaxLength = 60;
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 50;
                this.columnGSM.AllowDBNull = false;
                this.columnGSM.MaxLength = 50;
                this.columnBBC.AllowDBNull = false;
                this.columnBBC.MaxLength = 50;
                this.columnTAX.AllowDBNull = false;
                this.columnAUTOINSLAB.AllowDBNull = false;
                this.columnLIVE.AllowDBNull = false;
                this.columnEDUCODE.AllowDBNull = false;
                this.columnEDUCODE.MaxLength = 50;
                this.columnCOMPNY.AllowDBNull = false;
                this.columnCOMPNY.MaxLength = 50;
                this.columnTITLE.AllowDBNull = false;
                this.columnTITLE.MaxLength = 50;
                this.columnFAMFORN.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FAMILYRow NewFAMILYRow() {
                return ((FAMILYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FAMILYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FAMILYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FAMILYRowChanged != null)) {
                    this.FAMILYRowChanged(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FAMILYRowChanging != null)) {
                    this.FAMILYRowChanging(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FAMILYRowDeleted != null)) {
                    this.FAMILYRowDeleted(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FAMILYRowDeleting != null)) {
                    this.FAMILYRowDeleting(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveFAMILYRow(FAMILYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FAMILYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSCOUNTRYDataTable : global::System.Data.TypedTableBase<INSCOUNTRYRow> {
            
            private global::System.Data.DataColumn columnS_NO;
            
            private global::System.Data.DataColumn columnS_NAME;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOUNTRYDataTable() {
                this.TableName = "INSCOUNTRY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSCOUNTRYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSCOUNTRYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn S_NOColumn {
                get {
                    return this.columnS_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn S_NAMEColumn {
                get {
                    return this.columnS_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOUNTRYRow this[int index] {
                get {
                    return ((INSCOUNTRYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOUNTRYRowChangeEventHandler INSCOUNTRYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOUNTRYRowChangeEventHandler INSCOUNTRYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOUNTRYRowChangeEventHandler INSCOUNTRYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSCOUNTRYRowChangeEventHandler INSCOUNTRYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSCOUNTRYRow(INSCOUNTRYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOUNTRYRow AddINSCOUNTRYRow(string S_NO, string S_NAME, System.DateTime KEY_DATE, string KEY_MAN) {
                INSCOUNTRYRow rowINSCOUNTRYRow = ((INSCOUNTRYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        S_NO,
                        S_NAME,
                        KEY_DATE,
                        KEY_MAN};
                rowINSCOUNTRYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSCOUNTRYRow);
                return rowINSCOUNTRYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOUNTRYRow FindByS_NO(string S_NO) {
                return ((INSCOUNTRYRow)(this.Rows.Find(new object[] {
                            S_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSCOUNTRYDataTable cln = ((INSCOUNTRYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSCOUNTRYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnS_NO = base.Columns["S_NO"];
                this.columnS_NAME = base.Columns["S_NAME"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnS_NO = new global::System.Data.DataColumn("S_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NO);
                this.columnS_NAME = new global::System.Data.DataColumn("S_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnS_NAME);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnS_NO}, true));
                this.columnS_NO.AllowDBNull = false;
                this.columnS_NO.Unique = true;
                this.columnS_NO.MaxLength = 50;
                this.columnS_NAME.AllowDBNull = false;
                this.columnS_NAME.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOUNTRYRow NewINSCOUNTRYRow() {
                return ((INSCOUNTRYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSCOUNTRYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSCOUNTRYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSCOUNTRYRowChanged != null)) {
                    this.INSCOUNTRYRowChanged(this, new INSCOUNTRYRowChangeEvent(((INSCOUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSCOUNTRYRowChanging != null)) {
                    this.INSCOUNTRYRowChanging(this, new INSCOUNTRYRowChangeEvent(((INSCOUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSCOUNTRYRowDeleted != null)) {
                    this.INSCOUNTRYRowDeleted(this, new INSCOUNTRYRowChangeEvent(((INSCOUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSCOUNTRYRowDeleting != null)) {
                    this.INSCOUNTRYRowDeleting(this, new INSCOUNTRYRowChangeEvent(((INSCOUNTRYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSCOUNTRYRow(INSCOUNTRYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSCOUNTRYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class U_SYS4DataTable : global::System.Data.TypedTableBase<U_SYS4Row> {
            
            private global::System.Data.DataColumn columnLSALCODE;
            
            private global::System.Data.DataColumn columnLABOVERSALCODE;
            
            private global::System.Data.DataColumn columnLABREPAIRSALCODE;
            
            private global::System.Data.DataColumn columnLJOBPER;
            
            private global::System.Data.DataColumn columnLJOBPER1;
            
            private global::System.Data.DataColumn columnRETIRERATE;
            
            private global::System.Data.DataColumn columnRETIRERATE1;
            
            private global::System.Data.DataColumn columnNRETIRERATE;
            
            private global::System.Data.DataColumn columnNRETIRERATE1;
            
            private global::System.Data.DataColumn columnRETSALCODE;
            
            private global::System.Data.DataColumn columnComp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public U_SYS4DataTable() {
                this.TableName = "U_SYS4";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal U_SYS4DataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected U_SYS4DataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LSALCODEColumn {
                get {
                    return this.columnLSALCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LABOVERSALCODEColumn {
                get {
                    return this.columnLABOVERSALCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LABREPAIRSALCODEColumn {
                get {
                    return this.columnLABREPAIRSALCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LJOBPERColumn {
                get {
                    return this.columnLJOBPER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LJOBPER1Column {
                get {
                    return this.columnLJOBPER1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RETIRERATEColumn {
                get {
                    return this.columnRETIRERATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RETIRERATE1Column {
                get {
                    return this.columnRETIRERATE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NRETIRERATEColumn {
                get {
                    return this.columnNRETIRERATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NRETIRERATE1Column {
                get {
                    return this.columnNRETIRERATE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RETSALCODEColumn {
                get {
                    return this.columnRETSALCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CompColumn {
                get {
                    return this.columnComp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public U_SYS4Row this[int index] {
                get {
                    return ((U_SYS4Row)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event U_SYS4RowChangeEventHandler U_SYS4RowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event U_SYS4RowChangeEventHandler U_SYS4RowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event U_SYS4RowChangeEventHandler U_SYS4RowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event U_SYS4RowChangeEventHandler U_SYS4RowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddU_SYS4Row(U_SYS4Row row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public U_SYS4Row AddU_SYS4Row(string LSALCODE, string LABOVERSALCODE, string LABREPAIRSALCODE, decimal LJOBPER, decimal LJOBPER1, decimal RETIRERATE, decimal RETIRERATE1, decimal NRETIRERATE, decimal NRETIRERATE1, string RETSALCODE, string Comp) {
                U_SYS4Row rowU_SYS4Row = ((U_SYS4Row)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        LSALCODE,
                        LABOVERSALCODE,
                        LABREPAIRSALCODE,
                        LJOBPER,
                        LJOBPER1,
                        RETIRERATE,
                        RETIRERATE1,
                        NRETIRERATE,
                        NRETIRERATE1,
                        RETSALCODE,
                        Comp};
                rowU_SYS4Row.ItemArray = columnValuesArray;
                this.Rows.Add(rowU_SYS4Row);
                return rowU_SYS4Row;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public U_SYS4Row FindByComp(string Comp) {
                return ((U_SYS4Row)(this.Rows.Find(new object[] {
                            Comp})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                U_SYS4DataTable cln = ((U_SYS4DataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new U_SYS4DataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnLSALCODE = base.Columns["LSALCODE"];
                this.columnLABOVERSALCODE = base.Columns["LABOVERSALCODE"];
                this.columnLABREPAIRSALCODE = base.Columns["LABREPAIRSALCODE"];
                this.columnLJOBPER = base.Columns["LJOBPER"];
                this.columnLJOBPER1 = base.Columns["LJOBPER1"];
                this.columnRETIRERATE = base.Columns["RETIRERATE"];
                this.columnRETIRERATE1 = base.Columns["RETIRERATE1"];
                this.columnNRETIRERATE = base.Columns["NRETIRERATE"];
                this.columnNRETIRERATE1 = base.Columns["NRETIRERATE1"];
                this.columnRETSALCODE = base.Columns["RETSALCODE"];
                this.columnComp = base.Columns["Comp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnLSALCODE = new global::System.Data.DataColumn("LSALCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLSALCODE);
                this.columnLABOVERSALCODE = new global::System.Data.DataColumn("LABOVERSALCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLABOVERSALCODE);
                this.columnLABREPAIRSALCODE = new global::System.Data.DataColumn("LABREPAIRSALCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLABREPAIRSALCODE);
                this.columnLJOBPER = new global::System.Data.DataColumn("LJOBPER", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLJOBPER);
                this.columnLJOBPER1 = new global::System.Data.DataColumn("LJOBPER1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLJOBPER1);
                this.columnRETIRERATE = new global::System.Data.DataColumn("RETIRERATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETIRERATE);
                this.columnRETIRERATE1 = new global::System.Data.DataColumn("RETIRERATE1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETIRERATE1);
                this.columnNRETIRERATE = new global::System.Data.DataColumn("NRETIRERATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRETIRERATE);
                this.columnNRETIRERATE1 = new global::System.Data.DataColumn("NRETIRERATE1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNRETIRERATE1);
                this.columnRETSALCODE = new global::System.Data.DataColumn("RETSALCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETSALCODE);
                this.columnComp = new global::System.Data.DataColumn("Comp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComp);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnComp}, true));
                this.columnLSALCODE.MaxLength = 50;
                this.columnLABOVERSALCODE.MaxLength = 50;
                this.columnLABREPAIRSALCODE.MaxLength = 50;
                this.columnRETSALCODE.MaxLength = 50;
                this.columnComp.AllowDBNull = false;
                this.columnComp.Unique = true;
                this.columnComp.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public U_SYS4Row NewU_SYS4Row() {
                return ((U_SYS4Row)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new U_SYS4Row(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(U_SYS4Row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.U_SYS4RowChanged != null)) {
                    this.U_SYS4RowChanged(this, new U_SYS4RowChangeEvent(((U_SYS4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.U_SYS4RowChanging != null)) {
                    this.U_SYS4RowChanging(this, new U_SYS4RowChangeEvent(((U_SYS4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.U_SYS4RowDeleted != null)) {
                    this.U_SYS4RowDeleted(this, new U_SYS4RowChangeEvent(((U_SYS4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.U_SYS4RowDeleting != null)) {
                    this.U_SYS4RowDeleting(this, new U_SYS4RowChangeEvent(((U_SYS4Row)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveU_SYS4Row(U_SYS4Row row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "U_SYS4DataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class V_BASEDataTable : global::System.Data.TypedTableBase<V_BASERow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnNAME_E;
            
            private global::System.Data.DataColumn columnNAME_P;
            
            private global::System.Data.DataColumn columnSALADR;
            
            private global::System.Data.DataColumn columnIDNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public V_BASEDataTable() {
                this.TableName = "V_BASE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal V_BASEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected V_BASEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAME_EColumn {
                get {
                    return this.columnNAME_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAME_PColumn {
                get {
                    return this.columnNAME_P;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SALADRColumn {
                get {
                    return this.columnSALADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IDNOColumn {
                get {
                    return this.columnIDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public V_BASERow this[int index] {
                get {
                    return ((V_BASERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event V_BASERowChangeEventHandler V_BASERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event V_BASERowChangeEventHandler V_BASERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event V_BASERowChangeEventHandler V_BASERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event V_BASERowChangeEventHandler V_BASERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddV_BASERow(V_BASERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public V_BASERow AddV_BASERow(string NOBR, string NAME_C, string NAME_E, string NAME_P, string SALADR, string IDNO) {
                V_BASERow rowV_BASERow = ((V_BASERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        NAME_C,
                        NAME_E,
                        NAME_P,
                        SALADR,
                        IDNO};
                rowV_BASERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowV_BASERow);
                return rowV_BASERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public V_BASERow FindByNOBR(string NOBR) {
                return ((V_BASERow)(this.Rows.Find(new object[] {
                            NOBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                V_BASEDataTable cln = ((V_BASEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new V_BASEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnNAME_E = base.Columns["NAME_E"];
                this.columnNAME_P = base.Columns["NAME_P"];
                this.columnSALADR = base.Columns["SALADR"];
                this.columnIDNO = base.Columns["IDNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnNAME_E = new global::System.Data.DataColumn("NAME_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_E);
                this.columnNAME_P = new global::System.Data.DataColumn("NAME_P", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_P);
                this.columnSALADR = new global::System.Data.DataColumn("SALADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALADR);
                this.columnIDNO = new global::System.Data.DataColumn("IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Unique = true;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "中文姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnNAME_E.AllowDBNull = false;
                this.columnNAME_E.Caption = "英文姓名";
                this.columnNAME_E.MaxLength = 50;
                this.columnNAME_P.AllowDBNull = false;
                this.columnNAME_P.Caption = "護照姓名";
                this.columnNAME_P.MaxLength = 50;
                this.columnSALADR.AllowDBNull = false;
                this.columnSALADR.Caption = "資料群組";
                this.columnSALADR.MaxLength = 50;
                this.columnIDNO.AllowDBNull = false;
                this.columnIDNO.Caption = "身分證號";
                this.columnIDNO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public V_BASERow NewV_BASERow() {
                return ((V_BASERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new V_BASERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(V_BASERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.V_BASERowChanged != null)) {
                    this.V_BASERowChanged(this, new V_BASERowChangeEvent(((V_BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.V_BASERowChanging != null)) {
                    this.V_BASERowChanging(this, new V_BASERowChangeEvent(((V_BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.V_BASERowDeleted != null)) {
                    this.V_BASERowDeleted(this, new V_BASERowChangeEvent(((V_BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.V_BASERowDeleting != null)) {
                    this.V_BASERowDeleting(this, new V_BASERowChangeEvent(((V_BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveV_BASERow(V_BASERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "V_BASEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSGRPDataTable : global::System.Data.TypedTableBase<INSGRPRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnIN_DATE;
            
            private global::System.Data.DataColumn columnOUT_DATE;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnAMT1;
            
            private global::System.Data.DataColumn columnEXP1;
            
            private global::System.Data.DataColumn columnCOP1;
            
            private global::System.Data.DataColumn columnAMT2;
            
            private global::System.Data.DataColumn columnEXP2;
            
            private global::System.Data.DataColumn columnCOP2;
            
            private global::System.Data.DataColumn columnAMT3;
            
            private global::System.Data.DataColumn columnEXP3;
            
            private global::System.Data.DataColumn columnCOP3;
            
            private global::System.Data.DataColumn columnAMT4;
            
            private global::System.Data.DataColumn columnEXP4;
            
            private global::System.Data.DataColumn columnCOP4;
            
            private global::System.Data.DataColumn columnAMT5;
            
            private global::System.Data.DataColumn columnEXP5;
            
            private global::System.Data.DataColumn columnCOP5;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnAMT6;
            
            private global::System.Data.DataColumn columnTOTEXP;
            
            private global::System.Data.DataColumn columnCOPEXP;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnEXP3CAL;
            
            private global::System.Data.DataColumn columnEXP1CAL;
            
            private global::System.Data.DataColumn columnEXP2CAL;
            
            private global::System.Data.DataColumn columnGRP_TYPE;
            
            private global::System.Data.DataColumn columnPAN;
            
            private global::System.Data.DataColumn columnEXP6;
            
            private global::System.Data.DataColumn columnCOP6;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRPDataTable() {
                this.TableName = "INSGRP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSGRPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSGRPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IN_DATEColumn {
                get {
                    return this.columnIN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OUT_DATEColumn {
                get {
                    return this.columnOUT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT1Column {
                get {
                    return this.columnAMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP1Column {
                get {
                    return this.columnEXP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COP1Column {
                get {
                    return this.columnCOP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT2Column {
                get {
                    return this.columnAMT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP2Column {
                get {
                    return this.columnEXP2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COP2Column {
                get {
                    return this.columnCOP2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT3Column {
                get {
                    return this.columnAMT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP3Column {
                get {
                    return this.columnEXP3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COP3Column {
                get {
                    return this.columnCOP3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT4Column {
                get {
                    return this.columnAMT4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP4Column {
                get {
                    return this.columnEXP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COP4Column {
                get {
                    return this.columnCOP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT5Column {
                get {
                    return this.columnAMT5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP5Column {
                get {
                    return this.columnEXP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COP5Column {
                get {
                    return this.columnCOP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT6Column {
                get {
                    return this.columnAMT6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TOTEXPColumn {
                get {
                    return this.columnTOTEXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COPEXPColumn {
                get {
                    return this.columnCOPEXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP3CALColumn {
                get {
                    return this.columnEXP3CAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP1CALColumn {
                get {
                    return this.columnEXP1CAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP2CALColumn {
                get {
                    return this.columnEXP2CAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GRP_TYPEColumn {
                get {
                    return this.columnGRP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PANColumn {
                get {
                    return this.columnPAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXP6Column {
                get {
                    return this.columnEXP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COP6Column {
                get {
                    return this.columnCOP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRPRow this[int index] {
                get {
                    return ((INSGRPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSGRPRow(INSGRPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRPRow AddINSGRPRow(
                        string NOBR, 
                        string FA_IDNO, 
                        System.DateTime IN_DATE, 
                        System.DateTime OUT_DATE, 
                        string CODE, 
                        decimal AMT1, 
                        decimal EXP1, 
                        decimal COP1, 
                        decimal AMT2, 
                        decimal EXP2, 
                        decimal COP2, 
                        decimal AMT3, 
                        decimal EXP3, 
                        decimal COP3, 
                        decimal AMT4, 
                        decimal EXP4, 
                        decimal COP4, 
                        decimal AMT5, 
                        decimal EXP5, 
                        decimal COP5, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        decimal AMT6, 
                        decimal TOTEXP, 
                        decimal COPEXP, 
                        string SEQ, 
                        bool EXP3CAL, 
                        bool EXP1CAL, 
                        bool EXP2CAL, 
                        string GRP_TYPE, 
                        string PAN, 
                        decimal EXP6, 
                        decimal COP6) {
                INSGRPRow rowINSGRPRow = ((INSGRPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        FA_IDNO,
                        IN_DATE,
                        OUT_DATE,
                        CODE,
                        AMT1,
                        EXP1,
                        COP1,
                        AMT2,
                        EXP2,
                        COP2,
                        AMT3,
                        EXP3,
                        COP3,
                        AMT4,
                        EXP4,
                        COP4,
                        AMT5,
                        EXP5,
                        COP5,
                        KEY_MAN,
                        KEY_DATE,
                        AMT6,
                        TOTEXP,
                        COPEXP,
                        SEQ,
                        EXP3CAL,
                        EXP1CAL,
                        EXP2CAL,
                        GRP_TYPE,
                        PAN,
                        EXP6,
                        COP6};
                rowINSGRPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSGRPRow);
                return rowINSGRPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRPRow FindByNOBRFA_IDNOIN_DATEOUT_DATE(string NOBR, string FA_IDNO, System.DateTime IN_DATE, System.DateTime OUT_DATE) {
                return ((INSGRPRow)(this.Rows.Find(new object[] {
                            NOBR,
                            FA_IDNO,
                            IN_DATE,
                            OUT_DATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSGRPDataTable cln = ((INSGRPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSGRPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnIN_DATE = base.Columns["IN_DATE"];
                this.columnOUT_DATE = base.Columns["OUT_DATE"];
                this.columnCODE = base.Columns["CODE"];
                this.columnAMT1 = base.Columns["AMT1"];
                this.columnEXP1 = base.Columns["EXP1"];
                this.columnCOP1 = base.Columns["COP1"];
                this.columnAMT2 = base.Columns["AMT2"];
                this.columnEXP2 = base.Columns["EXP2"];
                this.columnCOP2 = base.Columns["COP2"];
                this.columnAMT3 = base.Columns["AMT3"];
                this.columnEXP3 = base.Columns["EXP3"];
                this.columnCOP3 = base.Columns["COP3"];
                this.columnAMT4 = base.Columns["AMT4"];
                this.columnEXP4 = base.Columns["EXP4"];
                this.columnCOP4 = base.Columns["COP4"];
                this.columnAMT5 = base.Columns["AMT5"];
                this.columnEXP5 = base.Columns["EXP5"];
                this.columnCOP5 = base.Columns["COP5"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnAMT6 = base.Columns["AMT6"];
                this.columnTOTEXP = base.Columns["TOTEXP"];
                this.columnCOPEXP = base.Columns["COPEXP"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnEXP3CAL = base.Columns["EXP3CAL"];
                this.columnEXP1CAL = base.Columns["EXP1CAL"];
                this.columnEXP2CAL = base.Columns["EXP2CAL"];
                this.columnGRP_TYPE = base.Columns["GRP_TYPE"];
                this.columnPAN = base.Columns["PAN"];
                this.columnEXP6 = base.Columns["EXP6"];
                this.columnCOP6 = base.Columns["COP6"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnIN_DATE = new global::System.Data.DataColumn("IN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_DATE);
                this.columnOUT_DATE = new global::System.Data.DataColumn("OUT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_DATE);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnAMT1 = new global::System.Data.DataColumn("AMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT1);
                this.columnEXP1 = new global::System.Data.DataColumn("EXP1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP1);
                this.columnCOP1 = new global::System.Data.DataColumn("COP1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP1);
                this.columnAMT2 = new global::System.Data.DataColumn("AMT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT2);
                this.columnEXP2 = new global::System.Data.DataColumn("EXP2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP2);
                this.columnCOP2 = new global::System.Data.DataColumn("COP2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP2);
                this.columnAMT3 = new global::System.Data.DataColumn("AMT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT3);
                this.columnEXP3 = new global::System.Data.DataColumn("EXP3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP3);
                this.columnCOP3 = new global::System.Data.DataColumn("COP3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP3);
                this.columnAMT4 = new global::System.Data.DataColumn("AMT4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT4);
                this.columnEXP4 = new global::System.Data.DataColumn("EXP4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP4);
                this.columnCOP4 = new global::System.Data.DataColumn("COP4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP4);
                this.columnAMT5 = new global::System.Data.DataColumn("AMT5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT5);
                this.columnEXP5 = new global::System.Data.DataColumn("EXP5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP5);
                this.columnCOP5 = new global::System.Data.DataColumn("COP5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP5);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnAMT6 = new global::System.Data.DataColumn("AMT6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT6);
                this.columnTOTEXP = new global::System.Data.DataColumn("TOTEXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTEXP);
                this.columnCOPEXP = new global::System.Data.DataColumn("COPEXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOPEXP);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnEXP3CAL = new global::System.Data.DataColumn("EXP3CAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP3CAL);
                this.columnEXP1CAL = new global::System.Data.DataColumn("EXP1CAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP1CAL);
                this.columnEXP2CAL = new global::System.Data.DataColumn("EXP2CAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP2CAL);
                this.columnGRP_TYPE = new global::System.Data.DataColumn("GRP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_TYPE);
                this.columnPAN = new global::System.Data.DataColumn("PAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN);
                this.columnEXP6 = new global::System.Data.DataColumn("EXP6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP6);
                this.columnCOP6 = new global::System.Data.DataColumn("COP6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP6);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnFA_IDNO,
                                this.columnIN_DATE,
                                this.columnOUT_DATE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnIN_DATE.AllowDBNull = false;
                this.columnIN_DATE.Caption = "加保日期";
                this.columnOUT_DATE.AllowDBNull = false;
                this.columnOUT_DATE.Caption = "退保日期";
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columnAMT1.AllowDBNull = false;
                this.columnAMT1.Caption = "壽險保額";
                this.columnEXP1.AllowDBNull = false;
                this.columnEXP1.Caption = "壽險個人";
                this.columnCOP1.AllowDBNull = false;
                this.columnCOP1.Caption = "壽險公司";
                this.columnAMT2.AllowDBNull = false;
                this.columnAMT2.Caption = "意外保額";
                this.columnEXP2.AllowDBNull = false;
                this.columnEXP2.Caption = "意外個人";
                this.columnCOP2.AllowDBNull = false;
                this.columnCOP2.Caption = "意外公司";
                this.columnAMT3.AllowDBNull = false;
                this.columnAMT3.Caption = "住院保額";
                this.columnEXP3.AllowDBNull = false;
                this.columnEXP3.Caption = "住院個人";
                this.columnCOP3.AllowDBNull = false;
                this.columnCOP3.Caption = "住院公司";
                this.columnAMT4.AllowDBNull = false;
                this.columnAMT4.Caption = "醫療保額";
                this.columnEXP4.AllowDBNull = false;
                this.columnEXP4.Caption = "意外醫療個人";
                this.columnCOP4.AllowDBNull = false;
                this.columnCOP4.Caption = "意外醫療公司";
                this.columnAMT5.AllowDBNull = false;
                this.columnAMT5.Caption = "職災薪資";
                this.columnEXP5.AllowDBNull = false;
                this.columnCOP5.AllowDBNull = false;
                this.columnCOP5.Caption = "職災公司";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnAMT6.AllowDBNull = false;
                this.columnAMT6.Caption = "勞保薪資";
                this.columnTOTEXP.AllowDBNull = false;
                this.columnTOTEXP.Caption = "個人總計";
                this.columnCOPEXP.AllowDBNull = false;
                this.columnCOPEXP.Caption = "公司總計";
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.MaxLength = 50;
                this.columnEXP3CAL.AllowDBNull = false;
                this.columnEXP1CAL.AllowDBNull = false;
                this.columnEXP2CAL.AllowDBNull = false;
                this.columnGRP_TYPE.AllowDBNull = false;
                this.columnGRP_TYPE.Caption = "投保類別";
                this.columnGRP_TYPE.MaxLength = 50;
                this.columnPAN.AllowDBNull = false;
                this.columnPAN.Caption = "計畫";
                this.columnPAN.MaxLength = 50;
                this.columnCOP6.Caption = "勞保公司";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRPRow NewINSGRPRow() {
                return ((INSGRPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSGRPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSGRPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSGRPRowChanged != null)) {
                    this.INSGRPRowChanged(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSGRPRowChanging != null)) {
                    this.INSGRPRowChanging(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSGRPRowDeleted != null)) {
                    this.INSGRPRowDeleted(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSGRPRowDeleting != null)) {
                    this.INSGRPRowDeleting(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSGRPRow(INSGRPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSGRPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSGRFDataTable : global::System.Data.TypedTableBase<INSGRFRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnIN_DATE;
            
            private global::System.Data.DataColumn columnOUT_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRFDataTable() {
                this.TableName = "INSGRF";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSGRFDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSGRFDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IN_DATEColumn {
                get {
                    return this.columnIN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn OUT_DATEColumn {
                get {
                    return this.columnOUT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRFRow this[int index] {
                get {
                    return ((INSGRFRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRFRowChangeEventHandler INSGRFRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRFRowChangeEventHandler INSGRFRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRFRowChangeEventHandler INSGRFRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRFRowChangeEventHandler INSGRFRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSGRFRow(INSGRFRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRFRow AddINSGRFRow(string NOBR, string FA_IDNO, System.DateTime IN_DATE, System.DateTime OUT_DATE, string KEY_MAN, System.DateTime KEY_DATE) {
                INSGRFRow rowINSGRFRow = ((INSGRFRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        FA_IDNO,
                        IN_DATE,
                        OUT_DATE,
                        KEY_MAN,
                        KEY_DATE};
                rowINSGRFRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSGRFRow);
                return rowINSGRFRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRFRow FindByNOBRFA_IDNOIN_DATE(string NOBR, string FA_IDNO, System.DateTime IN_DATE) {
                return ((INSGRFRow)(this.Rows.Find(new object[] {
                            NOBR,
                            FA_IDNO,
                            IN_DATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSGRFDataTable cln = ((INSGRFDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSGRFDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnIN_DATE = base.Columns["IN_DATE"];
                this.columnOUT_DATE = base.Columns["OUT_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnIN_DATE = new global::System.Data.DataColumn("IN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_DATE);
                this.columnOUT_DATE = new global::System.Data.DataColumn("OUT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnFA_IDNO,
                                this.columnIN_DATE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnIN_DATE.AllowDBNull = false;
                this.columnIN_DATE.Caption = "加保日期";
                this.columnOUT_DATE.AllowDBNull = false;
                this.columnOUT_DATE.Caption = "退保日期";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRFRow NewINSGRFRow() {
                return ((INSGRFRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSGRFRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSGRFRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSGRFRowChanged != null)) {
                    this.INSGRFRowChanged(this, new INSGRFRowChangeEvent(((INSGRFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSGRFRowChanging != null)) {
                    this.INSGRFRowChanging(this, new INSGRFRowChangeEvent(((INSGRFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSGRFRowDeleted != null)) {
                    this.INSGRFRowDeleted(this, new INSGRFRowChangeEvent(((INSGRFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSGRFRowDeleting != null)) {
                    this.INSGRFRowDeleting(this, new INSGRFRowChangeEvent(((INSGRFRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSGRFRow(INSGRFRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSGRFDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSGRLVDataTable : global::System.Data.TypedTableBase<INSGRLVRow> {
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnB_AMT;
            
            private global::System.Data.DataColumn columnE_AMT;
            
            private global::System.Data.DataColumn columnEXPA;
            
            private global::System.Data.DataColumn columnEXPB;
            
            private global::System.Data.DataColumn columnEXPC;
            
            private global::System.Data.DataColumn columnEXPD;
            
            private global::System.Data.DataColumn columnEXTA;
            
            private global::System.Data.DataColumn columnEXTB;
            
            private global::System.Data.DataColumn columnEXTC;
            
            private global::System.Data.DataColumn columnEXTD;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnPLAN_NO;
            
            private global::System.Data.DataColumn columnPLAN_NO_DISP;
            
            private global::System.Data.DataColumn columnACCI_AMT;
            
            private global::System.Data.DataColumn columnCOM_EXPA;
            
            private global::System.Data.DataColumn columnCOM_EXPB;
            
            private global::System.Data.DataColumn columnCOM_EXPC;
            
            private global::System.Data.DataColumn columnCOM_EXPD;
            
            private global::System.Data.DataColumn columnCOM_EXTA;
            
            private global::System.Data.DataColumn columnCOM_EXTB;
            
            private global::System.Data.DataColumn columnCOM_EXTC;
            
            private global::System.Data.DataColumn columnCOM_EXTD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRLVDataTable() {
                this.TableName = "INSGRLV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSGRLVDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected INSGRLVDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn B_AMTColumn {
                get {
                    return this.columnB_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn E_AMTColumn {
                get {
                    return this.columnE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXPAColumn {
                get {
                    return this.columnEXPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXPBColumn {
                get {
                    return this.columnEXPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXPCColumn {
                get {
                    return this.columnEXPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXPDColumn {
                get {
                    return this.columnEXPD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXTAColumn {
                get {
                    return this.columnEXTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXTBColumn {
                get {
                    return this.columnEXTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXTCColumn {
                get {
                    return this.columnEXTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EXTDColumn {
                get {
                    return this.columnEXTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PLAN_NOColumn {
                get {
                    return this.columnPLAN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn PLAN_NO_DISPColumn {
                get {
                    return this.columnPLAN_NO_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ACCI_AMTColumn {
                get {
                    return this.columnACCI_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXPAColumn {
                get {
                    return this.columnCOM_EXPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXPBColumn {
                get {
                    return this.columnCOM_EXPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXPCColumn {
                get {
                    return this.columnCOM_EXPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXPDColumn {
                get {
                    return this.columnCOM_EXPD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXTAColumn {
                get {
                    return this.columnCOM_EXTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXTBColumn {
                get {
                    return this.columnCOM_EXTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXTCColumn {
                get {
                    return this.columnCOM_EXTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn COM_EXTDColumn {
                get {
                    return this.columnCOM_EXTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRLVRow this[int index] {
                get {
                    return ((INSGRLVRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddINSGRLVRow(INSGRLVRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRLVRow AddINSGRLVRow(
                        decimal AMT, 
                        decimal B_AMT, 
                        decimal E_AMT, 
                        decimal EXPA, 
                        decimal EXPB, 
                        decimal EXPC, 
                        decimal EXPD, 
                        decimal EXTA, 
                        decimal EXTB, 
                        decimal EXTC, 
                        decimal EXTD, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string PLAN_NO, 
                        string PLAN_NO_DISP, 
                        decimal ACCI_AMT, 
                        decimal COM_EXPA, 
                        decimal COM_EXPB, 
                        decimal COM_EXPC, 
                        decimal COM_EXPD, 
                        decimal COM_EXTA, 
                        decimal COM_EXTB, 
                        decimal COM_EXTC, 
                        decimal COM_EXTD) {
                INSGRLVRow rowINSGRLVRow = ((INSGRLVRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AMT,
                        B_AMT,
                        E_AMT,
                        EXPA,
                        EXPB,
                        EXPC,
                        EXPD,
                        EXTA,
                        EXTB,
                        EXTC,
                        EXTD,
                        KEY_MAN,
                        KEY_DATE,
                        PLAN_NO,
                        PLAN_NO_DISP,
                        ACCI_AMT,
                        COM_EXPA,
                        COM_EXPB,
                        COM_EXPC,
                        COM_EXPD,
                        COM_EXTA,
                        COM_EXTB,
                        COM_EXTC,
                        COM_EXTD};
                rowINSGRLVRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSGRLVRow);
                return rowINSGRLVRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRLVRow FindByPLAN_NO(string PLAN_NO) {
                return ((INSGRLVRow)(this.Rows.Find(new object[] {
                            PLAN_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSGRLVDataTable cln = ((INSGRLVDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSGRLVDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnAMT = base.Columns["AMT"];
                this.columnB_AMT = base.Columns["B_AMT"];
                this.columnE_AMT = base.Columns["E_AMT"];
                this.columnEXPA = base.Columns["EXPA"];
                this.columnEXPB = base.Columns["EXPB"];
                this.columnEXPC = base.Columns["EXPC"];
                this.columnEXPD = base.Columns["EXPD"];
                this.columnEXTA = base.Columns["EXTA"];
                this.columnEXTB = base.Columns["EXTB"];
                this.columnEXTC = base.Columns["EXTC"];
                this.columnEXTD = base.Columns["EXTD"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnPLAN_NO = base.Columns["PLAN_NO"];
                this.columnPLAN_NO_DISP = base.Columns["PLAN_NO_DISP"];
                this.columnACCI_AMT = base.Columns["ACCI_AMT"];
                this.columnCOM_EXPA = base.Columns["COM_EXPA"];
                this.columnCOM_EXPB = base.Columns["COM_EXPB"];
                this.columnCOM_EXPC = base.Columns["COM_EXPC"];
                this.columnCOM_EXPD = base.Columns["COM_EXPD"];
                this.columnCOM_EXTA = base.Columns["COM_EXTA"];
                this.columnCOM_EXTB = base.Columns["COM_EXTB"];
                this.columnCOM_EXTC = base.Columns["COM_EXTC"];
                this.columnCOM_EXTD = base.Columns["COM_EXTD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnB_AMT = new global::System.Data.DataColumn("B_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_AMT);
                this.columnE_AMT = new global::System.Data.DataColumn("E_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_AMT);
                this.columnEXPA = new global::System.Data.DataColumn("EXPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPA);
                this.columnEXPB = new global::System.Data.DataColumn("EXPB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPB);
                this.columnEXPC = new global::System.Data.DataColumn("EXPC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPC);
                this.columnEXPD = new global::System.Data.DataColumn("EXPD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPD);
                this.columnEXTA = new global::System.Data.DataColumn("EXTA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTA);
                this.columnEXTB = new global::System.Data.DataColumn("EXTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTB);
                this.columnEXTC = new global::System.Data.DataColumn("EXTC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTC);
                this.columnEXTD = new global::System.Data.DataColumn("EXTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTD);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnPLAN_NO = new global::System.Data.DataColumn("PLAN_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAN_NO);
                this.columnPLAN_NO_DISP = new global::System.Data.DataColumn("PLAN_NO_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAN_NO_DISP);
                this.columnACCI_AMT = new global::System.Data.DataColumn("ACCI_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCI_AMT);
                this.columnCOM_EXPA = new global::System.Data.DataColumn("COM_EXPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPA);
                this.columnCOM_EXPB = new global::System.Data.DataColumn("COM_EXPB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPB);
                this.columnCOM_EXPC = new global::System.Data.DataColumn("COM_EXPC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPC);
                this.columnCOM_EXPD = new global::System.Data.DataColumn("COM_EXPD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPD);
                this.columnCOM_EXTA = new global::System.Data.DataColumn("COM_EXTA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTA);
                this.columnCOM_EXTB = new global::System.Data.DataColumn("COM_EXTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTB);
                this.columnCOM_EXTC = new global::System.Data.DataColumn("COM_EXTC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTC);
                this.columnCOM_EXTD = new global::System.Data.DataColumn("COM_EXTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPLAN_NO}, true));
                this.columnAMT.AllowDBNull = false;
                this.columnB_AMT.AllowDBNull = false;
                this.columnE_AMT.AllowDBNull = false;
                this.columnEXPA.AllowDBNull = false;
                this.columnEXPB.AllowDBNull = false;
                this.columnEXPC.AllowDBNull = false;
                this.columnEXPD.AllowDBNull = false;
                this.columnEXTA.AllowDBNull = false;
                this.columnEXTB.AllowDBNull = false;
                this.columnEXTC.AllowDBNull = false;
                this.columnEXTD.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnPLAN_NO.AllowDBNull = false;
                this.columnPLAN_NO.Unique = true;
                this.columnPLAN_NO.MaxLength = 50;
                this.columnPLAN_NO_DISP.AllowDBNull = false;
                this.columnPLAN_NO_DISP.MaxLength = 50;
                this.columnACCI_AMT.AllowDBNull = false;
                this.columnCOM_EXPA.AllowDBNull = false;
                this.columnCOM_EXPB.AllowDBNull = false;
                this.columnCOM_EXPC.AllowDBNull = false;
                this.columnCOM_EXPD.AllowDBNull = false;
                this.columnCOM_EXTA.AllowDBNull = false;
                this.columnCOM_EXTB.AllowDBNull = false;
                this.columnCOM_EXTC.AllowDBNull = false;
                this.columnCOM_EXTD.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRLVRow NewINSGRLVRow() {
                return ((INSGRLVRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSGRLVRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSGRLVRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSGRLVRowChanged != null)) {
                    this.INSGRLVRowChanged(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSGRLVRowChanging != null)) {
                    this.INSGRLVRowChanging(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSGRLVRowDeleted != null)) {
                    this.INSGRLVRowDeleted(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSGRLVRowDeleting != null)) {
                    this.INSGRLVRowDeleting(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveINSGRLVRow(INSGRLVRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSGRLVDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class YRINSURDataTable : global::System.Data.TypedTableBase<YRINSURRow> {
            
            private global::System.Data.DataColumn columnAUTO;
            
            private global::System.Data.DataColumn columnYEAR;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnREL_LAB;
            
            private global::System.Data.DataColumn columnREL_HEL;
            
            private global::System.Data.DataColumn columnREL_GRP;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnEQUAL;
            
            private global::System.Data.DataColumn columnSALADR;
            
            private global::System.Data.DataColumn columnREL_SUP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public YRINSURDataTable() {
                this.TableName = "YRINSUR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal YRINSURDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected YRINSURDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AUTOColumn {
                get {
                    return this.columnAUTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn YEARColumn {
                get {
                    return this.columnYEAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REL_LABColumn {
                get {
                    return this.columnREL_LAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REL_HELColumn {
                get {
                    return this.columnREL_HEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REL_GRPColumn {
                get {
                    return this.columnREL_GRP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn EQUALColumn {
                get {
                    return this.columnEQUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SALADRColumn {
                get {
                    return this.columnSALADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REL_SUPColumn {
                get {
                    return this.columnREL_SUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public YRINSURRow this[int index] {
                get {
                    return ((YRINSURRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event YRINSURRowChangeEventHandler YRINSURRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event YRINSURRowChangeEventHandler YRINSURRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event YRINSURRowChangeEventHandler YRINSURRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event YRINSURRowChangeEventHandler YRINSURRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddYRINSURRow(YRINSURRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public YRINSURRow AddYRINSURRow(string YEAR, string NOBR, string FA_IDNO, decimal REL_LAB, decimal REL_HEL, decimal REL_GRP, string KEY_MAN, System.DateTime KEY_DATE, bool EQUAL, string SALADR, decimal REL_SUP) {
                YRINSURRow rowYRINSURRow = ((YRINSURRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        YEAR,
                        NOBR,
                        FA_IDNO,
                        REL_LAB,
                        REL_HEL,
                        REL_GRP,
                        KEY_MAN,
                        KEY_DATE,
                        EQUAL,
                        SALADR,
                        REL_SUP};
                rowYRINSURRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowYRINSURRow);
                return rowYRINSURRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public YRINSURRow FindByAUTO(int AUTO) {
                return ((YRINSURRow)(this.Rows.Find(new object[] {
                            AUTO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                YRINSURDataTable cln = ((YRINSURDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new YRINSURDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnAUTO = base.Columns["AUTO"];
                this.columnYEAR = base.Columns["YEAR"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnREL_LAB = base.Columns["REL_LAB"];
                this.columnREL_HEL = base.Columns["REL_HEL"];
                this.columnREL_GRP = base.Columns["REL_GRP"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnEQUAL = base.Columns["EQUAL"];
                this.columnSALADR = base.Columns["SALADR"];
                this.columnREL_SUP = base.Columns["REL_SUP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnAUTO = new global::System.Data.DataColumn("AUTO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTO);
                this.columnYEAR = new global::System.Data.DataColumn("YEAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEAR);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnREL_LAB = new global::System.Data.DataColumn("REL_LAB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_LAB);
                this.columnREL_HEL = new global::System.Data.DataColumn("REL_HEL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_HEL);
                this.columnREL_GRP = new global::System.Data.DataColumn("REL_GRP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_GRP);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnEQUAL = new global::System.Data.DataColumn("EQUAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEQUAL);
                this.columnSALADR = new global::System.Data.DataColumn("SALADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALADR);
                this.columnREL_SUP = new global::System.Data.DataColumn("REL_SUP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_SUP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAUTO}, true));
                this.columnAUTO.AutoIncrement = true;
                this.columnAUTO.AutoIncrementSeed = -1;
                this.columnAUTO.AutoIncrementStep = -1;
                this.columnAUTO.AllowDBNull = false;
                this.columnAUTO.ReadOnly = true;
                this.columnAUTO.Unique = true;
                this.columnYEAR.AllowDBNull = false;
                this.columnYEAR.Caption = "年度";
                this.columnYEAR.MaxLength = 50;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnREL_LAB.AllowDBNull = false;
                this.columnREL_LAB.Caption = "代扣勞保";
                this.columnREL_HEL.AllowDBNull = false;
                this.columnREL_HEL.Caption = "代扣健保";
                this.columnREL_GRP.AllowDBNull = false;
                this.columnREL_GRP.Caption = "代扣團保";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnEQUAL.AllowDBNull = false;
                this.columnSALADR.Caption = "資料群組";
                this.columnSALADR.MaxLength = 50;
                this.columnREL_SUP.Caption = "補充保費";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public YRINSURRow NewYRINSURRow() {
                return ((YRINSURRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new YRINSURRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(YRINSURRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.YRINSURRowChanged != null)) {
                    this.YRINSURRowChanged(this, new YRINSURRowChangeEvent(((YRINSURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.YRINSURRowChanging != null)) {
                    this.YRINSURRowChanging(this, new YRINSURRowChangeEvent(((YRINSURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.YRINSURRowDeleted != null)) {
                    this.YRINSURRowDeleted(this, new YRINSURRowChangeEvent(((YRINSURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.YRINSURRowDeleting != null)) {
                    this.YRINSURRowDeleting(this, new YRINSURRowChangeEvent(((YRINSURRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveYRINSURRow(YRINSURRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "YRINSURDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FRM3AZDataTable : global::System.Data.TypedTableBase<FRM3AZRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnRETCHOO;
            
            private global::System.Data.DataColumn columnNOTTRAN;
            
            private global::System.Data.DataColumn columnSALARY;
            
            private global::System.Data.DataColumn columnL_AMT;
            
            private global::System.Data.DataColumn columnL_AMT1;
            
            private global::System.Data.DataColumn columnH_AMT;
            
            private global::System.Data.DataColumn columnH_AMT1;
            
            private global::System.Data.DataColumn columnSALARYA;
            
            private global::System.Data.DataColumn columnR_AMT;
            
            private global::System.Data.DataColumn columnR_AMT1;
            
            private global::System.Data.DataColumn columnAMT1;
            
            private global::System.Data.DataColumn columnAMT2;
            
            private global::System.Data.DataColumn columnAMT3;
            
            private global::System.Data.DataColumn columnAMTA;
            
            private global::System.Data.DataColumn columnAMTB;
            
            private global::System.Data.DataColumn columnAMTC;
            
            private global::System.Data.DataColumn columnInsComp;
            
            private global::System.Data.DataColumn columnREMARK;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FRM3AZDataTable() {
                this.TableName = "FRM3AZ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal FRM3AZDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected FRM3AZDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RETCHOOColumn {
                get {
                    return this.columnRETCHOO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NOTTRANColumn {
                get {
                    return this.columnNOTTRAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SALARYColumn {
                get {
                    return this.columnSALARY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn L_AMTColumn {
                get {
                    return this.columnL_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn L_AMT1Column {
                get {
                    return this.columnL_AMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn H_AMTColumn {
                get {
                    return this.columnH_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn H_AMT1Column {
                get {
                    return this.columnH_AMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SALARYAColumn {
                get {
                    return this.columnSALARYA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn R_AMTColumn {
                get {
                    return this.columnR_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn R_AMT1Column {
                get {
                    return this.columnR_AMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT1Column {
                get {
                    return this.columnAMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT2Column {
                get {
                    return this.columnAMT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMT3Column {
                get {
                    return this.columnAMT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTAColumn {
                get {
                    return this.columnAMTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTBColumn {
                get {
                    return this.columnAMTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AMTCColumn {
                get {
                    return this.columnAMTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InsCompColumn {
                get {
                    return this.columnInsComp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn REMARKColumn {
                get {
                    return this.columnREMARK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FRM3AZRow this[int index] {
                get {
                    return ((FRM3AZRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FRM3AZRowChangeEventHandler FRM3AZRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FRM3AZRowChangeEventHandler FRM3AZRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FRM3AZRowChangeEventHandler FRM3AZRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event FRM3AZRowChangeEventHandler FRM3AZRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddFRM3AZRow(FRM3AZRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FRM3AZRow AddFRM3AZRow(
                        string NOBR, 
                        string NAME_C, 
                        string RETCHOO, 
                        bool NOTTRAN, 
                        decimal SALARY, 
                        decimal L_AMT, 
                        decimal L_AMT1, 
                        decimal H_AMT, 
                        decimal H_AMT1, 
                        decimal SALARYA, 
                        decimal R_AMT, 
                        decimal R_AMT1, 
                        decimal AMT1, 
                        decimal AMT2, 
                        decimal AMT3, 
                        decimal AMTA, 
                        decimal AMTB, 
                        decimal AMTC, 
                        string InsComp, 
                        string REMARK) {
                FRM3AZRow rowFRM3AZRow = ((FRM3AZRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        NAME_C,
                        RETCHOO,
                        NOTTRAN,
                        SALARY,
                        L_AMT,
                        L_AMT1,
                        H_AMT,
                        H_AMT1,
                        SALARYA,
                        R_AMT,
                        R_AMT1,
                        AMT1,
                        AMT2,
                        AMT3,
                        AMTA,
                        AMTB,
                        AMTC,
                        InsComp,
                        REMARK};
                rowFRM3AZRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFRM3AZRow);
                return rowFRM3AZRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FRM3AZDataTable cln = ((FRM3AZDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FRM3AZDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnRETCHOO = base.Columns["RETCHOO"];
                this.columnNOTTRAN = base.Columns["NOTTRAN"];
                this.columnSALARY = base.Columns["SALARY"];
                this.columnL_AMT = base.Columns["L_AMT"];
                this.columnL_AMT1 = base.Columns["L_AMT1"];
                this.columnH_AMT = base.Columns["H_AMT"];
                this.columnH_AMT1 = base.Columns["H_AMT1"];
                this.columnSALARYA = base.Columns["SALARYA"];
                this.columnR_AMT = base.Columns["R_AMT"];
                this.columnR_AMT1 = base.Columns["R_AMT1"];
                this.columnAMT1 = base.Columns["AMT1"];
                this.columnAMT2 = base.Columns["AMT2"];
                this.columnAMT3 = base.Columns["AMT3"];
                this.columnAMTA = base.Columns["AMTA"];
                this.columnAMTB = base.Columns["AMTB"];
                this.columnAMTC = base.Columns["AMTC"];
                this.columnInsComp = base.Columns["InsComp"];
                this.columnREMARK = base.Columns["REMARK"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnRETCHOO = new global::System.Data.DataColumn("RETCHOO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETCHOO);
                this.columnNOTTRAN = new global::System.Data.DataColumn("NOTTRAN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTTRAN);
                this.columnSALARY = new global::System.Data.DataColumn("SALARY", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALARY);
                this.columnL_AMT = new global::System.Data.DataColumn("L_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_AMT);
                this.columnL_AMT1 = new global::System.Data.DataColumn("L_AMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnL_AMT1);
                this.columnH_AMT = new global::System.Data.DataColumn("H_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH_AMT);
                this.columnH_AMT1 = new global::System.Data.DataColumn("H_AMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnH_AMT1);
                this.columnSALARYA = new global::System.Data.DataColumn("SALARYA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALARYA);
                this.columnR_AMT = new global::System.Data.DataColumn("R_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR_AMT);
                this.columnR_AMT1 = new global::System.Data.DataColumn("R_AMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnR_AMT1);
                this.columnAMT1 = new global::System.Data.DataColumn("AMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT1);
                this.columnAMT2 = new global::System.Data.DataColumn("AMT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT2);
                this.columnAMT3 = new global::System.Data.DataColumn("AMT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT3);
                this.columnAMTA = new global::System.Data.DataColumn("AMTA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTA);
                this.columnAMTB = new global::System.Data.DataColumn("AMTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTB);
                this.columnAMTC = new global::System.Data.DataColumn("AMTC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMTC);
                this.columnInsComp = new global::System.Data.DataColumn("InsComp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInsComp);
                this.columnREMARK = new global::System.Data.DataColumn("REMARK", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREMARK);
                this.columnNOBR.Caption = "員工編號";
                this.columnNAME_C.Caption = "員工姓名";
                this.columnRETCHOO.Caption = "勞退";
                this.columnNOTTRAN.Caption = "不新增";
                this.columnSALARY.Caption = "勞健保薪資";
                this.columnL_AMT.Caption = "目前勞保金額";
                this.columnL_AMT1.Caption = "應該勞保金額";
                this.columnH_AMT.Caption = "目前健保金額";
                this.columnH_AMT1.Caption = "應該健保金額";
                this.columnSALARYA.Caption = "勞退薪資";
                this.columnR_AMT.Caption = "目前勞退工資";
                this.columnR_AMT1.Caption = "應該勞退工資";
                this.columnAMT1.Caption = "勞健月份1";
                this.columnAMT2.Caption = "勞健月份2";
                this.columnAMT3.Caption = "勞健月份3";
                this.columnAMTA.Caption = "勞退月份1";
                this.columnAMTB.Caption = "勞退月份2";
                this.columnAMTC.Caption = "勞退月份3";
                this.columnInsComp.Caption = "投保單位";
                this.columnREMARK.Caption = "錯誤註記";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FRM3AZRow NewFRM3AZRow() {
                return ((FRM3AZRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FRM3AZRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FRM3AZRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FRM3AZRowChanged != null)) {
                    this.FRM3AZRowChanged(this, new FRM3AZRowChangeEvent(((FRM3AZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FRM3AZRowChanging != null)) {
                    this.FRM3AZRowChanging(this, new FRM3AZRowChangeEvent(((FRM3AZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FRM3AZRowDeleted != null)) {
                    this.FRM3AZRowDeleted(this, new FRM3AZRowChangeEvent(((FRM3AZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FRM3AZRowDeleting != null)) {
                    this.FRM3AZRowDeleting(this, new FRM3AZRowChangeEvent(((FRM3AZRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveFRM3AZRow(FRM3AZRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                InsDS ds = new InsDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FRM3AZDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSURLVRow : global::System.Data.DataRow {
            
            private INSURLVDataTable tableINSURLV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSURLVRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSURLV = ((INSURLVDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableINSURLV.AMTColumn]));
                }
                set {
                    this[this.tableINSURLV.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EFF_DATEL {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.EFF_DATELColumn]));
                }
                set {
                    this[this.tableINSURLV.EFF_DATELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LFF_DATEL {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.LFF_DATELColumn]));
                }
                set {
                    this[this.tableINSURLV.LFF_DATELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EFF_DATEH {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.EFF_DATEHColumn]));
                }
                set {
                    this[this.tableINSURLV.EFF_DATEHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LFF_DATEH {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.LFF_DATEHColumn]));
                }
                set {
                    this[this.tableINSURLV.LFF_DATEHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSURLV.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSURLV.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSURLV.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EFF_DATER {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.EFF_DATERColumn]));
                }
                set {
                    this[this.tableINSURLV.EFF_DATERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LFF_DATER {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.LFF_DATERColumn]));
                }
                set {
                    this[this.tableINSURLV.LFF_DATERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EFF_RATE {
                get {
                    return ((decimal)(this[this.tableINSURLV.EFF_RATEColumn]));
                }
                set {
                    this[this.tableINSURLV.EFF_RATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime EFF_DATEJ {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.EFF_DATEJColumn]));
                }
                set {
                    this[this.tableINSURLV.EFF_DATEJColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime LFF_DATEJ {
                get {
                    return ((global::System.DateTime)(this[this.tableINSURLV.LFF_DATEJColumn]));
                }
                set {
                    this[this.tableINSURLV.LFF_DATEJColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSLABRow : global::System.Data.DataRow {
            
            private INSLABDataTable tableINSLAB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSLABRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSLAB = ((INSLABDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableINSLAB.NOBRColumn]));
                }
                set {
                    this[this.tableINSLAB.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableINSLAB.FA_IDNOColumn]));
                }
                set {
                    this[this.tableINSLAB.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableINSLAB.CODEColumn]));
                }
                set {
                    this[this.tableINSLAB.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime IN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSLAB.IN_DATEColumn]));
                }
                set {
                    this[this.tableINSLAB.IN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime OUT_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSLAB.OUT_DATEColumn]));
                }
                set {
                    this[this.tableINSLAB.OUT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LRATE_CODE {
                get {
                    return ((string)(this[this.tableINSLAB.LRATE_CODEColumn]));
                }
                set {
                    this[this.tableINSLAB.LRATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string HRATE_CODE {
                get {
                    return ((string)(this[this.tableINSLAB.HRATE_CODEColumn]));
                }
                set {
                    this[this.tableINSLAB.HRATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal L_AMT {
                get {
                    return ((decimal)(this[this.tableINSLAB.L_AMTColumn]));
                }
                set {
                    this[this.tableINSLAB.L_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal H_AMT {
                get {
                    return ((decimal)(this[this.tableINSLAB.H_AMTColumn]));
                }
                set {
                    this[this.tableINSLAB.H_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSLAB.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSLAB.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSLAB.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSLAB.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableINSLAB.SEQColumn]));
                }
                set {
                    this[this.tableINSLAB.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE1 {
                get {
                    return ((string)(this[this.tableINSLAB.CODE1Column]));
                }
                set {
                    this[this.tableINSLAB.CODE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOTE {
                get {
                    return ((string)(this[this.tableINSLAB.NOTEColumn]));
                }
                set {
                    this[this.tableINSLAB.NOTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string S_NO {
                get {
                    return ((string)(this[this.tableINSLAB.S_NOColumn]));
                }
                set {
                    this[this.tableINSLAB.S_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal R_AMT {
                get {
                    return ((decimal)(this[this.tableINSLAB.R_AMTColumn]));
                }
                set {
                    this[this.tableINSLAB.R_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SPTYP {
                get {
                    return ((string)(this[this.tableINSLAB.SPTYPColumn]));
                }
                set {
                    this[this.tableINSLAB.SPTYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string WBSPTYP {
                get {
                    return ((string)(this[this.tableINSLAB.WBSPTYPColumn]));
                }
                set {
                    this[this.tableINSLAB.WBSPTYPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ROUT_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableINSLAB.ROUT_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSLAB\' 中資料行 \'ROUT_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSLAB.ROUT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool NOSUP {
                get {
                    return ((bool)(this[this.tableINSLAB.NOSUPColumn]));
                }
                set {
                    this[this.tableINSLAB.NOSUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal J_AMT {
                get {
                    return ((decimal)(this[this.tableINSLAB.J_AMTColumn]));
                }
                set {
                    this[this.tableINSLAB.J_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsROUT_DATENull() {
                return this.IsNull(this.tableINSLAB.ROUT_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetROUT_DATENull() {
                this[this.tableINSLAB.ROUT_DATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LARCODERow : global::System.Data.DataRow {
            
            private LARCODEDataTable tableLARCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal LARCODERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLARCODE = ((LARCODEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RATE_CODE {
                get {
                    return ((string)(this[this.tableLARCODE.RATE_CODEColumn]));
                }
                set {
                    this[this.tableLARCODE.RATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RATE_NAME {
                get {
                    return ((string)(this[this.tableLARCODE.RATE_NAMEColumn]));
                }
                set {
                    this[this.tableLARCODE.RATE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NORMALRATE {
                get {
                    return ((decimal)(this[this.tableLARCODE.NORMALRATEColumn]));
                }
                set {
                    this[this.tableLARCODE.NORMALRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LOSJOBRATE {
                get {
                    return ((decimal)(this[this.tableLARCODE.LOSJOBRATEColumn]));
                }
                set {
                    this[this.tableLARCODE.LOSJOBRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JOBACCRATE {
                get {
                    return ((decimal)(this[this.tableLARCODE.JOBACCRATEColumn]));
                }
                set {
                    this[this.tableLARCODE.JOBACCRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SELFCHARGE {
                get {
                    return ((decimal)(this[this.tableLARCODE.SELFCHARGEColumn]));
                }
                set {
                    this[this.tableLARCODE.SELFCHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COMPCHARGE {
                get {
                    return ((decimal)(this[this.tableLARCODE.COMPCHARGEColumn]));
                }
                set {
                    this[this.tableLARCODE.COMPCHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PARTIAL {
                get {
                    return ((decimal)(this[this.tableLARCODE.PARTIALColumn]));
                }
                set {
                    this[this.tableLARCODE.PARTIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableLARCODE.KEY_MANColumn]));
                }
                set {
                    this[this.tableLARCODE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableLARCODE.KEY_DATEColumn]));
                }
                set {
                    this[this.tableLARCODE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableLARCODE.ADATEColumn]));
                }
                set {
                    this[this.tableLARCODE.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool NOFUND {
                get {
                    return ((bool)(this[this.tableLARCODE.NOFUNDColumn]));
                }
                set {
                    this[this.tableLARCODE.NOFUNDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool NODISASTER {
                get {
                    return ((bool)(this[this.tableLARCODE.NODISASTERColumn]));
                }
                set {
                    this[this.tableLARCODE.NODISASTERColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class HARCODERow : global::System.Data.DataRow {
            
            private HARCODEDataTable tableHARCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal HARCODERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHARCODE = ((HARCODEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RATE_CODE {
                get {
                    return ((string)(this[this.tableHARCODE.RATE_CODEColumn]));
                }
                set {
                    this[this.tableHARCODE.RATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RATE_NAME {
                get {
                    return ((string)(this[this.tableHARCODE.RATE_NAMEColumn]));
                }
                set {
                    this[this.tableHARCODE.RATE_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SELFCHARGE {
                get {
                    return ((decimal)(this[this.tableHARCODE.SELFCHARGEColumn]));
                }
                set {
                    this[this.tableHARCODE.SELFCHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COMPCHARGE {
                get {
                    return ((decimal)(this[this.tableHARCODE.COMPCHARGEColumn]));
                }
                set {
                    this[this.tableHARCODE.COMPCHARGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal PARTIAL {
                get {
                    return ((decimal)(this[this.tableHARCODE.PARTIALColumn]));
                }
                set {
                    this[this.tableHARCODE.PARTIALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal FIX_AMT {
                get {
                    return ((decimal)(this[this.tableHARCODE.FIX_AMTColumn]));
                }
                set {
                    this[this.tableHARCODE.FIX_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableHARCODE.KEY_MANColumn]));
                }
                set {
                    this[this.tableHARCODE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableHARCODE.KEY_DATEColumn]));
                }
                set {
                    this[this.tableHARCODE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableHARCODE.ADATEColumn]));
                }
                set {
                    this[this.tableHARCODE.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NOPAYTOP {
                get {
                    return ((decimal)(this[this.tableHARCODE.NOPAYTOPColumn]));
                }
                set {
                    this[this.tableHARCODE.NOPAYTOPColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSNAMERow : global::System.Data.DataRow {
            
            private INSNAMEDataTable tableINSNAME;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSNAMERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSNAME = ((INSNAMEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NO {
                get {
                    return ((string)(this[this.tableINSNAME.NOColumn]));
                }
                set {
                    this[this.tableINSNAME.NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableINSNAME.NAMEColumn]));
                }
                set {
                    this[this.tableINSNAME.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSNAME.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSNAME.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSNAME.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSNAME.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NO1 {
                get {
                    return ((string)(this[this.tableINSNAME.NO1Column]));
                }
                set {
                    this[this.tableINSNAME.NO1Column] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSCOMPRow : global::System.Data.DataRow {
            
            private INSCOMPDataTable tableINSCOMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSCOMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSCOMP = ((INSCOMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string S_NO {
                get {
                    return ((string)(this[this.tableINSCOMP.S_NOColumn]));
                }
                set {
                    this[this.tableINSCOMP.S_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSNO {
                get {
                    return ((string)(this[this.tableINSCOMP.INSNOColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSPO {
                get {
                    return ((string)(this[this.tableINSCOMP.INSPOColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSPOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSIDNO {
                get {
                    return ((string)(this[this.tableINSCOMP.INSIDNOColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSIDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSSUB {
                get {
                    return ((string)(this[this.tableINSCOMP.INSSUBColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSSUBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSTEL {
                get {
                    return ((string)(this[this.tableINSCOMP.INSTELColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSTELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSNAME {
                get {
                    return ((string)(this[this.tableINSCOMP.INSNAMEColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSADDR {
                get {
                    return ((string)(this[this.tableINSCOMP.INSADDRColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSCOMP.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSCOMP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSCOMP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSCOMP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSMAN {
                get {
                    return ((string)(this[this.tableINSCOMP.INSMANColumn]));
                }
                set {
                    this[this.tableINSCOMP.INSMANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string REL_MAN {
                get {
                    return ((string)(this[this.tableINSCOMP.REL_MANColumn]));
                }
                set {
                    this[this.tableINSCOMP.REL_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string REL_TEL {
                get {
                    return ((string)(this[this.tableINSCOMP.REL_TELColumn]));
                }
                set {
                    this[this.tableINSCOMP.REL_TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool DEFA {
                get {
                    return ((bool)(this[this.tableINSCOMP.DEFAColumn]));
                }
                set {
                    this[this.tableINSCOMP.DEFAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string S_NO_DISP {
                get {
                    try {
                        return ((string)(this[this.tableINSCOMP.S_NO_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSCOMP\' 中資料行 \'S_NO_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSCOMP.S_NO_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal JOBACCRATE {
                get {
                    try {
                        return ((decimal)(this[this.tableINSCOMP.JOBACCRATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSCOMP\' 中資料行 \'JOBACCRATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSCOMP.JOBACCRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsS_NO_DISPNull() {
                return this.IsNull(this.tableINSCOMP.S_NO_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetS_NO_DISPNull() {
                this[this.tableINSCOMP.S_NO_DISPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsJOBACCRATENull() {
                return this.IsNull(this.tableINSCOMP.JOBACCRATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetJOBACCRATENull() {
                this[this.tableINSCOMP.JOBACCRATEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INPOLABRow : global::System.Data.DataRow {
            
            private INPOLABDataTable tableINPOLAB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INPOLABRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINPOLAB = ((INPOLABDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableINPOLAB.NOBRColumn]));
                }
                set {
                    this[this.tableINPOLAB.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableINPOLAB.FA_IDNOColumn]));
                }
                set {
                    this[this.tableINPOLAB.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string YYMM {
                get {
                    return ((string)(this[this.tableINPOLAB.YYMMColumn]));
                }
                set {
                    this[this.tableINPOLAB.YYMMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXP {
                get {
                    return ((decimal)(this[this.tableINPOLAB.EXPColumn]));
                }
                set {
                    this[this.tableINPOLAB.EXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COMP {
                get {
                    return ((decimal)(this[this.tableINPOLAB.COMPColumn]));
                }
                set {
                    this[this.tableINPOLAB.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINPOLAB.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINPOLAB.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINPOLAB.KEY_MANColumn]));
                }
                set {
                    this[this.tableINPOLAB.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINPOLAB.ADATEColumn]));
                }
                set {
                    this[this.tableINPOLAB.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal DAYS {
                get {
                    return ((decimal)(this[this.tableINPOLAB.DAYSColumn]));
                }
                set {
                    this[this.tableINPOLAB.DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RATE_CODE {
                get {
                    return ((string)(this[this.tableINPOLAB.RATE_CODEColumn]));
                }
                set {
                    this[this.tableINPOLAB.RATE_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string INSUR_TYPE {
                get {
                    return ((string)(this[this.tableINPOLAB.INSUR_TYPEColumn]));
                }
                set {
                    this[this.tableINPOLAB.INSUR_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal INSCD {
                get {
                    return ((decimal)(this[this.tableINPOLAB.INSCDColumn]));
                }
                set {
                    this[this.tableINPOLAB.INSCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SALADR {
                get {
                    return ((string)(this[this.tableINPOLAB.SALADRColumn]));
                }
                set {
                    this[this.tableINPOLAB.SALADRColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSURCDRow : global::System.Data.DataRow {
            
            private INSURCDDataTable tableINSURCD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSURCDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSURCD = ((INSURCDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CATEGORY {
                get {
                    return ((string)(this[this.tableINSURCD.CATEGORYColumn]));
                }
                set {
                    this[this.tableINSURCD.CATEGORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableINSURCD.CODEColumn]));
                }
                set {
                    this[this.tableINSURCD.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableINSURCD.NAMEColumn]));
                }
                set {
                    this[this.tableINSURCD.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SORT {
                get {
                    return ((int)(this[this.tableINSURCD.SORTColumn]));
                }
                set {
                    this[this.tableINSURCD.SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool DISPLAY {
                get {
                    return ((bool)(this[this.tableINSURCD.DISPLAYColumn]));
                }
                set {
                    this[this.tableINSURCD.DISPLAYColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSUR_TYPERow : global::System.Data.DataRow {
            
            private INSUR_TYPEDataTable tableINSUR_TYPE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSUR_TYPERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSUR_TYPE = ((INSUR_TYPEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CATEGORY {
                get {
                    return ((string)(this[this.tableINSUR_TYPE.CATEGORYColumn]));
                }
                set {
                    this[this.tableINSUR_TYPE.CATEGORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableINSUR_TYPE.CODEColumn]));
                }
                set {
                    this[this.tableINSUR_TYPE.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableINSUR_TYPE.NAMEColumn]));
                }
                set {
                    this[this.tableINSUR_TYPE.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SORT {
                get {
                    return ((int)(this[this.tableINSUR_TYPE.SORTColumn]));
                }
                set {
                    this[this.tableINSUR_TYPE.SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool DISPLAY {
                get {
                    return ((bool)(this[this.tableINSUR_TYPE.DISPLAYColumn]));
                }
                set {
                    this[this.tableINSUR_TYPE.DISPLAYColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SPTYPRow : global::System.Data.DataRow {
            
            private SPTYPDataTable tableSPTYP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SPTYPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSPTYP = ((SPTYPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CATEGORY {
                get {
                    return ((string)(this[this.tableSPTYP.CATEGORYColumn]));
                }
                set {
                    this[this.tableSPTYP.CATEGORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableSPTYP.CODEColumn]));
                }
                set {
                    this[this.tableSPTYP.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableSPTYP.NAMEColumn]));
                }
                set {
                    this[this.tableSPTYP.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SORT {
                get {
                    return ((int)(this[this.tableSPTYP.SORTColumn]));
                }
                set {
                    this[this.tableSPTYP.SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool DISPLAY {
                get {
                    return ((bool)(this[this.tableSPTYP.DISPLAYColumn]));
                }
                set {
                    this[this.tableSPTYP.DISPLAYColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class WBSPTYPRow : global::System.Data.DataRow {
            
            private WBSPTYPDataTable tableWBSPTYP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal WBSPTYPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableWBSPTYP = ((WBSPTYPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CATEGORY {
                get {
                    return ((string)(this[this.tableWBSPTYP.CATEGORYColumn]));
                }
                set {
                    this[this.tableWBSPTYP.CATEGORYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableWBSPTYP.CODEColumn]));
                }
                set {
                    this[this.tableWBSPTYP.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME {
                get {
                    return ((string)(this[this.tableWBSPTYP.NAMEColumn]));
                }
                set {
                    this[this.tableWBSPTYP.NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SORT {
                get {
                    return ((int)(this[this.tableWBSPTYP.SORTColumn]));
                }
                set {
                    this[this.tableWBSPTYP.SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool DISPLAY {
                get {
                    return ((bool)(this[this.tableWBSPTYP.DISPLAYColumn]));
                }
                set {
                    this[this.tableWBSPTYP.DISPLAYColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FAMILYRow : global::System.Data.DataRow {
            
            private FAMILYDataTable tableFAMILY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal FAMILYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFAMILY = ((FAMILYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableFAMILY.FA_IDNOColumn]));
                }
                set {
                    this[this.tableFAMILY.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FA_NAME {
                get {
                    return ((string)(this[this.tableFAMILY.FA_NAMEColumn]));
                }
                set {
                    this[this.tableFAMILY.FA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string REL_CODE {
                get {
                    return ((string)(this[this.tableFAMILY.REL_CODEColumn]));
                }
                set {
                    this[this.tableFAMILY.REL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime FA_BIRDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMILY.FA_BIRDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FAMILY\' 中資料行 \'FA_BIRDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFAMILY.FA_BIRDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableFAMILY.NOBRColumn]));
                }
                set {
                    this[this.tableFAMILY.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFAMILY.KEY_DATEColumn]));
                }
                set {
                    this[this.tableFAMILY.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableFAMILY.KEY_MANColumn]));
                }
                set {
                    this[this.tableFAMILY.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ADDR {
                get {
                    return ((string)(this[this.tableFAMILY.ADDRColumn]));
                }
                set {
                    this[this.tableFAMILY.ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TEL {
                get {
                    return ((string)(this[this.tableFAMILY.TELColumn]));
                }
                set {
                    this[this.tableFAMILY.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string GSM {
                get {
                    return ((string)(this[this.tableFAMILY.GSMColumn]));
                }
                set {
                    this[this.tableFAMILY.GSMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string BBC {
                get {
                    return ((string)(this[this.tableFAMILY.BBCColumn]));
                }
                set {
                    this[this.tableFAMILY.BBCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool TAX {
                get {
                    return ((bool)(this[this.tableFAMILY.TAXColumn]));
                }
                set {
                    this[this.tableFAMILY.TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool AUTOINSLAB {
                get {
                    return ((bool)(this[this.tableFAMILY.AUTOINSLABColumn]));
                }
                set {
                    this[this.tableFAMILY.AUTOINSLABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool LIVE {
                get {
                    return ((bool)(this[this.tableFAMILY.LIVEColumn]));
                }
                set {
                    this[this.tableFAMILY.LIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string EDUCODE {
                get {
                    return ((string)(this[this.tableFAMILY.EDUCODEColumn]));
                }
                set {
                    this[this.tableFAMILY.EDUCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string COMPNY {
                get {
                    return ((string)(this[this.tableFAMILY.COMPNYColumn]));
                }
                set {
                    this[this.tableFAMILY.COMPNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TITLE {
                get {
                    return ((string)(this[this.tableFAMILY.TITLEColumn]));
                }
                set {
                    this[this.tableFAMILY.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool FAMFORN {
                get {
                    return ((bool)(this[this.tableFAMILY.FAMFORNColumn]));
                }
                set {
                    this[this.tableFAMILY.FAMFORNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsFA_BIRDTNull() {
                return this.IsNull(this.tableFAMILY.FA_BIRDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetFA_BIRDTNull() {
                this[this.tableFAMILY.FA_BIRDTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSCOUNTRYRow : global::System.Data.DataRow {
            
            private INSCOUNTRYDataTable tableINSCOUNTRY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSCOUNTRYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSCOUNTRY = ((INSCOUNTRYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string S_NO {
                get {
                    return ((string)(this[this.tableINSCOUNTRY.S_NOColumn]));
                }
                set {
                    this[this.tableINSCOUNTRY.S_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string S_NAME {
                get {
                    return ((string)(this[this.tableINSCOUNTRY.S_NAMEColumn]));
                }
                set {
                    this[this.tableINSCOUNTRY.S_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSCOUNTRY.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSCOUNTRY.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSCOUNTRY.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSCOUNTRY.KEY_MANColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class U_SYS4Row : global::System.Data.DataRow {
            
            private U_SYS4DataTable tableU_SYS4;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal U_SYS4Row(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableU_SYS4 = ((U_SYS4DataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LSALCODE {
                get {
                    try {
                        return ((string)(this[this.tableU_SYS4.LSALCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'LSALCODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.LSALCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LABOVERSALCODE {
                get {
                    try {
                        return ((string)(this[this.tableU_SYS4.LABOVERSALCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'LABOVERSALCODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.LABOVERSALCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LABREPAIRSALCODE {
                get {
                    try {
                        return ((string)(this[this.tableU_SYS4.LABREPAIRSALCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'LABREPAIRSALCODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.LABREPAIRSALCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LJOBPER {
                get {
                    try {
                        return ((decimal)(this[this.tableU_SYS4.LJOBPERColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'LJOBPER\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.LJOBPERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal LJOBPER1 {
                get {
                    try {
                        return ((decimal)(this[this.tableU_SYS4.LJOBPER1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'LJOBPER1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.LJOBPER1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal RETIRERATE {
                get {
                    try {
                        return ((decimal)(this[this.tableU_SYS4.RETIRERATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'RETIRERATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.RETIRERATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal RETIRERATE1 {
                get {
                    try {
                        return ((decimal)(this[this.tableU_SYS4.RETIRERATE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'RETIRERATE1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.RETIRERATE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NRETIRERATE {
                get {
                    try {
                        return ((decimal)(this[this.tableU_SYS4.NRETIRERATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'NRETIRERATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.NRETIRERATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal NRETIRERATE1 {
                get {
                    try {
                        return ((decimal)(this[this.tableU_SYS4.NRETIRERATE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'NRETIRERATE1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.NRETIRERATE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RETSALCODE {
                get {
                    try {
                        return ((string)(this[this.tableU_SYS4.RETSALCODEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'U_SYS4\' 中資料行 \'RETSALCODE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableU_SYS4.RETSALCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Comp {
                get {
                    return ((string)(this[this.tableU_SYS4.CompColumn]));
                }
                set {
                    this[this.tableU_SYS4.CompColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLSALCODENull() {
                return this.IsNull(this.tableU_SYS4.LSALCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLSALCODENull() {
                this[this.tableU_SYS4.LSALCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLABOVERSALCODENull() {
                return this.IsNull(this.tableU_SYS4.LABOVERSALCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLABOVERSALCODENull() {
                this[this.tableU_SYS4.LABOVERSALCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLABREPAIRSALCODENull() {
                return this.IsNull(this.tableU_SYS4.LABREPAIRSALCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLABREPAIRSALCODENull() {
                this[this.tableU_SYS4.LABREPAIRSALCODEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLJOBPERNull() {
                return this.IsNull(this.tableU_SYS4.LJOBPERColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLJOBPERNull() {
                this[this.tableU_SYS4.LJOBPERColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLJOBPER1Null() {
                return this.IsNull(this.tableU_SYS4.LJOBPER1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLJOBPER1Null() {
                this[this.tableU_SYS4.LJOBPER1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRETIRERATENull() {
                return this.IsNull(this.tableU_SYS4.RETIRERATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRETIRERATENull() {
                this[this.tableU_SYS4.RETIRERATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRETIRERATE1Null() {
                return this.IsNull(this.tableU_SYS4.RETIRERATE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRETIRERATE1Null() {
                this[this.tableU_SYS4.RETIRERATE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNRETIRERATENull() {
                return this.IsNull(this.tableU_SYS4.NRETIRERATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNRETIRERATENull() {
                this[this.tableU_SYS4.NRETIRERATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNRETIRERATE1Null() {
                return this.IsNull(this.tableU_SYS4.NRETIRERATE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNRETIRERATE1Null() {
                this[this.tableU_SYS4.NRETIRERATE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRETSALCODENull() {
                return this.IsNull(this.tableU_SYS4.RETSALCODEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRETSALCODENull() {
                this[this.tableU_SYS4.RETSALCODEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class V_BASERow : global::System.Data.DataRow {
            
            private V_BASEDataTable tableV_BASE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal V_BASERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableV_BASE = ((V_BASEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableV_BASE.NOBRColumn]));
                }
                set {
                    this[this.tableV_BASE.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableV_BASE.NAME_CColumn]));
                }
                set {
                    this[this.tableV_BASE.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME_E {
                get {
                    return ((string)(this[this.tableV_BASE.NAME_EColumn]));
                }
                set {
                    this[this.tableV_BASE.NAME_EColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME_P {
                get {
                    return ((string)(this[this.tableV_BASE.NAME_PColumn]));
                }
                set {
                    this[this.tableV_BASE.NAME_PColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SALADR {
                get {
                    return ((string)(this[this.tableV_BASE.SALADRColumn]));
                }
                set {
                    this[this.tableV_BASE.SALADRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IDNO {
                get {
                    return ((string)(this[this.tableV_BASE.IDNOColumn]));
                }
                set {
                    this[this.tableV_BASE.IDNOColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSGRPRow : global::System.Data.DataRow {
            
            private INSGRPDataTable tableINSGRP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSGRPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSGRP = ((INSGRPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableINSGRP.NOBRColumn]));
                }
                set {
                    this[this.tableINSGRP.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableINSGRP.FA_IDNOColumn]));
                }
                set {
                    this[this.tableINSGRP.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime IN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRP.IN_DATEColumn]));
                }
                set {
                    this[this.tableINSGRP.IN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime OUT_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRP.OUT_DATEColumn]));
                }
                set {
                    this[this.tableINSGRP.OUT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableINSGRP.CODEColumn]));
                }
                set {
                    this[this.tableINSGRP.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT1 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT1Column]));
                }
                set {
                    this[this.tableINSGRP.AMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXP1 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP1Column]));
                }
                set {
                    this[this.tableINSGRP.EXP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COP1 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP1Column]));
                }
                set {
                    this[this.tableINSGRP.COP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT2 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT2Column]));
                }
                set {
                    this[this.tableINSGRP.AMT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXP2 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP2Column]));
                }
                set {
                    this[this.tableINSGRP.EXP2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COP2 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP2Column]));
                }
                set {
                    this[this.tableINSGRP.COP2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT3 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT3Column]));
                }
                set {
                    this[this.tableINSGRP.AMT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXP3 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP3Column]));
                }
                set {
                    this[this.tableINSGRP.EXP3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COP3 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP3Column]));
                }
                set {
                    this[this.tableINSGRP.COP3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT4 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT4Column]));
                }
                set {
                    this[this.tableINSGRP.AMT4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXP4 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP4Column]));
                }
                set {
                    this[this.tableINSGRP.EXP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COP4 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP4Column]));
                }
                set {
                    this[this.tableINSGRP.COP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT5 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT5Column]));
                }
                set {
                    this[this.tableINSGRP.AMT5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXP5 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP5Column]));
                }
                set {
                    this[this.tableINSGRP.EXP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COP5 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP5Column]));
                }
                set {
                    this[this.tableINSGRP.COP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSGRP.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSGRP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSGRP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT6 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT6Column]));
                }
                set {
                    this[this.tableINSGRP.AMT6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal TOTEXP {
                get {
                    return ((decimal)(this[this.tableINSGRP.TOTEXPColumn]));
                }
                set {
                    this[this.tableINSGRP.TOTEXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COPEXP {
                get {
                    return ((decimal)(this[this.tableINSGRP.COPEXPColumn]));
                }
                set {
                    this[this.tableINSGRP.COPEXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableINSGRP.SEQColumn]));
                }
                set {
                    this[this.tableINSGRP.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool EXP3CAL {
                get {
                    return ((bool)(this[this.tableINSGRP.EXP3CALColumn]));
                }
                set {
                    this[this.tableINSGRP.EXP3CALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool EXP1CAL {
                get {
                    return ((bool)(this[this.tableINSGRP.EXP1CALColumn]));
                }
                set {
                    this[this.tableINSGRP.EXP1CALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool EXP2CAL {
                get {
                    return ((bool)(this[this.tableINSGRP.EXP2CALColumn]));
                }
                set {
                    this[this.tableINSGRP.EXP2CALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string GRP_TYPE {
                get {
                    return ((string)(this[this.tableINSGRP.GRP_TYPEColumn]));
                }
                set {
                    this[this.tableINSGRP.GRP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PAN {
                get {
                    return ((string)(this[this.tableINSGRP.PANColumn]));
                }
                set {
                    this[this.tableINSGRP.PANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXP6 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSGRP.EXP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSGRP\' 中資料行 \'EXP6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSGRP.EXP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COP6 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSGRP.COP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSGRP\' 中資料行 \'COP6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSGRP.COP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsEXP6Null() {
                return this.IsNull(this.tableINSGRP.EXP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetEXP6Null() {
                this[this.tableINSGRP.EXP6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCOP6Null() {
                return this.IsNull(this.tableINSGRP.COP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCOP6Null() {
                this[this.tableINSGRP.COP6Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSGRFRow : global::System.Data.DataRow {
            
            private INSGRFDataTable tableINSGRF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSGRFRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSGRF = ((INSGRFDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableINSGRF.NOBRColumn]));
                }
                set {
                    this[this.tableINSGRF.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableINSGRF.FA_IDNOColumn]));
                }
                set {
                    this[this.tableINSGRF.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime IN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRF.IN_DATEColumn]));
                }
                set {
                    this[this.tableINSGRF.IN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime OUT_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRF.OUT_DATEColumn]));
                }
                set {
                    this[this.tableINSGRF.OUT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSGRF.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSGRF.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRF.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSGRF.KEY_DATEColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSGRLVRow : global::System.Data.DataRow {
            
            private INSGRLVDataTable tableINSGRLV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal INSGRLVRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSGRLV = ((INSGRLVDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal B_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.B_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.B_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal E_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.E_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.E_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXPA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPAColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXPB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPBColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXPC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPCColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXPD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPDColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXTA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTAColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXTB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTBColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXTC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTCColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal EXTD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTDColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSGRLV.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSGRLV.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRLV.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSGRLV.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PLAN_NO {
                get {
                    return ((string)(this[this.tableINSGRLV.PLAN_NOColumn]));
                }
                set {
                    this[this.tableINSGRLV.PLAN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string PLAN_NO_DISP {
                get {
                    return ((string)(this[this.tableINSGRLV.PLAN_NO_DISPColumn]));
                }
                set {
                    this[this.tableINSGRLV.PLAN_NO_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ACCI_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.ACCI_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.ACCI_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXPA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPAColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXPB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPBColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXPC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPCColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXPD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPDColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXTA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTAColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXTB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTBColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXTC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTCColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal COM_EXTD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTDColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class YRINSURRow : global::System.Data.DataRow {
            
            private YRINSURDataTable tableYRINSUR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal YRINSURRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableYRINSUR = ((YRINSURDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int AUTO {
                get {
                    return ((int)(this[this.tableYRINSUR.AUTOColumn]));
                }
                set {
                    this[this.tableYRINSUR.AUTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string YEAR {
                get {
                    return ((string)(this[this.tableYRINSUR.YEARColumn]));
                }
                set {
                    this[this.tableYRINSUR.YEARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableYRINSUR.NOBRColumn]));
                }
                set {
                    this[this.tableYRINSUR.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableYRINSUR.FA_IDNOColumn]));
                }
                set {
                    this[this.tableYRINSUR.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal REL_LAB {
                get {
                    return ((decimal)(this[this.tableYRINSUR.REL_LABColumn]));
                }
                set {
                    this[this.tableYRINSUR.REL_LABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal REL_HEL {
                get {
                    return ((decimal)(this[this.tableYRINSUR.REL_HELColumn]));
                }
                set {
                    this[this.tableYRINSUR.REL_HELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal REL_GRP {
                get {
                    return ((decimal)(this[this.tableYRINSUR.REL_GRPColumn]));
                }
                set {
                    this[this.tableYRINSUR.REL_GRPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableYRINSUR.KEY_MANColumn]));
                }
                set {
                    this[this.tableYRINSUR.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableYRINSUR.KEY_DATEColumn]));
                }
                set {
                    this[this.tableYRINSUR.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool EQUAL {
                get {
                    return ((bool)(this[this.tableYRINSUR.EQUALColumn]));
                }
                set {
                    this[this.tableYRINSUR.EQUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SALADR {
                get {
                    try {
                        return ((string)(this[this.tableYRINSUR.SALADRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'YRINSUR\' 中資料行 \'SALADR\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableYRINSUR.SALADRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal REL_SUP {
                get {
                    try {
                        return ((decimal)(this[this.tableYRINSUR.REL_SUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'YRINSUR\' 中資料行 \'REL_SUP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableYRINSUR.REL_SUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSALADRNull() {
                return this.IsNull(this.tableYRINSUR.SALADRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSALADRNull() {
                this[this.tableYRINSUR.SALADRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsREL_SUPNull() {
                return this.IsNull(this.tableYRINSUR.REL_SUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetREL_SUPNull() {
                this[this.tableYRINSUR.REL_SUPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FRM3AZRow : global::System.Data.DataRow {
            
            private FRM3AZDataTable tableFRM3AZ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal FRM3AZRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFRM3AZ = ((FRM3AZDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NOBR {
                get {
                    try {
                        return ((string)(this[this.tableFRM3AZ.NOBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'NOBR\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string NAME_C {
                get {
                    try {
                        return ((string)(this[this.tableFRM3AZ.NAME_CColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'NAME_C\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string RETCHOO {
                get {
                    try {
                        return ((string)(this[this.tableFRM3AZ.RETCHOOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'RETCHOO\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.RETCHOOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool NOTTRAN {
                get {
                    try {
                        return ((bool)(this[this.tableFRM3AZ.NOTTRANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'NOTTRAN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.NOTTRANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SALARY {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.SALARYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'SALARY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.SALARYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal L_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.L_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'L_AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.L_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal L_AMT1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.L_AMT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'L_AMT1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.L_AMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal H_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.H_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'H_AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.H_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal H_AMT1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.H_AMT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'H_AMT1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.H_AMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal SALARYA {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.SALARYAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'SALARYA\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.SALARYAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal R_AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.R_AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'R_AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.R_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal R_AMT1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.R_AMT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'R_AMT1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.R_AMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT1 {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.AMT1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'AMT1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.AMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT2 {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.AMT2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'AMT2\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.AMT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMT3 {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.AMT3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'AMT3\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.AMT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMTA {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.AMTAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'AMTA\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.AMTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMTB {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.AMTBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'AMTB\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.AMTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal AMTC {
                get {
                    try {
                        return ((decimal)(this[this.tableFRM3AZ.AMTCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'AMTC\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.AMTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InsComp {
                get {
                    try {
                        return ((string)(this[this.tableFRM3AZ.InsCompColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'InsComp\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.InsCompColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string REMARK {
                get {
                    try {
                        return ((string)(this[this.tableFRM3AZ.REMARKColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FRM3AZ\' 中資料行 \'REMARK\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFRM3AZ.REMARKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNOBRNull() {
                return this.IsNull(this.tableFRM3AZ.NOBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNOBRNull() {
                this[this.tableFRM3AZ.NOBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNAME_CNull() {
                return this.IsNull(this.tableFRM3AZ.NAME_CColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNAME_CNull() {
                this[this.tableFRM3AZ.NAME_CColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRETCHOONull() {
                return this.IsNull(this.tableFRM3AZ.RETCHOOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRETCHOONull() {
                this[this.tableFRM3AZ.RETCHOOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNOTTRANNull() {
                return this.IsNull(this.tableFRM3AZ.NOTTRANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNOTTRANNull() {
                this[this.tableFRM3AZ.NOTTRANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSALARYNull() {
                return this.IsNull(this.tableFRM3AZ.SALARYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSALARYNull() {
                this[this.tableFRM3AZ.SALARYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsL_AMTNull() {
                return this.IsNull(this.tableFRM3AZ.L_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetL_AMTNull() {
                this[this.tableFRM3AZ.L_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsL_AMT1Null() {
                return this.IsNull(this.tableFRM3AZ.L_AMT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetL_AMT1Null() {
                this[this.tableFRM3AZ.L_AMT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsH_AMTNull() {
                return this.IsNull(this.tableFRM3AZ.H_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetH_AMTNull() {
                this[this.tableFRM3AZ.H_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsH_AMT1Null() {
                return this.IsNull(this.tableFRM3AZ.H_AMT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetH_AMT1Null() {
                this[this.tableFRM3AZ.H_AMT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSALARYANull() {
                return this.IsNull(this.tableFRM3AZ.SALARYAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSALARYANull() {
                this[this.tableFRM3AZ.SALARYAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsR_AMTNull() {
                return this.IsNull(this.tableFRM3AZ.R_AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetR_AMTNull() {
                this[this.tableFRM3AZ.R_AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsR_AMT1Null() {
                return this.IsNull(this.tableFRM3AZ.R_AMT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetR_AMT1Null() {
                this[this.tableFRM3AZ.R_AMT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMT1Null() {
                return this.IsNull(this.tableFRM3AZ.AMT1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMT1Null() {
                this[this.tableFRM3AZ.AMT1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMT2Null() {
                return this.IsNull(this.tableFRM3AZ.AMT2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMT2Null() {
                this[this.tableFRM3AZ.AMT2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMT3Null() {
                return this.IsNull(this.tableFRM3AZ.AMT3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMT3Null() {
                this[this.tableFRM3AZ.AMT3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMTANull() {
                return this.IsNull(this.tableFRM3AZ.AMTAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMTANull() {
                this[this.tableFRM3AZ.AMTAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMTBNull() {
                return this.IsNull(this.tableFRM3AZ.AMTBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMTBNull() {
                this[this.tableFRM3AZ.AMTBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAMTCNull() {
                return this.IsNull(this.tableFRM3AZ.AMTCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAMTCNull() {
                this[this.tableFRM3AZ.AMTCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInsCompNull() {
                return this.IsNull(this.tableFRM3AZ.InsCompColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInsCompNull() {
                this[this.tableFRM3AZ.InsCompColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsREMARKNull() {
                return this.IsNull(this.tableFRM3AZ.REMARKColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetREMARKNull() {
                this[this.tableFRM3AZ.REMARKColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSURLVRowChangeEvent : global::System.EventArgs {
            
            private INSURLVRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURLVRowChangeEvent(INSURLVRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURLVRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSLABRowChangeEvent : global::System.EventArgs {
            
            private INSLABRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSLABRowChangeEvent(INSLABRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSLABRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class LARCODERowChangeEvent : global::System.EventArgs {
            
            private LARCODERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public LARCODERowChangeEvent(LARCODERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public LARCODERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class HARCODERowChangeEvent : global::System.EventArgs {
            
            private HARCODERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public HARCODERowChangeEvent(HARCODERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public HARCODERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSNAMERowChangeEvent : global::System.EventArgs {
            
            private INSNAMERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSNAMERowChangeEvent(INSNAMERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSNAMERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSCOMPRowChangeEvent : global::System.EventArgs {
            
            private INSCOMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOMPRowChangeEvent(INSCOMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INPOLABRowChangeEvent : global::System.EventArgs {
            
            private INPOLABRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INPOLABRowChangeEvent(INPOLABRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INPOLABRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSURCDRowChangeEvent : global::System.EventArgs {
            
            private INSURCDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURCDRowChangeEvent(INSURCDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSURCDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSUR_TYPERowChangeEvent : global::System.EventArgs {
            
            private INSUR_TYPERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSUR_TYPERowChangeEvent(INSUR_TYPERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSUR_TYPERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class SPTYPRowChangeEvent : global::System.EventArgs {
            
            private SPTYPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SPTYPRowChangeEvent(SPTYPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public SPTYPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class WBSPTYPRowChangeEvent : global::System.EventArgs {
            
            private WBSPTYPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public WBSPTYPRowChangeEvent(WBSPTYPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public WBSPTYPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class FAMILYRowChangeEvent : global::System.EventArgs {
            
            private FAMILYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FAMILYRowChangeEvent(FAMILYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FAMILYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSCOUNTRYRowChangeEvent : global::System.EventArgs {
            
            private INSCOUNTRYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOUNTRYRowChangeEvent(INSCOUNTRYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSCOUNTRYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class U_SYS4RowChangeEvent : global::System.EventArgs {
            
            private U_SYS4Row eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public U_SYS4RowChangeEvent(U_SYS4Row row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public U_SYS4Row Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class V_BASERowChangeEvent : global::System.EventArgs {
            
            private V_BASERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public V_BASERowChangeEvent(V_BASERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public V_BASERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSGRPRowChangeEvent : global::System.EventArgs {
            
            private INSGRPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRPRowChangeEvent(INSGRPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSGRFRowChangeEvent : global::System.EventArgs {
            
            private INSGRFRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRFRowChangeEvent(INSGRFRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRFRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class INSGRLVRowChangeEvent : global::System.EventArgs {
            
            private INSGRLVRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRLVRowChangeEvent(INSGRLVRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public INSGRLVRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class YRINSURRowChangeEvent : global::System.EventArgs {
            
            private YRINSURRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public YRINSURRowChangeEvent(YRINSURRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public YRINSURRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class FRM3AZRowChangeEvent : global::System.EventArgs {
            
            private FRM3AZRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FRM3AZRowChangeEvent(FRM3AZRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public FRM3AZRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JBHR.Ins.InsDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSURLVTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSURLVTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSURLV";
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("EFF_DATEL", "EFF_DATEL");
            tableMapping.ColumnMappings.Add("LFF_DATEL", "LFF_DATEL");
            tableMapping.ColumnMappings.Add("EFF_DATEH", "EFF_DATEH");
            tableMapping.ColumnMappings.Add("LFF_DATEH", "LFF_DATEH");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("EFF_DATER", "EFF_DATER");
            tableMapping.ColumnMappings.Add("LFF_DATER", "LFF_DATER");
            tableMapping.ColumnMappings.Add("EFF_RATE", "EFF_RATE");
            tableMapping.ColumnMappings.Add("EFF_DATEJ", "EFF_DATEJ");
            tableMapping.ColumnMappings.Add("LFF_DATEJ", "LFF_DATEJ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [INSURLV] WHERE (([AMT] = @Original_AMT))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [INSURLV] ([AMT], [EFF_DATEL], [LFF_DATEL], [EFF_DATEH], [LFF_DATEH], [KEY_MAN], [KEY_DATE], [EFF_DATER], [LFF_DATER], [EFF_RATE], [EFF_DATEJ], [LFF_DATEJ]) VALUES (@AMT, @EFF_DATEL, @LFF_DATEL, @EFF_DATEH, @LFF_DATEH, @KEY_MAN, @KEY_DATE, @EFF_DATER, @LFF_DATER, @EFF_RATE, @EFF_DATEJ, @LFF_DATEJ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATEL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATEL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATEH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATEH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATEH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATEH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATER", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATER", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "EFF_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATEJ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATEJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATEJ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATEJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [INSURLV] SET [AMT] = @AMT, [EFF_DATEL] = @EFF_DATEL, [LFF_DATEL] = @LFF_DATEL, [EFF_DATEH] = @EFF_DATEH, [LFF_DATEH] = @LFF_DATEH, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [EFF_DATER] = @EFF_DATER, [LFF_DATER] = @LFF_DATER, [EFF_RATE] = @EFF_RATE, [EFF_DATEJ] = @EFF_DATEJ, [LFF_DATEJ] = @LFF_DATEJ WHERE (([AMT] = @Original_AMT))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATEL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATEL", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATEH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATEH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATEH", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATEH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATER", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATER", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_RATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 5, "EFF_RATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EFF_DATEJ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EFF_DATEJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LFF_DATEJ", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LFF_DATEJ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          AMT, EFF_DATEL, LFF_DATEL, EFF_DATEH, LFF_DATEH, KEY_MAN, KEY_DAT" +
                "E, EFF_DATER, LFF_DATER, \r\n                            EFF_RATE, EFF_DATEJ, LFF_" +
                "DATEJ\r\nFROM              INSURLV";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSURLVDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSURLVDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSURLVDataTable dataTable = new InsDS.INSURLVDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSURLVDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSURLV");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_AMT) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_AMT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal AMT, System.DateTime EFF_DATEL, System.DateTime LFF_DATEL, System.DateTime EFF_DATEH, System.DateTime LFF_DATEH, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime EFF_DATER, System.DateTime LFF_DATER, decimal EFF_RATE, System.DateTime EFF_DATEJ, System.DateTime LFF_DATEJ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(AMT));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(EFF_DATEL));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(LFF_DATEL));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(EFF_DATEH));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(LFF_DATEH));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(EFF_DATER));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(LFF_DATER));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EFF_RATE));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(EFF_DATEJ));
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(LFF_DATEJ));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal AMT, System.DateTime EFF_DATEL, System.DateTime LFF_DATEL, System.DateTime EFF_DATEH, System.DateTime LFF_DATEH, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime EFF_DATER, System.DateTime LFF_DATER, decimal EFF_RATE, System.DateTime EFF_DATEJ, System.DateTime LFF_DATEJ, decimal Original_AMT) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(AMT));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(EFF_DATEL));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(LFF_DATEL));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(EFF_DATEH));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(LFF_DATEH));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(EFF_DATER));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(LFF_DATER));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EFF_RATE));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(EFF_DATEJ));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(LFF_DATEJ));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(Original_AMT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime EFF_DATEL, System.DateTime LFF_DATEL, System.DateTime EFF_DATEH, System.DateTime LFF_DATEH, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime EFF_DATER, System.DateTime LFF_DATER, decimal EFF_RATE, System.DateTime EFF_DATEJ, System.DateTime LFF_DATEJ, decimal Original_AMT) {
            return this.Update(Original_AMT, EFF_DATEL, LFF_DATEL, EFF_DATEH, LFF_DATEH, KEY_MAN, KEY_DATE, EFF_DATER, LFF_DATER, EFF_RATE, EFF_DATEJ, LFF_DATEJ, Original_AMT);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSLABTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSLABTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSLAB";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("IN_DATE", "IN_DATE");
            tableMapping.ColumnMappings.Add("OUT_DATE", "OUT_DATE");
            tableMapping.ColumnMappings.Add("LRATE_CODE", "LRATE_CODE");
            tableMapping.ColumnMappings.Add("HRATE_CODE", "HRATE_CODE");
            tableMapping.ColumnMappings.Add("L_AMT", "L_AMT");
            tableMapping.ColumnMappings.Add("H_AMT", "H_AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("CODE1", "CODE1");
            tableMapping.ColumnMappings.Add("NOTE", "NOTE");
            tableMapping.ColumnMappings.Add("S_NO", "S_NO");
            tableMapping.ColumnMappings.Add("R_AMT", "R_AMT");
            tableMapping.ColumnMappings.Add("SPTYP", "SPTYP");
            tableMapping.ColumnMappings.Add("WBSPTYP", "WBSPTYP");
            tableMapping.ColumnMappings.Add("ROUT_DATE", "ROUT_DATE");
            tableMapping.ColumnMappings.Add("NOSUP", "NOSUP");
            tableMapping.ColumnMappings.Add("J_AMT", "J_AMT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [INSLAB] WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original_" +
                "FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [INSLAB] ([NOBR], [FA_IDNO], [CODE], [IN_DATE], [OUT_DATE], [LRATE_CODE], [HRATE_CODE], [L_AMT], [H_AMT], [KEY_MAN], [KEY_DATE], [SEQ], [CODE1], [NOTE], [S_NO], [R_AMT], [SPTYP], [WBSPTYP], [ROUT_DATE], [NOSUP], [J_AMT]) VALUES (@NOBR, @FA_IDNO, @CODE, @IN_DATE, @OUT_DATE, @LRATE_CODE, @HRATE_CODE, @L_AMT, @H_AMT, @KEY_MAN, @KEY_DATE, @SEQ, @CODE1, @NOTE, @S_NO, @R_AMT, @SPTYP, @WBSPTYP, @ROUT_DATE, @NOSUP, @J_AMT)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LRATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LRATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HRATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "L_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "H_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "R_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPTYP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WBSPTYP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WBSPTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSUP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@J_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "J_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [INSLAB] SET [NOBR] = @NOBR, [FA_IDNO] = @FA_IDNO, [CODE] = @CODE, [IN_DATE] = @IN_DATE, [OUT_DATE] = @OUT_DATE, [LRATE_CODE] = @LRATE_CODE, [HRATE_CODE] = @HRATE_CODE, [L_AMT] = @L_AMT, [H_AMT] = @H_AMT, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [SEQ] = @SEQ, [CODE1] = @CODE1, [NOTE] = @NOTE, [S_NO] = @S_NO, [R_AMT] = @R_AMT, [SPTYP] = @SPTYP, [WBSPTYP] = @WBSPTYP, [ROUT_DATE] = @ROUT_DATE, [NOSUP] = @NOSUP, [J_AMT] = @J_AMT WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original_FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LRATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LRATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HRATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@L_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "L_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@H_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "H_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@R_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "R_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPTYP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WBSPTYP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WBSPTYP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSUP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@J_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "J_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          NOBR, FA_IDNO, CODE, IN_DATE, OUT_DATE, LRATE_CODE, HRATE_CODE, L_AMT, H_AMT, KEY_MAN, KEY_DATE, 
                            SEQ, CODE1, NOTE, S_NO, R_AMT, SPTYP, WBSPTYP, ROUT_DATE, NOSUP, J_AMT
FROM              INSLAB
ORDER BY   NOBR, IN_DATE, FA_IDNO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT          NOBR, FA_IDNO, CODE, IN_DATE, OUT_DATE, LRATE_CODE, HRATE_CODE, L_AMT, H_AMT, KEY_MAN, KEY_DATE, 
                            SEQ, CODE1, NOTE, S_NO, R_AMT, SPTYP, WBSPTYP, ROUT_DATE, NOSUP, J_AMT
FROM              INSLAB
WHERE          (1 = 0)
ORDER BY   NOBR, IN_DATE, FA_IDNO";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSLABDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSLABDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSLABDataTable dataTable = new InsDS.INSLABDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(InsDS.INSLABDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual InsDS.INSLABDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            InsDS.INSLABDataTable dataTable = new InsDS.INSLABDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSLABDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSLAB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_FA_IDNO, System.DateTime Original_IN_DATE) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_IN_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NOBR, 
                    string FA_IDNO, 
                    string CODE, 
                    System.DateTime IN_DATE, 
                    System.DateTime OUT_DATE, 
                    string LRATE_CODE, 
                    string HRATE_CODE, 
                    decimal L_AMT, 
                    decimal H_AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SEQ, 
                    string CODE1, 
                    string NOTE, 
                    string S_NO, 
                    decimal R_AMT, 
                    string SPTYP, 
                    string WBSPTYP, 
                    global::System.Nullable<global::System.DateTime> ROUT_DATE, 
                    bool NOSUP, 
                    decimal J_AMT) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            if ((CODE == null)) {
                throw new global::System.ArgumentNullException("CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CODE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(OUT_DATE));
            if ((LRATE_CODE == null)) {
                throw new global::System.ArgumentNullException("LRATE_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(LRATE_CODE));
            }
            if ((HRATE_CODE == null)) {
                throw new global::System.ArgumentNullException("HRATE_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(HRATE_CODE));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(L_AMT));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(H_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(SEQ));
            }
            if ((CODE1 == null)) {
                throw new global::System.ArgumentNullException("CODE1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(CODE1));
            }
            if ((NOTE == null)) {
                throw new global::System.ArgumentNullException("NOTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(NOTE));
            }
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(S_NO));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(R_AMT));
            if ((SPTYP == null)) {
                throw new global::System.ArgumentNullException("SPTYP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(SPTYP));
            }
            if ((WBSPTYP == null)) {
                throw new global::System.ArgumentNullException("WBSPTYP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(WBSPTYP));
            }
            if ((ROUT_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(ROUT_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(NOSUP));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(J_AMT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    string FA_IDNO, 
                    string CODE, 
                    System.DateTime IN_DATE, 
                    System.DateTime OUT_DATE, 
                    string LRATE_CODE, 
                    string HRATE_CODE, 
                    decimal L_AMT, 
                    decimal H_AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SEQ, 
                    string CODE1, 
                    string NOTE, 
                    string S_NO, 
                    decimal R_AMT, 
                    string SPTYP, 
                    string WBSPTYP, 
                    global::System.Nullable<global::System.DateTime> ROUT_DATE, 
                    bool NOSUP, 
                    decimal J_AMT, 
                    string Original_NOBR, 
                    string Original_FA_IDNO, 
                    System.DateTime Original_IN_DATE) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            if ((CODE == null)) {
                throw new global::System.ArgumentNullException("CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CODE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(OUT_DATE));
            if ((LRATE_CODE == null)) {
                throw new global::System.ArgumentNullException("LRATE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(LRATE_CODE));
            }
            if ((HRATE_CODE == null)) {
                throw new global::System.ArgumentNullException("HRATE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(HRATE_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(L_AMT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(H_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(KEY_DATE));
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(SEQ));
            }
            if ((CODE1 == null)) {
                throw new global::System.ArgumentNullException("CODE1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(CODE1));
            }
            if ((NOTE == null)) {
                throw new global::System.ArgumentNullException("NOTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(NOTE));
            }
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(S_NO));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(R_AMT));
            if ((SPTYP == null)) {
                throw new global::System.ArgumentNullException("SPTYP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(SPTYP));
            }
            if ((WBSPTYP == null)) {
                throw new global::System.ArgumentNullException("WBSPTYP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(WBSPTYP));
            }
            if ((ROUT_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(ROUT_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(NOSUP));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(J_AMT));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_IN_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CODE, 
                    System.DateTime OUT_DATE, 
                    string LRATE_CODE, 
                    string HRATE_CODE, 
                    decimal L_AMT, 
                    decimal H_AMT, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SEQ, 
                    string CODE1, 
                    string NOTE, 
                    string S_NO, 
                    decimal R_AMT, 
                    string SPTYP, 
                    string WBSPTYP, 
                    global::System.Nullable<global::System.DateTime> ROUT_DATE, 
                    bool NOSUP, 
                    decimal J_AMT, 
                    string Original_NOBR, 
                    string Original_FA_IDNO, 
                    System.DateTime Original_IN_DATE) {
            return this.Update(Original_NOBR, Original_FA_IDNO, CODE, Original_IN_DATE, OUT_DATE, LRATE_CODE, HRATE_CODE, L_AMT, H_AMT, KEY_MAN, KEY_DATE, SEQ, CODE1, NOTE, S_NO, R_AMT, SPTYP, WBSPTYP, ROUT_DATE, NOSUP, J_AMT, Original_NOBR, Original_FA_IDNO, Original_IN_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LARCODETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public LARCODETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LARCODE";
            tableMapping.ColumnMappings.Add("RATE_CODE", "RATE_CODE");
            tableMapping.ColumnMappings.Add("RATE_NAME", "RATE_NAME");
            tableMapping.ColumnMappings.Add("NORMALRATE", "NORMALRATE");
            tableMapping.ColumnMappings.Add("LOSJOBRATE", "LOSJOBRATE");
            tableMapping.ColumnMappings.Add("JOBACCRATE", "JOBACCRATE");
            tableMapping.ColumnMappings.Add("SELFCHARGE", "SELFCHARGE");
            tableMapping.ColumnMappings.Add("COMPCHARGE", "COMPCHARGE");
            tableMapping.ColumnMappings.Add("PARTIAL", "PARTIAL");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("NOFUND", "NOFUND");
            tableMapping.ColumnMappings.Add("NODISASTER", "NODISASTER");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [LARCODE] WHERE (([RATE_CODE] = @Original_RATE_CODE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [LARCODE] ([RATE_CODE], [RATE_NAME], [NORMALRATE], [LOSJOBRATE], [JOBACCRATE], [SELFCHARGE], [COMPCHARGE], [PARTIAL], [KEY_MAN], [KEY_DATE], [ADATE], [NOFUND], [NODISASTER]) VALUES (@RATE_CODE, @RATE_NAME, @NORMALRATE, @LOSJOBRATE, @JOBACCRATE, @SELFCHARGE, @COMPCHARGE, @PARTIAL, @KEY_MAN, @KEY_DATE, @ADATE, @NOFUND, @NODISASTER)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NORMALRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 4, "NORMALRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOSJOBRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 4, "LOSJOBRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBACCRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 4, "JOBACCRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELFCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SELFCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMPCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PARTIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOFUND", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOFUND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NODISASTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NODISASTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LARCODE] SET [RATE_CODE] = @RATE_CODE, [RATE_NAME] = @RATE_NAME, [NORMALRATE] = @NORMALRATE, [LOSJOBRATE] = @LOSJOBRATE, [JOBACCRATE] = @JOBACCRATE, [SELFCHARGE] = @SELFCHARGE, [COMPCHARGE] = @COMPCHARGE, [PARTIAL] = @PARTIAL, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [ADATE] = @ADATE, [NOFUND] = @NOFUND, [NODISASTER] = @NODISASTER WHERE (([RATE_CODE] = @Original_RATE_CODE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NORMALRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 4, "NORMALRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LOSJOBRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 4, "LOSJOBRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBACCRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 4, "JOBACCRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELFCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SELFCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMPCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PARTIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOFUND", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOFUND", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NODISASTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NODISASTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          RATE_CODE, RATE_NAME, NORMALRATE, LOSJOBRATE, JOBACCRATE, SELFCHA" +
                "RGE, COMPCHARGE, PARTIAL, \r\n                            KEY_MAN, KEY_DATE, ADATE" +
                ", NOFUND, NODISASTER\r\nFROM              LARCODE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.LARCODEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.LARCODEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.LARCODEDataTable dataTable = new InsDS.LARCODEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.LARCODEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "LARCODE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_RATE_CODE) {
            if ((Original_RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_RATE_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_RATE_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string RATE_CODE, string RATE_NAME, decimal NORMALRATE, decimal LOSJOBRATE, decimal JOBACCRATE, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, bool NOFUND, bool NODISASTER) {
            if ((RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("RATE_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RATE_CODE));
            }
            if ((RATE_NAME == null)) {
                throw new global::System.ArgumentNullException("RATE_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RATE_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(NORMALRATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(LOSJOBRATE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(JOBACCRATE));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(SELFCHARGE));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(COMPCHARGE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(PARTIAL));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(ADATE));
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(NOFUND));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(NODISASTER));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RATE_CODE, string RATE_NAME, decimal NORMALRATE, decimal LOSJOBRATE, decimal JOBACCRATE, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, bool NOFUND, bool NODISASTER, string Original_RATE_CODE) {
            if ((RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("RATE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(RATE_CODE));
            }
            if ((RATE_NAME == null)) {
                throw new global::System.ArgumentNullException("RATE_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RATE_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(NORMALRATE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(LOSJOBRATE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(JOBACCRATE));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(SELFCHARGE));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(COMPCHARGE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(PARTIAL));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(ADATE));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(NOFUND));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(NODISASTER));
            if ((Original_RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_RATE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_RATE_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RATE_NAME, decimal NORMALRATE, decimal LOSJOBRATE, decimal JOBACCRATE, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, bool NOFUND, bool NODISASTER, string Original_RATE_CODE) {
            return this.Update(Original_RATE_CODE, RATE_NAME, NORMALRATE, LOSJOBRATE, JOBACCRATE, SELFCHARGE, COMPCHARGE, PARTIAL, KEY_MAN, KEY_DATE, ADATE, NOFUND, NODISASTER, Original_RATE_CODE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HARCODETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public HARCODETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "HARCODE";
            tableMapping.ColumnMappings.Add("RATE_CODE", "RATE_CODE");
            tableMapping.ColumnMappings.Add("RATE_NAME", "RATE_NAME");
            tableMapping.ColumnMappings.Add("SELFCHARGE", "SELFCHARGE");
            tableMapping.ColumnMappings.Add("COMPCHARGE", "COMPCHARGE");
            tableMapping.ColumnMappings.Add("PARTIAL", "PARTIAL");
            tableMapping.ColumnMappings.Add("FIX_AMT", "FIX_AMT");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("NOPAYTOP", "NOPAYTOP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[HARCODE] WHERE (([RATE_CODE] = @Original_RATE_CODE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[HARCODE] ([RATE_CODE], [RATE_NAME], [SELFCHARGE], [COMPCHARGE], [PARTIAL], [FIX_AMT], [KEY_MAN], [KEY_DATE], [ADATE], [NOPAYTOP]) VALUES (@RATE_CODE, @RATE_NAME, @SELFCHARGE, @COMPCHARGE, @PARTIAL, @FIX_AMT, @KEY_MAN, @KEY_DATE, @ADATE, @NOPAYTOP)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELFCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SELFCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMPCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PARTIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FIX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOPAYTOP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOPAYTOP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[HARCODE] SET [RATE_CODE] = @RATE_CODE, [RATE_NAME] = @RATE_NAME, [SELFCHARGE] = @SELFCHARGE, [COMPCHARGE] = @COMPCHARGE, [PARTIAL] = @PARTIAL, [FIX_AMT] = @FIX_AMT, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [ADATE] = @ADATE, [NOPAYTOP] = @NOPAYTOP WHERE (([RATE_CODE] = @Original_RATE_CODE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SELFCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SELFCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPCHARGE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMPCHARGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARTIAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PARTIAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FIX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOPAYTOP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NOPAYTOP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT RATE_CODE, RATE_NAME, SELFCHARGE, COMPCHARGE, PARTIAL, FIX_AMT, KEY_MAN, K" +
                "EY_DATE, ADATE, NOPAYTOP FROM dbo.HARCODE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.HARCODEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.HARCODEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.HARCODEDataTable dataTable = new InsDS.HARCODEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.HARCODEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "HARCODE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_RATE_CODE) {
            if ((Original_RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_RATE_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_RATE_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string RATE_CODE, string RATE_NAME, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, decimal FIX_AMT, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, decimal NOPAYTOP) {
            if ((RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("RATE_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(RATE_CODE));
            }
            if ((RATE_NAME == null)) {
                throw new global::System.ArgumentNullException("RATE_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(RATE_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(SELFCHARGE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(COMPCHARGE));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(PARTIAL));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(FIX_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(ADATE));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(NOPAYTOP));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RATE_CODE, string RATE_NAME, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, decimal FIX_AMT, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, decimal NOPAYTOP, string Original_RATE_CODE) {
            if ((RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("RATE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(RATE_CODE));
            }
            if ((RATE_NAME == null)) {
                throw new global::System.ArgumentNullException("RATE_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(RATE_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(SELFCHARGE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(COMPCHARGE));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(PARTIAL));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(FIX_AMT));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(ADATE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(NOPAYTOP));
            if ((Original_RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_RATE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_RATE_CODE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string RATE_NAME, decimal SELFCHARGE, decimal COMPCHARGE, decimal PARTIAL, decimal FIX_AMT, string KEY_MAN, System.DateTime KEY_DATE, System.DateTime ADATE, decimal NOPAYTOP, string Original_RATE_CODE) {
            return this.Update(Original_RATE_CODE, RATE_NAME, SELFCHARGE, COMPCHARGE, PARTIAL, FIX_AMT, KEY_MAN, KEY_DATE, ADATE, NOPAYTOP, Original_RATE_CODE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSNAMETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSNAMETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSNAME";
            tableMapping.ColumnMappings.Add("NO", "NO");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("NO1", "NO1");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[INSNAME] WHERE (([NO] = @Original_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[INSNAME] ([NO], [NAME], [KEY_MAN], [KEY_DATE], [NO1]) VALUES (" +
                "@NO, @NAME, @KEY_MAN, @KEY_DATE, @NO1)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NO1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[INSNAME] SET [NO] = @NO, [NAME] = @NAME, [KEY_MAN] = @KEY_MAN, [KEY" +
                "_DATE] = @KEY_DATE, [NO1] = @NO1 WHERE (([NO] = @Original_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NO1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NO, NAME, KEY_MAN, KEY_DATE, NO1 FROM dbo.INSNAME";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSNAMEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSNAMEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSNAMEDataTable dataTable = new InsDS.INSNAMEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSNAMEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSNAME");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NO) {
            if ((Original_NO == null)) {
                throw new global::System.ArgumentNullException("Original_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NO, string NAME, string KEY_MAN, System.DateTime KEY_DATE, string NO1) {
            if ((NO == null)) {
                throw new global::System.ArgumentNullException("NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NO));
            }
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NAME));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE));
            if ((NO1 == null)) {
                throw new global::System.ArgumentNullException("NO1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NO1));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NO, string NAME, string KEY_MAN, System.DateTime KEY_DATE, string NO1, string Original_NO) {
            if ((NO == null)) {
                throw new global::System.ArgumentNullException("NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NO));
            }
            if ((NAME == null)) {
                throw new global::System.ArgumentNullException("NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE));
            if ((NO1 == null)) {
                throw new global::System.ArgumentNullException("NO1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NO1));
            }
            if ((Original_NO == null)) {
                throw new global::System.ArgumentNullException("Original_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME, string KEY_MAN, System.DateTime KEY_DATE, string NO1, string Original_NO) {
            return this.Update(Original_NO, NAME, KEY_MAN, KEY_DATE, NO1, Original_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSCOMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSCOMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSCOMP";
            tableMapping.ColumnMappings.Add("S_NO", "S_NO");
            tableMapping.ColumnMappings.Add("INSNO", "INSNO");
            tableMapping.ColumnMappings.Add("INSPO", "INSPO");
            tableMapping.ColumnMappings.Add("INSIDNO", "INSIDNO");
            tableMapping.ColumnMappings.Add("INSSUB", "INSSUB");
            tableMapping.ColumnMappings.Add("INSTEL", "INSTEL");
            tableMapping.ColumnMappings.Add("INSNAME", "INSNAME");
            tableMapping.ColumnMappings.Add("INSADDR", "INSADDR");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("INSMAN", "INSMAN");
            tableMapping.ColumnMappings.Add("REL_MAN", "REL_MAN");
            tableMapping.ColumnMappings.Add("REL_TEL", "REL_TEL");
            tableMapping.ColumnMappings.Add("DEFA", "DEFA");
            tableMapping.ColumnMappings.Add("S_NO_DISP", "S_NO_DISP");
            tableMapping.ColumnMappings.Add("JOBACCRATE", "JOBACCRATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [INSCOMP] WHERE (([S_NO] = @Original_S_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [INSCOMP] ([S_NO], [INSNO], [INSPO], [INSIDNO], [INSSUB], [INSTEL], [INSNAME], [INSADDR], [KEY_MAN], [KEY_DATE], [INSMAN], [REL_MAN], [REL_TEL], [DEFA], [S_NO_DISP], [JOBACCRATE]) VALUES (@S_NO, @INSNO, @INSPO, @INSIDNO, @INSSUB, @INSTEL, @INSNAME, @INSADDR, @KEY_MAN, @KEY_DATE, @INSMAN, @REL_MAN, @REL_TEL, @DEFA, @S_NO_DISP, @JOBACCRATE);
SELECT S_NO, INSNO, INSPO, INSIDNO, INSSUB, INSTEL, INSNAME, INSADDR, KEY_MAN, KEY_DATE, INSMAN, REL_MAN, REL_TEL, DEFA, S_NO_DISP, JOBACCRATE FROM INSCOMP WHERE (S_NO = @S_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSPO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSIDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSIDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSSUB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSSUB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSTEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSTEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSMAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSMAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBACCRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "JOBACCRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [INSCOMP] SET [S_NO] = @S_NO, [INSNO] = @INSNO, [INSPO] = @INSPO, [INSIDNO] = @INSIDNO, [INSSUB] = @INSSUB, [INSTEL] = @INSTEL, [INSNAME] = @INSNAME, [INSADDR] = @INSADDR, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [INSMAN] = @INSMAN, [REL_MAN] = @REL_MAN, [REL_TEL] = @REL_TEL, [DEFA] = @DEFA, [S_NO_DISP] = @S_NO_DISP, [JOBACCRATE] = @JOBACCRATE WHERE (([S_NO] = @Original_S_NO));
SELECT S_NO, INSNO, INSPO, INSIDNO, INSSUB, INSTEL, INSNAME, INSADDR, KEY_MAN, KEY_DATE, INSMAN, REL_MAN, REL_TEL, DEFA, S_NO_DISP, JOBACCRATE FROM INSCOMP WHERE (S_NO = @S_NO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSPO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSPO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSIDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSIDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSSUB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSSUB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSTEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSTEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSMAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSMAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBACCRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "JOBACCRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          S_NO, INSNO, INSPO, INSIDNO, INSSUB, INSTEL, INSNAME, INSADDR, KEY_MAN, KEY_DATE, INSMAN, REL_MAN, 
                            REL_TEL, DEFA, S_NO_DISP, JOBACCRATE
FROM              INSCOMP
WHERE          (dbo.GetCodeFilter(N'INSCOMP', S_NO, @USERID, @COMP, @ADMIN) = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADMIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSCOMPDataTable dataTable, string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSCOMPDataTable GetData(string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            InsDS.INSCOMPDataTable dataTable = new InsDS.INSCOMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSCOMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSCOMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_S_NO) {
            if ((Original_S_NO == null)) {
                throw new global::System.ArgumentNullException("Original_S_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_S_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string S_NO, 
                    string INSNO, 
                    string INSPO, 
                    string INSIDNO, 
                    string INSSUB, 
                    string INSTEL, 
                    string INSNAME, 
                    string INSADDR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string INSMAN, 
                    string REL_MAN, 
                    string REL_TEL, 
                    bool DEFA, 
                    string S_NO_DISP, 
                    global::System.Nullable<decimal> JOBACCRATE) {
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(S_NO));
            }
            if ((INSNO == null)) {
                throw new global::System.ArgumentNullException("INSNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(INSNO));
            }
            if ((INSPO == null)) {
                throw new global::System.ArgumentNullException("INSPO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(INSPO));
            }
            if ((INSIDNO == null)) {
                throw new global::System.ArgumentNullException("INSIDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(INSIDNO));
            }
            if ((INSSUB == null)) {
                throw new global::System.ArgumentNullException("INSSUB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(INSSUB));
            }
            if ((INSTEL == null)) {
                throw new global::System.ArgumentNullException("INSTEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(INSTEL));
            }
            if ((INSNAME == null)) {
                throw new global::System.ArgumentNullException("INSNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(INSNAME));
            }
            if ((INSADDR == null)) {
                throw new global::System.ArgumentNullException("INSADDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(INSADDR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            if ((INSMAN == null)) {
                throw new global::System.ArgumentNullException("INSMAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(INSMAN));
            }
            if ((REL_MAN == null)) {
                throw new global::System.ArgumentNullException("REL_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(REL_MAN));
            }
            if ((REL_TEL == null)) {
                throw new global::System.ArgumentNullException("REL_TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(REL_TEL));
            }
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(DEFA));
            if ((S_NO_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(S_NO_DISP));
            }
            if ((JOBACCRATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(JOBACCRATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string S_NO, 
                    string INSNO, 
                    string INSPO, 
                    string INSIDNO, 
                    string INSSUB, 
                    string INSTEL, 
                    string INSNAME, 
                    string INSADDR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string INSMAN, 
                    string REL_MAN, 
                    string REL_TEL, 
                    bool DEFA, 
                    string S_NO_DISP, 
                    global::System.Nullable<decimal> JOBACCRATE, 
                    string Original_S_NO) {
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(S_NO));
            }
            if ((INSNO == null)) {
                throw new global::System.ArgumentNullException("INSNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(INSNO));
            }
            if ((INSPO == null)) {
                throw new global::System.ArgumentNullException("INSPO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(INSPO));
            }
            if ((INSIDNO == null)) {
                throw new global::System.ArgumentNullException("INSIDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(INSIDNO));
            }
            if ((INSSUB == null)) {
                throw new global::System.ArgumentNullException("INSSUB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(INSSUB));
            }
            if ((INSTEL == null)) {
                throw new global::System.ArgumentNullException("INSTEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(INSTEL));
            }
            if ((INSNAME == null)) {
                throw new global::System.ArgumentNullException("INSNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(INSNAME));
            }
            if ((INSADDR == null)) {
                throw new global::System.ArgumentNullException("INSADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(INSADDR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            if ((INSMAN == null)) {
                throw new global::System.ArgumentNullException("INSMAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(INSMAN));
            }
            if ((REL_MAN == null)) {
                throw new global::System.ArgumentNullException("REL_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(REL_MAN));
            }
            if ((REL_TEL == null)) {
                throw new global::System.ArgumentNullException("REL_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(REL_TEL));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(DEFA));
            if ((S_NO_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(S_NO_DISP));
            }
            if ((JOBACCRATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(JOBACCRATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_S_NO == null)) {
                throw new global::System.ArgumentNullException("Original_S_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_S_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string INSNO, 
                    string INSPO, 
                    string INSIDNO, 
                    string INSSUB, 
                    string INSTEL, 
                    string INSNAME, 
                    string INSADDR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string INSMAN, 
                    string REL_MAN, 
                    string REL_TEL, 
                    bool DEFA, 
                    string S_NO_DISP, 
                    global::System.Nullable<decimal> JOBACCRATE, 
                    string Original_S_NO) {
            return this.Update(Original_S_NO, INSNO, INSPO, INSIDNO, INSSUB, INSTEL, INSNAME, INSADDR, KEY_MAN, KEY_DATE, INSMAN, REL_MAN, REL_TEL, DEFA, S_NO_DISP, JOBACCRATE, Original_S_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INPOLABTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INPOLABTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INPOLAB";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("YYMM", "YYMM");
            tableMapping.ColumnMappings.Add("EXP", "EXP");
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DAYS", "DAYS");
            tableMapping.ColumnMappings.Add("RATE_CODE", "RATE_CODE");
            tableMapping.ColumnMappings.Add("INSUR_TYPE", "INSUR_TYPE");
            tableMapping.ColumnMappings.Add("INSCD", "INSCD");
            tableMapping.ColumnMappings.Add("SALADR", "SALADR");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [INPOLAB] WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original" +
                "_FA_IDNO) AND ([YYMM] = @Original_YYMM) AND ([INSUR_TYPE] = @Original_INSUR_TYPE" +
                "))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [INPOLAB] ([NOBR], [FA_IDNO], [YYMM], [EXP], [COMP], [KEY_DATE], [KEY_MAN], [ADATE], [DAYS], [RATE_CODE], [INSUR_TYPE], [INSCD], [SALADR]) VALUES (@NOBR, @FA_IDNO, @YYMM, @EXP, @COMP, @KEY_DATE, @KEY_MAN, @ADATE, @DAYS, @RATE_CODE, @INSUR_TYPE, @INSCD, @SALADR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSCD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "INSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [INPOLAB] SET [NOBR] = @NOBR, [FA_IDNO] = @FA_IDNO, [YYMM] = @YYMM, [EXP] = @EXP, [COMP] = @COMP, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [ADATE] = @ADATE, [DAYS] = @DAYS, [RATE_CODE] = @RATE_CODE, [INSUR_TYPE] = @INSUR_TYPE, [INSCD] = @INSCD, [SALADR] = @SALADR WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original_FA_IDNO) AND ([YYMM] = @Original_YYMM) AND ([INSUR_TYPE] = @Original_INSUR_TYPE))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSCD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "INSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YYMM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YYMM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSUR_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSUR_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, FA_IDNO, YYMM, EXP, COMP, KEY_DATE, KEY_MAN, ADATE, DAYS, R" +
                "ATE_CODE, INSUR_TYPE, INSCD, \r\n                            SALADR\r\nFROM         " +
                "     INPOLAB\r\nWHERE          (1 = 0)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INPOLABDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INPOLABDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INPOLABDataTable dataTable = new InsDS.INPOLABDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INPOLABDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INPOLAB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_FA_IDNO, string Original_YYMM, string Original_INSUR_TYPE) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_YYMM));
            }
            if ((Original_INSUR_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INSUR_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_INSUR_TYPE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, string FA_IDNO, string YYMM, decimal EXP, decimal COMP, System.DateTime KEY_DATE, string KEY_MAN, System.DateTime ADATE, decimal DAYS, string RATE_CODE, string INSUR_TYPE, decimal INSCD, string SALADR) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(YYMM));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(EXP));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(COMP));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(ADATE));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(DAYS));
            if ((RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("RATE_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(RATE_CODE));
            }
            if ((INSUR_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSUR_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(INSUR_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(INSCD));
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(SALADR));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    string FA_IDNO, 
                    string YYMM, 
                    decimal EXP, 
                    decimal COMP, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    System.DateTime ADATE, 
                    decimal DAYS, 
                    string RATE_CODE, 
                    string INSUR_TYPE, 
                    decimal INSCD, 
                    string SALADR, 
                    string Original_NOBR, 
                    string Original_FA_IDNO, 
                    string Original_YYMM, 
                    string Original_INSUR_TYPE) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            if ((YYMM == null)) {
                throw new global::System.ArgumentNullException("YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(YYMM));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(EXP));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(COMP));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(ADATE));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(DAYS));
            if ((RATE_CODE == null)) {
                throw new global::System.ArgumentNullException("RATE_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(RATE_CODE));
            }
            if ((INSUR_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSUR_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(INSUR_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(INSCD));
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(SALADR));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_YYMM == null)) {
                throw new global::System.ArgumentNullException("Original_YYMM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_YYMM));
            }
            if ((Original_INSUR_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INSUR_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_INSUR_TYPE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal EXP, decimal COMP, System.DateTime KEY_DATE, string KEY_MAN, System.DateTime ADATE, decimal DAYS, string RATE_CODE, decimal INSCD, string SALADR, string Original_NOBR, string Original_FA_IDNO, string Original_YYMM, string Original_INSUR_TYPE) {
            return this.Update(Original_NOBR, Original_FA_IDNO, Original_YYMM, EXP, COMP, KEY_DATE, KEY_MAN, ADATE, DAYS, RATE_CODE, Original_INSUR_TYPE, INSCD, SALADR, Original_NOBR, Original_FA_IDNO, Original_YYMM, Original_INSUR_TYPE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSURCDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSURCDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSURCD";
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("SORT", "SORT");
            tableMapping.ColumnMappings.Add("DISPLAY", "DISPLAY");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CATEGORY, CODE, NAME, SORT, DISPLAY FROM dbo.INSURCD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSURCDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSURCDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSURCDDataTable dataTable = new InsDS.INSURCDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSUR_TYPETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSUR_TYPETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSUR_TYPE";
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("SORT", "SORT");
            tableMapping.ColumnMappings.Add("DISPLAY", "DISPLAY");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CATEGORY, CODE, NAME, SORT, DISPLAY FROM dbo.INSUR_TYPE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSUR_TYPEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSUR_TYPEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSUR_TYPEDataTable dataTable = new InsDS.INSUR_TYPEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SPTYPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public SPTYPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SPTYP";
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("SORT", "SORT");
            tableMapping.ColumnMappings.Add("DISPLAY", "DISPLAY");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CATEGORY, CODE, NAME, SORT, DISPLAY FROM dbo.SPTYP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.SPTYPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.SPTYPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.SPTYPDataTable dataTable = new InsDS.SPTYPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class WBSPTYPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public WBSPTYPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "WBSPTYP";
            tableMapping.ColumnMappings.Add("CATEGORY", "CATEGORY");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("NAME", "NAME");
            tableMapping.ColumnMappings.Add("SORT", "SORT");
            tableMapping.ColumnMappings.Add("DISPLAY", "DISPLAY");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT CATEGORY, CODE, NAME, SORT, DISPLAY FROM dbo.WBSPTYP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.WBSPTYPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.WBSPTYPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.WBSPTYPDataTable dataTable = new InsDS.WBSPTYPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FAMILYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public FAMILYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FAMILY";
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("FA_NAME", "FA_NAME");
            tableMapping.ColumnMappings.Add("REL_CODE", "REL_CODE");
            tableMapping.ColumnMappings.Add("FA_BIRDT", "FA_BIRDT");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("ADDR", "ADDR");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("GSM", "GSM");
            tableMapping.ColumnMappings.Add("BBC", "BBC");
            tableMapping.ColumnMappings.Add("TAX", "TAX");
            tableMapping.ColumnMappings.Add("AUTOINSLAB", "AUTOINSLAB");
            tableMapping.ColumnMappings.Add("LIVE", "LIVE");
            tableMapping.ColumnMappings.Add("EDUCODE", "EDUCODE");
            tableMapping.ColumnMappings.Add("COMPNY", "COMPNY");
            tableMapping.ColumnMappings.Add("TITLE", "TITLE");
            tableMapping.ColumnMappings.Add("FAMFORN", "FAMFORN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FAMILY] WHERE (([FA_IDNO] = @Original_FA_IDNO) AND ([FA_NAME] = @Original_FA_NAME) AND ([REL_CODE] = @Original_REL_CODE) AND ([FA_BIRDT] = @Original_FA_BIRDT) AND ([NOBR] = @Original_NOBR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([ADDR] = @Original_ADDR) AND ([TEL] = @Original_TEL) AND ([GSM] = @Original_GSM) AND ([BBC] = @Original_BBC) AND ([TAX] = @Original_TAX) AND ([AUTOINSLAB] = @Original_AUTOINSLAB) AND ([LIVE] = @Original_LIVE) AND ([EDUCODE] = @Original_EDUCODE) AND ([COMPNY] = @Original_COMPNY) AND ([TITLE] = @Original_TITLE) AND ([FAMFORN] = @Original_FAMFORN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FAMILY] ([FA_IDNO], [FA_NAME], [REL_CODE], [FA_BIRDT], [NOBR], [KEY_DATE], [KEY_MAN], [ADDR], [TEL], [GSM], [BBC], [TAX], [AUTOINSLAB], [LIVE], [EDUCODE], [COMPNY], [TITLE], [FAMFORN]) VALUES (@FA_IDNO, @FA_NAME, @REL_CODE, @FA_BIRDT, @NOBR, @KEY_DATE, @KEY_MAN, @ADDR, @TEL, @GSM, @BBC, @TAX, @AUTOINSLAB, @LIVE, @EDUCODE, @COMPNY, @TITLE, @FAMFORN);
SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN FROM FAMILY WHERE (FA_IDNO = @FA_IDNO) AND (NOBR = @NOBR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FAMILY] SET [FA_IDNO] = @FA_IDNO, [FA_NAME] = @FA_NAME, [REL_CODE] = @REL_CODE, [FA_BIRDT] = @FA_BIRDT, [NOBR] = @NOBR, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [ADDR] = @ADDR, [TEL] = @TEL, [GSM] = @GSM, [BBC] = @BBC, [TAX] = @TAX, [AUTOINSLAB] = @AUTOINSLAB, [LIVE] = @LIVE, [EDUCODE] = @EDUCODE, [COMPNY] = @COMPNY, [TITLE] = @TITLE, [FAMFORN] = @FAMFORN WHERE (([FA_IDNO] = @Original_FA_IDNO) AND ([FA_NAME] = @Original_FA_NAME) AND ([REL_CODE] = @Original_REL_CODE) AND ([FA_BIRDT] = @Original_FA_BIRDT) AND ([NOBR] = @Original_NOBR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([ADDR] = @Original_ADDR) AND ([TEL] = @Original_TEL) AND ([GSM] = @Original_GSM) AND ([BBC] = @Original_BBC) AND ([TAX] = @Original_TAX) AND ([AUTOINSLAB] = @Original_AUTOINSLAB) AND ([LIVE] = @Original_LIVE) AND ([EDUCODE] = @Original_EDUCODE) AND ([COMPNY] = @Original_COMPNY) AND ([TITLE] = @Original_TITLE) AND ([FAMFORN] = @Original_FAMFORN));
SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN FROM FAMILY WHERE (FA_IDNO = @FA_IDNO) AND (NOBR = @NOBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, " +
                "GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN FROM dbo.FAMILY" +
                "";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, " +
                "GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN FROM dbo.FAMILY" +
                "\r\nWHERE FA_IDNO!=\'\'";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.FAMILYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.FAMILYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.FAMILYDataTable dataTable = new InsDS.FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByAvailable(InsDS.FAMILYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual InsDS.FAMILYDataTable GetDataByAvailable() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            InsDS.FAMILYDataTable dataTable = new InsDS.FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.FAMILYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "FAMILY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    global::System.Nullable<global::System.DateTime> Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    bool Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN) {
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_FA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_FA_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_NAME));
            }
            if ((Original_REL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_REL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REL_CODE));
            }
            if ((Original_FA_BIRDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_FA_BIRDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NOBR));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ADDR));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_TEL));
            }
            if ((Original_GSM == null)) {
                throw new global::System.ArgumentNullException("Original_GSM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_GSM));
            }
            if ((Original_BBC == null)) {
                throw new global::System.ArgumentNullException("Original_BBC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_BBC));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_TAX));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_AUTOINSLAB));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_LIVE));
            if ((Original_EDUCODE == null)) {
                throw new global::System.ArgumentNullException("Original_EDUCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_EDUCODE));
            }
            if ((Original_COMPNY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPNY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_COMPNY));
            }
            if ((Original_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_TITLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TITLE));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_FAMFORN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FA_IDNO, 
                    string FA_NAME, 
                    string REL_CODE, 
                    global::System.Nullable<global::System.DateTime> FA_BIRDT, 
                    string NOBR, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool AUTOINSLAB, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN) {
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FA_IDNO));
            }
            if ((FA_NAME == null)) {
                throw new global::System.ArgumentNullException("FA_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_NAME));
            }
            if ((REL_CODE == null)) {
                throw new global::System.ArgumentNullException("REL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(REL_CODE));
            }
            if ((FA_BIRDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(FA_BIRDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ADDR));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TEL));
            }
            if ((GSM == null)) {
                throw new global::System.ArgumentNullException("GSM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(GSM));
            }
            if ((BBC == null)) {
                throw new global::System.ArgumentNullException("BBC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(BBC));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(TAX));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(AUTOINSLAB));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(LIVE));
            if ((EDUCODE == null)) {
                throw new global::System.ArgumentNullException("EDUCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EDUCODE));
            }
            if ((COMPNY == null)) {
                throw new global::System.ArgumentNullException("COMPNY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(COMPNY));
            }
            if ((TITLE == null)) {
                throw new global::System.ArgumentNullException("TITLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(TITLE));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(FAMFORN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FA_IDNO, 
                    string FA_NAME, 
                    string REL_CODE, 
                    global::System.Nullable<global::System.DateTime> FA_BIRDT, 
                    string NOBR, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool AUTOINSLAB, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN, 
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    global::System.Nullable<global::System.DateTime> Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    bool Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN) {
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FA_IDNO));
            }
            if ((FA_NAME == null)) {
                throw new global::System.ArgumentNullException("FA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_NAME));
            }
            if ((REL_CODE == null)) {
                throw new global::System.ArgumentNullException("REL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(REL_CODE));
            }
            if ((FA_BIRDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(FA_BIRDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ADDR));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(TEL));
            }
            if ((GSM == null)) {
                throw new global::System.ArgumentNullException("GSM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(GSM));
            }
            if ((BBC == null)) {
                throw new global::System.ArgumentNullException("BBC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(BBC));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(TAX));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(AUTOINSLAB));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(LIVE));
            if ((EDUCODE == null)) {
                throw new global::System.ArgumentNullException("EDUCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EDUCODE));
            }
            if ((COMPNY == null)) {
                throw new global::System.ArgumentNullException("COMPNY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(COMPNY));
            }
            if ((TITLE == null)) {
                throw new global::System.ArgumentNullException("TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(TITLE));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(FAMFORN));
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_FA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_FA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_FA_NAME));
            }
            if ((Original_REL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_REL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_REL_CODE));
            }
            if ((Original_FA_BIRDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_FA_BIRDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ADDR));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_TEL));
            }
            if ((Original_GSM == null)) {
                throw new global::System.ArgumentNullException("Original_GSM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_GSM));
            }
            if ((Original_BBC == null)) {
                throw new global::System.ArgumentNullException("Original_BBC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_BBC));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_TAX));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Original_AUTOINSLAB));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_LIVE));
            if ((Original_EDUCODE == null)) {
                throw new global::System.ArgumentNullException("Original_EDUCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_EDUCODE));
            }
            if ((Original_COMPNY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPNY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_COMPNY));
            }
            if ((Original_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_TITLE));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_FAMFORN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FA_NAME, 
                    string REL_CODE, 
                    global::System.Nullable<global::System.DateTime> FA_BIRDT, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool AUTOINSLAB, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN, 
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    global::System.Nullable<global::System.DateTime> Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    bool Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN) {
            return this.Update(Original_FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, Original_NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN, Original_FA_IDNO, Original_FA_NAME, Original_REL_CODE, Original_FA_BIRDT, Original_NOBR, Original_KEY_DATE, Original_KEY_MAN, Original_ADDR, Original_TEL, Original_GSM, Original_BBC, Original_TAX, Original_AUTOINSLAB, Original_LIVE, Original_EDUCODE, Original_COMPNY, Original_TITLE, Original_FAMFORN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSCOUNTRYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSCOUNTRYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSCOUNTRY";
            tableMapping.ColumnMappings.Add("S_NO", "S_NO");
            tableMapping.ColumnMappings.Add("S_NAME", "S_NAME");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[INSCOUNTRY] WHERE (([S_NO] = @Original_S_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[INSCOUNTRY] ([S_NO], [S_NAME], [KEY_DATE], [KEY_MAN]) VALUES (" +
                "@S_NO, @S_NAME, @KEY_DATE, @KEY_MAN)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[INSCOUNTRY] SET [S_NO] = @S_NO, [S_NAME] = @S_NAME, [KEY_DATE] = @K" +
                "EY_DATE, [KEY_MAN] = @KEY_MAN WHERE (([S_NO] = @Original_S_NO))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@S_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_S_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "S_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT S_NO, S_NAME, KEY_DATE, KEY_MAN FROM dbo.INSCOUNTRY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSCOUNTRYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSCOUNTRYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSCOUNTRYDataTable dataTable = new InsDS.INSCOUNTRYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSCOUNTRYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSCOUNTRY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_S_NO) {
            if ((Original_S_NO == null)) {
                throw new global::System.ArgumentNullException("Original_S_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_S_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string S_NO, string S_NAME, System.DateTime KEY_DATE, string KEY_MAN) {
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(S_NO));
            }
            if ((S_NAME == null)) {
                throw new global::System.ArgumentNullException("S_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(S_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string S_NO, string S_NAME, System.DateTime KEY_DATE, string KEY_MAN, string Original_S_NO) {
            if ((S_NO == null)) {
                throw new global::System.ArgumentNullException("S_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(S_NO));
            }
            if ((S_NAME == null)) {
                throw new global::System.ArgumentNullException("S_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(S_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            if ((Original_S_NO == null)) {
                throw new global::System.ArgumentNullException("Original_S_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_S_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string S_NAME, System.DateTime KEY_DATE, string KEY_MAN, string Original_S_NO) {
            return this.Update(Original_S_NO, S_NAME, KEY_DATE, KEY_MAN, Original_S_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class U_SYS4TableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public U_SYS4TableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "U_SYS4";
            tableMapping.ColumnMappings.Add("LSALCODE", "LSALCODE");
            tableMapping.ColumnMappings.Add("LABOVERSALCODE", "LABOVERSALCODE");
            tableMapping.ColumnMappings.Add("LABREPAIRSALCODE", "LABREPAIRSALCODE");
            tableMapping.ColumnMappings.Add("LJOBPER", "LJOBPER");
            tableMapping.ColumnMappings.Add("LJOBPER1", "LJOBPER1");
            tableMapping.ColumnMappings.Add("RETIRERATE", "RETIRERATE");
            tableMapping.ColumnMappings.Add("RETIRERATE1", "RETIRERATE1");
            tableMapping.ColumnMappings.Add("NRETIRERATE", "NRETIRERATE");
            tableMapping.ColumnMappings.Add("NRETIRERATE1", "NRETIRERATE1");
            tableMapping.ColumnMappings.Add("RETSALCODE", "RETSALCODE");
            tableMapping.ColumnMappings.Add("Comp", "Comp");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [U_SYS4] WHERE (([Comp] = @Original_Comp) AND ((@IsNull_LSALCODE = 1 AND [LSALCODE] IS NULL) OR ([LSALCODE] = @Original_LSALCODE)) AND ((@IsNull_LABOVERSALCODE = 1 AND [LABOVERSALCODE] IS NULL) OR ([LABOVERSALCODE] = @Original_LABOVERSALCODE)) AND ((@IsNull_LABREPAIRSALCODE = 1 AND [LABREPAIRSALCODE] IS NULL) OR ([LABREPAIRSALCODE] = @Original_LABREPAIRSALCODE)) AND ((@IsNull_LJOBPER = 1 AND [LJOBPER] IS NULL) OR ([LJOBPER] = @Original_LJOBPER)) AND ((@IsNull_LJOBPER1 = 1 AND [LJOBPER1] IS NULL) OR ([LJOBPER1] = @Original_LJOBPER1)) AND ((@IsNull_RETIRERATE = 1 AND [RETIRERATE] IS NULL) OR ([RETIRERATE] = @Original_RETIRERATE)) AND ((@IsNull_RETIRERATE1 = 1 AND [RETIRERATE1] IS NULL) OR ([RETIRERATE1] = @Original_RETIRERATE1)) AND ((@IsNull_NRETIRERATE = 1 AND [NRETIRERATE] IS NULL) OR ([NRETIRERATE] = @Original_NRETIRERATE)) AND ((@IsNull_NRETIRERATE1 = 1 AND [NRETIRERATE1] IS NULL) OR ([NRETIRERATE1] = @Original_NRETIRERATE1)) AND ((@IsNull_RETSALCODE = 1 AND [RETSALCODE] IS NULL) OR ([RETSALCODE] = @Original_RETSALCODE)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LABOVERSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABOVERSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LABOVERSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABOVERSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LABREPAIRSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABREPAIRSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LABREPAIRSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABREPAIRSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LJOBPER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LJOBPER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LJOBPER", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LJOBPER1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LJOBPER1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LJOBPER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETIRERATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRERATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETIRERATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRERATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRETIRERATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRETIRERATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRETIRERATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRETIRERATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [U_SYS4] ([Comp], [LSALCODE], [LABOVERSALCODE], [LABREPAIRSALCODE], [LJOBPER], [LJOBPER1], [RETIRERATE], [RETIRERATE1], [NRETIRERATE], [NRETIRERATE1], [RETSALCODE]) VALUES (@Comp, @LSALCODE, @LABOVERSALCODE, @LABREPAIRSALCODE, @LJOBPER, @LJOBPER1, @RETIRERATE, @RETIRERATE1, @NRETIRERATE, @NRETIRERATE1, @RETSALCODE);
SELECT Comp, LSALCODE, LABOVERSALCODE, LABREPAIRSALCODE, LJOBPER, LJOBPER1, RETIRERATE, RETIRERATE1, NRETIRERATE, NRETIRERATE1, RETSALCODE FROM U_SYS4 WHERE (Comp = @Comp)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LABOVERSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABOVERSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LABREPAIRSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABREPAIRSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LJOBPER", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LJOBPER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [U_SYS4] SET [Comp] = @Comp, [LSALCODE] = @LSALCODE, [LABOVERSALCODE] = @L" +
                "ABOVERSALCODE, [LABREPAIRSALCODE] = @LABREPAIRSALCODE, [LJOBPER] = @LJOBPER, [LJ" +
                "OBPER1] = @LJOBPER1, [RETIRERATE] = @RETIRERATE, [RETIRERATE1] = @RETIRERATE1, [" +
                "NRETIRERATE] = @NRETIRERATE, [NRETIRERATE1] = @NRETIRERATE1, [RETSALCODE] = @RET" +
                "SALCODE WHERE (([Comp] = @Original_Comp) AND ((@IsNull_LSALCODE = 1 AND [LSALCOD" +
                "E] IS NULL) OR ([LSALCODE] = @Original_LSALCODE)) AND ((@IsNull_LABOVERSALCODE =" +
                " 1 AND [LABOVERSALCODE] IS NULL) OR ([LABOVERSALCODE] = @Original_LABOVERSALCODE" +
                ")) AND ((@IsNull_LABREPAIRSALCODE = 1 AND [LABREPAIRSALCODE] IS NULL) OR ([LABRE" +
                "PAIRSALCODE] = @Original_LABREPAIRSALCODE)) AND ((@IsNull_LJOBPER = 1 AND [LJOBP" +
                "ER] IS NULL) OR ([LJOBPER] = @Original_LJOBPER)) AND ((@IsNull_LJOBPER1 = 1 AND " +
                "[LJOBPER1] IS NULL) OR ([LJOBPER1] = @Original_LJOBPER1)) AND ((@IsNull_RETIRERA" +
                "TE = 1 AND [RETIRERATE] IS NULL) OR ([RETIRERATE] = @Original_RETIRERATE)) AND (" +
                "(@IsNull_RETIRERATE1 = 1 AND [RETIRERATE1] IS NULL) OR ([RETIRERATE1] = @Origina" +
                "l_RETIRERATE1)) AND ((@IsNull_NRETIRERATE = 1 AND [NRETIRERATE] IS NULL) OR ([NR" +
                "ETIRERATE] = @Original_NRETIRERATE)) AND ((@IsNull_NRETIRERATE1 = 1 AND [NRETIRE" +
                "RATE1] IS NULL) OR ([NRETIRERATE1] = @Original_NRETIRERATE1)) AND ((@IsNull_RETS" +
                "ALCODE = 1 AND [RETSALCODE] IS NULL) OR ([RETSALCODE] = @Original_RETSALCODE)));" +
                "\r\nSELECT Comp, LSALCODE, LABOVERSALCODE, LABREPAIRSALCODE, LJOBPER, LJOBPER1, RE" +
                "TIRERATE, RETIRERATE1, NRETIRERATE, NRETIRERATE1, RETSALCODE FROM U_SYS4 WHERE (" +
                "Comp = @Comp)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Comp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LABOVERSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABOVERSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LABREPAIRSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABREPAIRSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LJOBPER", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LJOBPER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NRETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETSALCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Comp", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Comp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LABOVERSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABOVERSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LABOVERSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABOVERSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LABREPAIRSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABREPAIRSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LABREPAIRSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LABREPAIRSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LJOBPER", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LJOBPER", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LJOBPER", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LJOBPER1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LJOBPER1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LJOBPER1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "LJOBPER1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETIRERATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRERATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETIRERATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRERATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "RETIRERATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRETIRERATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRETIRERATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRETIRERATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NRETIRERATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NRETIRERATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NRETIRERATE1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 3, "NRETIRERATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETSALCODE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETSALCODE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETSALCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETSALCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          Comp, LSALCODE, LABOVERSALCODE, LABREPAIRSALCODE, LJOBPER, LJOBPE" +
                "R1, RETIRERATE, RETIRERATE1, \r\n                            NRETIRERATE, NRETIRER" +
                "ATE1, RETSALCODE\r\nFROM              U_SYS4";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.U_SYS4DataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.U_SYS4DataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.U_SYS4DataTable dataTable = new InsDS.U_SYS4DataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.U_SYS4DataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "U_SYS4");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class V_BASETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public V_BASETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "V_BASE";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("NAME_E", "NAME_E");
            tableMapping.ColumnMappings.Add("NAME_P", "NAME_P");
            tableMapping.ColumnMappings.Add("SALADR", "SALADR");
            tableMapping.ColumnMappings.Add("IDNO", "IDNO");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NOBR, NAME_C, NAME_E, NAME_P, SALADR, IDNO FROM dbo.V_BASE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.V_BASEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.V_BASEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.V_BASEDataTable dataTable = new InsDS.V_BASEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSGRPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSGRPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSGRP";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("IN_DATE", "IN_DATE");
            tableMapping.ColumnMappings.Add("OUT_DATE", "OUT_DATE");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("AMT1", "AMT1");
            tableMapping.ColumnMappings.Add("EXP1", "EXP1");
            tableMapping.ColumnMappings.Add("COP1", "COP1");
            tableMapping.ColumnMappings.Add("AMT2", "AMT2");
            tableMapping.ColumnMappings.Add("EXP2", "EXP2");
            tableMapping.ColumnMappings.Add("COP2", "COP2");
            tableMapping.ColumnMappings.Add("AMT3", "AMT3");
            tableMapping.ColumnMappings.Add("EXP3", "EXP3");
            tableMapping.ColumnMappings.Add("COP3", "COP3");
            tableMapping.ColumnMappings.Add("AMT4", "AMT4");
            tableMapping.ColumnMappings.Add("EXP4", "EXP4");
            tableMapping.ColumnMappings.Add("COP4", "COP4");
            tableMapping.ColumnMappings.Add("AMT5", "AMT5");
            tableMapping.ColumnMappings.Add("EXP5", "EXP5");
            tableMapping.ColumnMappings.Add("COP5", "COP5");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("AMT6", "AMT6");
            tableMapping.ColumnMappings.Add("TOTEXP", "TOTEXP");
            tableMapping.ColumnMappings.Add("COPEXP", "COPEXP");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("EXP3CAL", "EXP3CAL");
            tableMapping.ColumnMappings.Add("EXP1CAL", "EXP1CAL");
            tableMapping.ColumnMappings.Add("EXP2CAL", "EXP2CAL");
            tableMapping.ColumnMappings.Add("GRP_TYPE", "GRP_TYPE");
            tableMapping.ColumnMappings.Add("PAN", "PAN");
            tableMapping.ColumnMappings.Add("EXP6", "EXP6");
            tableMapping.ColumnMappings.Add("COP6", "COP6");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [INSGRP] WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original_" +
                "FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE) AND ([OUT_DATE] = @Original_OUT_DAT" +
                "E))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [INSGRP] ([NOBR], [FA_IDNO], [IN_DATE], [OUT_DATE], [CODE], [AMT1], [EXP1], [COP1], [AMT2], [EXP2], [COP2], [AMT3], [EXP3], [COP3], [AMT4], [EXP4], [COP4], [AMT5], [EXP5], [COP5], [KEY_MAN], [KEY_DATE], [AMT6], [TOTEXP], [COPEXP], [SEQ], [EXP3CAL], [EXP1CAL], [EXP2CAL], [GRP_TYPE], [PAN], [EXP6], [COP6]) VALUES (@NOBR, @FA_IDNO, @IN_DATE, @OUT_DATE, @CODE, @AMT1, @EXP1, @COP1, @AMT2, @EXP2, @COP2, @AMT3, @EXP3, @COP3, @AMT4, @EXP4, @COP4, @AMT5, @EXP5, @COP5, @KEY_MAN, @KEY_DATE, @AMT6, @TOTEXP, @COPEXP, @SEQ, @EXP3CAL, @EXP1CAL, @EXP2CAL, @GRP_TYPE, @PAN, @EXP6, @COP6);
SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, CODE, AMT1, EXP1, COP1, AMT2, EXP2, COP2, AMT3, EXP3, COP3, AMT4, EXP4, COP4, AMT5, EXP5, COP5, KEY_MAN, KEY_DATE, AMT6, TOTEXP, COPEXP, SEQ, EXP3CAL, EXP1CAL, EXP2CAL, GRP_TYPE, PAN, EXP6, COP6 FROM INSGRP WHERE (FA_IDNO = @FA_IDNO) AND (IN_DATE = @IN_DATE) AND (NOBR = @NOBR) AND (OUT_DATE = @OUT_DATE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOTEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COPEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COPEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP3CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP1CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP2CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [INSGRP] SET [NOBR] = @NOBR, [FA_IDNO] = @FA_IDNO, [IN_DATE] = @IN_DATE, [OUT_DATE] = @OUT_DATE, [CODE] = @CODE, [AMT1] = @AMT1, [EXP1] = @EXP1, [COP1] = @COP1, [AMT2] = @AMT2, [EXP2] = @EXP2, [COP2] = @COP2, [AMT3] = @AMT3, [EXP3] = @EXP3, [COP3] = @COP3, [AMT4] = @AMT4, [EXP4] = @EXP4, [COP4] = @COP4, [AMT5] = @AMT5, [EXP5] = @EXP5, [COP5] = @COP5, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [AMT6] = @AMT6, [TOTEXP] = @TOTEXP, [COPEXP] = @COPEXP, [SEQ] = @SEQ, [EXP3CAL] = @EXP3CAL, [EXP1CAL] = @EXP1CAL, [EXP2CAL] = @EXP2CAL, [GRP_TYPE] = @GRP_TYPE, [PAN] = @PAN, [EXP6] = @EXP6, [COP6] = @COP6 WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original_FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE) AND ([OUT_DATE] = @Original_OUT_DATE));
SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, CODE, AMT1, EXP1, COP1, AMT2, EXP2, COP2, AMT3, EXP3, COP3, AMT4, EXP4, COP4, AMT5, EXP5, COP5, KEY_MAN, KEY_DATE, AMT6, TOTEXP, COPEXP, SEQ, EXP3CAL, EXP1CAL, EXP2CAL, GRP_TYPE, PAN, EXP6, COP6 FROM INSGRP WHERE (FA_IDNO = @FA_IDNO) AND (IN_DATE = @IN_DATE) AND (NOBR = @NOBR) AND (OUT_DATE = @OUT_DATE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOTEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COPEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COPEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP3CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP1CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP2CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          NOBR, FA_IDNO, IN_DATE, OUT_DATE, CODE, AMT1, EXP1, COP1, AMT2, EXP2, COP2, AMT3, EXP3, COP3, AMT4, 
                            EXP4, COP4, AMT5, EXP5, COP5, KEY_MAN, KEY_DATE, AMT6, TOTEXP, COPEXP, SEQ, EXP3CAL, EXP1CAL, 
                            EXP2CAL, GRP_TYPE, PAN, EXP6, COP6
FROM              INSGRP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT          INSGRP.*\r\nFROM              INSGRP\r\nwhere 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSGRPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSGRPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSGRPDataTable dataTable = new InsDS.INSGRPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(InsDS.INSGRPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual InsDS.INSGRPDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            InsDS.INSGRPDataTable dataTable = new InsDS.INSGRPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSGRPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSGRP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_FA_IDNO, System.DateTime Original_IN_DATE, System.DateTime Original_OUT_DATE) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_IN_DATE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_OUT_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NOBR, 
                    string FA_IDNO, 
                    System.DateTime IN_DATE, 
                    System.DateTime OUT_DATE, 
                    string CODE, 
                    decimal AMT1, 
                    decimal EXP1, 
                    decimal COP1, 
                    decimal AMT2, 
                    decimal EXP2, 
                    decimal COP2, 
                    decimal AMT3, 
                    decimal EXP3, 
                    decimal COP3, 
                    decimal AMT4, 
                    decimal EXP4, 
                    decimal COP4, 
                    decimal AMT5, 
                    decimal EXP5, 
                    decimal COP5, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal AMT6, 
                    decimal TOTEXP, 
                    decimal COPEXP, 
                    string SEQ, 
                    bool EXP3CAL, 
                    bool EXP1CAL, 
                    bool EXP2CAL, 
                    string GRP_TYPE, 
                    string PAN, 
                    global::System.Nullable<decimal> EXP6, 
                    global::System.Nullable<decimal> COP6) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(OUT_DATE));
            if ((CODE == null)) {
                throw new global::System.ArgumentNullException("CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CODE));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(AMT1));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(EXP1));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(COP1));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(AMT2));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EXP2));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(COP2));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(AMT3));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(EXP3));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(COP3));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(AMT4));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(EXP4));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(COP4));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(AMT5));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(EXP5));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(COP5));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(AMT6));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(TOTEXP));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(COPEXP));
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SEQ));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(EXP3CAL));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(EXP1CAL));
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(EXP2CAL));
            if ((GRP_TYPE == null)) {
                throw new global::System.ArgumentNullException("GRP_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(GRP_TYPE));
            }
            if ((PAN == null)) {
                throw new global::System.ArgumentNullException("PAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(PAN));
            }
            if ((EXP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(EXP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((COP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(COP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    string FA_IDNO, 
                    System.DateTime IN_DATE, 
                    System.DateTime OUT_DATE, 
                    string CODE, 
                    decimal AMT1, 
                    decimal EXP1, 
                    decimal COP1, 
                    decimal AMT2, 
                    decimal EXP2, 
                    decimal COP2, 
                    decimal AMT3, 
                    decimal EXP3, 
                    decimal COP3, 
                    decimal AMT4, 
                    decimal EXP4, 
                    decimal COP4, 
                    decimal AMT5, 
                    decimal EXP5, 
                    decimal COP5, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal AMT6, 
                    decimal TOTEXP, 
                    decimal COPEXP, 
                    string SEQ, 
                    bool EXP3CAL, 
                    bool EXP1CAL, 
                    bool EXP2CAL, 
                    string GRP_TYPE, 
                    string PAN, 
                    global::System.Nullable<decimal> EXP6, 
                    global::System.Nullable<decimal> COP6, 
                    string Original_NOBR, 
                    string Original_FA_IDNO, 
                    System.DateTime Original_IN_DATE, 
                    System.DateTime Original_OUT_DATE) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(OUT_DATE));
            if ((CODE == null)) {
                throw new global::System.ArgumentNullException("CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CODE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(AMT1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(EXP1));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(COP1));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(AMT2));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EXP2));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(COP2));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(AMT3));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(EXP3));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(COP3));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(AMT4));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(EXP4));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(COP4));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(AMT5));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(EXP5));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(COP5));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(AMT6));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(TOTEXP));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(COPEXP));
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SEQ));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(EXP3CAL));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(EXP1CAL));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(EXP2CAL));
            if ((GRP_TYPE == null)) {
                throw new global::System.ArgumentNullException("GRP_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(GRP_TYPE));
            }
            if ((PAN == null)) {
                throw new global::System.ArgumentNullException("PAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(PAN));
            }
            if ((EXP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(EXP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((COP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(COP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_IN_DATE));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_OUT_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CODE, 
                    decimal AMT1, 
                    decimal EXP1, 
                    decimal COP1, 
                    decimal AMT2, 
                    decimal EXP2, 
                    decimal COP2, 
                    decimal AMT3, 
                    decimal EXP3, 
                    decimal COP3, 
                    decimal AMT4, 
                    decimal EXP4, 
                    decimal COP4, 
                    decimal AMT5, 
                    decimal EXP5, 
                    decimal COP5, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal AMT6, 
                    decimal TOTEXP, 
                    decimal COPEXP, 
                    string SEQ, 
                    bool EXP3CAL, 
                    bool EXP1CAL, 
                    bool EXP2CAL, 
                    string GRP_TYPE, 
                    string PAN, 
                    global::System.Nullable<decimal> EXP6, 
                    global::System.Nullable<decimal> COP6, 
                    string Original_NOBR, 
                    string Original_FA_IDNO, 
                    System.DateTime Original_IN_DATE, 
                    System.DateTime Original_OUT_DATE) {
            return this.Update(Original_NOBR, Original_FA_IDNO, Original_IN_DATE, Original_OUT_DATE, CODE, AMT1, EXP1, COP1, AMT2, EXP2, COP2, AMT3, EXP3, COP3, AMT4, EXP4, COP4, AMT5, EXP5, COP5, KEY_MAN, KEY_DATE, AMT6, TOTEXP, COPEXP, SEQ, EXP3CAL, EXP1CAL, EXP2CAL, GRP_TYPE, PAN, EXP6, COP6, Original_NOBR, Original_FA_IDNO, Original_IN_DATE, Original_OUT_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSGRFTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSGRFTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSGRF";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("IN_DATE", "IN_DATE");
            tableMapping.ColumnMappings.Add("OUT_DATE", "OUT_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[INSGRF] WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Ori" +
                "ginal_FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE) AND ([OUT_DATE] = @Original_O" +
                "UT_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DAT" +
                "E))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[INSGRF] ([NOBR], [FA_IDNO], [IN_DATE], [OUT_DATE], [KEY_MAN], [KEY_DATE]) VALUES (@NOBR, @FA_IDNO, @IN_DATE, @OUT_DATE, @KEY_MAN, @KEY_DATE);
SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, KEY_MAN, KEY_DATE FROM INSGRF WHERE (FA_IDNO = @FA_IDNO) AND (IN_DATE = @IN_DATE) AND (NOBR = @NOBR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[INSGRF] SET [NOBR] = @NOBR, [FA_IDNO] = @FA_IDNO, [IN_DATE] = @IN_DATE, [OUT_DATE] = @OUT_DATE, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original_FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE) AND ([OUT_DATE] = @Original_OUT_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE));
SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, KEY_MAN, KEY_DATE FROM INSGRF WHERE (FA_IDNO = @FA_IDNO) AND (IN_DATE = @IN_DATE) AND (NOBR = @NOBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, KEY_MAN, KEY_DATE FROM dbo.INSGRF";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, KEY_MAN, KEY_DATE FROM dbo.INSGRF\r\nwhere" +
                " Nobr=@nobr";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@nobr", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSGRFDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSGRFDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSGRFDataTable dataTable = new InsDS.INSGRFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNobr(InsDS.INSGRFDataTable dataTable, string nobr) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual InsDS.INSGRFDataTable GetDataByNobr(string nobr) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((nobr == null)) {
                throw new global::System.ArgumentNullException("nobr");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nobr));
            }
            InsDS.INSGRFDataTable dataTable = new InsDS.INSGRFDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSGRFDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSGRF");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_FA_IDNO, System.DateTime Original_IN_DATE, System.DateTime Original_OUT_DATE, string Original_KEY_MAN, System.DateTime Original_KEY_DATE) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_IN_DATE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_OUT_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NOBR, string FA_IDNO, System.DateTime IN_DATE, System.DateTime OUT_DATE, string KEY_MAN, System.DateTime KEY_DATE) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(OUT_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string FA_IDNO, System.DateTime IN_DATE, System.DateTime OUT_DATE, string KEY_MAN, System.DateTime KEY_DATE, string Original_NOBR, string Original_FA_IDNO, System.DateTime Original_IN_DATE, System.DateTime Original_OUT_DATE, string Original_KEY_MAN, System.DateTime Original_KEY_DATE) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(OUT_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_IN_DATE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_OUT_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_KEY_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime OUT_DATE, string KEY_MAN, System.DateTime KEY_DATE, string Original_NOBR, string Original_FA_IDNO, System.DateTime Original_IN_DATE, System.DateTime Original_OUT_DATE, string Original_KEY_MAN, System.DateTime Original_KEY_DATE) {
            return this.Update(Original_NOBR, Original_FA_IDNO, Original_IN_DATE, OUT_DATE, KEY_MAN, KEY_DATE, Original_NOBR, Original_FA_IDNO, Original_IN_DATE, Original_OUT_DATE, Original_KEY_MAN, Original_KEY_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSGRLVTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public INSGRLVTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSGRLV";
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("B_AMT", "B_AMT");
            tableMapping.ColumnMappings.Add("E_AMT", "E_AMT");
            tableMapping.ColumnMappings.Add("EXPA", "EXPA");
            tableMapping.ColumnMappings.Add("EXPB", "EXPB");
            tableMapping.ColumnMappings.Add("EXPC", "EXPC");
            tableMapping.ColumnMappings.Add("EXPD", "EXPD");
            tableMapping.ColumnMappings.Add("EXTA", "EXTA");
            tableMapping.ColumnMappings.Add("EXTB", "EXTB");
            tableMapping.ColumnMappings.Add("EXTC", "EXTC");
            tableMapping.ColumnMappings.Add("EXTD", "EXTD");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("PLAN_NO", "PLAN_NO");
            tableMapping.ColumnMappings.Add("PLAN_NO_DISP", "PLAN_NO_DISP");
            tableMapping.ColumnMappings.Add("ACCI_AMT", "ACCI_AMT");
            tableMapping.ColumnMappings.Add("COM_EXPA", "COM_EXPA");
            tableMapping.ColumnMappings.Add("COM_EXPB", "COM_EXPB");
            tableMapping.ColumnMappings.Add("COM_EXPC", "COM_EXPC");
            tableMapping.ColumnMappings.Add("COM_EXPD", "COM_EXPD");
            tableMapping.ColumnMappings.Add("COM_EXTA", "COM_EXTA");
            tableMapping.ColumnMappings.Add("COM_EXTB", "COM_EXTB");
            tableMapping.ColumnMappings.Add("COM_EXTC", "COM_EXTC");
            tableMapping.ColumnMappings.Add("COM_EXTD", "COM_EXTD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[INSGRLV] WHERE (([AMT] = @Original_AMT) AND ([B_AMT] = @Original_B_AMT) AND ([E_AMT] = @Original_E_AMT) AND ([EXPA] = @Original_EXPA) AND ([EXPB] = @Original_EXPB) AND ([EXPC] = @Original_EXPC) AND ([EXPD] = @Original_EXPD) AND ([EXTA] = @Original_EXTA) AND ([EXTB] = @Original_EXTB) AND ([EXTC] = @Original_EXTC) AND ([EXTD] = @Original_EXTD) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([PLAN_NO] = @Original_PLAN_NO) AND ([PLAN_NO_DISP] = @Original_PLAN_NO_DISP) AND ([ACCI_AMT] = @Original_ACCI_AMT) AND ([COM_EXPA] = @Original_COM_EXPA) AND ([COM_EXPB] = @Original_COM_EXPB) AND ([COM_EXPC] = @Original_COM_EXPC) AND ([COM_EXPD] = @Original_COM_EXPD) AND ([COM_EXTA] = @Original_COM_EXTA) AND ([COM_EXTB] = @Original_COM_EXTB) AND ([COM_EXTC] = @Original_COM_EXTC) AND ([COM_EXTD] = @Original_COM_EXTD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "B_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "E_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLAN_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCI_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "ACCI_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[INSGRLV] ([AMT], [B_AMT], [E_AMT], [EXPA], [EXPB], [EXPC], [EXPD], [EXTA], [EXTB], [EXTC], [EXTD], [KEY_MAN], [KEY_DATE], [PLAN_NO], [PLAN_NO_DISP], [ACCI_AMT], [COM_EXPA], [COM_EXPB], [COM_EXPC], [COM_EXPD], [COM_EXTA], [COM_EXTB], [COM_EXTC], [COM_EXTD]) VALUES (@AMT, @B_AMT, @E_AMT, @EXPA, @EXPB, @EXPC, @EXPD, @EXTA, @EXTB, @EXTC, @EXTD, @KEY_MAN, @KEY_DATE, @PLAN_NO, @PLAN_NO_DISP, @ACCI_AMT, @COM_EXPA, @COM_EXPB, @COM_EXPC, @COM_EXPD, @COM_EXTA, @COM_EXTB, @COM_EXTC, @COM_EXTD);
SELECT AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KEY_DATE, PLAN_NO, PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD, COM_EXTA, COM_EXTB, COM_EXTC, COM_EXTD FROM INSGRLV WHERE (PLAN_NO = @PLAN_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "B_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "E_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCI_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "ACCI_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[INSGRLV] SET [AMT] = @AMT, [B_AMT] = @B_AMT, [E_AMT] = @E_AMT, [EXP" +
                "A] = @EXPA, [EXPB] = @EXPB, [EXPC] = @EXPC, [EXPD] = @EXPD, [EXTA] = @EXTA, [EXT" +
                "B] = @EXTB, [EXTC] = @EXTC, [EXTD] = @EXTD, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @" +
                "KEY_DATE, [PLAN_NO] = @PLAN_NO, [PLAN_NO_DISP] = @PLAN_NO_DISP, [ACCI_AMT] = @AC" +
                "CI_AMT, [COM_EXPA] = @COM_EXPA, [COM_EXPB] = @COM_EXPB, [COM_EXPC] = @COM_EXPC, " +
                "[COM_EXPD] = @COM_EXPD, [COM_EXTA] = @COM_EXTA, [COM_EXTB] = @COM_EXTB, [COM_EXT" +
                "C] = @COM_EXTC, [COM_EXTD] = @COM_EXTD WHERE (([AMT] = @Original_AMT) AND ([B_AM" +
                "T] = @Original_B_AMT) AND ([E_AMT] = @Original_E_AMT) AND ([EXPA] = @Original_EX" +
                "PA) AND ([EXPB] = @Original_EXPB) AND ([EXPC] = @Original_EXPC) AND ([EXPD] = @O" +
                "riginal_EXPD) AND ([EXTA] = @Original_EXTA) AND ([EXTB] = @Original_EXTB) AND ([" +
                "EXTC] = @Original_EXTC) AND ([EXTD] = @Original_EXTD) AND ([KEY_MAN] = @Original" +
                "_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([PLAN_NO] = @Original_PLAN_" +
                "NO) AND ([PLAN_NO_DISP] = @Original_PLAN_NO_DISP) AND ([ACCI_AMT] = @Original_AC" +
                "CI_AMT) AND ([COM_EXPA] = @Original_COM_EXPA) AND ([COM_EXPB] = @Original_COM_EX" +
                "PB) AND ([COM_EXPC] = @Original_COM_EXPC) AND ([COM_EXPD] = @Original_COM_EXPD) " +
                "AND ([COM_EXTA] = @Original_COM_EXTA) AND ([COM_EXTB] = @Original_COM_EXTB) AND " +
                "([COM_EXTC] = @Original_COM_EXTC) AND ([COM_EXTD] = @Original_COM_EXTD));\r\nSELEC" +
                "T AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KE" +
                "Y_DATE, PLAN_NO, PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD," +
                " COM_EXTA, COM_EXTB, COM_EXTC, COM_EXTD FROM INSGRLV WHERE (PLAN_NO = @PLAN_NO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "B_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "E_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCI_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "ACCI_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "B_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "E_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLAN_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCI_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "ACCI_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COM_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN" +
                ", KEY_DATE, PLAN_NO, PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_E" +
                "XPD, COM_EXTA, COM_EXTB, COM_EXTC, COM_EXTD FROM dbo.INSGRLV";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT          AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KEY_DATE, PLAN_NO, 
                            PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD, COM_EXTA, COM_EXTB, COM_EXTC, 
                            COM_EXTD
FROM              INSGRLV";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.INSGRLVDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.INSGRLVDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.INSGRLVDataTable dataTable = new InsDS.INSGRLVDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(InsDS.INSGRLVDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual InsDS.INSGRLVDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            InsDS.INSGRLVDataTable dataTable = new InsDS.INSGRLVDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.INSGRLVDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "INSGRLV");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    decimal Original_AMT, 
                    decimal Original_B_AMT, 
                    decimal Original_E_AMT, 
                    decimal Original_EXPA, 
                    decimal Original_EXPB, 
                    decimal Original_EXPC, 
                    decimal Original_EXPD, 
                    decimal Original_EXTA, 
                    decimal Original_EXTB, 
                    decimal Original_EXTC, 
                    decimal Original_EXTD, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_PLAN_NO, 
                    string Original_PLAN_NO_DISP, 
                    decimal Original_ACCI_AMT, 
                    decimal Original_COM_EXPA, 
                    decimal Original_COM_EXPB, 
                    decimal Original_COM_EXPC, 
                    decimal Original_COM_EXPD, 
                    decimal Original_COM_EXTA, 
                    decimal Original_COM_EXTB, 
                    decimal Original_COM_EXTC, 
                    decimal Original_COM_EXTD) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_AMT));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((decimal)(Original_B_AMT));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_E_AMT));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_EXPA));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_EXPB));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(Original_EXPC));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_EXPD));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_EXTA));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_EXTB));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_EXTC));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_EXTD));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PLAN_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_PLAN_NO));
            }
            if ((Original_PLAN_NO_DISP == null)) {
                throw new global::System.ArgumentNullException("Original_PLAN_NO_DISP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_PLAN_NO_DISP));
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((decimal)(Original_ACCI_AMT));
            this.Adapter.DeleteCommand.Parameters[16].Value = ((decimal)(Original_COM_EXPA));
            this.Adapter.DeleteCommand.Parameters[17].Value = ((decimal)(Original_COM_EXPB));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_COM_EXPC));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_COM_EXPD));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_COM_EXTA));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((decimal)(Original_COM_EXTB));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_COM_EXTC));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_COM_EXTD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal AMT, 
                    decimal B_AMT, 
                    decimal E_AMT, 
                    decimal EXPA, 
                    decimal EXPB, 
                    decimal EXPC, 
                    decimal EXPD, 
                    decimal EXTA, 
                    decimal EXTB, 
                    decimal EXTC, 
                    decimal EXTD, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string PLAN_NO, 
                    string PLAN_NO_DISP, 
                    decimal ACCI_AMT, 
                    decimal COM_EXPA, 
                    decimal COM_EXPB, 
                    decimal COM_EXPC, 
                    decimal COM_EXPD, 
                    decimal COM_EXTA, 
                    decimal COM_EXTB, 
                    decimal COM_EXTC, 
                    decimal COM_EXTD) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(AMT));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(B_AMT));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(E_AMT));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(EXPA));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(EXPB));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(EXPC));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(EXPD));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(EXTA));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(EXTB));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EXTC));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(EXTD));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(KEY_DATE));
            if ((PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PLAN_NO));
            }
            if ((PLAN_NO_DISP == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO_DISP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PLAN_NO_DISP));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(ACCI_AMT));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(COM_EXPA));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(COM_EXPB));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(COM_EXPC));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(COM_EXPD));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(COM_EXTA));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(COM_EXTB));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(COM_EXTC));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(COM_EXTD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal AMT, 
                    decimal B_AMT, 
                    decimal E_AMT, 
                    decimal EXPA, 
                    decimal EXPB, 
                    decimal EXPC, 
                    decimal EXPD, 
                    decimal EXTA, 
                    decimal EXTB, 
                    decimal EXTC, 
                    decimal EXTD, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string PLAN_NO, 
                    string PLAN_NO_DISP, 
                    decimal ACCI_AMT, 
                    decimal COM_EXPA, 
                    decimal COM_EXPB, 
                    decimal COM_EXPC, 
                    decimal COM_EXPD, 
                    decimal COM_EXTA, 
                    decimal COM_EXTB, 
                    decimal COM_EXTC, 
                    decimal COM_EXTD, 
                    decimal Original_AMT, 
                    decimal Original_B_AMT, 
                    decimal Original_E_AMT, 
                    decimal Original_EXPA, 
                    decimal Original_EXPB, 
                    decimal Original_EXPC, 
                    decimal Original_EXPD, 
                    decimal Original_EXTA, 
                    decimal Original_EXTB, 
                    decimal Original_EXTC, 
                    decimal Original_EXTD, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_PLAN_NO, 
                    string Original_PLAN_NO_DISP, 
                    decimal Original_ACCI_AMT, 
                    decimal Original_COM_EXPA, 
                    decimal Original_COM_EXPB, 
                    decimal Original_COM_EXPC, 
                    decimal Original_COM_EXPD, 
                    decimal Original_COM_EXTA, 
                    decimal Original_COM_EXTB, 
                    decimal Original_COM_EXTC, 
                    decimal Original_COM_EXTD) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(AMT));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(B_AMT));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(E_AMT));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(EXPA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(EXPB));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(EXPC));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(EXPD));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(EXTA));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(EXTB));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EXTC));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(EXTD));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(KEY_DATE));
            if ((PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(PLAN_NO));
            }
            if ((PLAN_NO_DISP == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO_DISP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(PLAN_NO_DISP));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(ACCI_AMT));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(COM_EXPA));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(COM_EXPB));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(COM_EXPC));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(COM_EXPD));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(COM_EXTA));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(COM_EXTB));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(COM_EXTC));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(COM_EXTD));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(Original_AMT));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(Original_B_AMT));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((decimal)(Original_E_AMT));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_EXPA));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(Original_EXPB));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((decimal)(Original_EXPC));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_EXPD));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_EXTA));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(Original_EXTB));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_EXTC));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(Original_EXTD));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PLAN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_PLAN_NO));
            }
            if ((Original_PLAN_NO_DISP == null)) {
                throw new global::System.ArgumentNullException("Original_PLAN_NO_DISP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_PLAN_NO_DISP));
            }
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(Original_ACCI_AMT));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_COM_EXPA));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_COM_EXPB));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(Original_COM_EXPC));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(Original_COM_EXPD));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_COM_EXTA));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(Original_COM_EXTB));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_COM_EXTC));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(Original_COM_EXTD));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal AMT, 
                    decimal B_AMT, 
                    decimal E_AMT, 
                    decimal EXPA, 
                    decimal EXPB, 
                    decimal EXPC, 
                    decimal EXPD, 
                    decimal EXTA, 
                    decimal EXTB, 
                    decimal EXTC, 
                    decimal EXTD, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string PLAN_NO_DISP, 
                    decimal ACCI_AMT, 
                    decimal COM_EXPA, 
                    decimal COM_EXPB, 
                    decimal COM_EXPC, 
                    decimal COM_EXPD, 
                    decimal COM_EXTA, 
                    decimal COM_EXTB, 
                    decimal COM_EXTC, 
                    decimal COM_EXTD, 
                    decimal Original_AMT, 
                    decimal Original_B_AMT, 
                    decimal Original_E_AMT, 
                    decimal Original_EXPA, 
                    decimal Original_EXPB, 
                    decimal Original_EXPC, 
                    decimal Original_EXPD, 
                    decimal Original_EXTA, 
                    decimal Original_EXTB, 
                    decimal Original_EXTC, 
                    decimal Original_EXTD, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_PLAN_NO, 
                    string Original_PLAN_NO_DISP, 
                    decimal Original_ACCI_AMT, 
                    decimal Original_COM_EXPA, 
                    decimal Original_COM_EXPB, 
                    decimal Original_COM_EXPC, 
                    decimal Original_COM_EXPD, 
                    decimal Original_COM_EXTA, 
                    decimal Original_COM_EXTB, 
                    decimal Original_COM_EXTC, 
                    decimal Original_COM_EXTD) {
            return this.Update(AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KEY_DATE, Original_PLAN_NO, PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD, COM_EXTA, COM_EXTB, COM_EXTC, COM_EXTD, Original_AMT, Original_B_AMT, Original_E_AMT, Original_EXPA, Original_EXPB, Original_EXPC, Original_EXPD, Original_EXTA, Original_EXTB, Original_EXTC, Original_EXTD, Original_KEY_MAN, Original_KEY_DATE, Original_PLAN_NO, Original_PLAN_NO_DISP, Original_ACCI_AMT, Original_COM_EXPA, Original_COM_EXPB, Original_COM_EXPC, Original_COM_EXPD, Original_COM_EXTA, Original_COM_EXTB, Original_COM_EXTC, Original_COM_EXTD);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class YRINSURTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public YRINSURTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "YRINSUR";
            tableMapping.ColumnMappings.Add("AUTO", "AUTO");
            tableMapping.ColumnMappings.Add("YEAR", "YEAR");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("REL_LAB", "REL_LAB");
            tableMapping.ColumnMappings.Add("REL_HEL", "REL_HEL");
            tableMapping.ColumnMappings.Add("REL_GRP", "REL_GRP");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("EQUAL", "EQUAL");
            tableMapping.ColumnMappings.Add("SALADR", "SALADR");
            tableMapping.ColumnMappings.Add("REL_SUP", "REL_SUP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [YRINSUR] WHERE (([AUTO] = @Original_AUTO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [YRINSUR] ([YEAR], [NOBR], [FA_IDNO], [REL_LAB], [REL_HEL], [REL_GRP], [KEY_MAN], [KEY_DATE], [EQUAL], [SALADR], [REL_SUP]) VALUES (@YEAR, @NOBR, @FA_IDNO, @REL_LAB, @REL_HEL, @REL_GRP, @KEY_MAN, @KEY_DATE, @EQUAL, @SALADR, @REL_SUP);
SELECT AUTO, YEAR, NOBR, FA_IDNO, REL_LAB, REL_HEL, REL_GRP, KEY_MAN, KEY_DATE, EQUAL, SALADR, REL_SUP FROM YRINSUR WHERE (AUTO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_LAB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_LAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_HEL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_HEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_GRP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_GRP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EQUAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_SUP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_SUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [YRINSUR] SET [YEAR] = @YEAR, [NOBR] = @NOBR, [FA_IDNO] = @FA_IDNO, [REL_LAB] = @REL_LAB, [REL_HEL] = @REL_HEL, [REL_GRP] = @REL_GRP, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [EQUAL] = @EQUAL, [SALADR] = @SALADR, [REL_SUP] = @REL_SUP WHERE (([AUTO] = @Original_AUTO));
SELECT AUTO, YEAR, NOBR, FA_IDNO, REL_LAB, REL_HEL, REL_GRP, KEY_MAN, KEY_DATE, EQUAL, SALADR, REL_SUP FROM YRINSUR WHERE (AUTO = @AUTO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEAR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEAR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_LAB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_LAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_HEL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_HEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_GRP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_GRP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EQUAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EQUAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_SUP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "REL_SUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "AUTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          YRINSUR.*\r\nFROM              YRINSUR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT * FROM YRINSUR WHERE (1 = 0)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(InsDS.YRINSURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual InsDS.YRINSURDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            InsDS.YRINSURDataTable dataTable = new InsDS.YRINSURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(InsDS.YRINSURDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual InsDS.YRINSURDataTable GetDataByInit() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            InsDS.YRINSURDataTable dataTable = new InsDS.YRINSURDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS.YRINSURDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(InsDS dataSet) {
            return this.Adapter.Update(dataSet, "YRINSUR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_AUTO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_AUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string YEAR, string NOBR, string FA_IDNO, decimal REL_LAB, decimal REL_HEL, decimal REL_GRP, string KEY_MAN, System.DateTime KEY_DATE, bool EQUAL, string SALADR, global::System.Nullable<decimal> REL_SUP) {
            if ((YEAR == null)) {
                throw new global::System.ArgumentNullException("YEAR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(YEAR));
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(FA_IDNO));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(REL_LAB));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(REL_HEL));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(REL_GRP));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[8].Value = ((bool)(EQUAL));
            if ((SALADR == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SALADR));
            }
            if ((REL_SUP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(REL_SUP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string YEAR, string NOBR, string FA_IDNO, decimal REL_LAB, decimal REL_HEL, decimal REL_GRP, string KEY_MAN, System.DateTime KEY_DATE, bool EQUAL, string SALADR, global::System.Nullable<decimal> REL_SUP, int Original_AUTO, int AUTO) {
            if ((YEAR == null)) {
                throw new global::System.ArgumentNullException("YEAR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(YEAR));
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(REL_LAB));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(REL_HEL));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(REL_GRP));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((bool)(EQUAL));
            if ((SALADR == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SALADR));
            }
            if ((REL_SUP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(REL_SUP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_AUTO));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(AUTO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string YEAR, string NOBR, string FA_IDNO, decimal REL_LAB, decimal REL_HEL, decimal REL_GRP, string KEY_MAN, System.DateTime KEY_DATE, bool EQUAL, string SALADR, global::System.Nullable<decimal> REL_SUP, int Original_AUTO) {
            return this.Update(YEAR, NOBR, FA_IDNO, REL_LAB, REL_HEL, REL_GRP, KEY_MAN, KEY_DATE, EQUAL, SALADR, REL_SUP, Original_AUTO, Original_AUTO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private INSURLVTableAdapter _iNSURLVTableAdapter;
        
        private INSLABTableAdapter _iNSLABTableAdapter;
        
        private LARCODETableAdapter _lARCODETableAdapter;
        
        private HARCODETableAdapter _hARCODETableAdapter;
        
        private INSNAMETableAdapter _iNSNAMETableAdapter;
        
        private INSCOMPTableAdapter _iNSCOMPTableAdapter;
        
        private INPOLABTableAdapter _iNPOLABTableAdapter;
        
        private FAMILYTableAdapter _fAMILYTableAdapter;
        
        private INSCOUNTRYTableAdapter _iNSCOUNTRYTableAdapter;
        
        private U_SYS4TableAdapter _u_SYS4TableAdapter;
        
        private INSGRPTableAdapter _iNSGRPTableAdapter;
        
        private INSGRFTableAdapter _iNSGRFTableAdapter;
        
        private INSGRLVTableAdapter _iNSGRLVTableAdapter;
        
        private YRINSURTableAdapter _yRINSURTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSURLVTableAdapter INSURLVTableAdapter {
            get {
                return this._iNSURLVTableAdapter;
            }
            set {
                this._iNSURLVTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSLABTableAdapter INSLABTableAdapter {
            get {
                return this._iNSLABTableAdapter;
            }
            set {
                this._iNSLABTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LARCODETableAdapter LARCODETableAdapter {
            get {
                return this._lARCODETableAdapter;
            }
            set {
                this._lARCODETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public HARCODETableAdapter HARCODETableAdapter {
            get {
                return this._hARCODETableAdapter;
            }
            set {
                this._hARCODETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSNAMETableAdapter INSNAMETableAdapter {
            get {
                return this._iNSNAMETableAdapter;
            }
            set {
                this._iNSNAMETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSCOMPTableAdapter INSCOMPTableAdapter {
            get {
                return this._iNSCOMPTableAdapter;
            }
            set {
                this._iNSCOMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INPOLABTableAdapter INPOLABTableAdapter {
            get {
                return this._iNPOLABTableAdapter;
            }
            set {
                this._iNPOLABTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FAMILYTableAdapter FAMILYTableAdapter {
            get {
                return this._fAMILYTableAdapter;
            }
            set {
                this._fAMILYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSCOUNTRYTableAdapter INSCOUNTRYTableAdapter {
            get {
                return this._iNSCOUNTRYTableAdapter;
            }
            set {
                this._iNSCOUNTRYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public U_SYS4TableAdapter U_SYS4TableAdapter {
            get {
                return this._u_SYS4TableAdapter;
            }
            set {
                this._u_SYS4TableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSGRPTableAdapter INSGRPTableAdapter {
            get {
                return this._iNSGRPTableAdapter;
            }
            set {
                this._iNSGRPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSGRFTableAdapter INSGRFTableAdapter {
            get {
                return this._iNSGRFTableAdapter;
            }
            set {
                this._iNSGRFTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSGRLVTableAdapter INSGRLVTableAdapter {
            get {
                return this._iNSGRLVTableAdapter;
            }
            set {
                this._iNSGRLVTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public YRINSURTableAdapter YRINSURTableAdapter {
            get {
                return this._yRINSURTableAdapter;
            }
            set {
                this._yRINSURTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._iNSURLVTableAdapter != null) 
                            && (this._iNSURLVTableAdapter.Connection != null))) {
                    return this._iNSURLVTableAdapter.Connection;
                }
                if (((this._iNSLABTableAdapter != null) 
                            && (this._iNSLABTableAdapter.Connection != null))) {
                    return this._iNSLABTableAdapter.Connection;
                }
                if (((this._lARCODETableAdapter != null) 
                            && (this._lARCODETableAdapter.Connection != null))) {
                    return this._lARCODETableAdapter.Connection;
                }
                if (((this._hARCODETableAdapter != null) 
                            && (this._hARCODETableAdapter.Connection != null))) {
                    return this._hARCODETableAdapter.Connection;
                }
                if (((this._iNSNAMETableAdapter != null) 
                            && (this._iNSNAMETableAdapter.Connection != null))) {
                    return this._iNSNAMETableAdapter.Connection;
                }
                if (((this._iNSCOMPTableAdapter != null) 
                            && (this._iNSCOMPTableAdapter.Connection != null))) {
                    return this._iNSCOMPTableAdapter.Connection;
                }
                if (((this._iNPOLABTableAdapter != null) 
                            && (this._iNPOLABTableAdapter.Connection != null))) {
                    return this._iNPOLABTableAdapter.Connection;
                }
                if (((this._fAMILYTableAdapter != null) 
                            && (this._fAMILYTableAdapter.Connection != null))) {
                    return this._fAMILYTableAdapter.Connection;
                }
                if (((this._iNSCOUNTRYTableAdapter != null) 
                            && (this._iNSCOUNTRYTableAdapter.Connection != null))) {
                    return this._iNSCOUNTRYTableAdapter.Connection;
                }
                if (((this._u_SYS4TableAdapter != null) 
                            && (this._u_SYS4TableAdapter.Connection != null))) {
                    return this._u_SYS4TableAdapter.Connection;
                }
                if (((this._iNSGRPTableAdapter != null) 
                            && (this._iNSGRPTableAdapter.Connection != null))) {
                    return this._iNSGRPTableAdapter.Connection;
                }
                if (((this._iNSGRFTableAdapter != null) 
                            && (this._iNSGRFTableAdapter.Connection != null))) {
                    return this._iNSGRFTableAdapter.Connection;
                }
                if (((this._iNSGRLVTableAdapter != null) 
                            && (this._iNSGRLVTableAdapter.Connection != null))) {
                    return this._iNSGRLVTableAdapter.Connection;
                }
                if (((this._yRINSURTableAdapter != null) 
                            && (this._yRINSURTableAdapter.Connection != null))) {
                    return this._yRINSURTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._iNSURLVTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSLABTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lARCODETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hARCODETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSNAMETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSCOMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNPOLABTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fAMILYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSCOUNTRYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._u_SYS4TableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSGRPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSGRFTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSGRLVTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._yRINSURTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(InsDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iNSURLVTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSURLV.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSURLVTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSGRLVTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSGRLV.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSGRLVTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSGRFTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSGRF.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSGRFTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSGRPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSGRP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSGRPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._u_SYS4TableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.U_SYS4.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._u_SYS4TableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSCOUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSCOUNTRY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSCOUNTRYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNPOLABTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INPOLAB.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNPOLABTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSCOMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSCOMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSCOMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSNAMETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSNAME.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSNAMETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._hARCODETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.HARCODE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hARCODETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lARCODETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LARCODE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lARCODETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSLABTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSLAB.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSLABTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._yRINSURTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.YRINSUR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._yRINSURTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(InsDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iNSURLVTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSURLV.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSURLVTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSGRLVTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSGRLV.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSGRLVTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSGRFTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSGRF.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSGRFTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSGRPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSGRP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSGRPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._u_SYS4TableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.U_SYS4.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._u_SYS4TableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSCOUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSCOUNTRY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSCOUNTRYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNPOLABTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INPOLAB.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNPOLABTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSCOMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSCOMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSCOMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSNAMETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSNAME.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSNAMETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._hARCODETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.HARCODE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hARCODETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lARCODETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LARCODE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lARCODETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSLABTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSLAB.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSLABTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._yRINSURTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.YRINSUR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._yRINSURTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(InsDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._yRINSURTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.YRINSUR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._yRINSURTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSLABTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSLAB.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSLABTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lARCODETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LARCODE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lARCODETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hARCODETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.HARCODE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hARCODETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSNAMETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSNAME.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSNAMETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSCOMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSCOMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSCOMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNPOLABTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INPOLAB.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNPOLABTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSCOUNTRYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSCOUNTRY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSCOUNTRYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._u_SYS4TableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.U_SYS4.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._u_SYS4TableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSGRPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSGRP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSGRPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSGRFTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSGRF.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSGRFTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSGRLVTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSGRLV.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSGRLVTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSURLVTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSURLV.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSURLVTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(InsDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._iNSURLVTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSURLVTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSLABTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSLABTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._lARCODETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lARCODETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._hARCODETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hARCODETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSNAMETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSNAMETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSCOMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSCOMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNPOLABTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNPOLABTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._fAMILYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fAMILYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSCOUNTRYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSCOUNTRYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._u_SYS4TableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._u_SYS4TableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSGRPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSGRPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSGRFTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSGRFTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSGRLVTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSGRLVTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._yRINSURTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._yRINSURTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._iNSURLVTableAdapter != null)) {
                    revertConnections.Add(this._iNSURLVTableAdapter, this._iNSURLVTableAdapter.Connection);
                    this._iNSURLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSURLVTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSURLVTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSURLVTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSURLVTableAdapter.Adapter);
                    }
                }
                if ((this._iNSLABTableAdapter != null)) {
                    revertConnections.Add(this._iNSLABTableAdapter, this._iNSLABTableAdapter.Connection);
                    this._iNSLABTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSLABTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSLABTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSLABTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSLABTableAdapter.Adapter);
                    }
                }
                if ((this._lARCODETableAdapter != null)) {
                    revertConnections.Add(this._lARCODETableAdapter, this._lARCODETableAdapter.Connection);
                    this._lARCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lARCODETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lARCODETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lARCODETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lARCODETableAdapter.Adapter);
                    }
                }
                if ((this._hARCODETableAdapter != null)) {
                    revertConnections.Add(this._hARCODETableAdapter, this._hARCODETableAdapter.Connection);
                    this._hARCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hARCODETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hARCODETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hARCODETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hARCODETableAdapter.Adapter);
                    }
                }
                if ((this._iNSNAMETableAdapter != null)) {
                    revertConnections.Add(this._iNSNAMETableAdapter, this._iNSNAMETableAdapter.Connection);
                    this._iNSNAMETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSNAMETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSNAMETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSNAMETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSNAMETableAdapter.Adapter);
                    }
                }
                if ((this._iNSCOMPTableAdapter != null)) {
                    revertConnections.Add(this._iNSCOMPTableAdapter, this._iNSCOMPTableAdapter.Connection);
                    this._iNSCOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSCOMPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSCOMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSCOMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSCOMPTableAdapter.Adapter);
                    }
                }
                if ((this._iNPOLABTableAdapter != null)) {
                    revertConnections.Add(this._iNPOLABTableAdapter, this._iNPOLABTableAdapter.Connection);
                    this._iNPOLABTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNPOLABTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNPOLABTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNPOLABTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNPOLABTableAdapter.Adapter);
                    }
                }
                if ((this._fAMILYTableAdapter != null)) {
                    revertConnections.Add(this._fAMILYTableAdapter, this._fAMILYTableAdapter.Connection);
                    this._fAMILYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fAMILYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fAMILYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fAMILYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fAMILYTableAdapter.Adapter);
                    }
                }
                if ((this._iNSCOUNTRYTableAdapter != null)) {
                    revertConnections.Add(this._iNSCOUNTRYTableAdapter, this._iNSCOUNTRYTableAdapter.Connection);
                    this._iNSCOUNTRYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSCOUNTRYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSCOUNTRYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSCOUNTRYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSCOUNTRYTableAdapter.Adapter);
                    }
                }
                if ((this._u_SYS4TableAdapter != null)) {
                    revertConnections.Add(this._u_SYS4TableAdapter, this._u_SYS4TableAdapter.Connection);
                    this._u_SYS4TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._u_SYS4TableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._u_SYS4TableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._u_SYS4TableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._u_SYS4TableAdapter.Adapter);
                    }
                }
                if ((this._iNSGRPTableAdapter != null)) {
                    revertConnections.Add(this._iNSGRPTableAdapter, this._iNSGRPTableAdapter.Connection);
                    this._iNSGRPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSGRPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSGRPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSGRPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSGRPTableAdapter.Adapter);
                    }
                }
                if ((this._iNSGRFTableAdapter != null)) {
                    revertConnections.Add(this._iNSGRFTableAdapter, this._iNSGRFTableAdapter.Connection);
                    this._iNSGRFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSGRFTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSGRFTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSGRFTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSGRFTableAdapter.Adapter);
                    }
                }
                if ((this._iNSGRLVTableAdapter != null)) {
                    revertConnections.Add(this._iNSGRLVTableAdapter, this._iNSGRLVTableAdapter.Connection);
                    this._iNSGRLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSGRLVTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSGRLVTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSGRLVTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSGRLVTableAdapter.Adapter);
                    }
                }
                if ((this._yRINSURTableAdapter != null)) {
                    revertConnections.Add(this._yRINSURTableAdapter, this._yRINSURTableAdapter.Connection);
                    this._yRINSURTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._yRINSURTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._yRINSURTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._yRINSURTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._yRINSURTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._iNSURLVTableAdapter != null)) {
                    this._iNSURLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSURLVTableAdapter]));
                    this._iNSURLVTableAdapter.Transaction = null;
                }
                if ((this._iNSLABTableAdapter != null)) {
                    this._iNSLABTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSLABTableAdapter]));
                    this._iNSLABTableAdapter.Transaction = null;
                }
                if ((this._lARCODETableAdapter != null)) {
                    this._lARCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lARCODETableAdapter]));
                    this._lARCODETableAdapter.Transaction = null;
                }
                if ((this._hARCODETableAdapter != null)) {
                    this._hARCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hARCODETableAdapter]));
                    this._hARCODETableAdapter.Transaction = null;
                }
                if ((this._iNSNAMETableAdapter != null)) {
                    this._iNSNAMETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSNAMETableAdapter]));
                    this._iNSNAMETableAdapter.Transaction = null;
                }
                if ((this._iNSCOMPTableAdapter != null)) {
                    this._iNSCOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSCOMPTableAdapter]));
                    this._iNSCOMPTableAdapter.Transaction = null;
                }
                if ((this._iNPOLABTableAdapter != null)) {
                    this._iNPOLABTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNPOLABTableAdapter]));
                    this._iNPOLABTableAdapter.Transaction = null;
                }
                if ((this._fAMILYTableAdapter != null)) {
                    this._fAMILYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fAMILYTableAdapter]));
                    this._fAMILYTableAdapter.Transaction = null;
                }
                if ((this._iNSCOUNTRYTableAdapter != null)) {
                    this._iNSCOUNTRYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSCOUNTRYTableAdapter]));
                    this._iNSCOUNTRYTableAdapter.Transaction = null;
                }
                if ((this._u_SYS4TableAdapter != null)) {
                    this._u_SYS4TableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._u_SYS4TableAdapter]));
                    this._u_SYS4TableAdapter.Transaction = null;
                }
                if ((this._iNSGRPTableAdapter != null)) {
                    this._iNSGRPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSGRPTableAdapter]));
                    this._iNSGRPTableAdapter.Transaction = null;
                }
                if ((this._iNSGRFTableAdapter != null)) {
                    this._iNSGRFTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSGRFTableAdapter]));
                    this._iNSGRFTableAdapter.Transaction = null;
                }
                if ((this._iNSGRLVTableAdapter != null)) {
                    this._iNSGRLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSGRLVTableAdapter]));
                    this._iNSGRLVTableAdapter.Transaction = null;
                }
                if ((this._yRINSURTableAdapter != null)) {
                    this._yRINSURTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._yRINSURTableAdapter]));
                    this._yRINSURTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591