//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18010
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JBHR.Sal {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("BaseDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class BaseDS : global::System.Data.DataSet {
        
        private DEPTDataTable tableDEPT;
        
        private COMPDataTable tableCOMP;
        
        private FAMILYDataTable tableFAMILY;
        
        private JOBLDataTable tableJOBL;
        
        private EMPCDDataTable tableEMPCD;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BaseDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected BaseDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                if ((ds.Tables["COMP"] != null)) {
                    base.Tables.Add(new COMPDataTable(ds.Tables["COMP"]));
                }
                if ((ds.Tables["FAMILY"] != null)) {
                    base.Tables.Add(new FAMILYDataTable(ds.Tables["FAMILY"]));
                }
                if ((ds.Tables["JOBL"] != null)) {
                    base.Tables.Add(new JOBLDataTable(ds.Tables["JOBL"]));
                }
                if ((ds.Tables["EMPCD"] != null)) {
                    base.Tables.Add(new EMPCDDataTable(ds.Tables["EMPCD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPTDataTable DEPT {
            get {
                return this.tableDEPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public COMPDataTable COMP {
            get {
                return this.tableCOMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FAMILYDataTable FAMILY {
            get {
                return this.tableFAMILY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JOBLDataTable JOBL {
            get {
                return this.tableJOBL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EMPCDDataTable EMPCD {
            get {
                return this.tableEMPCD;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            BaseDS cln = ((BaseDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                if ((ds.Tables["COMP"] != null)) {
                    base.Tables.Add(new COMPDataTable(ds.Tables["COMP"]));
                }
                if ((ds.Tables["FAMILY"] != null)) {
                    base.Tables.Add(new FAMILYDataTable(ds.Tables["FAMILY"]));
                }
                if ((ds.Tables["JOBL"] != null)) {
                    base.Tables.Add(new JOBLDataTable(ds.Tables["JOBL"]));
                }
                if ((ds.Tables["EMPCD"] != null)) {
                    base.Tables.Add(new EMPCDDataTable(ds.Tables["EMPCD"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDEPT = ((DEPTDataTable)(base.Tables["DEPT"]));
            if ((initTable == true)) {
                if ((this.tableDEPT != null)) {
                    this.tableDEPT.InitVars();
                }
            }
            this.tableCOMP = ((COMPDataTable)(base.Tables["COMP"]));
            if ((initTable == true)) {
                if ((this.tableCOMP != null)) {
                    this.tableCOMP.InitVars();
                }
            }
            this.tableFAMILY = ((FAMILYDataTable)(base.Tables["FAMILY"]));
            if ((initTable == true)) {
                if ((this.tableFAMILY != null)) {
                    this.tableFAMILY.InitVars();
                }
            }
            this.tableJOBL = ((JOBLDataTable)(base.Tables["JOBL"]));
            if ((initTable == true)) {
                if ((this.tableJOBL != null)) {
                    this.tableJOBL.InitVars();
                }
            }
            this.tableEMPCD = ((EMPCDDataTable)(base.Tables["EMPCD"]));
            if ((initTable == true)) {
                if ((this.tableEMPCD != null)) {
                    this.tableEMPCD.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "BaseDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/BaseDS.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("zh-TW");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDEPT = new DEPTDataTable();
            base.Tables.Add(this.tableDEPT);
            this.tableCOMP = new COMPDataTable();
            base.Tables.Add(this.tableCOMP);
            this.tableFAMILY = new FAMILYDataTable();
            base.Tables.Add(this.tableFAMILY);
            this.tableJOBL = new JOBLDataTable();
            base.Tables.Add(this.tableJOBL);
            this.tableEMPCD = new EMPCDDataTable();
            base.Tables.Add(this.tableEMPCD);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDEPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCOMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFAMILY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJOBL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEMPCD() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            BaseDS ds = new BaseDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DEPTRowChangeEventHandler(object sender, DEPTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void COMPRowChangeEventHandler(object sender, COMPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FAMILYRowChangeEventHandler(object sender, FAMILYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JOBLRowChangeEventHandler(object sender, JOBLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EMPCDRowChangeEventHandler(object sender, EMPCDRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPTDataTable : global::System.Data.TypedTableBase<DEPTRow> {
            
            private global::System.Data.DataColumn columnD_NO;
            
            private global::System.Data.DataColumn columnD_NAME;
            
            private global::System.Data.DataColumn columnPNS;
            
            private global::System.Data.DataColumn columnDEPT_TREE;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnOLD_DEPT;
            
            private global::System.Data.DataColumn columnNEW_DEPT;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnDEPT_GROUP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTDataTable() {
                this.TableName = "DEPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DEPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D_NOColumn {
                get {
                    return this.columnD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D_NAMEColumn {
                get {
                    return this.columnD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNSColumn {
                get {
                    return this.columnPNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPT_TREEColumn {
                get {
                    return this.columnDEPT_TREE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_DEPTColumn {
                get {
                    return this.columnOLD_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEW_DEPTColumn {
                get {
                    return this.columnNEW_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPT_GROUPColumn {
                get {
                    return this.columnDEPT_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow this[int index] {
                get {
                    return ((DEPTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDEPTRow(DEPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow AddDEPTRow(string D_NO, string D_NAME, decimal PNS, string DEPT_TREE, System.DateTime KEY_DATE, string KEY_MAN, string OLD_DEPT, string NEW_DEPT, System.DateTime ADATE, System.DateTime DDATE, string DEPT_GROUP) {
                DEPTRow rowDEPTRow = ((DEPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        D_NO,
                        D_NAME,
                        PNS,
                        DEPT_TREE,
                        KEY_DATE,
                        KEY_MAN,
                        OLD_DEPT,
                        NEW_DEPT,
                        ADATE,
                        DDATE,
                        DEPT_GROUP};
                rowDEPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPTRow);
                return rowDEPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow FindByD_NO(string D_NO) {
                return ((DEPTRow)(this.Rows.Find(new object[] {
                            D_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEPTDataTable cln = ((DEPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnD_NO = base.Columns["D_NO"];
                this.columnD_NAME = base.Columns["D_NAME"];
                this.columnPNS = base.Columns["PNS"];
                this.columnDEPT_TREE = base.Columns["DEPT_TREE"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnOLD_DEPT = base.Columns["OLD_DEPT"];
                this.columnNEW_DEPT = base.Columns["NEW_DEPT"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnDEPT_GROUP = base.Columns["DEPT_GROUP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnD_NO = new global::System.Data.DataColumn("D_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NO);
                this.columnD_NAME = new global::System.Data.DataColumn("D_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NAME);
                this.columnPNS = new global::System.Data.DataColumn("PNS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNS);
                this.columnDEPT_TREE = new global::System.Data.DataColumn("DEPT_TREE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_TREE);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnOLD_DEPT = new global::System.Data.DataColumn("OLD_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_DEPT);
                this.columnNEW_DEPT = new global::System.Data.DataColumn("NEW_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEW_DEPT);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnDEPT_GROUP = new global::System.Data.DataColumn("DEPT_GROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_GROUP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnD_NO}, true));
                this.columnD_NO.AllowDBNull = false;
                this.columnD_NO.Unique = true;
                this.columnD_NO.MaxLength = 50;
                this.columnD_NAME.AllowDBNull = false;
                this.columnD_NAME.MaxLength = 50;
                this.columnPNS.AllowDBNull = false;
                this.columnDEPT_TREE.AllowDBNull = false;
                this.columnDEPT_TREE.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnOLD_DEPT.AllowDBNull = false;
                this.columnOLD_DEPT.MaxLength = 50;
                this.columnNEW_DEPT.AllowDBNull = false;
                this.columnNEW_DEPT.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnDDATE.AllowDBNull = false;
                this.columnDEPT_GROUP.AllowDBNull = false;
                this.columnDEPT_GROUP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow NewDEPTRow() {
                return ((DEPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPTRowChanged != null)) {
                    this.DEPTRowChanged(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPTRowChanging != null)) {
                    this.DEPTRowChanging(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPTRowDeleted != null)) {
                    this.DEPTRowDeleted(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPTRowDeleting != null)) {
                    this.DEPTRowDeleting(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDEPTRow(DEPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BaseDS ds = new BaseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class COMPDataTable : global::System.Data.TypedTableBase<COMPRow> {
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnCOMPNAME;
            
            private global::System.Data.DataColumn columnCHAIRMAN;
            
            private global::System.Data.DataColumn columnCOMPID;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnFAX;
            
            private global::System.Data.DataColumn columnADDR;
            
            private global::System.Data.DataColumn columnHOUSEID;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnF0103;
            
            private global::System.Data.DataColumn columnF0407;
            
            private global::System.Data.DataColumn columnWORKCD;
            
            private global::System.Data.DataColumn columnTAXID;
            
            private global::System.Data.DataColumn columnACCOUNT;
            
            private global::System.Data.DataColumn columnACCR;
            
            private global::System.Data.DataColumn columnDEFA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPDataTable() {
                this.TableName = "COMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal COMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected COMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPNAMEColumn {
                get {
                    return this.columnCOMPNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHAIRMANColumn {
                get {
                    return this.columnCHAIRMAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPIDColumn {
                get {
                    return this.columnCOMPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRColumn {
                get {
                    return this.columnADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HOUSEIDColumn {
                get {
                    return this.columnHOUSEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F0103Column {
                get {
                    return this.columnF0103;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F0407Column {
                get {
                    return this.columnF0407;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WORKCDColumn {
                get {
                    return this.columnWORKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXIDColumn {
                get {
                    return this.columnTAXID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNTColumn {
                get {
                    return this.columnACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCRColumn {
                get {
                    return this.columnACCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEFAColumn {
                get {
                    return this.columnDEFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow this[int index] {
                get {
                    return ((COMPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCOMPRow(COMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow AddCOMPRow(
                        string COMP, 
                        string COMPNAME, 
                        string CHAIRMAN, 
                        string COMPID, 
                        string TEL, 
                        string FAX, 
                        string ADDR, 
                        string HOUSEID, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string F0103, 
                        string F0407, 
                        string WORKCD, 
                        string TAXID, 
                        string ACCOUNT, 
                        string ACCR, 
                        bool DEFA) {
                COMPRow rowCOMPRow = ((COMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMP,
                        COMPNAME,
                        CHAIRMAN,
                        COMPID,
                        TEL,
                        FAX,
                        ADDR,
                        HOUSEID,
                        KEY_MAN,
                        KEY_DATE,
                        F0103,
                        F0407,
                        WORKCD,
                        TAXID,
                        ACCOUNT,
                        ACCR,
                        DEFA};
                rowCOMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCOMPRow);
                return rowCOMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow FindByCOMP(string COMP) {
                return ((COMPRow)(this.Rows.Find(new object[] {
                            COMP})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                COMPDataTable cln = ((COMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new COMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOMP = base.Columns["COMP"];
                this.columnCOMPNAME = base.Columns["COMPNAME"];
                this.columnCHAIRMAN = base.Columns["CHAIRMAN"];
                this.columnCOMPID = base.Columns["COMPID"];
                this.columnTEL = base.Columns["TEL"];
                this.columnFAX = base.Columns["FAX"];
                this.columnADDR = base.Columns["ADDR"];
                this.columnHOUSEID = base.Columns["HOUSEID"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnF0103 = base.Columns["F0103"];
                this.columnF0407 = base.Columns["F0407"];
                this.columnWORKCD = base.Columns["WORKCD"];
                this.columnTAXID = base.Columns["TAXID"];
                this.columnACCOUNT = base.Columns["ACCOUNT"];
                this.columnACCR = base.Columns["ACCR"];
                this.columnDEFA = base.Columns["DEFA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnCOMPNAME = new global::System.Data.DataColumn("COMPNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPNAME);
                this.columnCHAIRMAN = new global::System.Data.DataColumn("CHAIRMAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHAIRMAN);
                this.columnCOMPID = new global::System.Data.DataColumn("COMPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPID);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.columnADDR = new global::System.Data.DataColumn("ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR);
                this.columnHOUSEID = new global::System.Data.DataColumn("HOUSEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOUSEID);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnF0103 = new global::System.Data.DataColumn("F0103", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF0103);
                this.columnF0407 = new global::System.Data.DataColumn("F0407", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF0407);
                this.columnWORKCD = new global::System.Data.DataColumn("WORKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKCD);
                this.columnTAXID = new global::System.Data.DataColumn("TAXID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXID);
                this.columnACCOUNT = new global::System.Data.DataColumn("ACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT);
                this.columnACCR = new global::System.Data.DataColumn("ACCR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCR);
                this.columnDEFA = new global::System.Data.DataColumn("DEFA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOMP}, true));
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.Unique = true;
                this.columnCOMP.Caption = "公司代碼";
                this.columnCOMP.MaxLength = 50;
                this.columnCOMPNAME.AllowDBNull = false;
                this.columnCOMPNAME.Caption = "公司名稱";
                this.columnCOMPNAME.MaxLength = 50;
                this.columnCHAIRMAN.AllowDBNull = false;
                this.columnCHAIRMAN.Caption = "負責人";
                this.columnCHAIRMAN.MaxLength = 50;
                this.columnCOMPID.AllowDBNull = false;
                this.columnCOMPID.MaxLength = 50;
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 50;
                this.columnFAX.AllowDBNull = false;
                this.columnFAX.MaxLength = 50;
                this.columnADDR.AllowDBNull = false;
                this.columnADDR.MaxLength = 120;
                this.columnHOUSEID.AllowDBNull = false;
                this.columnHOUSEID.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnF0103.AllowDBNull = false;
                this.columnF0103.MaxLength = 50;
                this.columnF0407.AllowDBNull = false;
                this.columnF0407.MaxLength = 50;
                this.columnWORKCD.AllowDBNull = false;
                this.columnWORKCD.MaxLength = 50;
                this.columnTAXID.AllowDBNull = false;
                this.columnTAXID.MaxLength = 50;
                this.columnACCOUNT.AllowDBNull = false;
                this.columnACCOUNT.MaxLength = 50;
                this.columnACCR.AllowDBNull = false;
                this.columnACCR.MaxLength = 50;
                this.columnDEFA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow NewCOMPRow() {
                return ((COMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new COMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(COMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.COMPRowChanged != null)) {
                    this.COMPRowChanged(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.COMPRowChanging != null)) {
                    this.COMPRowChanging(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.COMPRowDeleted != null)) {
                    this.COMPRowDeleted(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.COMPRowDeleting != null)) {
                    this.COMPRowDeleting(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCOMPRow(COMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BaseDS ds = new BaseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "COMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FAMILYDataTable : global::System.Data.TypedTableBase<FAMILYRow> {
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnFA_NAME;
            
            private global::System.Data.DataColumn columnREL_CODE;
            
            private global::System.Data.DataColumn columnFA_BIRDT;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnADDR;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnGSM;
            
            private global::System.Data.DataColumn columnBBC;
            
            private global::System.Data.DataColumn columnTAX;
            
            private global::System.Data.DataColumn columnAUTOINSLAB;
            
            private global::System.Data.DataColumn columnLIVE;
            
            private global::System.Data.DataColumn columnEDUCODE;
            
            private global::System.Data.DataColumn columnCOMPNY;
            
            private global::System.Data.DataColumn columnTITLE;
            
            private global::System.Data.DataColumn columnFAMFORN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FAMILYDataTable() {
                this.TableName = "FAMILY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FAMILYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FAMILYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FA_NAMEColumn {
                get {
                    return this.columnFA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn REL_CODEColumn {
                get {
                    return this.columnREL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FA_BIRDTColumn {
                get {
                    return this.columnFA_BIRDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRColumn {
                get {
                    return this.columnADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GSMColumn {
                get {
                    return this.columnGSM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BBCColumn {
                get {
                    return this.columnBBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXColumn {
                get {
                    return this.columnTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AUTOINSLABColumn {
                get {
                    return this.columnAUTOINSLAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LIVEColumn {
                get {
                    return this.columnLIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EDUCODEColumn {
                get {
                    return this.columnEDUCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPNYColumn {
                get {
                    return this.columnCOMPNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FAMFORNColumn {
                get {
                    return this.columnFAMFORN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FAMILYRow this[int index] {
                get {
                    return ((FAMILYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFAMILYRow(FAMILYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FAMILYRow AddFAMILYRow(
                        string FA_IDNO, 
                        string FA_NAME, 
                        string REL_CODE, 
                        System.DateTime FA_BIRDT, 
                        string NOBR, 
                        System.DateTime KEY_DATE, 
                        string KEY_MAN, 
                        string ADDR, 
                        string TEL, 
                        string GSM, 
                        string BBC, 
                        bool TAX, 
                        bool AUTOINSLAB, 
                        bool LIVE, 
                        string EDUCODE, 
                        string COMPNY, 
                        string TITLE, 
                        bool FAMFORN) {
                FAMILYRow rowFAMILYRow = ((FAMILYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FA_IDNO,
                        FA_NAME,
                        REL_CODE,
                        FA_BIRDT,
                        NOBR,
                        KEY_DATE,
                        KEY_MAN,
                        ADDR,
                        TEL,
                        GSM,
                        BBC,
                        TAX,
                        AUTOINSLAB,
                        LIVE,
                        EDUCODE,
                        COMPNY,
                        TITLE,
                        FAMFORN};
                rowFAMILYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFAMILYRow);
                return rowFAMILYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FAMILYRow FindByFA_IDNONOBR(string FA_IDNO, string NOBR) {
                return ((FAMILYRow)(this.Rows.Find(new object[] {
                            FA_IDNO,
                            NOBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FAMILYDataTable cln = ((FAMILYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FAMILYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnFA_NAME = base.Columns["FA_NAME"];
                this.columnREL_CODE = base.Columns["REL_CODE"];
                this.columnFA_BIRDT = base.Columns["FA_BIRDT"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnADDR = base.Columns["ADDR"];
                this.columnTEL = base.Columns["TEL"];
                this.columnGSM = base.Columns["GSM"];
                this.columnBBC = base.Columns["BBC"];
                this.columnTAX = base.Columns["TAX"];
                this.columnAUTOINSLAB = base.Columns["AUTOINSLAB"];
                this.columnLIVE = base.Columns["LIVE"];
                this.columnEDUCODE = base.Columns["EDUCODE"];
                this.columnCOMPNY = base.Columns["COMPNY"];
                this.columnTITLE = base.Columns["TITLE"];
                this.columnFAMFORN = base.Columns["FAMFORN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnFA_NAME = new global::System.Data.DataColumn("FA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_NAME);
                this.columnREL_CODE = new global::System.Data.DataColumn("REL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_CODE);
                this.columnFA_BIRDT = new global::System.Data.DataColumn("FA_BIRDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_BIRDT);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnADDR = new global::System.Data.DataColumn("ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnGSM = new global::System.Data.DataColumn("GSM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSM);
                this.columnBBC = new global::System.Data.DataColumn("BBC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBC);
                this.columnTAX = new global::System.Data.DataColumn("TAX", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX);
                this.columnAUTOINSLAB = new global::System.Data.DataColumn("AUTOINSLAB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOINSLAB);
                this.columnLIVE = new global::System.Data.DataColumn("LIVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIVE);
                this.columnEDUCODE = new global::System.Data.DataColumn("EDUCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDUCODE);
                this.columnCOMPNY = new global::System.Data.DataColumn("COMPNY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPNY);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.columnFAMFORN = new global::System.Data.DataColumn("FAMFORN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAMFORN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFA_IDNO,
                                this.columnNOBR}, true));
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.MaxLength = 50;
                this.columnFA_NAME.AllowDBNull = false;
                this.columnFA_NAME.MaxLength = 50;
                this.columnREL_CODE.AllowDBNull = false;
                this.columnREL_CODE.MaxLength = 50;
                this.columnFA_BIRDT.AllowDBNull = false;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnADDR.AllowDBNull = false;
                this.columnADDR.MaxLength = 60;
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 50;
                this.columnGSM.AllowDBNull = false;
                this.columnGSM.MaxLength = 50;
                this.columnBBC.AllowDBNull = false;
                this.columnBBC.MaxLength = 50;
                this.columnTAX.AllowDBNull = false;
                this.columnAUTOINSLAB.AllowDBNull = false;
                this.columnLIVE.AllowDBNull = false;
                this.columnEDUCODE.AllowDBNull = false;
                this.columnEDUCODE.MaxLength = 50;
                this.columnCOMPNY.AllowDBNull = false;
                this.columnCOMPNY.MaxLength = 50;
                this.columnTITLE.AllowDBNull = false;
                this.columnTITLE.MaxLength = 50;
                this.columnFAMFORN.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FAMILYRow NewFAMILYRow() {
                return ((FAMILYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FAMILYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FAMILYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FAMILYRowChanged != null)) {
                    this.FAMILYRowChanged(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FAMILYRowChanging != null)) {
                    this.FAMILYRowChanging(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FAMILYRowDeleted != null)) {
                    this.FAMILYRowDeleted(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FAMILYRowDeleting != null)) {
                    this.FAMILYRowDeleting(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFAMILYRow(FAMILYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BaseDS ds = new BaseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FAMILYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JOBLDataTable : global::System.Data.TypedTableBase<JOBLRow> {
            
            private global::System.Data.DataColumn columnJOBL;
            
            private global::System.Data.DataColumn columnJOB_NAME;
            
            private global::System.Data.DataColumn columnB_SAL;
            
            private global::System.Data.DataColumn columnE_SAL;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnOLD_JOBL;
            
            private global::System.Data.DataColumn columnB_SAL1;
            
            private global::System.Data.DataColumn columnB_SAL2;
            
            private global::System.Data.DataColumn columnE_SAL1;
            
            private global::System.Data.DataColumn columnE_SAL2;
            
            private global::System.Data.DataColumn columnJOBL_GRUP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLDataTable() {
                this.TableName = "JOBL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JOBLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JOBLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBLColumn {
                get {
                    return this.columnJOBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NAMEColumn {
                get {
                    return this.columnJOB_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn B_SALColumn {
                get {
                    return this.columnB_SAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn E_SALColumn {
                get {
                    return this.columnE_SAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_JOBLColumn {
                get {
                    return this.columnOLD_JOBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn B_SAL1Column {
                get {
                    return this.columnB_SAL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn B_SAL2Column {
                get {
                    return this.columnB_SAL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn E_SAL1Column {
                get {
                    return this.columnE_SAL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn E_SAL2Column {
                get {
                    return this.columnE_SAL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBL_GRUPColumn {
                get {
                    return this.columnJOBL_GRUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow this[int index] {
                get {
                    return ((JOBLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJOBLRow(JOBLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow AddJOBLRow(string JOBL, string JOB_NAME, decimal B_SAL, decimal E_SAL, System.DateTime KEY_DATE, string KEY_MAN, string OLD_JOBL, decimal B_SAL1, decimal B_SAL2, decimal E_SAL1, decimal E_SAL2, string JOBL_GRUP) {
                JOBLRow rowJOBLRow = ((JOBLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JOBL,
                        JOB_NAME,
                        B_SAL,
                        E_SAL,
                        KEY_DATE,
                        KEY_MAN,
                        OLD_JOBL,
                        B_SAL1,
                        B_SAL2,
                        E_SAL1,
                        E_SAL2,
                        JOBL_GRUP};
                rowJOBLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJOBLRow);
                return rowJOBLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow FindByJOBL(string JOBL) {
                return ((JOBLRow)(this.Rows.Find(new object[] {
                            JOBL})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JOBLDataTable cln = ((JOBLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JOBLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJOBL = base.Columns["JOBL"];
                this.columnJOB_NAME = base.Columns["JOB_NAME"];
                this.columnB_SAL = base.Columns["B_SAL"];
                this.columnE_SAL = base.Columns["E_SAL"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnOLD_JOBL = base.Columns["OLD_JOBL"];
                this.columnB_SAL1 = base.Columns["B_SAL1"];
                this.columnB_SAL2 = base.Columns["B_SAL2"];
                this.columnE_SAL1 = base.Columns["E_SAL1"];
                this.columnE_SAL2 = base.Columns["E_SAL2"];
                this.columnJOBL_GRUP = base.Columns["JOBL_GRUP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJOBL = new global::System.Data.DataColumn("JOBL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBL);
                this.columnJOB_NAME = new global::System.Data.DataColumn("JOB_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NAME);
                this.columnB_SAL = new global::System.Data.DataColumn("B_SAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_SAL);
                this.columnE_SAL = new global::System.Data.DataColumn("E_SAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_SAL);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnOLD_JOBL = new global::System.Data.DataColumn("OLD_JOBL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_JOBL);
                this.columnB_SAL1 = new global::System.Data.DataColumn("B_SAL1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_SAL1);
                this.columnB_SAL2 = new global::System.Data.DataColumn("B_SAL2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_SAL2);
                this.columnE_SAL1 = new global::System.Data.DataColumn("E_SAL1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_SAL1);
                this.columnE_SAL2 = new global::System.Data.DataColumn("E_SAL2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_SAL2);
                this.columnJOBL_GRUP = new global::System.Data.DataColumn("JOBL_GRUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBL_GRUP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJOBL}, true));
                this.columnJOBL.AllowDBNull = false;
                this.columnJOBL.Unique = true;
                this.columnJOBL.MaxLength = 50;
                this.columnJOB_NAME.AllowDBNull = false;
                this.columnJOB_NAME.MaxLength = 50;
                this.columnB_SAL.AllowDBNull = false;
                this.columnE_SAL.AllowDBNull = false;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnOLD_JOBL.AllowDBNull = false;
                this.columnOLD_JOBL.MaxLength = 50;
                this.columnB_SAL1.AllowDBNull = false;
                this.columnB_SAL2.AllowDBNull = false;
                this.columnE_SAL1.AllowDBNull = false;
                this.columnE_SAL2.AllowDBNull = false;
                this.columnJOBL_GRUP.AllowDBNull = false;
                this.columnJOBL_GRUP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow NewJOBLRow() {
                return ((JOBLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JOBLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JOBLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JOBLRowChanged != null)) {
                    this.JOBLRowChanged(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JOBLRowChanging != null)) {
                    this.JOBLRowChanging(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JOBLRowDeleted != null)) {
                    this.JOBLRowDeleted(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JOBLRowDeleting != null)) {
                    this.JOBLRowDeleting(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJOBLRow(JOBLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BaseDS ds = new BaseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JOBLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EMPCDDataTable : global::System.Data.TypedTableBase<EMPCDRow> {
            
            private global::System.Data.DataColumn columnEMPCD;
            
            private global::System.Data.DataColumn columnEMPDESCR;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnNEMPCD;
            
            private global::System.Data.DataColumn columnEMPCD_B;
            
            private global::System.Data.DataColumn columnFORMAL;
            
            private global::System.Data.DataColumn columnOLDEMPCD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPCDDataTable() {
                this.TableName = "EMPCD";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMPCDDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EMPCDDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMPCDColumn {
                get {
                    return this.columnEMPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMPDESCRColumn {
                get {
                    return this.columnEMPDESCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEMPCDColumn {
                get {
                    return this.columnNEMPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMPCD_BColumn {
                get {
                    return this.columnEMPCD_B;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORMALColumn {
                get {
                    return this.columnFORMAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLDEMPCDColumn {
                get {
                    return this.columnOLDEMPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPCDRow this[int index] {
                get {
                    return ((EMPCDRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPCDRowChangeEventHandler EMPCDRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPCDRowChangeEventHandler EMPCDRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPCDRowChangeEventHandler EMPCDRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EMPCDRowChangeEventHandler EMPCDRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEMPCDRow(EMPCDRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPCDRow AddEMPCDRow(string EMPCD, string EMPDESCR, System.DateTime KEY_DATE, string KEY_MAN, string NEMPCD, string EMPCD_B, bool FORMAL, string OLDEMPCD) {
                EMPCDRow rowEMPCDRow = ((EMPCDRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        EMPCD,
                        EMPDESCR,
                        KEY_DATE,
                        KEY_MAN,
                        NEMPCD,
                        EMPCD_B,
                        FORMAL,
                        OLDEMPCD};
                rowEMPCDRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEMPCDRow);
                return rowEMPCDRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPCDRow FindByEMPCD(string EMPCD) {
                return ((EMPCDRow)(this.Rows.Find(new object[] {
                            EMPCD})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EMPCDDataTable cln = ((EMPCDDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EMPCDDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEMPCD = base.Columns["EMPCD"];
                this.columnEMPDESCR = base.Columns["EMPDESCR"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnNEMPCD = base.Columns["NEMPCD"];
                this.columnEMPCD_B = base.Columns["EMPCD_B"];
                this.columnFORMAL = base.Columns["FORMAL"];
                this.columnOLDEMPCD = base.Columns["OLDEMPCD"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEMPCD = new global::System.Data.DataColumn("EMPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPCD);
                this.columnEMPDESCR = new global::System.Data.DataColumn("EMPDESCR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPDESCR);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnNEMPCD = new global::System.Data.DataColumn("NEMPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEMPCD);
                this.columnEMPCD_B = new global::System.Data.DataColumn("EMPCD_B", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPCD_B);
                this.columnFORMAL = new global::System.Data.DataColumn("FORMAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORMAL);
                this.columnOLDEMPCD = new global::System.Data.DataColumn("OLDEMPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLDEMPCD);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEMPCD}, true));
                this.columnEMPCD.AllowDBNull = false;
                this.columnEMPCD.Unique = true;
                this.columnEMPCD.Caption = "員別代碼";
                this.columnEMPCD.MaxLength = 50;
                this.columnEMPDESCR.AllowDBNull = false;
                this.columnEMPDESCR.Caption = "員別名稱";
                this.columnEMPDESCR.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnNEMPCD.AllowDBNull = false;
                this.columnNEMPCD.MaxLength = 50;
                this.columnEMPCD_B.AllowDBNull = false;
                this.columnEMPCD_B.MaxLength = 50;
                this.columnFORMAL.AllowDBNull = false;
                this.columnOLDEMPCD.AllowDBNull = false;
                this.columnOLDEMPCD.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPCDRow NewEMPCDRow() {
                return ((EMPCDRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EMPCDRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EMPCDRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EMPCDRowChanged != null)) {
                    this.EMPCDRowChanged(this, new EMPCDRowChangeEvent(((EMPCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EMPCDRowChanging != null)) {
                    this.EMPCDRowChanging(this, new EMPCDRowChangeEvent(((EMPCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EMPCDRowDeleted != null)) {
                    this.EMPCDRowDeleted(this, new EMPCDRowChangeEvent(((EMPCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EMPCDRowDeleting != null)) {
                    this.EMPCDRowDeleting(this, new EMPCDRowChangeEvent(((EMPCDRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEMPCDRow(EMPCDRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                BaseDS ds = new BaseDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EMPCDDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEPTRow : global::System.Data.DataRow {
            
            private DEPTDataTable tableDEPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPT = ((DEPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_NO {
                get {
                    return ((string)(this[this.tableDEPT.D_NOColumn]));
                }
                set {
                    this[this.tableDEPT.D_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_NAME {
                get {
                    return ((string)(this[this.tableDEPT.D_NAMEColumn]));
                }
                set {
                    this[this.tableDEPT.D_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PNS {
                get {
                    return ((decimal)(this[this.tableDEPT.PNSColumn]));
                }
                set {
                    this[this.tableDEPT.PNSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPT_TREE {
                get {
                    return ((string)(this[this.tableDEPT.DEPT_TREEColumn]));
                }
                set {
                    this[this.tableDEPT.DEPT_TREEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPT.KEY_DATEColumn]));
                }
                set {
                    this[this.tableDEPT.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableDEPT.KEY_MANColumn]));
                }
                set {
                    this[this.tableDEPT.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLD_DEPT {
                get {
                    return ((string)(this[this.tableDEPT.OLD_DEPTColumn]));
                }
                set {
                    this[this.tableDEPT.OLD_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NEW_DEPT {
                get {
                    return ((string)(this[this.tableDEPT.NEW_DEPTColumn]));
                }
                set {
                    this[this.tableDEPT.NEW_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPT.ADATEColumn]));
                }
                set {
                    this[this.tableDEPT.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPT.DDATEColumn]));
                }
                set {
                    this[this.tableDEPT.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPT_GROUP {
                get {
                    return ((string)(this[this.tableDEPT.DEPT_GROUPColumn]));
                }
                set {
                    this[this.tableDEPT.DEPT_GROUPColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class COMPRow : global::System.Data.DataRow {
            
            private COMPDataTable tableCOMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal COMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCOMP = ((COMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMP {
                get {
                    return ((string)(this[this.tableCOMP.COMPColumn]));
                }
                set {
                    this[this.tableCOMP.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPNAME {
                get {
                    return ((string)(this[this.tableCOMP.COMPNAMEColumn]));
                }
                set {
                    this[this.tableCOMP.COMPNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHAIRMAN {
                get {
                    return ((string)(this[this.tableCOMP.CHAIRMANColumn]));
                }
                set {
                    this[this.tableCOMP.CHAIRMANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPID {
                get {
                    return ((string)(this[this.tableCOMP.COMPIDColumn]));
                }
                set {
                    this[this.tableCOMP.COMPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEL {
                get {
                    return ((string)(this[this.tableCOMP.TELColumn]));
                }
                set {
                    this[this.tableCOMP.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FAX {
                get {
                    return ((string)(this[this.tableCOMP.FAXColumn]));
                }
                set {
                    this[this.tableCOMP.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDR {
                get {
                    return ((string)(this[this.tableCOMP.ADDRColumn]));
                }
                set {
                    this[this.tableCOMP.ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HOUSEID {
                get {
                    return ((string)(this[this.tableCOMP.HOUSEIDColumn]));
                }
                set {
                    this[this.tableCOMP.HOUSEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableCOMP.KEY_MANColumn]));
                }
                set {
                    this[this.tableCOMP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableCOMP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableCOMP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F0103 {
                get {
                    return ((string)(this[this.tableCOMP.F0103Column]));
                }
                set {
                    this[this.tableCOMP.F0103Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F0407 {
                get {
                    return ((string)(this[this.tableCOMP.F0407Column]));
                }
                set {
                    this[this.tableCOMP.F0407Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WORKCD {
                get {
                    return ((string)(this[this.tableCOMP.WORKCDColumn]));
                }
                set {
                    this[this.tableCOMP.WORKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TAXID {
                get {
                    return ((string)(this[this.tableCOMP.TAXIDColumn]));
                }
                set {
                    this[this.tableCOMP.TAXIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT {
                get {
                    return ((string)(this[this.tableCOMP.ACCOUNTColumn]));
                }
                set {
                    this[this.tableCOMP.ACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCR {
                get {
                    return ((string)(this[this.tableCOMP.ACCRColumn]));
                }
                set {
                    this[this.tableCOMP.ACCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DEFA {
                get {
                    return ((bool)(this[this.tableCOMP.DEFAColumn]));
                }
                set {
                    this[this.tableCOMP.DEFAColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FAMILYRow : global::System.Data.DataRow {
            
            private FAMILYDataTable tableFAMILY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FAMILYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFAMILY = ((FAMILYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableFAMILY.FA_IDNOColumn]));
                }
                set {
                    this[this.tableFAMILY.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FA_NAME {
                get {
                    return ((string)(this[this.tableFAMILY.FA_NAMEColumn]));
                }
                set {
                    this[this.tableFAMILY.FA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string REL_CODE {
                get {
                    return ((string)(this[this.tableFAMILY.REL_CODEColumn]));
                }
                set {
                    this[this.tableFAMILY.REL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime FA_BIRDT {
                get {
                    return ((global::System.DateTime)(this[this.tableFAMILY.FA_BIRDTColumn]));
                }
                set {
                    this[this.tableFAMILY.FA_BIRDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableFAMILY.NOBRColumn]));
                }
                set {
                    this[this.tableFAMILY.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFAMILY.KEY_DATEColumn]));
                }
                set {
                    this[this.tableFAMILY.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableFAMILY.KEY_MANColumn]));
                }
                set {
                    this[this.tableFAMILY.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDR {
                get {
                    return ((string)(this[this.tableFAMILY.ADDRColumn]));
                }
                set {
                    this[this.tableFAMILY.ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEL {
                get {
                    return ((string)(this[this.tableFAMILY.TELColumn]));
                }
                set {
                    this[this.tableFAMILY.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GSM {
                get {
                    return ((string)(this[this.tableFAMILY.GSMColumn]));
                }
                set {
                    this[this.tableFAMILY.GSMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BBC {
                get {
                    return ((string)(this[this.tableFAMILY.BBCColumn]));
                }
                set {
                    this[this.tableFAMILY.BBCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TAX {
                get {
                    return ((bool)(this[this.tableFAMILY.TAXColumn]));
                }
                set {
                    this[this.tableFAMILY.TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool AUTOINSLAB {
                get {
                    return ((bool)(this[this.tableFAMILY.AUTOINSLABColumn]));
                }
                set {
                    this[this.tableFAMILY.AUTOINSLABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LIVE {
                get {
                    return ((bool)(this[this.tableFAMILY.LIVEColumn]));
                }
                set {
                    this[this.tableFAMILY.LIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EDUCODE {
                get {
                    return ((string)(this[this.tableFAMILY.EDUCODEColumn]));
                }
                set {
                    this[this.tableFAMILY.EDUCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPNY {
                get {
                    return ((string)(this[this.tableFAMILY.COMPNYColumn]));
                }
                set {
                    this[this.tableFAMILY.COMPNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TITLE {
                get {
                    return ((string)(this[this.tableFAMILY.TITLEColumn]));
                }
                set {
                    this[this.tableFAMILY.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FAMFORN {
                get {
                    return ((bool)(this[this.tableFAMILY.FAMFORNColumn]));
                }
                set {
                    this[this.tableFAMILY.FAMFORNColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JOBLRow : global::System.Data.DataRow {
            
            private JOBLDataTable tableJOBL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JOBLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJOBL = ((JOBLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBL {
                get {
                    return ((string)(this[this.tableJOBL.JOBLColumn]));
                }
                set {
                    this[this.tableJOBL.JOBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_NAME {
                get {
                    return ((string)(this[this.tableJOBL.JOB_NAMEColumn]));
                }
                set {
                    this[this.tableJOBL.JOB_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal B_SAL {
                get {
                    return ((decimal)(this[this.tableJOBL.B_SALColumn]));
                }
                set {
                    this[this.tableJOBL.B_SALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal E_SAL {
                get {
                    return ((decimal)(this[this.tableJOBL.E_SALColumn]));
                }
                set {
                    this[this.tableJOBL.E_SALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableJOBL.KEY_DATEColumn]));
                }
                set {
                    this[this.tableJOBL.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableJOBL.KEY_MANColumn]));
                }
                set {
                    this[this.tableJOBL.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLD_JOBL {
                get {
                    return ((string)(this[this.tableJOBL.OLD_JOBLColumn]));
                }
                set {
                    this[this.tableJOBL.OLD_JOBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal B_SAL1 {
                get {
                    return ((decimal)(this[this.tableJOBL.B_SAL1Column]));
                }
                set {
                    this[this.tableJOBL.B_SAL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal B_SAL2 {
                get {
                    return ((decimal)(this[this.tableJOBL.B_SAL2Column]));
                }
                set {
                    this[this.tableJOBL.B_SAL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal E_SAL1 {
                get {
                    return ((decimal)(this[this.tableJOBL.E_SAL1Column]));
                }
                set {
                    this[this.tableJOBL.E_SAL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal E_SAL2 {
                get {
                    return ((decimal)(this[this.tableJOBL.E_SAL2Column]));
                }
                set {
                    this[this.tableJOBL.E_SAL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBL_GRUP {
                get {
                    return ((string)(this[this.tableJOBL.JOBL_GRUPColumn]));
                }
                set {
                    this[this.tableJOBL.JOBL_GRUPColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EMPCDRow : global::System.Data.DataRow {
            
            private EMPCDDataTable tableEMPCD;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EMPCDRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEMPCD = ((EMPCDDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMPCD {
                get {
                    return ((string)(this[this.tableEMPCD.EMPCDColumn]));
                }
                set {
                    this[this.tableEMPCD.EMPCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMPDESCR {
                get {
                    return ((string)(this[this.tableEMPCD.EMPDESCRColumn]));
                }
                set {
                    this[this.tableEMPCD.EMPDESCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableEMPCD.KEY_DATEColumn]));
                }
                set {
                    this[this.tableEMPCD.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableEMPCD.KEY_MANColumn]));
                }
                set {
                    this[this.tableEMPCD.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NEMPCD {
                get {
                    return ((string)(this[this.tableEMPCD.NEMPCDColumn]));
                }
                set {
                    this[this.tableEMPCD.NEMPCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMPCD_B {
                get {
                    return ((string)(this[this.tableEMPCD.EMPCD_BColumn]));
                }
                set {
                    this[this.tableEMPCD.EMPCD_BColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FORMAL {
                get {
                    return ((bool)(this[this.tableEMPCD.FORMALColumn]));
                }
                set {
                    this[this.tableEMPCD.FORMALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLDEMPCD {
                get {
                    return ((string)(this[this.tableEMPCD.OLDEMPCDColumn]));
                }
                set {
                    this[this.tableEMPCD.OLDEMPCDColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DEPTRowChangeEvent : global::System.EventArgs {
            
            private DEPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRowChangeEvent(DEPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class COMPRowChangeEvent : global::System.EventArgs {
            
            private COMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRowChangeEvent(COMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FAMILYRowChangeEvent : global::System.EventArgs {
            
            private FAMILYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FAMILYRowChangeEvent(FAMILYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FAMILYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JOBLRowChangeEvent : global::System.EventArgs {
            
            private JOBLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRowChangeEvent(JOBLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EMPCDRowChangeEvent : global::System.EventArgs {
            
            private EMPCDRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPCDRowChangeEvent(EMPCDRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EMPCDRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JBHR.Sal.BaseDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DEPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPT";
            tableMapping.ColumnMappings.Add("D_NO", "D_NO");
            tableMapping.ColumnMappings.Add("D_NAME", "D_NAME");
            tableMapping.ColumnMappings.Add("PNS", "PNS");
            tableMapping.ColumnMappings.Add("DEPT_TREE", "DEPT_TREE");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("OLD_DEPT", "OLD_DEPT");
            tableMapping.ColumnMappings.Add("NEW_DEPT", "NEW_DEPT");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("DEPT_GROUP", "DEPT_GROUP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dept] WHERE (([D_NO] = @Original_D_NO) AND ([D_NAME] = @Original_D_NAME) AND ([PNS] = @Original_PNS) AND ([DEPT_TREE] = @Original_DEPT_TREE) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_DEPT] = @Original_OLD_DEPT) AND ([NEW_DEPT] = @Original_NEW_DEPT) AND ([ADATE] = @Original_ADATE) AND ([DDATE] = @Original_DDATE) AND ([DEPT_GROUP] = @Original_DEPT_GROUP))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dept] ([D_NO], [D_NAME], [PNS], [DEPT_TREE], [KEY_DATE], [KEY_MAN], [OLD_DEPT], [NEW_DEPT], [ADATE], [DDATE], [DEPT_GROUP]) VALUES (@D_NO, @D_NAME, @PNS, @DEPT_TREE, @KEY_DATE, @KEY_MAN, @OLD_DEPT, @NEW_DEPT, @ADATE, @DDATE, @DEPT_GROUP);
SELECT D_NO, D_NAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP FROM DEPT WHERE (D_NO = @D_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dept] SET [D_NO] = @D_NO, [D_NAME] = @D_NAME, [PNS] = @PNS, [DEPT_TREE] = @DEPT_TREE, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [OLD_DEPT] = @OLD_DEPT, [NEW_DEPT] = @NEW_DEPT, [ADATE] = @ADATE, [DDATE] = @DDATE, [DEPT_GROUP] = @DEPT_GROUP WHERE (([D_NO] = @Original_D_NO) AND ([D_NAME] = @Original_D_NAME) AND ([PNS] = @Original_PNS) AND ([DEPT_TREE] = @Original_DEPT_TREE) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_DEPT] = @Original_OLD_DEPT) AND ([NEW_DEPT] = @Original_NEW_DEPT) AND ([ADATE] = @Original_ADATE) AND ([DDATE] = @Original_DDATE) AND ([DEPT_GROUP] = @Original_DEPT_GROUP));
SELECT D_NO, D_NAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP FROM DEPT WHERE (D_NO = @D_NO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from dept";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BaseDS.DEPTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BaseDS.DEPTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BaseDS.DEPTDataTable dataTable = new BaseDS.DEPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS.DEPTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS dataSet) {
            return this.Adapter.Update(dataSet, "DEPT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_D_NO, string Original_D_NAME, decimal Original_PNS, string Original_DEPT_TREE, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_OLD_DEPT, string Original_NEW_DEPT, System.DateTime Original_ADATE, System.DateTime Original_DDATE, string Original_DEPT_GROUP) {
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_D_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PNS));
            if ((Original_DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_TREE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DEPT_TREE));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_DEPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_NEW_DEPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_NEW_DEPT));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ADATE));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_DDATE));
            if ((Original_DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_GROUP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DEPT_GROUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string D_NO, string D_NAME, decimal PNS, string DEPT_TREE, System.DateTime KEY_DATE, string KEY_MAN, string OLD_DEPT, string NEW_DEPT, System.DateTime ADATE, System.DateTime DDATE, string DEPT_GROUP) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PNS));
            if ((DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("DEPT_TREE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DEPT_TREE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("OLD_DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OLD_DEPT));
            }
            if ((NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("NEW_DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(NEW_DEPT));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(ADATE));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(DDATE));
            if ((DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("DEPT_GROUP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DEPT_GROUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NO, 
                    string D_NAME, 
                    decimal PNS, 
                    string DEPT_TREE, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_DEPT, 
                    string NEW_DEPT, 
                    System.DateTime ADATE, 
                    System.DateTime DDATE, 
                    string DEPT_GROUP, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    decimal Original_PNS, 
                    string Original_DEPT_TREE, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_DEPT, 
                    string Original_NEW_DEPT, 
                    System.DateTime Original_ADATE, 
                    System.DateTime Original_DDATE, 
                    string Original_DEPT_GROUP) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PNS));
            if ((DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("DEPT_TREE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DEPT_TREE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("OLD_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(OLD_DEPT));
            }
            if ((NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("NEW_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(NEW_DEPT));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(ADATE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(DDATE));
            if ((DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("DEPT_GROUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DEPT_GROUP));
            }
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_D_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_PNS));
            if ((Original_DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_TREE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DEPT_TREE));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_NEW_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_NEW_DEPT));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_ADATE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_DDATE));
            if ((Original_DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_GROUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_DEPT_GROUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NAME, 
                    decimal PNS, 
                    string DEPT_TREE, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_DEPT, 
                    string NEW_DEPT, 
                    System.DateTime ADATE, 
                    System.DateTime DDATE, 
                    string DEPT_GROUP, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    decimal Original_PNS, 
                    string Original_DEPT_TREE, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_DEPT, 
                    string Original_NEW_DEPT, 
                    System.DateTime Original_ADATE, 
                    System.DateTime Original_DDATE, 
                    string Original_DEPT_GROUP) {
            return this.Update(Original_D_NO, D_NAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP, Original_D_NO, Original_D_NAME, Original_PNS, Original_DEPT_TREE, Original_KEY_DATE, Original_KEY_MAN, Original_OLD_DEPT, Original_NEW_DEPT, Original_ADATE, Original_DDATE, Original_DEPT_GROUP);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class COMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public COMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "COMP";
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("COMPNAME", "COMPNAME");
            tableMapping.ColumnMappings.Add("CHAIRMAN", "CHAIRMAN");
            tableMapping.ColumnMappings.Add("COMPID", "COMPID");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("FAX", "FAX");
            tableMapping.ColumnMappings.Add("ADDR", "ADDR");
            tableMapping.ColumnMappings.Add("HOUSEID", "HOUSEID");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("F0103", "F0103");
            tableMapping.ColumnMappings.Add("F0407", "F0407");
            tableMapping.ColumnMappings.Add("WORKCD", "WORKCD");
            tableMapping.ColumnMappings.Add("TAXID", "TAXID");
            tableMapping.ColumnMappings.Add("ACCOUNT", "ACCOUNT");
            tableMapping.ColumnMappings.Add("ACCR", "ACCR");
            tableMapping.ColumnMappings.Add("DEFA", "DEFA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [comp] WHERE (([COMP] = @Original_COMP) AND ([COMPNAME] = @Original_COMPNAME) AND ([CHAIRMAN] = @Original_CHAIRMAN) AND ([COMPID] = @Original_COMPID) AND ([TEL] = @Original_TEL) AND ([FAX] = @Original_FAX) AND ([ADDR] = @Original_ADDR) AND ([HOUSEID] = @Original_HOUSEID) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([F0103] = @Original_F0103) AND ([F0407] = @Original_F0407) AND ([WORKCD] = @Original_WORKCD) AND ([TAXID] = @Original_TAXID) AND ([ACCOUNT] = @Original_ACCOUNT) AND ([ACCR] = @Original_ACCR) AND ([DEFA] = @Original_DEFA))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHAIRMAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAIRMAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOUSEID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOUSEID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_F0103", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0103", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_F0407", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0407", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCOUNT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [comp] ([COMP], [COMPNAME], [CHAIRMAN], [COMPID], [TEL], [FAX], [ADDR], [HOUSEID], [KEY_MAN], [KEY_DATE], [F0103], [F0407], [WORKCD], [TAXID], [ACCOUNT], [ACCR], [DEFA]) VALUES (@COMP, @COMPNAME, @CHAIRMAN, @COMPID, @TEL, @FAX, @ADDR, @HOUSEID, @KEY_MAN, @KEY_DATE, @F0103, @F0407, @WORKCD, @TAXID, @ACCOUNT, @ACCR, @DEFA);
SELECT COMP, COMPNAME, CHAIRMAN, COMPID, TEL, FAX, ADDR, HOUSEID, KEY_MAN, KEY_DATE, F0103, F0407, WORKCD, TAXID, ACCOUNT, ACCR, DEFA FROM COMP WHERE (COMP = @COMP)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHAIRMAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAIRMAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOUSEID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOUSEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F0103", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F0407", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0407", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCOUNT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [comp] SET [COMP] = @COMP, [COMPNAME] = @COMPNAME, [CHAIRMAN] = @CHAIRMAN, [COMPID] = @COMPID, [TEL] = @TEL, [FAX] = @FAX, [ADDR] = @ADDR, [HOUSEID] = @HOUSEID, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [F0103] = @F0103, [F0407] = @F0407, [WORKCD] = @WORKCD, [TAXID] = @TAXID, [ACCOUNT] = @ACCOUNT, [ACCR] = @ACCR, [DEFA] = @DEFA WHERE (([COMP] = @Original_COMP) AND ([COMPNAME] = @Original_COMPNAME) AND ([CHAIRMAN] = @Original_CHAIRMAN) AND ([COMPID] = @Original_COMPID) AND ([TEL] = @Original_TEL) AND ([FAX] = @Original_FAX) AND ([ADDR] = @Original_ADDR) AND ([HOUSEID] = @Original_HOUSEID) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([F0103] = @Original_F0103) AND ([F0407] = @Original_F0407) AND ([WORKCD] = @Original_WORKCD) AND ([TAXID] = @Original_TAXID) AND ([ACCOUNT] = @Original_ACCOUNT) AND ([ACCR] = @Original_ACCR) AND ([DEFA] = @Original_DEFA));
SELECT COMP, COMPNAME, CHAIRMAN, COMPID, TEL, FAX, ADDR, HOUSEID, KEY_MAN, KEY_DATE, F0103, F0407, WORKCD, TAXID, ACCOUNT, ACCR, DEFA FROM COMP WHERE (COMP = @COMP)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHAIRMAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAIRMAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOUSEID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOUSEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F0103", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F0407", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0407", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCOUNT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CHAIRMAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAIRMAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOUSEID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOUSEID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_F0103", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0103", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_F0407", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0407", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCOUNT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\r\nselect * from comp";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BaseDS.COMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BaseDS.COMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BaseDS.COMPDataTable dataTable = new BaseDS.COMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS.COMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS dataSet) {
            return this.Adapter.Update(dataSet, "COMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_COMP, 
                    string Original_COMPNAME, 
                    string Original_CHAIRMAN, 
                    string Original_COMPID, 
                    string Original_TEL, 
                    string Original_FAX, 
                    string Original_ADDR, 
                    string Original_HOUSEID, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_F0103, 
                    string Original_F0407, 
                    string Original_WORKCD, 
                    string Original_TAXID, 
                    string Original_ACCOUNT, 
                    string Original_ACCR, 
                    bool Original_DEFA) {
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_COMP));
            }
            if ((Original_COMPNAME == null)) {
                throw new global::System.ArgumentNullException("Original_COMPNAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_COMPNAME));
            }
            if ((Original_CHAIRMAN == null)) {
                throw new global::System.ArgumentNullException("Original_CHAIRMAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_CHAIRMAN));
            }
            if ((Original_COMPID == null)) {
                throw new global::System.ArgumentNullException("Original_COMPID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_COMPID));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TEL));
            }
            if ((Original_FAX == null)) {
                throw new global::System.ArgumentNullException("Original_FAX");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_FAX));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ADDR));
            }
            if ((Original_HOUSEID == null)) {
                throw new global::System.ArgumentNullException("Original_HOUSEID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_HOUSEID));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_F0103 == null)) {
                throw new global::System.ArgumentNullException("Original_F0103");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_F0103));
            }
            if ((Original_F0407 == null)) {
                throw new global::System.ArgumentNullException("Original_F0407");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_F0407));
            }
            if ((Original_WORKCD == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_WORKCD));
            }
            if ((Original_TAXID == null)) {
                throw new global::System.ArgumentNullException("Original_TAXID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_TAXID));
            }
            if ((Original_ACCOUNT == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_ACCOUNT));
            }
            if ((Original_ACCR == null)) {
                throw new global::System.ArgumentNullException("Original_ACCR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_ACCR));
            }
            this.Adapter.DeleteCommand.Parameters[16].Value = ((bool)(Original_DEFA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string COMP, 
                    string COMPNAME, 
                    string CHAIRMAN, 
                    string COMPID, 
                    string TEL, 
                    string FAX, 
                    string ADDR, 
                    string HOUSEID, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string F0103, 
                    string F0407, 
                    string WORKCD, 
                    string TAXID, 
                    string ACCOUNT, 
                    string ACCR, 
                    bool DEFA) {
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(COMP));
            }
            if ((COMPNAME == null)) {
                throw new global::System.ArgumentNullException("COMPNAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(COMPNAME));
            }
            if ((CHAIRMAN == null)) {
                throw new global::System.ArgumentNullException("CHAIRMAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CHAIRMAN));
            }
            if ((COMPID == null)) {
                throw new global::System.ArgumentNullException("COMPID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(COMPID));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TEL));
            }
            if ((FAX == null)) {
                throw new global::System.ArgumentNullException("FAX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FAX));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(ADDR));
            }
            if ((HOUSEID == null)) {
                throw new global::System.ArgumentNullException("HOUSEID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(HOUSEID));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            if ((F0103 == null)) {
                throw new global::System.ArgumentNullException("F0103");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(F0103));
            }
            if ((F0407 == null)) {
                throw new global::System.ArgumentNullException("F0407");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(F0407));
            }
            if ((WORKCD == null)) {
                throw new global::System.ArgumentNullException("WORKCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(WORKCD));
            }
            if ((TAXID == null)) {
                throw new global::System.ArgumentNullException("TAXID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(TAXID));
            }
            if ((ACCOUNT == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(ACCOUNT));
            }
            if ((ACCR == null)) {
                throw new global::System.ArgumentNullException("ACCR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(ACCR));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(DEFA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COMP, 
                    string COMPNAME, 
                    string CHAIRMAN, 
                    string COMPID, 
                    string TEL, 
                    string FAX, 
                    string ADDR, 
                    string HOUSEID, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string F0103, 
                    string F0407, 
                    string WORKCD, 
                    string TAXID, 
                    string ACCOUNT, 
                    string ACCR, 
                    bool DEFA, 
                    string Original_COMP, 
                    string Original_COMPNAME, 
                    string Original_CHAIRMAN, 
                    string Original_COMPID, 
                    string Original_TEL, 
                    string Original_FAX, 
                    string Original_ADDR, 
                    string Original_HOUSEID, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_F0103, 
                    string Original_F0407, 
                    string Original_WORKCD, 
                    string Original_TAXID, 
                    string Original_ACCOUNT, 
                    string Original_ACCR, 
                    bool Original_DEFA) {
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(COMP));
            }
            if ((COMPNAME == null)) {
                throw new global::System.ArgumentNullException("COMPNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(COMPNAME));
            }
            if ((CHAIRMAN == null)) {
                throw new global::System.ArgumentNullException("CHAIRMAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CHAIRMAN));
            }
            if ((COMPID == null)) {
                throw new global::System.ArgumentNullException("COMPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(COMPID));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TEL));
            }
            if ((FAX == null)) {
                throw new global::System.ArgumentNullException("FAX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FAX));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(ADDR));
            }
            if ((HOUSEID == null)) {
                throw new global::System.ArgumentNullException("HOUSEID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(HOUSEID));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(KEY_DATE));
            if ((F0103 == null)) {
                throw new global::System.ArgumentNullException("F0103");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(F0103));
            }
            if ((F0407 == null)) {
                throw new global::System.ArgumentNullException("F0407");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(F0407));
            }
            if ((WORKCD == null)) {
                throw new global::System.ArgumentNullException("WORKCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(WORKCD));
            }
            if ((TAXID == null)) {
                throw new global::System.ArgumentNullException("TAXID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(TAXID));
            }
            if ((ACCOUNT == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(ACCOUNT));
            }
            if ((ACCR == null)) {
                throw new global::System.ArgumentNullException("ACCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(ACCR));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(DEFA));
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_COMP));
            }
            if ((Original_COMPNAME == null)) {
                throw new global::System.ArgumentNullException("Original_COMPNAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_COMPNAME));
            }
            if ((Original_CHAIRMAN == null)) {
                throw new global::System.ArgumentNullException("Original_CHAIRMAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_CHAIRMAN));
            }
            if ((Original_COMPID == null)) {
                throw new global::System.ArgumentNullException("Original_COMPID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_COMPID));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_TEL));
            }
            if ((Original_FAX == null)) {
                throw new global::System.ArgumentNullException("Original_FAX");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_FAX));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_ADDR));
            }
            if ((Original_HOUSEID == null)) {
                throw new global::System.ArgumentNullException("Original_HOUSEID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_HOUSEID));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_F0103 == null)) {
                throw new global::System.ArgumentNullException("Original_F0103");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_F0103));
            }
            if ((Original_F0407 == null)) {
                throw new global::System.ArgumentNullException("Original_F0407");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_F0407));
            }
            if ((Original_WORKCD == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_WORKCD));
            }
            if ((Original_TAXID == null)) {
                throw new global::System.ArgumentNullException("Original_TAXID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_TAXID));
            }
            if ((Original_ACCOUNT == null)) {
                throw new global::System.ArgumentNullException("Original_ACCOUNT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_ACCOUNT));
            }
            if ((Original_ACCR == null)) {
                throw new global::System.ArgumentNullException("Original_ACCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_ACCR));
            }
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(Original_DEFA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string COMPNAME, 
                    string CHAIRMAN, 
                    string COMPID, 
                    string TEL, 
                    string FAX, 
                    string ADDR, 
                    string HOUSEID, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string F0103, 
                    string F0407, 
                    string WORKCD, 
                    string TAXID, 
                    string ACCOUNT, 
                    string ACCR, 
                    bool DEFA, 
                    string Original_COMP, 
                    string Original_COMPNAME, 
                    string Original_CHAIRMAN, 
                    string Original_COMPID, 
                    string Original_TEL, 
                    string Original_FAX, 
                    string Original_ADDR, 
                    string Original_HOUSEID, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_F0103, 
                    string Original_F0407, 
                    string Original_WORKCD, 
                    string Original_TAXID, 
                    string Original_ACCOUNT, 
                    string Original_ACCR, 
                    bool Original_DEFA) {
            return this.Update(Original_COMP, COMPNAME, CHAIRMAN, COMPID, TEL, FAX, ADDR, HOUSEID, KEY_MAN, KEY_DATE, F0103, F0407, WORKCD, TAXID, ACCOUNT, ACCR, DEFA, Original_COMP, Original_COMPNAME, Original_CHAIRMAN, Original_COMPID, Original_TEL, Original_FAX, Original_ADDR, Original_HOUSEID, Original_KEY_MAN, Original_KEY_DATE, Original_F0103, Original_F0407, Original_WORKCD, Original_TAXID, Original_ACCOUNT, Original_ACCR, Original_DEFA);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FAMILYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FAMILYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FAMILY";
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("FA_NAME", "FA_NAME");
            tableMapping.ColumnMappings.Add("REL_CODE", "REL_CODE");
            tableMapping.ColumnMappings.Add("FA_BIRDT", "FA_BIRDT");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("ADDR", "ADDR");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("GSM", "GSM");
            tableMapping.ColumnMappings.Add("BBC", "BBC");
            tableMapping.ColumnMappings.Add("TAX", "TAX");
            tableMapping.ColumnMappings.Add("AUTOINSLAB", "AUTOINSLAB");
            tableMapping.ColumnMappings.Add("LIVE", "LIVE");
            tableMapping.ColumnMappings.Add("EDUCODE", "EDUCODE");
            tableMapping.ColumnMappings.Add("COMPNY", "COMPNY");
            tableMapping.ColumnMappings.Add("TITLE", "TITLE");
            tableMapping.ColumnMappings.Add("FAMFORN", "FAMFORN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [family] WHERE (([FA_IDNO] = @Original_FA_IDNO) AND ([FA_NAME] = @Original_FA_NAME) AND ([REL_CODE] = @Original_REL_CODE) AND ([FA_BIRDT] = @Original_FA_BIRDT) AND ([NOBR] = @Original_NOBR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([ADDR] = @Original_ADDR) AND ([TEL] = @Original_TEL) AND ([GSM] = @Original_GSM) AND ([BBC] = @Original_BBC) AND ([TAX] = @Original_TAX) AND ([AUTOINSLAB] = @Original_AUTOINSLAB) AND ([LIVE] = @Original_LIVE) AND ([EDUCODE] = @Original_EDUCODE) AND ([COMPNY] = @Original_COMPNY) AND ([TITLE] = @Original_TITLE) AND ([FAMFORN] = @Original_FAMFORN))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [family] ([FA_IDNO], [FA_NAME], [REL_CODE], [FA_BIRDT], [NOBR], [KEY_DATE], [KEY_MAN], [ADDR], [TEL], [GSM], [BBC], [TAX], [AUTOINSLAB], [LIVE], [EDUCODE], [COMPNY], [TITLE], [FAMFORN]) VALUES (@FA_IDNO, @FA_NAME, @REL_CODE, @FA_BIRDT, @NOBR, @KEY_DATE, @KEY_MAN, @ADDR, @TEL, @GSM, @BBC, @TAX, @AUTOINSLAB, @LIVE, @EDUCODE, @COMPNY, @TITLE, @FAMFORN);
SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN FROM FAMILY WHERE (FA_IDNO = @FA_IDNO) AND (NOBR = @NOBR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [family] SET [FA_IDNO] = @FA_IDNO, [FA_NAME] = @FA_NAME, [REL_CODE] = @REL_CODE, [FA_BIRDT] = @FA_BIRDT, [NOBR] = @NOBR, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [ADDR] = @ADDR, [TEL] = @TEL, [GSM] = @GSM, [BBC] = @BBC, [TAX] = @TAX, [AUTOINSLAB] = @AUTOINSLAB, [LIVE] = @LIVE, [EDUCODE] = @EDUCODE, [COMPNY] = @COMPNY, [TITLE] = @TITLE, [FAMFORN] = @FAMFORN WHERE (([FA_IDNO] = @Original_FA_IDNO) AND ([FA_NAME] = @Original_FA_NAME) AND ([REL_CODE] = @Original_REL_CODE) AND ([FA_BIRDT] = @Original_FA_BIRDT) AND ([NOBR] = @Original_NOBR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([ADDR] = @Original_ADDR) AND ([TEL] = @Original_TEL) AND ([GSM] = @Original_GSM) AND ([BBC] = @Original_BBC) AND ([TAX] = @Original_TAX) AND ([AUTOINSLAB] = @Original_AUTOINSLAB) AND ([LIVE] = @Original_LIVE) AND ([EDUCODE] = @Original_EDUCODE) AND ([COMPNY] = @Original_COMPNY) AND ([TITLE] = @Original_TITLE) AND ([FAMFORN] = @Original_FAMFORN));
SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN FROM FAMILY WHERE (FA_IDNO = @FA_IDNO) AND (NOBR = @NOBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "\r\nselect * from family";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BaseDS.FAMILYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BaseDS.FAMILYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BaseDS.FAMILYDataTable dataTable = new BaseDS.FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS.FAMILYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS dataSet) {
            return this.Adapter.Update(dataSet, "FAMILY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    System.DateTime Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    bool Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN) {
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_FA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_FA_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_NAME));
            }
            if ((Original_REL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_REL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REL_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_FA_BIRDT));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NOBR));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_ADDR));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_TEL));
            }
            if ((Original_GSM == null)) {
                throw new global::System.ArgumentNullException("Original_GSM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_GSM));
            }
            if ((Original_BBC == null)) {
                throw new global::System.ArgumentNullException("Original_BBC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_BBC));
            }
            this.Adapter.DeleteCommand.Parameters[11].Value = ((bool)(Original_TAX));
            this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_AUTOINSLAB));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((bool)(Original_LIVE));
            if ((Original_EDUCODE == null)) {
                throw new global::System.ArgumentNullException("Original_EDUCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_EDUCODE));
            }
            if ((Original_COMPNY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPNY");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_COMPNY));
            }
            if ((Original_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_TITLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_TITLE));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_FAMFORN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FA_IDNO, 
                    string FA_NAME, 
                    string REL_CODE, 
                    System.DateTime FA_BIRDT, 
                    string NOBR, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool AUTOINSLAB, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN) {
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FA_IDNO));
            }
            if ((FA_NAME == null)) {
                throw new global::System.ArgumentNullException("FA_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_NAME));
            }
            if ((REL_CODE == null)) {
                throw new global::System.ArgumentNullException("REL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(REL_CODE));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(FA_BIRDT));
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ADDR));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TEL));
            }
            if ((GSM == null)) {
                throw new global::System.ArgumentNullException("GSM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(GSM));
            }
            if ((BBC == null)) {
                throw new global::System.ArgumentNullException("BBC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(BBC));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(TAX));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(AUTOINSLAB));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(LIVE));
            if ((EDUCODE == null)) {
                throw new global::System.ArgumentNullException("EDUCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EDUCODE));
            }
            if ((COMPNY == null)) {
                throw new global::System.ArgumentNullException("COMPNY");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(COMPNY));
            }
            if ((TITLE == null)) {
                throw new global::System.ArgumentNullException("TITLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(TITLE));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(FAMFORN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FA_IDNO, 
                    string FA_NAME, 
                    string REL_CODE, 
                    System.DateTime FA_BIRDT, 
                    string NOBR, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool AUTOINSLAB, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN, 
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    System.DateTime Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    bool Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN) {
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FA_IDNO));
            }
            if ((FA_NAME == null)) {
                throw new global::System.ArgumentNullException("FA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_NAME));
            }
            if ((REL_CODE == null)) {
                throw new global::System.ArgumentNullException("REL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(REL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(FA_BIRDT));
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ADDR));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(TEL));
            }
            if ((GSM == null)) {
                throw new global::System.ArgumentNullException("GSM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(GSM));
            }
            if ((BBC == null)) {
                throw new global::System.ArgumentNullException("BBC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(BBC));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(TAX));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(AUTOINSLAB));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(LIVE));
            if ((EDUCODE == null)) {
                throw new global::System.ArgumentNullException("EDUCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EDUCODE));
            }
            if ((COMPNY == null)) {
                throw new global::System.ArgumentNullException("COMPNY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(COMPNY));
            }
            if ((TITLE == null)) {
                throw new global::System.ArgumentNullException("TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(TITLE));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(FAMFORN));
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_FA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_FA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_FA_NAME));
            }
            if ((Original_REL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_REL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_REL_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_FA_BIRDT));
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ADDR));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_TEL));
            }
            if ((Original_GSM == null)) {
                throw new global::System.ArgumentNullException("Original_GSM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_GSM));
            }
            if ((Original_BBC == null)) {
                throw new global::System.ArgumentNullException("Original_BBC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_BBC));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_TAX));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Original_AUTOINSLAB));
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_LIVE));
            if ((Original_EDUCODE == null)) {
                throw new global::System.ArgumentNullException("Original_EDUCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_EDUCODE));
            }
            if ((Original_COMPNY == null)) {
                throw new global::System.ArgumentNullException("Original_COMPNY");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_COMPNY));
            }
            if ((Original_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_TITLE));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(Original_FAMFORN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FA_NAME, 
                    string REL_CODE, 
                    System.DateTime FA_BIRDT, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool AUTOINSLAB, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN, 
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    System.DateTime Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    bool Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN) {
            return this.Update(Original_FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, Original_NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN, Original_FA_IDNO, Original_FA_NAME, Original_REL_CODE, Original_FA_BIRDT, Original_NOBR, Original_KEY_DATE, Original_KEY_MAN, Original_ADDR, Original_TEL, Original_GSM, Original_BBC, Original_TAX, Original_AUTOINSLAB, Original_LIVE, Original_EDUCODE, Original_COMPNY, Original_TITLE, Original_FAMFORN);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JOBLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JOBLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "JOBL";
            tableMapping.ColumnMappings.Add("JOBL", "JOBL");
            tableMapping.ColumnMappings.Add("JOB_NAME", "JOB_NAME");
            tableMapping.ColumnMappings.Add("B_SAL", "B_SAL");
            tableMapping.ColumnMappings.Add("E_SAL", "E_SAL");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("OLD_JOBL", "OLD_JOBL");
            tableMapping.ColumnMappings.Add("B_SAL1", "B_SAL1");
            tableMapping.ColumnMappings.Add("B_SAL2", "B_SAL2");
            tableMapping.ColumnMappings.Add("E_SAL1", "E_SAL1");
            tableMapping.ColumnMappings.Add("E_SAL2", "E_SAL2");
            tableMapping.ColumnMappings.Add("JOBL_GRUP", "JOBL_GRUP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [JOBL] WHERE (([JOBL] = @Original_JOBL) AND ([JOB_NAME] = @Original_JOB_NAME) AND ([B_SAL] = @Original_B_SAL) AND ([E_SAL] = @Original_E_SAL) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_JOBL] = @Original_OLD_JOBL) AND ([B_SAL1] = @Original_B_SAL1) AND ([B_SAL2] = @Original_B_SAL2) AND ([E_SAL1] = @Original_E_SAL1) AND ([E_SAL2] = @Original_E_SAL2) AND ([JOBL_GRUP] = @Original_JOBL_GRUP))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [JOBL] ([JOBL], [JOB_NAME], [B_SAL], [E_SAL], [KEY_DATE], [KEY_MAN], [OLD_JOBL], [B_SAL1], [B_SAL2], [E_SAL1], [E_SAL2], [JOBL_GRUP]) VALUES (@JOBL, @JOB_NAME, @B_SAL, @E_SAL, @KEY_DATE, @KEY_MAN, @OLD_JOBL, @B_SAL1, @B_SAL2, @E_SAL1, @E_SAL2, @JOBL_GRUP);
SELECT JOBL, JOB_NAME, B_SAL, E_SAL, KEY_DATE, KEY_MAN, OLD_JOBL, B_SAL1, B_SAL2, E_SAL1, E_SAL2, JOBL_GRUP FROM JOBL WHERE (JOBL = @JOBL)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [JOBL] SET [JOBL] = @JOBL, [JOB_NAME] = @JOB_NAME, [B_SAL] = @B_SAL, [E_SAL] = @E_SAL, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [OLD_JOBL] = @OLD_JOBL, [B_SAL1] = @B_SAL1, [B_SAL2] = @B_SAL2, [E_SAL1] = @E_SAL1, [E_SAL2] = @E_SAL2, [JOBL_GRUP] = @JOBL_GRUP WHERE (([JOBL] = @Original_JOBL) AND ([JOB_NAME] = @Original_JOB_NAME) AND ([B_SAL] = @Original_B_SAL) AND ([E_SAL] = @Original_E_SAL) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_JOBL] = @Original_OLD_JOBL) AND ([B_SAL1] = @Original_B_SAL1) AND ([B_SAL2] = @Original_B_SAL2) AND ([E_SAL1] = @Original_E_SAL1) AND ([E_SAL2] = @Original_E_SAL2) AND ([JOBL_GRUP] = @Original_JOBL_GRUP));
SELECT JOBL, JOB_NAME, B_SAL, E_SAL, KEY_DATE, KEY_MAN, OLD_JOBL, B_SAL1, B_SAL2, E_SAL1, E_SAL2, JOBL_GRUP FROM JOBL WHERE (JOBL = @JOBL)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT * FROM JOBL";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BaseDS.JOBLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BaseDS.JOBLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BaseDS.JOBLDataTable dataTable = new BaseDS.JOBLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS.JOBLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS dataSet) {
            return this.Adapter.Update(dataSet, "JOBL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_JOBL, string Original_JOB_NAME, decimal Original_B_SAL, decimal Original_E_SAL, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_OLD_JOBL, decimal Original_B_SAL1, decimal Original_B_SAL2, decimal Original_E_SAL1, decimal Original_E_SAL2, string Original_JOBL_GRUP) {
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_JOBL));
            }
            if ((Original_JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_JOB_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_B_SAL));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_E_SAL));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_JOBL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OLD_JOBL));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_B_SAL1));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_B_SAL2));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_E_SAL1));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_E_SAL2));
            if ((Original_JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL_GRUP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_JOBL_GRUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string JOBL, string JOB_NAME, decimal B_SAL, decimal E_SAL, System.DateTime KEY_DATE, string KEY_MAN, string OLD_JOBL, decimal B_SAL1, decimal B_SAL2, decimal E_SAL1, decimal E_SAL2, string JOBL_GRUP) {
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(JOBL));
            }
            if ((JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("JOB_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(JOB_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(B_SAL));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(E_SAL));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("OLD_JOBL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OLD_JOBL));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(B_SAL1));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(B_SAL2));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(E_SAL1));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(E_SAL2));
            if ((JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("JOBL_GRUP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(JOBL_GRUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JOBL, 
                    string JOB_NAME, 
                    decimal B_SAL, 
                    decimal E_SAL, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_JOBL, 
                    decimal B_SAL1, 
                    decimal B_SAL2, 
                    decimal E_SAL1, 
                    decimal E_SAL2, 
                    string JOBL_GRUP, 
                    string Original_JOBL, 
                    string Original_JOB_NAME, 
                    decimal Original_B_SAL, 
                    decimal Original_E_SAL, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_JOBL, 
                    decimal Original_B_SAL1, 
                    decimal Original_B_SAL2, 
                    decimal Original_E_SAL1, 
                    decimal Original_E_SAL2, 
                    string Original_JOBL_GRUP) {
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(JOBL));
            }
            if ((JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("JOB_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(JOB_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(B_SAL));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(E_SAL));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("OLD_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(OLD_JOBL));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(B_SAL1));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(B_SAL2));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(E_SAL1));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(E_SAL2));
            if ((JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("JOBL_GRUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(JOBL_GRUP));
            }
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_JOBL));
            }
            if ((Original_JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_JOB_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_B_SAL));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_E_SAL));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_OLD_JOBL));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_B_SAL1));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_B_SAL2));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_E_SAL1));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_E_SAL2));
            if ((Original_JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL_GRUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_JOBL_GRUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JOB_NAME, 
                    decimal B_SAL, 
                    decimal E_SAL, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_JOBL, 
                    decimal B_SAL1, 
                    decimal B_SAL2, 
                    decimal E_SAL1, 
                    decimal E_SAL2, 
                    string JOBL_GRUP, 
                    string Original_JOBL, 
                    string Original_JOB_NAME, 
                    decimal Original_B_SAL, 
                    decimal Original_E_SAL, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_JOBL, 
                    decimal Original_B_SAL1, 
                    decimal Original_B_SAL2, 
                    decimal Original_E_SAL1, 
                    decimal Original_E_SAL2, 
                    string Original_JOBL_GRUP) {
            return this.Update(Original_JOBL, JOB_NAME, B_SAL, E_SAL, KEY_DATE, KEY_MAN, OLD_JOBL, B_SAL1, B_SAL2, E_SAL1, E_SAL2, JOBL_GRUP, Original_JOBL, Original_JOB_NAME, Original_B_SAL, Original_E_SAL, Original_KEY_DATE, Original_KEY_MAN, Original_OLD_JOBL, Original_B_SAL1, Original_B_SAL2, Original_E_SAL1, Original_E_SAL2, Original_JOBL_GRUP);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EMPCDTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EMPCDTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "EMPCD";
            tableMapping.ColumnMappings.Add("EMPCD", "EMPCD");
            tableMapping.ColumnMappings.Add("EMPDESCR", "EMPDESCR");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("NEMPCD", "NEMPCD");
            tableMapping.ColumnMappings.Add("EMPCD_B", "EMPCD_B");
            tableMapping.ColumnMappings.Add("FORMAL", "FORMAL");
            tableMapping.ColumnMappings.Add("OLDEMPCD", "OLDEMPCD");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [EMPCD] WHERE (([EMPCD] = @Original_EMPCD) AND ([EMPDESCR] = @Original_EMPDESCR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([NEMPCD] = @Original_NEMPCD) AND ([EMPCD_B] = @Original_EMPCD_B) AND ([FORMAL] = @Original_FORMAL) AND ([OLDEMPCD] = @Original_OLDEMPCD))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPDESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPDESCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD_B", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORMAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDEMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [EMPCD] ([EMPCD], [EMPDESCR], [KEY_DATE], [KEY_MAN], [NEMPCD], [EMPCD_B], [FORMAL], [OLDEMPCD]) VALUES (@EMPCD, @EMPDESCR, @KEY_DATE, @KEY_MAN, @NEMPCD, @EMPCD_B, @FORMAL, @OLDEMPCD);
SELECT EMPCD, EMPDESCR, KEY_DATE, KEY_MAN, NEMPCD, EMPCD_B, FORMAL, OLDEMPCD FROM EMPCD WHERE (EMPCD = @EMPCD)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPDESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPDESCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD_B", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORMAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDEMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [EMPCD] SET [EMPCD] = @EMPCD, [EMPDESCR] = @EMPDESCR, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [NEMPCD] = @NEMPCD, [EMPCD_B] = @EMPCD_B, [FORMAL] = @FORMAL, [OLDEMPCD] = @OLDEMPCD WHERE (([EMPCD] = @Original_EMPCD) AND ([EMPDESCR] = @Original_EMPDESCR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([NEMPCD] = @Original_NEMPCD) AND ([EMPCD_B] = @Original_EMPCD_B) AND ([FORMAL] = @Original_FORMAL) AND ([OLDEMPCD] = @Original_OLDEMPCD));
SELECT EMPCD, EMPDESCR, KEY_DATE, KEY_MAN, NEMPCD, EMPCD_B, FORMAL, OLDEMPCD FROM EMPCD WHERE (EMPCD = @EMPCD)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPDESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPDESCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD_B", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD_B", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORMAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDEMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPDESCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPDESCR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD_B", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD_B", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORMAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORMAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDEMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDEMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          EMPCD, EMPDESCR, KEY_DATE, KEY_MAN, NEMPCD, EMPCD_B, FORMAL, OLDE" +
                "MPCD\r\nFROM              EMPCD";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(BaseDS.EMPCDDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual BaseDS.EMPCDDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            BaseDS.EMPCDDataTable dataTable = new BaseDS.EMPCDDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS.EMPCDDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(BaseDS dataSet) {
            return this.Adapter.Update(dataSet, "EMPCD");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_EMPCD, string Original_EMPDESCR, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_NEMPCD, string Original_EMPCD_B, bool Original_FORMAL, string Original_OLDEMPCD) {
            if ((Original_EMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_EMPCD));
            }
            if ((Original_EMPDESCR == null)) {
                throw new global::System.ArgumentNullException("Original_EMPDESCR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_EMPDESCR));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_NEMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_NEMPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_NEMPCD));
            }
            if ((Original_EMPCD_B == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD_B");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_EMPCD_B));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_FORMAL));
            if ((Original_OLDEMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_OLDEMPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_OLDEMPCD));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string EMPCD, string EMPDESCR, System.DateTime KEY_DATE, string KEY_MAN, string NEMPCD, string EMPCD_B, bool FORMAL, string OLDEMPCD) {
            if ((EMPCD == null)) {
                throw new global::System.ArgumentNullException("EMPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(EMPCD));
            }
            if ((EMPDESCR == null)) {
                throw new global::System.ArgumentNullException("EMPDESCR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(EMPDESCR));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            if ((NEMPCD == null)) {
                throw new global::System.ArgumentNullException("NEMPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NEMPCD));
            }
            if ((EMPCD_B == null)) {
                throw new global::System.ArgumentNullException("EMPCD_B");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(EMPCD_B));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(FORMAL));
            if ((OLDEMPCD == null)) {
                throw new global::System.ArgumentNullException("OLDEMPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(OLDEMPCD));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string EMPCD, 
                    string EMPDESCR, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string NEMPCD, 
                    string EMPCD_B, 
                    bool FORMAL, 
                    string OLDEMPCD, 
                    string Original_EMPCD, 
                    string Original_EMPDESCR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_NEMPCD, 
                    string Original_EMPCD_B, 
                    bool Original_FORMAL, 
                    string Original_OLDEMPCD) {
            if ((EMPCD == null)) {
                throw new global::System.ArgumentNullException("EMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(EMPCD));
            }
            if ((EMPDESCR == null)) {
                throw new global::System.ArgumentNullException("EMPDESCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(EMPDESCR));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            if ((NEMPCD == null)) {
                throw new global::System.ArgumentNullException("NEMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NEMPCD));
            }
            if ((EMPCD_B == null)) {
                throw new global::System.ArgumentNullException("EMPCD_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(EMPCD_B));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(FORMAL));
            if ((OLDEMPCD == null)) {
                throw new global::System.ArgumentNullException("OLDEMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(OLDEMPCD));
            }
            if ((Original_EMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_EMPCD));
            }
            if ((Original_EMPDESCR == null)) {
                throw new global::System.ArgumentNullException("Original_EMPDESCR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_EMPDESCR));
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_NEMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_NEMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_NEMPCD));
            }
            if ((Original_EMPCD_B == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD_B");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_EMPCD_B));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((bool)(Original_FORMAL));
            if ((Original_OLDEMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_OLDEMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_OLDEMPCD));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string EMPDESCR, System.DateTime KEY_DATE, string KEY_MAN, string NEMPCD, string EMPCD_B, bool FORMAL, string OLDEMPCD, string Original_EMPCD, string Original_EMPDESCR, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_NEMPCD, string Original_EMPCD_B, bool Original_FORMAL, string Original_OLDEMPCD) {
            return this.Update(Original_EMPCD, EMPDESCR, KEY_DATE, KEY_MAN, NEMPCD, EMPCD_B, FORMAL, OLDEMPCD, Original_EMPCD, Original_EMPDESCR, Original_KEY_DATE, Original_KEY_MAN, Original_NEMPCD, Original_EMPCD_B, Original_FORMAL, Original_OLDEMPCD);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DEPTTableAdapter _dEPTTableAdapter;
        
        private COMPTableAdapter _cOMPTableAdapter;
        
        private FAMILYTableAdapter _fAMILYTableAdapter;
        
        private JOBLTableAdapter _jOBLTableAdapter;
        
        private EMPCDTableAdapter _eMPCDTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DEPTTableAdapter DEPTTableAdapter {
            get {
                return this._dEPTTableAdapter;
            }
            set {
                this._dEPTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public COMPTableAdapter COMPTableAdapter {
            get {
                return this._cOMPTableAdapter;
            }
            set {
                this._cOMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FAMILYTableAdapter FAMILYTableAdapter {
            get {
                return this._fAMILYTableAdapter;
            }
            set {
                this._fAMILYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JOBLTableAdapter JOBLTableAdapter {
            get {
                return this._jOBLTableAdapter;
            }
            set {
                this._jOBLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public EMPCDTableAdapter EMPCDTableAdapter {
            get {
                return this._eMPCDTableAdapter;
            }
            set {
                this._eMPCDTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._dEPTTableAdapter != null) 
                            && (this._dEPTTableAdapter.Connection != null))) {
                    return this._dEPTTableAdapter.Connection;
                }
                if (((this._cOMPTableAdapter != null) 
                            && (this._cOMPTableAdapter.Connection != null))) {
                    return this._cOMPTableAdapter.Connection;
                }
                if (((this._fAMILYTableAdapter != null) 
                            && (this._fAMILYTableAdapter.Connection != null))) {
                    return this._fAMILYTableAdapter.Connection;
                }
                if (((this._jOBLTableAdapter != null) 
                            && (this._jOBLTableAdapter.Connection != null))) {
                    return this._jOBLTableAdapter.Connection;
                }
                if (((this._eMPCDTableAdapter != null) 
                            && (this._eMPCDTableAdapter.Connection != null))) {
                    return this._eMPCDTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._dEPTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cOMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fAMILYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jOBLTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._eMPCDTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(BaseDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cOMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.COMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cOMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._jOBLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.JOBL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jOBLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._eMPCDTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.EMPCD.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._eMPCDTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(BaseDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cOMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.COMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cOMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._jOBLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.JOBL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jOBLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._eMPCDTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.EMPCD.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._eMPCDTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(BaseDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._eMPCDTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.EMPCD.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._eMPCDTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jOBLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.JOBL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jOBLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cOMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.COMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cOMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(BaseDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._dEPTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._cOMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cOMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._fAMILYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fAMILYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._jOBLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jOBLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._eMPCDTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._eMPCDTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._dEPTTableAdapter != null)) {
                    revertConnections.Add(this._dEPTTableAdapter, this._dEPTTableAdapter.Connection);
                    this._dEPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dEPTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPTTableAdapter.Adapter);
                    }
                }
                if ((this._cOMPTableAdapter != null)) {
                    revertConnections.Add(this._cOMPTableAdapter, this._cOMPTableAdapter.Connection);
                    this._cOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cOMPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cOMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cOMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cOMPTableAdapter.Adapter);
                    }
                }
                if ((this._fAMILYTableAdapter != null)) {
                    revertConnections.Add(this._fAMILYTableAdapter, this._fAMILYTableAdapter.Connection);
                    this._fAMILYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fAMILYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fAMILYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fAMILYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fAMILYTableAdapter.Adapter);
                    }
                }
                if ((this._jOBLTableAdapter != null)) {
                    revertConnections.Add(this._jOBLTableAdapter, this._jOBLTableAdapter.Connection);
                    this._jOBLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._jOBLTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._jOBLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jOBLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jOBLTableAdapter.Adapter);
                    }
                }
                if ((this._eMPCDTableAdapter != null)) {
                    revertConnections.Add(this._eMPCDTableAdapter, this._eMPCDTableAdapter.Connection);
                    this._eMPCDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._eMPCDTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._eMPCDTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._eMPCDTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._eMPCDTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._dEPTTableAdapter != null)) {
                    this._dEPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dEPTTableAdapter]));
                    this._dEPTTableAdapter.Transaction = null;
                }
                if ((this._cOMPTableAdapter != null)) {
                    this._cOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cOMPTableAdapter]));
                    this._cOMPTableAdapter.Transaction = null;
                }
                if ((this._fAMILYTableAdapter != null)) {
                    this._fAMILYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fAMILYTableAdapter]));
                    this._fAMILYTableAdapter.Transaction = null;
                }
                if ((this._jOBLTableAdapter != null)) {
                    this._jOBLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._jOBLTableAdapter]));
                    this._jOBLTableAdapter.Transaction = null;
                }
                if ((this._eMPCDTableAdapter != null)) {
                    this._eMPCDTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._eMPCDTableAdapter]));
                    this._eMPCDTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591