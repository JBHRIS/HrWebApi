//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JBHR.Ins {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("extDS")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class extDS : global::System.Data.DataSet {
        
        private INSGRLVDataTable tableINSGRLV;
        
        private INSGRPDataTable tableINSGRP;
        
        private SALCODEDataTable tableSALCODE;
        
        private ROTEDataTable tableROTE;
        
        private FAMILYDataTable tableFAMILY;
        
        private DEPTDataTable tableDEPT;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public extDS() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected extDS(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["INSGRLV"] != null)) {
                    base.Tables.Add(new INSGRLVDataTable(ds.Tables["INSGRLV"]));
                }
                if ((ds.Tables["INSGRP"] != null)) {
                    base.Tables.Add(new INSGRPDataTable(ds.Tables["INSGRP"]));
                }
                if ((ds.Tables["SALCODE"] != null)) {
                    base.Tables.Add(new SALCODEDataTable(ds.Tables["SALCODE"]));
                }
                if ((ds.Tables["ROTE"] != null)) {
                    base.Tables.Add(new ROTEDataTable(ds.Tables["ROTE"]));
                }
                if ((ds.Tables["FAMILY"] != null)) {
                    base.Tables.Add(new FAMILYDataTable(ds.Tables["FAMILY"]));
                }
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSGRLVDataTable INSGRLV {
            get {
                return this.tableINSGRLV;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public INSGRPDataTable INSGRP {
            get {
                return this.tableINSGRP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALCODEDataTable SALCODE {
            get {
                return this.tableSALCODE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ROTEDataTable ROTE {
            get {
                return this.tableROTE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FAMILYDataTable FAMILY {
            get {
                return this.tableFAMILY;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPTDataTable DEPT {
            get {
                return this.tableDEPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            extDS cln = ((extDS)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["INSGRLV"] != null)) {
                    base.Tables.Add(new INSGRLVDataTable(ds.Tables["INSGRLV"]));
                }
                if ((ds.Tables["INSGRP"] != null)) {
                    base.Tables.Add(new INSGRPDataTable(ds.Tables["INSGRP"]));
                }
                if ((ds.Tables["SALCODE"] != null)) {
                    base.Tables.Add(new SALCODEDataTable(ds.Tables["SALCODE"]));
                }
                if ((ds.Tables["ROTE"] != null)) {
                    base.Tables.Add(new ROTEDataTable(ds.Tables["ROTE"]));
                }
                if ((ds.Tables["FAMILY"] != null)) {
                    base.Tables.Add(new FAMILYDataTable(ds.Tables["FAMILY"]));
                }
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableINSGRLV = ((INSGRLVDataTable)(base.Tables["INSGRLV"]));
            if ((initTable == true)) {
                if ((this.tableINSGRLV != null)) {
                    this.tableINSGRLV.InitVars();
                }
            }
            this.tableINSGRP = ((INSGRPDataTable)(base.Tables["INSGRP"]));
            if ((initTable == true)) {
                if ((this.tableINSGRP != null)) {
                    this.tableINSGRP.InitVars();
                }
            }
            this.tableSALCODE = ((SALCODEDataTable)(base.Tables["SALCODE"]));
            if ((initTable == true)) {
                if ((this.tableSALCODE != null)) {
                    this.tableSALCODE.InitVars();
                }
            }
            this.tableROTE = ((ROTEDataTable)(base.Tables["ROTE"]));
            if ((initTable == true)) {
                if ((this.tableROTE != null)) {
                    this.tableROTE.InitVars();
                }
            }
            this.tableFAMILY = ((FAMILYDataTable)(base.Tables["FAMILY"]));
            if ((initTable == true)) {
                if ((this.tableFAMILY != null)) {
                    this.tableFAMILY.InitVars();
                }
            }
            this.tableDEPT = ((DEPTDataTable)(base.Tables["DEPT"]));
            if ((initTable == true)) {
                if ((this.tableDEPT != null)) {
                    this.tableDEPT.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "extDS";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/extDS.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("zh-TW");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableINSGRLV = new INSGRLVDataTable();
            base.Tables.Add(this.tableINSGRLV);
            this.tableINSGRP = new INSGRPDataTable();
            base.Tables.Add(this.tableINSGRP);
            this.tableSALCODE = new SALCODEDataTable();
            base.Tables.Add(this.tableSALCODE);
            this.tableROTE = new ROTEDataTable();
            base.Tables.Add(this.tableROTE);
            this.tableFAMILY = new FAMILYDataTable();
            base.Tables.Add(this.tableFAMILY);
            this.tableDEPT = new DEPTDataTable();
            base.Tables.Add(this.tableDEPT);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeINSGRLV() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeINSGRP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeSALCODE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeROTE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeFAMILY() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeDEPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            extDS ds = new extDS();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void INSGRLVRowChangeEventHandler(object sender, INSGRLVRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void INSGRPRowChangeEventHandler(object sender, INSGRPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void SALCODERowChangeEventHandler(object sender, SALCODERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ROTERowChangeEventHandler(object sender, ROTERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void FAMILYRowChangeEventHandler(object sender, FAMILYRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void DEPTRowChangeEventHandler(object sender, DEPTRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSGRLVDataTable : global::System.Data.TypedTableBase<INSGRLVRow> {
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnB_AMT;
            
            private global::System.Data.DataColumn columnE_AMT;
            
            private global::System.Data.DataColumn columnEXPA;
            
            private global::System.Data.DataColumn columnEXPB;
            
            private global::System.Data.DataColumn columnEXPC;
            
            private global::System.Data.DataColumn columnEXPD;
            
            private global::System.Data.DataColumn columnEXTA;
            
            private global::System.Data.DataColumn columnEXTB;
            
            private global::System.Data.DataColumn columnEXTC;
            
            private global::System.Data.DataColumn columnEXTD;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnPLAN_NO;
            
            private global::System.Data.DataColumn columnPLAN_NO_DISP;
            
            private global::System.Data.DataColumn columnACCI_AMT;
            
            private global::System.Data.DataColumn columnCOM_EXPA;
            
            private global::System.Data.DataColumn columnCOM_EXPB;
            
            private global::System.Data.DataColumn columnCOM_EXPC;
            
            private global::System.Data.DataColumn columnCOM_EXPD;
            
            private global::System.Data.DataColumn columnCOM_EXTA;
            
            private global::System.Data.DataColumn columnCOM_EXTB;
            
            private global::System.Data.DataColumn columnCOM_EXTC;
            
            private global::System.Data.DataColumn columnCOM_EXTD;
            
            private global::System.Data.DataColumn columnEXP_AMT;
            
            private global::System.Data.DataColumn columnEXT_AMT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRLVDataTable() {
                this.TableName = "INSGRLV";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal INSGRLVDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected INSGRLVDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn B_AMTColumn {
                get {
                    return this.columnB_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn E_AMTColumn {
                get {
                    return this.columnE_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPAColumn {
                get {
                    return this.columnEXPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPBColumn {
                get {
                    return this.columnEXPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPCColumn {
                get {
                    return this.columnEXPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXPDColumn {
                get {
                    return this.columnEXPD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXTAColumn {
                get {
                    return this.columnEXTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXTBColumn {
                get {
                    return this.columnEXTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXTCColumn {
                get {
                    return this.columnEXTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXTDColumn {
                get {
                    return this.columnEXTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PLAN_NOColumn {
                get {
                    return this.columnPLAN_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PLAN_NO_DISPColumn {
                get {
                    return this.columnPLAN_NO_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCI_AMTColumn {
                get {
                    return this.columnACCI_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXPAColumn {
                get {
                    return this.columnCOM_EXPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXPBColumn {
                get {
                    return this.columnCOM_EXPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXPCColumn {
                get {
                    return this.columnCOM_EXPC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXPDColumn {
                get {
                    return this.columnCOM_EXPD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXTAColumn {
                get {
                    return this.columnCOM_EXTA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXTBColumn {
                get {
                    return this.columnCOM_EXTB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXTCColumn {
                get {
                    return this.columnCOM_EXTC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COM_EXTDColumn {
                get {
                    return this.columnCOM_EXTD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP_AMTColumn {
                get {
                    return this.columnEXP_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXT_AMTColumn {
                get {
                    return this.columnEXT_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRLVRow this[int index] {
                get {
                    return ((INSGRLVRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRLVRowChangeEventHandler INSGRLVRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddINSGRLVRow(INSGRLVRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRLVRow AddINSGRLVRow(
                        decimal AMT, 
                        decimal B_AMT, 
                        decimal E_AMT, 
                        decimal EXPA, 
                        decimal EXPB, 
                        decimal EXPC, 
                        decimal EXPD, 
                        decimal EXTA, 
                        decimal EXTB, 
                        decimal EXTC, 
                        decimal EXTD, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string PLAN_NO, 
                        string PLAN_NO_DISP, 
                        decimal ACCI_AMT, 
                        decimal COM_EXPA, 
                        decimal COM_EXPB, 
                        decimal COM_EXPC, 
                        decimal COM_EXPD, 
                        decimal COM_EXTA, 
                        decimal COM_EXTB, 
                        decimal COM_EXTC, 
                        decimal COM_EXTD, 
                        decimal EXP_AMT, 
                        decimal EXT_AMT) {
                INSGRLVRow rowINSGRLVRow = ((INSGRLVRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        AMT,
                        B_AMT,
                        E_AMT,
                        EXPA,
                        EXPB,
                        EXPC,
                        EXPD,
                        EXTA,
                        EXTB,
                        EXTC,
                        EXTD,
                        KEY_MAN,
                        KEY_DATE,
                        PLAN_NO,
                        PLAN_NO_DISP,
                        ACCI_AMT,
                        COM_EXPA,
                        COM_EXPB,
                        COM_EXPC,
                        COM_EXPD,
                        COM_EXTA,
                        COM_EXTB,
                        COM_EXTC,
                        COM_EXTD,
                        EXP_AMT,
                        EXT_AMT};
                rowINSGRLVRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSGRLVRow);
                return rowINSGRLVRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRLVRow FindByPLAN_NO(string PLAN_NO) {
                return ((INSGRLVRow)(this.Rows.Find(new object[] {
                            PLAN_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSGRLVDataTable cln = ((INSGRLVDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSGRLVDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnAMT = base.Columns["AMT"];
                this.columnB_AMT = base.Columns["B_AMT"];
                this.columnE_AMT = base.Columns["E_AMT"];
                this.columnEXPA = base.Columns["EXPA"];
                this.columnEXPB = base.Columns["EXPB"];
                this.columnEXPC = base.Columns["EXPC"];
                this.columnEXPD = base.Columns["EXPD"];
                this.columnEXTA = base.Columns["EXTA"];
                this.columnEXTB = base.Columns["EXTB"];
                this.columnEXTC = base.Columns["EXTC"];
                this.columnEXTD = base.Columns["EXTD"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnPLAN_NO = base.Columns["PLAN_NO"];
                this.columnPLAN_NO_DISP = base.Columns["PLAN_NO_DISP"];
                this.columnACCI_AMT = base.Columns["ACCI_AMT"];
                this.columnCOM_EXPA = base.Columns["COM_EXPA"];
                this.columnCOM_EXPB = base.Columns["COM_EXPB"];
                this.columnCOM_EXPC = base.Columns["COM_EXPC"];
                this.columnCOM_EXPD = base.Columns["COM_EXPD"];
                this.columnCOM_EXTA = base.Columns["COM_EXTA"];
                this.columnCOM_EXTB = base.Columns["COM_EXTB"];
                this.columnCOM_EXTC = base.Columns["COM_EXTC"];
                this.columnCOM_EXTD = base.Columns["COM_EXTD"];
                this.columnEXP_AMT = base.Columns["EXP_AMT"];
                this.columnEXT_AMT = base.Columns["EXT_AMT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnB_AMT = new global::System.Data.DataColumn("B_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_AMT);
                this.columnE_AMT = new global::System.Data.DataColumn("E_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_AMT);
                this.columnEXPA = new global::System.Data.DataColumn("EXPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPA);
                this.columnEXPB = new global::System.Data.DataColumn("EXPB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPB);
                this.columnEXPC = new global::System.Data.DataColumn("EXPC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPC);
                this.columnEXPD = new global::System.Data.DataColumn("EXPD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXPD);
                this.columnEXTA = new global::System.Data.DataColumn("EXTA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTA);
                this.columnEXTB = new global::System.Data.DataColumn("EXTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTB);
                this.columnEXTC = new global::System.Data.DataColumn("EXTC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTC);
                this.columnEXTD = new global::System.Data.DataColumn("EXTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXTD);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnPLAN_NO = new global::System.Data.DataColumn("PLAN_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAN_NO);
                this.columnPLAN_NO_DISP = new global::System.Data.DataColumn("PLAN_NO_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPLAN_NO_DISP);
                this.columnACCI_AMT = new global::System.Data.DataColumn("ACCI_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCI_AMT);
                this.columnCOM_EXPA = new global::System.Data.DataColumn("COM_EXPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPA);
                this.columnCOM_EXPB = new global::System.Data.DataColumn("COM_EXPB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPB);
                this.columnCOM_EXPC = new global::System.Data.DataColumn("COM_EXPC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPC);
                this.columnCOM_EXPD = new global::System.Data.DataColumn("COM_EXPD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXPD);
                this.columnCOM_EXTA = new global::System.Data.DataColumn("COM_EXTA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTA);
                this.columnCOM_EXTB = new global::System.Data.DataColumn("COM_EXTB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTB);
                this.columnCOM_EXTC = new global::System.Data.DataColumn("COM_EXTC", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTC);
                this.columnCOM_EXTD = new global::System.Data.DataColumn("COM_EXTD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOM_EXTD);
                this.columnEXP_AMT = new global::System.Data.DataColumn("EXP_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP_AMT);
                this.columnEXT_AMT = new global::System.Data.DataColumn("EXT_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXT_AMT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPLAN_NO}, true));
                this.columnAMT.AllowDBNull = false;
                this.columnAMT.Caption = "定期壽險保額";
                this.columnB_AMT.AllowDBNull = false;
                this.columnB_AMT.Caption = "薪資起金額";
                this.columnE_AMT.AllowDBNull = false;
                this.columnE_AMT.Caption = "薪資迄金額";
                this.columnEXPA.AllowDBNull = false;
                this.columnEXPA.Caption = "住院醫療費用員工負擔Ａ";
                this.columnEXPB.AllowDBNull = false;
                this.columnEXPB.Caption = "住院醫療費用員工負擔B";
                this.columnEXPC.AllowDBNull = false;
                this.columnEXPC.Caption = "住院醫療費用員工負擔C";
                this.columnEXPD.AllowDBNull = false;
                this.columnEXPD.Caption = "住院醫療費用員工負擔D";
                this.columnEXTA.AllowDBNull = false;
                this.columnEXTA.Caption = "意外醫療費用員工負擔A";
                this.columnEXTB.AllowDBNull = false;
                this.columnEXTB.Caption = "意外醫療費用員工負擔B";
                this.columnEXTC.AllowDBNull = false;
                this.columnEXTC.Caption = "意外醫療費用員工負擔C";
                this.columnEXTD.AllowDBNull = false;
                this.columnEXTD.Caption = "意外醫療費用員工負擔D";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnPLAN_NO.AllowDBNull = false;
                this.columnPLAN_NO.Unique = true;
                this.columnPLAN_NO.Caption = "計畫別";
                this.columnPLAN_NO.MaxLength = 50;
                this.columnPLAN_NO_DISP.AllowDBNull = false;
                this.columnPLAN_NO_DISP.Caption = "計畫別";
                this.columnPLAN_NO_DISP.MaxLength = 50;
                this.columnACCI_AMT.AllowDBNull = false;
                this.columnACCI_AMT.Caption = "意外保險保額";
                this.columnCOM_EXPA.AllowDBNull = false;
                this.columnCOM_EXPA.Caption = "住院醫療費用公司負擔A";
                this.columnCOM_EXPB.AllowDBNull = false;
                this.columnCOM_EXPB.Caption = "住院醫療費用公司負擔B";
                this.columnCOM_EXPC.AllowDBNull = false;
                this.columnCOM_EXPC.Caption = "住院醫療費用公司負擔C";
                this.columnCOM_EXPD.AllowDBNull = false;
                this.columnCOM_EXPD.Caption = "住院醫療費用公司負擔D";
                this.columnCOM_EXTA.AllowDBNull = false;
                this.columnCOM_EXTA.Caption = "意外醫療費用公司負擔A";
                this.columnCOM_EXTB.AllowDBNull = false;
                this.columnCOM_EXTB.Caption = "意外醫療費用公司負擔B";
                this.columnCOM_EXTC.AllowDBNull = false;
                this.columnCOM_EXTC.Caption = "意外醫療費用公司負擔C";
                this.columnCOM_EXTD.AllowDBNull = false;
                this.columnCOM_EXTD.Caption = "意外醫療費用公司負擔D";
                this.columnEXP_AMT.AllowDBNull = false;
                this.columnEXP_AMT.Caption = "住院醫療";
                this.columnEXT_AMT.AllowDBNull = false;
                this.columnEXT_AMT.Caption = "意外醫療";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRLVRow NewINSGRLVRow() {
                return ((INSGRLVRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSGRLVRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSGRLVRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSGRLVRowChanged != null)) {
                    this.INSGRLVRowChanged(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSGRLVRowChanging != null)) {
                    this.INSGRLVRowChanging(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSGRLVRowDeleted != null)) {
                    this.INSGRLVRowDeleted(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSGRLVRowDeleting != null)) {
                    this.INSGRLVRowDeleting(this, new INSGRLVRowChangeEvent(((INSGRLVRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveINSGRLVRow(INSGRLVRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                extDS ds = new extDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSGRLVDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class INSGRPDataTable : global::System.Data.TypedTableBase<INSGRPRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnIN_DATE;
            
            private global::System.Data.DataColumn columnOUT_DATE;
            
            private global::System.Data.DataColumn columnCODE;
            
            private global::System.Data.DataColumn columnAMT1;
            
            private global::System.Data.DataColumn columnEXP1;
            
            private global::System.Data.DataColumn columnCOP1;
            
            private global::System.Data.DataColumn columnAMT2;
            
            private global::System.Data.DataColumn columnEXP2;
            
            private global::System.Data.DataColumn columnCOP2;
            
            private global::System.Data.DataColumn columnAMT3;
            
            private global::System.Data.DataColumn columnEXP3;
            
            private global::System.Data.DataColumn columnCOP3;
            
            private global::System.Data.DataColumn columnAMT4;
            
            private global::System.Data.DataColumn columnEXP4;
            
            private global::System.Data.DataColumn columnCOP4;
            
            private global::System.Data.DataColumn columnAMT5;
            
            private global::System.Data.DataColumn columnEXP5;
            
            private global::System.Data.DataColumn columnCOP5;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnAMT6;
            
            private global::System.Data.DataColumn columnTOTEXP;
            
            private global::System.Data.DataColumn columnCOPEXP;
            
            private global::System.Data.DataColumn columnSEQ;
            
            private global::System.Data.DataColumn columnEXP3CAL;
            
            private global::System.Data.DataColumn columnEXP1CAL;
            
            private global::System.Data.DataColumn columnEXP2CAL;
            
            private global::System.Data.DataColumn columnGRP_TYPE;
            
            private global::System.Data.DataColumn columnPAN;
            
            private global::System.Data.DataColumn columnEXP6;
            
            private global::System.Data.DataColumn columnCOP6;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnBIRDT;
            
            private global::System.Data.DataColumn columnIDNO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRPDataTable() {
                this.TableName = "INSGRP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal INSGRPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected INSGRPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IN_DATEColumn {
                get {
                    return this.columnIN_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OUT_DATEColumn {
                get {
                    return this.columnOUT_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CODEColumn {
                get {
                    return this.columnCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT1Column {
                get {
                    return this.columnAMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP1Column {
                get {
                    return this.columnEXP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COP1Column {
                get {
                    return this.columnCOP1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT2Column {
                get {
                    return this.columnAMT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP2Column {
                get {
                    return this.columnEXP2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COP2Column {
                get {
                    return this.columnCOP2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT3Column {
                get {
                    return this.columnAMT3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP3Column {
                get {
                    return this.columnEXP3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COP3Column {
                get {
                    return this.columnCOP3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT4Column {
                get {
                    return this.columnAMT4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP4Column {
                get {
                    return this.columnEXP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COP4Column {
                get {
                    return this.columnCOP4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT5Column {
                get {
                    return this.columnAMT5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP5Column {
                get {
                    return this.columnEXP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COP5Column {
                get {
                    return this.columnCOP5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMT6Column {
                get {
                    return this.columnAMT6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TOTEXPColumn {
                get {
                    return this.columnTOTEXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COPEXPColumn {
                get {
                    return this.columnCOPEXP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SEQColumn {
                get {
                    return this.columnSEQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP3CALColumn {
                get {
                    return this.columnEXP3CAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP1CALColumn {
                get {
                    return this.columnEXP1CAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP2CALColumn {
                get {
                    return this.columnEXP2CAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GRP_TYPEColumn {
                get {
                    return this.columnGRP_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PANColumn {
                get {
                    return this.columnPAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EXP6Column {
                get {
                    return this.columnEXP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COP6Column {
                get {
                    return this.columnCOP6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BIRDTColumn {
                get {
                    return this.columnBIRDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn IDNOColumn {
                get {
                    return this.columnIDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRPRow this[int index] {
                get {
                    return ((INSGRPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event INSGRPRowChangeEventHandler INSGRPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddINSGRPRow(INSGRPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRPRow AddINSGRPRow(
                        string NOBR, 
                        string FA_IDNO, 
                        System.DateTime IN_DATE, 
                        System.DateTime OUT_DATE, 
                        string CODE, 
                        decimal AMT1, 
                        decimal EXP1, 
                        decimal COP1, 
                        decimal AMT2, 
                        decimal EXP2, 
                        decimal COP2, 
                        decimal AMT3, 
                        decimal EXP3, 
                        decimal COP3, 
                        decimal AMT4, 
                        decimal EXP4, 
                        decimal COP4, 
                        decimal AMT5, 
                        decimal EXP5, 
                        decimal COP5, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        decimal AMT6, 
                        decimal TOTEXP, 
                        decimal COPEXP, 
                        string SEQ, 
                        bool EXP3CAL, 
                        bool EXP1CAL, 
                        bool EXP2CAL, 
                        string GRP_TYPE, 
                        string PAN, 
                        decimal EXP6, 
                        decimal COP6, 
                        string NAME_C, 
                        System.DateTime BIRDT, 
                        string IDNO) {
                INSGRPRow rowINSGRPRow = ((INSGRPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        FA_IDNO,
                        IN_DATE,
                        OUT_DATE,
                        CODE,
                        AMT1,
                        EXP1,
                        COP1,
                        AMT2,
                        EXP2,
                        COP2,
                        AMT3,
                        EXP3,
                        COP3,
                        AMT4,
                        EXP4,
                        COP4,
                        AMT5,
                        EXP5,
                        COP5,
                        KEY_MAN,
                        KEY_DATE,
                        AMT6,
                        TOTEXP,
                        COPEXP,
                        SEQ,
                        EXP3CAL,
                        EXP1CAL,
                        EXP2CAL,
                        GRP_TYPE,
                        PAN,
                        EXP6,
                        COP6,
                        NAME_C,
                        BIRDT,
                        IDNO};
                rowINSGRPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowINSGRPRow);
                return rowINSGRPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRPRow FindByNOBRFA_IDNOIN_DATEOUT_DATE(string NOBR, string FA_IDNO, System.DateTime IN_DATE, System.DateTime OUT_DATE) {
                return ((INSGRPRow)(this.Rows.Find(new object[] {
                            NOBR,
                            FA_IDNO,
                            IN_DATE,
                            OUT_DATE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                INSGRPDataTable cln = ((INSGRPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new INSGRPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnIN_DATE = base.Columns["IN_DATE"];
                this.columnOUT_DATE = base.Columns["OUT_DATE"];
                this.columnCODE = base.Columns["CODE"];
                this.columnAMT1 = base.Columns["AMT1"];
                this.columnEXP1 = base.Columns["EXP1"];
                this.columnCOP1 = base.Columns["COP1"];
                this.columnAMT2 = base.Columns["AMT2"];
                this.columnEXP2 = base.Columns["EXP2"];
                this.columnCOP2 = base.Columns["COP2"];
                this.columnAMT3 = base.Columns["AMT3"];
                this.columnEXP3 = base.Columns["EXP3"];
                this.columnCOP3 = base.Columns["COP3"];
                this.columnAMT4 = base.Columns["AMT4"];
                this.columnEXP4 = base.Columns["EXP4"];
                this.columnCOP4 = base.Columns["COP4"];
                this.columnAMT5 = base.Columns["AMT5"];
                this.columnEXP5 = base.Columns["EXP5"];
                this.columnCOP5 = base.Columns["COP5"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnAMT6 = base.Columns["AMT6"];
                this.columnTOTEXP = base.Columns["TOTEXP"];
                this.columnCOPEXP = base.Columns["COPEXP"];
                this.columnSEQ = base.Columns["SEQ"];
                this.columnEXP3CAL = base.Columns["EXP3CAL"];
                this.columnEXP1CAL = base.Columns["EXP1CAL"];
                this.columnEXP2CAL = base.Columns["EXP2CAL"];
                this.columnGRP_TYPE = base.Columns["GRP_TYPE"];
                this.columnPAN = base.Columns["PAN"];
                this.columnEXP6 = base.Columns["EXP6"];
                this.columnCOP6 = base.Columns["COP6"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnBIRDT = base.Columns["BIRDT"];
                this.columnIDNO = base.Columns["IDNO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnIN_DATE = new global::System.Data.DataColumn("IN_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIN_DATE);
                this.columnOUT_DATE = new global::System.Data.DataColumn("OUT_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUT_DATE);
                this.columnCODE = new global::System.Data.DataColumn("CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODE);
                this.columnAMT1 = new global::System.Data.DataColumn("AMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT1);
                this.columnEXP1 = new global::System.Data.DataColumn("EXP1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP1);
                this.columnCOP1 = new global::System.Data.DataColumn("COP1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP1);
                this.columnAMT2 = new global::System.Data.DataColumn("AMT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT2);
                this.columnEXP2 = new global::System.Data.DataColumn("EXP2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP2);
                this.columnCOP2 = new global::System.Data.DataColumn("COP2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP2);
                this.columnAMT3 = new global::System.Data.DataColumn("AMT3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT3);
                this.columnEXP3 = new global::System.Data.DataColumn("EXP3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP3);
                this.columnCOP3 = new global::System.Data.DataColumn("COP3", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP3);
                this.columnAMT4 = new global::System.Data.DataColumn("AMT4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT4);
                this.columnEXP4 = new global::System.Data.DataColumn("EXP4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP4);
                this.columnCOP4 = new global::System.Data.DataColumn("COP4", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP4);
                this.columnAMT5 = new global::System.Data.DataColumn("AMT5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT5);
                this.columnEXP5 = new global::System.Data.DataColumn("EXP5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP5);
                this.columnCOP5 = new global::System.Data.DataColumn("COP5", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP5);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnAMT6 = new global::System.Data.DataColumn("AMT6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT6);
                this.columnTOTEXP = new global::System.Data.DataColumn("TOTEXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTOTEXP);
                this.columnCOPEXP = new global::System.Data.DataColumn("COPEXP", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOPEXP);
                this.columnSEQ = new global::System.Data.DataColumn("SEQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSEQ);
                this.columnEXP3CAL = new global::System.Data.DataColumn("EXP3CAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP3CAL);
                this.columnEXP1CAL = new global::System.Data.DataColumn("EXP1CAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP1CAL);
                this.columnEXP2CAL = new global::System.Data.DataColumn("EXP2CAL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP2CAL);
                this.columnGRP_TYPE = new global::System.Data.DataColumn("GRP_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_TYPE);
                this.columnPAN = new global::System.Data.DataColumn("PAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN);
                this.columnEXP6 = new global::System.Data.DataColumn("EXP6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEXP6);
                this.columnCOP6 = new global::System.Data.DataColumn("COP6", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOP6);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnBIRDT = new global::System.Data.DataColumn("BIRDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBIRDT);
                this.columnIDNO = new global::System.Data.DataColumn("IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDNO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnFA_IDNO,
                                this.columnIN_DATE,
                                this.columnOUT_DATE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.Caption = "眷屬身號";
                this.columnFA_IDNO.MaxLength = 50;
                this.columnIN_DATE.AllowDBNull = false;
                this.columnIN_DATE.Caption = "加保日期";
                this.columnOUT_DATE.AllowDBNull = false;
                this.columnOUT_DATE.Caption = "退保日期";
                this.columnCODE.AllowDBNull = false;
                this.columnCODE.MaxLength = 50;
                this.columnAMT1.AllowDBNull = false;
                this.columnAMT1.Caption = "壽險保額";
                this.columnEXP1.AllowDBNull = false;
                this.columnEXP1.Caption = "壽險個人";
                this.columnCOP1.AllowDBNull = false;
                this.columnCOP1.Caption = "壽險公司";
                this.columnAMT2.AllowDBNull = false;
                this.columnAMT2.Caption = "意外保額";
                this.columnEXP2.AllowDBNull = false;
                this.columnEXP2.Caption = "意外個人";
                this.columnCOP2.AllowDBNull = false;
                this.columnCOP2.Caption = "意外公司";
                this.columnAMT3.AllowDBNull = false;
                this.columnAMT3.Caption = "住院保額";
                this.columnEXP3.AllowDBNull = false;
                this.columnEXP3.Caption = "住院個人";
                this.columnCOP3.AllowDBNull = false;
                this.columnCOP3.Caption = "住院公司";
                this.columnAMT4.AllowDBNull = false;
                this.columnAMT4.Caption = "醫療保額";
                this.columnEXP4.AllowDBNull = false;
                this.columnEXP4.Caption = "意外醫療個人";
                this.columnCOP4.AllowDBNull = false;
                this.columnCOP4.Caption = "意外醫療公司";
                this.columnAMT5.AllowDBNull = false;
                this.columnAMT5.Caption = "職災薪資";
                this.columnEXP5.AllowDBNull = false;
                this.columnCOP5.AllowDBNull = false;
                this.columnCOP5.Caption = "職災公司";
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.Caption = "登錄者";
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_DATE.Caption = "登錄日期";
                this.columnAMT6.AllowDBNull = false;
                this.columnAMT6.Caption = "勞保薪資";
                this.columnTOTEXP.AllowDBNull = false;
                this.columnTOTEXP.Caption = "個人總計";
                this.columnCOPEXP.AllowDBNull = false;
                this.columnCOPEXP.Caption = "公司總計";
                this.columnSEQ.AllowDBNull = false;
                this.columnSEQ.MaxLength = 50;
                this.columnEXP3CAL.AllowDBNull = false;
                this.columnEXP1CAL.AllowDBNull = false;
                this.columnEXP2CAL.AllowDBNull = false;
                this.columnGRP_TYPE.AllowDBNull = false;
                this.columnGRP_TYPE.Caption = "投保類別";
                this.columnGRP_TYPE.MaxLength = 50;
                this.columnPAN.AllowDBNull = false;
                this.columnPAN.Caption = "計畫";
                this.columnPAN.MaxLength = 50;
                this.columnCOP6.Caption = "勞保公司";
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "員工姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnBIRDT.Caption = "出生日期";
                this.columnIDNO.AllowDBNull = false;
                this.columnIDNO.Caption = "身分證號";
                this.columnIDNO.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRPRow NewINSGRPRow() {
                return ((INSGRPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new INSGRPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(INSGRPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.INSGRPRowChanged != null)) {
                    this.INSGRPRowChanged(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.INSGRPRowChanging != null)) {
                    this.INSGRPRowChanging(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.INSGRPRowDeleted != null)) {
                    this.INSGRPRowDeleted(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.INSGRPRowDeleting != null)) {
                    this.INSGRPRowDeleting(this, new INSGRPRowChangeEvent(((INSGRPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveINSGRPRow(INSGRPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                extDS ds = new extDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "INSGRPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALCODEDataTable : global::System.Data.TypedTableBase<SALCODERow> {
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            private global::System.Data.DataColumn columnSAL_ATTR;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnSOS_ID;
            
            private global::System.Data.DataColumn columnWEL;
            
            private global::System.Data.DataColumn columnOT;
            
            private global::System.Data.DataColumn columnMAX_AMT;
            
            private global::System.Data.DataColumn columnMIN_AMT;
            
            private global::System.Data.DataColumn columnCAL_FREQ;
            
            private global::System.Data.DataColumn columnCAL_TYPE;
            
            private global::System.Data.DataColumn columnHRS;
            
            private global::System.Data.DataColumn columnMONTHTYPE;
            
            private global::System.Data.DataColumn columnDEFINEDAYS;
            
            private global::System.Data.DataColumn columnADVPAY;
            
            private global::System.Data.DataColumn columnACCCD;
            
            private global::System.Data.DataColumn columnATT;
            
            private global::System.Data.DataColumn columnDAILY;
            
            private global::System.Data.DataColumn columnRETIRE;
            
            private global::System.Data.DataColumn columnFORBANK;
            
            private global::System.Data.DataColumn columnFORCASH;
            
            private global::System.Data.DataColumn columnNOTFREQ;
            
            private global::System.Data.DataColumn columnTAXRATE;
            
            private global::System.Data.DataColumn columnYEARPAY;
            
            private global::System.Data.DataColumn columnABSPAY;
            
            private global::System.Data.DataColumn columnINSLAB;
            
            private global::System.Data.DataColumn columnLATER;
            
            private global::System.Data.DataColumn columnSAL_ENAME;
            
            private global::System.Data.DataColumn columnOLDRETIRE;
            
            private global::System.Data.DataColumn columnSALBASD1;
            
            private global::System.Data.DataColumn columnSAL_CODE_DISP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODEDataTable() {
                this.TableName = "SALCODE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALCODEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected SALCODEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_ATTRColumn {
                get {
                    return this.columnSAL_ATTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SOS_IDColumn {
                get {
                    return this.columnSOS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WELColumn {
                get {
                    return this.columnWEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTColumn {
                get {
                    return this.columnOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MAX_AMTColumn {
                get {
                    return this.columnMAX_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MIN_AMTColumn {
                get {
                    return this.columnMIN_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CAL_FREQColumn {
                get {
                    return this.columnCAL_FREQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CAL_TYPEColumn {
                get {
                    return this.columnCAL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HRSColumn {
                get {
                    return this.columnHRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MONTHTYPEColumn {
                get {
                    return this.columnMONTHTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEFINEDAYSColumn {
                get {
                    return this.columnDEFINEDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADVPAYColumn {
                get {
                    return this.columnADVPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ACCCDColumn {
                get {
                    return this.columnACCCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ATTColumn {
                get {
                    return this.columnATT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DAILYColumn {
                get {
                    return this.columnDAILY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RETIREColumn {
                get {
                    return this.columnRETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FORBANKColumn {
                get {
                    return this.columnFORBANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FORCASHColumn {
                get {
                    return this.columnFORCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTFREQColumn {
                get {
                    return this.columnNOTFREQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXRATEColumn {
                get {
                    return this.columnTAXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YEARPAYColumn {
                get {
                    return this.columnYEARPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ABSPAYColumn {
                get {
                    return this.columnABSPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn INSLABColumn {
                get {
                    return this.columnINSLAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LATERColumn {
                get {
                    return this.columnLATER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_ENAMEColumn {
                get {
                    return this.columnSAL_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OLDRETIREColumn {
                get {
                    return this.columnOLDRETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SALBASD1Column {
                get {
                    return this.columnSALBASD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SAL_CODE_DISPColumn {
                get {
                    return this.columnSAL_CODE_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow this[int index] {
                get {
                    return ((SALCODERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddSALCODERow(SALCODERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow AddSALCODERow(
                        string SAL_CODE, 
                        string SAL_NAME, 
                        string SAL_ATTR, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string SOS_ID, 
                        bool WEL, 
                        bool OT, 
                        decimal MAX_AMT, 
                        decimal MIN_AMT, 
                        string CAL_FREQ, 
                        string CAL_TYPE, 
                        decimal HRS, 
                        string MONTHTYPE, 
                        decimal DEFINEDAYS, 
                        bool ADVPAY, 
                        string ACCCD, 
                        bool ATT, 
                        bool DAILY, 
                        bool RETIRE, 
                        bool FORBANK, 
                        bool FORCASH, 
                        bool NOTFREQ, 
                        decimal TAXRATE, 
                        bool YEARPAY, 
                        bool ABSPAY, 
                        bool INSLAB, 
                        bool LATER, 
                        string SAL_ENAME, 
                        bool OLDRETIRE, 
                        bool SALBASD1, 
                        string SAL_CODE_DISP) {
                SALCODERow rowSALCODERow = ((SALCODERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SAL_CODE,
                        SAL_NAME,
                        SAL_ATTR,
                        KEY_MAN,
                        KEY_DATE,
                        SOS_ID,
                        WEL,
                        OT,
                        MAX_AMT,
                        MIN_AMT,
                        CAL_FREQ,
                        CAL_TYPE,
                        HRS,
                        MONTHTYPE,
                        DEFINEDAYS,
                        ADVPAY,
                        ACCCD,
                        ATT,
                        DAILY,
                        RETIRE,
                        FORBANK,
                        FORCASH,
                        NOTFREQ,
                        TAXRATE,
                        YEARPAY,
                        ABSPAY,
                        INSLAB,
                        LATER,
                        SAL_ENAME,
                        OLDRETIRE,
                        SALBASD1,
                        SAL_CODE_DISP};
                rowSALCODERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALCODERow);
                return rowSALCODERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow FindBySAL_CODE(string SAL_CODE) {
                return ((SALCODERow)(this.Rows.Find(new object[] {
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALCODEDataTable cln = ((SALCODEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALCODEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
                this.columnSAL_ATTR = base.Columns["SAL_ATTR"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnSOS_ID = base.Columns["SOS_ID"];
                this.columnWEL = base.Columns["WEL"];
                this.columnOT = base.Columns["OT"];
                this.columnMAX_AMT = base.Columns["MAX_AMT"];
                this.columnMIN_AMT = base.Columns["MIN_AMT"];
                this.columnCAL_FREQ = base.Columns["CAL_FREQ"];
                this.columnCAL_TYPE = base.Columns["CAL_TYPE"];
                this.columnHRS = base.Columns["HRS"];
                this.columnMONTHTYPE = base.Columns["MONTHTYPE"];
                this.columnDEFINEDAYS = base.Columns["DEFINEDAYS"];
                this.columnADVPAY = base.Columns["ADVPAY"];
                this.columnACCCD = base.Columns["ACCCD"];
                this.columnATT = base.Columns["ATT"];
                this.columnDAILY = base.Columns["DAILY"];
                this.columnRETIRE = base.Columns["RETIRE"];
                this.columnFORBANK = base.Columns["FORBANK"];
                this.columnFORCASH = base.Columns["FORCASH"];
                this.columnNOTFREQ = base.Columns["NOTFREQ"];
                this.columnTAXRATE = base.Columns["TAXRATE"];
                this.columnYEARPAY = base.Columns["YEARPAY"];
                this.columnABSPAY = base.Columns["ABSPAY"];
                this.columnINSLAB = base.Columns["INSLAB"];
                this.columnLATER = base.Columns["LATER"];
                this.columnSAL_ENAME = base.Columns["SAL_ENAME"];
                this.columnOLDRETIRE = base.Columns["OLDRETIRE"];
                this.columnSALBASD1 = base.Columns["SALBASD1"];
                this.columnSAL_CODE_DISP = base.Columns["SAL_CODE_DISP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.columnSAL_ATTR = new global::System.Data.DataColumn("SAL_ATTR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_ATTR);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnSOS_ID = new global::System.Data.DataColumn("SOS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOS_ID);
                this.columnWEL = new global::System.Data.DataColumn("WEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEL);
                this.columnOT = new global::System.Data.DataColumn("OT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT);
                this.columnMAX_AMT = new global::System.Data.DataColumn("MAX_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_AMT);
                this.columnMIN_AMT = new global::System.Data.DataColumn("MIN_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIN_AMT);
                this.columnCAL_FREQ = new global::System.Data.DataColumn("CAL_FREQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAL_FREQ);
                this.columnCAL_TYPE = new global::System.Data.DataColumn("CAL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAL_TYPE);
                this.columnHRS = new global::System.Data.DataColumn("HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRS);
                this.columnMONTHTYPE = new global::System.Data.DataColumn("MONTHTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTHTYPE);
                this.columnDEFINEDAYS = new global::System.Data.DataColumn("DEFINEDAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFINEDAYS);
                this.columnADVPAY = new global::System.Data.DataColumn("ADVPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADVPAY);
                this.columnACCCD = new global::System.Data.DataColumn("ACCCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCCD);
                this.columnATT = new global::System.Data.DataColumn("ATT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATT);
                this.columnDAILY = new global::System.Data.DataColumn("DAILY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAILY);
                this.columnRETIRE = new global::System.Data.DataColumn("RETIRE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETIRE);
                this.columnFORBANK = new global::System.Data.DataColumn("FORBANK", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORBANK);
                this.columnFORCASH = new global::System.Data.DataColumn("FORCASH", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCASH);
                this.columnNOTFREQ = new global::System.Data.DataColumn("NOTFREQ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTFREQ);
                this.columnTAXRATE = new global::System.Data.DataColumn("TAXRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRATE);
                this.columnYEARPAY = new global::System.Data.DataColumn("YEARPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEARPAY);
                this.columnABSPAY = new global::System.Data.DataColumn("ABSPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABSPAY);
                this.columnINSLAB = new global::System.Data.DataColumn("INSLAB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSLAB);
                this.columnLATER = new global::System.Data.DataColumn("LATER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATER);
                this.columnSAL_ENAME = new global::System.Data.DataColumn("SAL_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_ENAME);
                this.columnOLDRETIRE = new global::System.Data.DataColumn("OLDRETIRE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLDRETIRE);
                this.columnSALBASD1 = new global::System.Data.DataColumn("SALBASD1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALBASD1);
                this.columnSAL_CODE_DISP = new global::System.Data.DataColumn("SAL_CODE_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE_DISP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSAL_CODE}, true));
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Unique = true;
                this.columnSAL_CODE.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.MaxLength = 50;
                this.columnSAL_ATTR.AllowDBNull = false;
                this.columnSAL_ATTR.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnSOS_ID.AllowDBNull = false;
                this.columnSOS_ID.MaxLength = 50;
                this.columnWEL.AllowDBNull = false;
                this.columnOT.AllowDBNull = false;
                this.columnMAX_AMT.AllowDBNull = false;
                this.columnMIN_AMT.AllowDBNull = false;
                this.columnCAL_FREQ.AllowDBNull = false;
                this.columnCAL_FREQ.MaxLength = 50;
                this.columnCAL_TYPE.AllowDBNull = false;
                this.columnCAL_TYPE.MaxLength = 50;
                this.columnHRS.AllowDBNull = false;
                this.columnMONTHTYPE.AllowDBNull = false;
                this.columnMONTHTYPE.MaxLength = 50;
                this.columnDEFINEDAYS.AllowDBNull = false;
                this.columnADVPAY.AllowDBNull = false;
                this.columnACCCD.AllowDBNull = false;
                this.columnACCCD.MaxLength = 50;
                this.columnATT.AllowDBNull = false;
                this.columnDAILY.AllowDBNull = false;
                this.columnRETIRE.AllowDBNull = false;
                this.columnFORBANK.AllowDBNull = false;
                this.columnFORCASH.AllowDBNull = false;
                this.columnNOTFREQ.AllowDBNull = false;
                this.columnTAXRATE.AllowDBNull = false;
                this.columnYEARPAY.AllowDBNull = false;
                this.columnABSPAY.AllowDBNull = false;
                this.columnINSLAB.AllowDBNull = false;
                this.columnLATER.AllowDBNull = false;
                this.columnSAL_ENAME.AllowDBNull = false;
                this.columnSAL_ENAME.MaxLength = 60;
                this.columnOLDRETIRE.AllowDBNull = false;
                this.columnSALBASD1.AllowDBNull = false;
                this.columnSAL_CODE_DISP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow NewSALCODERow() {
                return ((SALCODERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALCODERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALCODERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALCODERowChanged != null)) {
                    this.SALCODERowChanged(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALCODERowChanging != null)) {
                    this.SALCODERowChanging(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALCODERowDeleted != null)) {
                    this.SALCODERowDeleted(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALCODERowDeleting != null)) {
                    this.SALCODERowDeleting(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveSALCODERow(SALCODERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                extDS ds = new extDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALCODEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ROTEDataTable : global::System.Data.TypedTableBase<ROTERow> {
            
            private global::System.Data.DataColumn columnROTE;
            
            private global::System.Data.DataColumn columnROTENAME;
            
            private global::System.Data.DataColumn columnON_TIME;
            
            private global::System.Data.DataColumn columnOFF_TIME;
            
            private global::System.Data.DataColumn columnRES_B_TIME;
            
            private global::System.Data.DataColumn columnRES_E_TIME;
            
            private global::System.Data.DataColumn columnWK_HRS;
            
            private global::System.Data.DataColumn columnDK_HRS;
            
            private global::System.Data.DataColumn columnMO_HRS;
            
            private global::System.Data.DataColumn columnOFFTIME2;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnOVERDAY;
            
            private global::System.Data.DataColumn columnNIGHT;
            
            private global::System.Data.DataColumn columnHOLI_MINS;
            
            private global::System.Data.DataColumn columnWR_HRSA;
            
            private global::System.Data.DataColumn columnWR_HRSB;
            
            private global::System.Data.DataColumn columnFCOLOR;
            
            private global::System.Data.DataColumn columnBCOLOR;
            
            private global::System.Data.DataColumn columnOT;
            
            private global::System.Data.DataColumn columnRES_B1_TIME;
            
            private global::System.Data.DataColumn columnRES_E1_TIME;
            
            private global::System.Data.DataColumn columnRES_B2_TIME;
            
            private global::System.Data.DataColumn columnRES_E2_TIME;
            
            private global::System.Data.DataColumn columnRES_B3_TIME;
            
            private global::System.Data.DataColumn columnRES_E3_TIME;
            
            private global::System.Data.DataColumn columnRES_B4_TIME;
            
            private global::System.Data.DataColumn columnRES_E4_TIME;
            
            private global::System.Data.DataColumn columnYRREST_HRS;
            
            private global::System.Data.DataColumn columnRATE2;
            
            private global::System.Data.DataColumn columnEARAWARD;
            
            private global::System.Data.DataColumn columnFOODSALCD;
            
            private global::System.Data.DataColumn columnFOODAMT;
            
            private global::System.Data.DataColumn columnNIGHTSALCD;
            
            private global::System.Data.DataColumn columnNIGHTAMT;
            
            private global::System.Data.DataColumn columnNIGHTAMT1;
            
            private global::System.Data.DataColumn columnNOTFOOD;
            
            private global::System.Data.DataColumn columnFOODAMT1;
            
            private global::System.Data.DataColumn columnWK_HRSA;
            
            private global::System.Data.DataColumn columnWK_HRSB;
            
            private global::System.Data.DataColumn columnALLLATES;
            
            private global::System.Data.DataColumn columnOT_BEGIN;
            
            private global::System.Data.DataColumn columnDD;
            
            private global::System.Data.DataColumn columnCALOT;
            
            private global::System.Data.DataColumn columnFOODAMTO;
            
            private global::System.Data.DataColumn columnOVER_TIME;
            
            private global::System.Data.DataColumn columnSTR_TIME;
            
            private global::System.Data.DataColumn columnSPECSALCD;
            
            private global::System.Data.DataColumn columnSPECAMT;
            
            private global::System.Data.DataColumn columnSPECAMT1;
            
            private global::System.Data.DataColumn columnSPECAMT2;
            
            private global::System.Data.DataColumn columnALLLATES1;
            
            private global::System.Data.DataColumn columnATT_END;
            
            private global::System.Data.DataColumn columnHELF;
            
            private global::System.Data.DataColumn columnBEF_NIGHTAMT;
            
            private global::System.Data.DataColumn columnAFT_NIGHTAMT;
            
            private global::System.Data.DataColumn columnFOODRULE;
            
            private global::System.Data.DataColumn columnNIGHTRULE;
            
            private global::System.Data.DataColumn columnSPECRULE;
            
            private global::System.Data.DataColumn columnSORT;
            
            private global::System.Data.DataColumn columnROTE_DISP;
            
            private global::System.Data.DataColumn columnHOLIDAY_ADDMIN;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROTEDataTable() {
                this.TableName = "ROTE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ROTEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ROTEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROTEColumn {
                get {
                    return this.columnROTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROTENAMEColumn {
                get {
                    return this.columnROTENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ON_TIMEColumn {
                get {
                    return this.columnON_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OFF_TIMEColumn {
                get {
                    return this.columnOFF_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_B_TIMEColumn {
                get {
                    return this.columnRES_B_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_E_TIMEColumn {
                get {
                    return this.columnRES_E_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WK_HRSColumn {
                get {
                    return this.columnWK_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DK_HRSColumn {
                get {
                    return this.columnDK_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MO_HRSColumn {
                get {
                    return this.columnMO_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OFFTIME2Column {
                get {
                    return this.columnOFFTIME2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OVERDAYColumn {
                get {
                    return this.columnOVERDAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NIGHTColumn {
                get {
                    return this.columnNIGHT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOLI_MINSColumn {
                get {
                    return this.columnHOLI_MINS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WR_HRSAColumn {
                get {
                    return this.columnWR_HRSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WR_HRSBColumn {
                get {
                    return this.columnWR_HRSB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FCOLORColumn {
                get {
                    return this.columnFCOLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BCOLORColumn {
                get {
                    return this.columnBCOLOR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OTColumn {
                get {
                    return this.columnOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_B1_TIMEColumn {
                get {
                    return this.columnRES_B1_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_E1_TIMEColumn {
                get {
                    return this.columnRES_E1_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_B2_TIMEColumn {
                get {
                    return this.columnRES_B2_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_E2_TIMEColumn {
                get {
                    return this.columnRES_E2_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_B3_TIMEColumn {
                get {
                    return this.columnRES_B3_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_E3_TIMEColumn {
                get {
                    return this.columnRES_E3_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_B4_TIMEColumn {
                get {
                    return this.columnRES_B4_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RES_E4_TIMEColumn {
                get {
                    return this.columnRES_E4_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn YRREST_HRSColumn {
                get {
                    return this.columnYRREST_HRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RATE2Column {
                get {
                    return this.columnRATE2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EARAWARDColumn {
                get {
                    return this.columnEARAWARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FOODSALCDColumn {
                get {
                    return this.columnFOODSALCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FOODAMTColumn {
                get {
                    return this.columnFOODAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NIGHTSALCDColumn {
                get {
                    return this.columnNIGHTSALCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NIGHTAMTColumn {
                get {
                    return this.columnNIGHTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NIGHTAMT1Column {
                get {
                    return this.columnNIGHTAMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOTFOODColumn {
                get {
                    return this.columnNOTFOOD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FOODAMT1Column {
                get {
                    return this.columnFOODAMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WK_HRSAColumn {
                get {
                    return this.columnWK_HRSA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WK_HRSBColumn {
                get {
                    return this.columnWK_HRSB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ALLLATESColumn {
                get {
                    return this.columnALLLATES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OT_BEGINColumn {
                get {
                    return this.columnOT_BEGIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DDColumn {
                get {
                    return this.columnDD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CALOTColumn {
                get {
                    return this.columnCALOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FOODAMTOColumn {
                get {
                    return this.columnFOODAMTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OVER_TIMEColumn {
                get {
                    return this.columnOVER_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn STR_TIMEColumn {
                get {
                    return this.columnSTR_TIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPECSALCDColumn {
                get {
                    return this.columnSPECSALCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPECAMTColumn {
                get {
                    return this.columnSPECAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPECAMT1Column {
                get {
                    return this.columnSPECAMT1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPECAMT2Column {
                get {
                    return this.columnSPECAMT2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ALLLATES1Column {
                get {
                    return this.columnALLLATES1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ATT_ENDColumn {
                get {
                    return this.columnATT_END;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HELFColumn {
                get {
                    return this.columnHELF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BEF_NIGHTAMTColumn {
                get {
                    return this.columnBEF_NIGHTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AFT_NIGHTAMTColumn {
                get {
                    return this.columnAFT_NIGHTAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FOODRULEColumn {
                get {
                    return this.columnFOODRULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NIGHTRULEColumn {
                get {
                    return this.columnNIGHTRULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SPECRULEColumn {
                get {
                    return this.columnSPECRULE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn SORTColumn {
                get {
                    return this.columnSORT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ROTE_DISPColumn {
                get {
                    return this.columnROTE_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn HOLIDAY_ADDMINColumn {
                get {
                    return this.columnHOLIDAY_ADDMIN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROTERow this[int index] {
                get {
                    return ((ROTERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROTERowChangeEventHandler ROTERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROTERowChangeEventHandler ROTERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROTERowChangeEventHandler ROTERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ROTERowChangeEventHandler ROTERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddROTERow(ROTERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROTERow AddROTERow(
                        string ROTE, 
                        string ROTENAME, 
                        string ON_TIME, 
                        string OFF_TIME, 
                        string RES_B_TIME, 
                        string RES_E_TIME, 
                        decimal WK_HRS, 
                        decimal DK_HRS, 
                        decimal MO_HRS, 
                        string OFFTIME2, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        bool OVERDAY, 
                        bool NIGHT, 
                        decimal HOLI_MINS, 
                        decimal WR_HRSA, 
                        decimal WR_HRSB, 
                        decimal FCOLOR, 
                        decimal BCOLOR, 
                        bool OT, 
                        string RES_B1_TIME, 
                        string RES_E1_TIME, 
                        string RES_B2_TIME, 
                        string RES_E2_TIME, 
                        string RES_B3_TIME, 
                        string RES_E3_TIME, 
                        string RES_B4_TIME, 
                        string RES_E4_TIME, 
                        decimal YRREST_HRS, 
                        bool RATE2, 
                        bool EARAWARD, 
                        string FOODSALCD, 
                        decimal FOODAMT, 
                        string NIGHTSALCD, 
                        decimal NIGHTAMT, 
                        decimal NIGHTAMT1, 
                        bool NOTFOOD, 
                        decimal FOODAMT1, 
                        decimal WK_HRSA, 
                        decimal WK_HRSB, 
                        decimal ALLLATES, 
                        string OT_BEGIN, 
                        string DD, 
                        string CALOT, 
                        decimal FOODAMTO, 
                        string OVER_TIME, 
                        string STR_TIME, 
                        string SPECSALCD, 
                        decimal SPECAMT, 
                        decimal SPECAMT1, 
                        decimal SPECAMT2, 
                        decimal ALLLATES1, 
                        string ATT_END, 
                        bool HELF, 
                        decimal BEF_NIGHTAMT, 
                        decimal AFT_NIGHTAMT, 
                        string FOODRULE, 
                        string NIGHTRULE, 
                        string SPECRULE, 
                        int SORT, 
                        string ROTE_DISP, 
                        int HOLIDAY_ADDMIN) {
                ROTERow rowROTERow = ((ROTERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ROTE,
                        ROTENAME,
                        ON_TIME,
                        OFF_TIME,
                        RES_B_TIME,
                        RES_E_TIME,
                        WK_HRS,
                        DK_HRS,
                        MO_HRS,
                        OFFTIME2,
                        KEY_MAN,
                        KEY_DATE,
                        OVERDAY,
                        NIGHT,
                        HOLI_MINS,
                        WR_HRSA,
                        WR_HRSB,
                        FCOLOR,
                        BCOLOR,
                        OT,
                        RES_B1_TIME,
                        RES_E1_TIME,
                        RES_B2_TIME,
                        RES_E2_TIME,
                        RES_B3_TIME,
                        RES_E3_TIME,
                        RES_B4_TIME,
                        RES_E4_TIME,
                        YRREST_HRS,
                        RATE2,
                        EARAWARD,
                        FOODSALCD,
                        FOODAMT,
                        NIGHTSALCD,
                        NIGHTAMT,
                        NIGHTAMT1,
                        NOTFOOD,
                        FOODAMT1,
                        WK_HRSA,
                        WK_HRSB,
                        ALLLATES,
                        OT_BEGIN,
                        DD,
                        CALOT,
                        FOODAMTO,
                        OVER_TIME,
                        STR_TIME,
                        SPECSALCD,
                        SPECAMT,
                        SPECAMT1,
                        SPECAMT2,
                        ALLLATES1,
                        ATT_END,
                        HELF,
                        BEF_NIGHTAMT,
                        AFT_NIGHTAMT,
                        FOODRULE,
                        NIGHTRULE,
                        SPECRULE,
                        SORT,
                        ROTE_DISP,
                        HOLIDAY_ADDMIN};
                rowROTERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowROTERow);
                return rowROTERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROTERow FindByROTE(string ROTE) {
                return ((ROTERow)(this.Rows.Find(new object[] {
                            ROTE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ROTEDataTable cln = ((ROTEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ROTEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnROTE = base.Columns["ROTE"];
                this.columnROTENAME = base.Columns["ROTENAME"];
                this.columnON_TIME = base.Columns["ON_TIME"];
                this.columnOFF_TIME = base.Columns["OFF_TIME"];
                this.columnRES_B_TIME = base.Columns["RES_B_TIME"];
                this.columnRES_E_TIME = base.Columns["RES_E_TIME"];
                this.columnWK_HRS = base.Columns["WK_HRS"];
                this.columnDK_HRS = base.Columns["DK_HRS"];
                this.columnMO_HRS = base.Columns["MO_HRS"];
                this.columnOFFTIME2 = base.Columns["OFFTIME2"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnOVERDAY = base.Columns["OVERDAY"];
                this.columnNIGHT = base.Columns["NIGHT"];
                this.columnHOLI_MINS = base.Columns["HOLI_MINS"];
                this.columnWR_HRSA = base.Columns["WR_HRSA"];
                this.columnWR_HRSB = base.Columns["WR_HRSB"];
                this.columnFCOLOR = base.Columns["FCOLOR"];
                this.columnBCOLOR = base.Columns["BCOLOR"];
                this.columnOT = base.Columns["OT"];
                this.columnRES_B1_TIME = base.Columns["RES_B1_TIME"];
                this.columnRES_E1_TIME = base.Columns["RES_E1_TIME"];
                this.columnRES_B2_TIME = base.Columns["RES_B2_TIME"];
                this.columnRES_E2_TIME = base.Columns["RES_E2_TIME"];
                this.columnRES_B3_TIME = base.Columns["RES_B3_TIME"];
                this.columnRES_E3_TIME = base.Columns["RES_E3_TIME"];
                this.columnRES_B4_TIME = base.Columns["RES_B4_TIME"];
                this.columnRES_E4_TIME = base.Columns["RES_E4_TIME"];
                this.columnYRREST_HRS = base.Columns["YRREST_HRS"];
                this.columnRATE2 = base.Columns["RATE2"];
                this.columnEARAWARD = base.Columns["EARAWARD"];
                this.columnFOODSALCD = base.Columns["FOODSALCD"];
                this.columnFOODAMT = base.Columns["FOODAMT"];
                this.columnNIGHTSALCD = base.Columns["NIGHTSALCD"];
                this.columnNIGHTAMT = base.Columns["NIGHTAMT"];
                this.columnNIGHTAMT1 = base.Columns["NIGHTAMT1"];
                this.columnNOTFOOD = base.Columns["NOTFOOD"];
                this.columnFOODAMT1 = base.Columns["FOODAMT1"];
                this.columnWK_HRSA = base.Columns["WK_HRSA"];
                this.columnWK_HRSB = base.Columns["WK_HRSB"];
                this.columnALLLATES = base.Columns["ALLLATES"];
                this.columnOT_BEGIN = base.Columns["OT_BEGIN"];
                this.columnDD = base.Columns["DD"];
                this.columnCALOT = base.Columns["CALOT"];
                this.columnFOODAMTO = base.Columns["FOODAMTO"];
                this.columnOVER_TIME = base.Columns["OVER_TIME"];
                this.columnSTR_TIME = base.Columns["STR_TIME"];
                this.columnSPECSALCD = base.Columns["SPECSALCD"];
                this.columnSPECAMT = base.Columns["SPECAMT"];
                this.columnSPECAMT1 = base.Columns["SPECAMT1"];
                this.columnSPECAMT2 = base.Columns["SPECAMT2"];
                this.columnALLLATES1 = base.Columns["ALLLATES1"];
                this.columnATT_END = base.Columns["ATT_END"];
                this.columnHELF = base.Columns["HELF"];
                this.columnBEF_NIGHTAMT = base.Columns["BEF_NIGHTAMT"];
                this.columnAFT_NIGHTAMT = base.Columns["AFT_NIGHTAMT"];
                this.columnFOODRULE = base.Columns["FOODRULE"];
                this.columnNIGHTRULE = base.Columns["NIGHTRULE"];
                this.columnSPECRULE = base.Columns["SPECRULE"];
                this.columnSORT = base.Columns["SORT"];
                this.columnROTE_DISP = base.Columns["ROTE_DISP"];
                this.columnHOLIDAY_ADDMIN = base.Columns["HOLIDAY_ADDMIN"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnROTE = new global::System.Data.DataColumn("ROTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROTE);
                this.columnROTENAME = new global::System.Data.DataColumn("ROTENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROTENAME);
                this.columnON_TIME = new global::System.Data.DataColumn("ON_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnON_TIME);
                this.columnOFF_TIME = new global::System.Data.DataColumn("OFF_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFF_TIME);
                this.columnRES_B_TIME = new global::System.Data.DataColumn("RES_B_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_B_TIME);
                this.columnRES_E_TIME = new global::System.Data.DataColumn("RES_E_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_E_TIME);
                this.columnWK_HRS = new global::System.Data.DataColumn("WK_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWK_HRS);
                this.columnDK_HRS = new global::System.Data.DataColumn("DK_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDK_HRS);
                this.columnMO_HRS = new global::System.Data.DataColumn("MO_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMO_HRS);
                this.columnOFFTIME2 = new global::System.Data.DataColumn("OFFTIME2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOFFTIME2);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnOVERDAY = new global::System.Data.DataColumn("OVERDAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVERDAY);
                this.columnNIGHT = new global::System.Data.DataColumn("NIGHT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIGHT);
                this.columnHOLI_MINS = new global::System.Data.DataColumn("HOLI_MINS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLI_MINS);
                this.columnWR_HRSA = new global::System.Data.DataColumn("WR_HRSA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWR_HRSA);
                this.columnWR_HRSB = new global::System.Data.DataColumn("WR_HRSB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWR_HRSB);
                this.columnFCOLOR = new global::System.Data.DataColumn("FCOLOR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFCOLOR);
                this.columnBCOLOR = new global::System.Data.DataColumn("BCOLOR", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBCOLOR);
                this.columnOT = new global::System.Data.DataColumn("OT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT);
                this.columnRES_B1_TIME = new global::System.Data.DataColumn("RES_B1_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_B1_TIME);
                this.columnRES_E1_TIME = new global::System.Data.DataColumn("RES_E1_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_E1_TIME);
                this.columnRES_B2_TIME = new global::System.Data.DataColumn("RES_B2_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_B2_TIME);
                this.columnRES_E2_TIME = new global::System.Data.DataColumn("RES_E2_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_E2_TIME);
                this.columnRES_B3_TIME = new global::System.Data.DataColumn("RES_B3_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_B3_TIME);
                this.columnRES_E3_TIME = new global::System.Data.DataColumn("RES_E3_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_E3_TIME);
                this.columnRES_B4_TIME = new global::System.Data.DataColumn("RES_B4_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_B4_TIME);
                this.columnRES_E4_TIME = new global::System.Data.DataColumn("RES_E4_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES_E4_TIME);
                this.columnYRREST_HRS = new global::System.Data.DataColumn("YRREST_HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYRREST_HRS);
                this.columnRATE2 = new global::System.Data.DataColumn("RATE2", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRATE2);
                this.columnEARAWARD = new global::System.Data.DataColumn("EARAWARD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEARAWARD);
                this.columnFOODSALCD = new global::System.Data.DataColumn("FOODSALCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOODSALCD);
                this.columnFOODAMT = new global::System.Data.DataColumn("FOODAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOODAMT);
                this.columnNIGHTSALCD = new global::System.Data.DataColumn("NIGHTSALCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIGHTSALCD);
                this.columnNIGHTAMT = new global::System.Data.DataColumn("NIGHTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIGHTAMT);
                this.columnNIGHTAMT1 = new global::System.Data.DataColumn("NIGHTAMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIGHTAMT1);
                this.columnNOTFOOD = new global::System.Data.DataColumn("NOTFOOD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTFOOD);
                this.columnFOODAMT1 = new global::System.Data.DataColumn("FOODAMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOODAMT1);
                this.columnWK_HRSA = new global::System.Data.DataColumn("WK_HRSA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWK_HRSA);
                this.columnWK_HRSB = new global::System.Data.DataColumn("WK_HRSB", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWK_HRSB);
                this.columnALLLATES = new global::System.Data.DataColumn("ALLLATES", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLLATES);
                this.columnOT_BEGIN = new global::System.Data.DataColumn("OT_BEGIN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT_BEGIN);
                this.columnDD = new global::System.Data.DataColumn("DD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDD);
                this.columnCALOT = new global::System.Data.DataColumn("CALOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALOT);
                this.columnFOODAMTO = new global::System.Data.DataColumn("FOODAMTO", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOODAMTO);
                this.columnOVER_TIME = new global::System.Data.DataColumn("OVER_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOVER_TIME);
                this.columnSTR_TIME = new global::System.Data.DataColumn("STR_TIME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTR_TIME);
                this.columnSPECSALCD = new global::System.Data.DataColumn("SPECSALCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECSALCD);
                this.columnSPECAMT = new global::System.Data.DataColumn("SPECAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECAMT);
                this.columnSPECAMT1 = new global::System.Data.DataColumn("SPECAMT1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECAMT1);
                this.columnSPECAMT2 = new global::System.Data.DataColumn("SPECAMT2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECAMT2);
                this.columnALLLATES1 = new global::System.Data.DataColumn("ALLLATES1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnALLLATES1);
                this.columnATT_END = new global::System.Data.DataColumn("ATT_END", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATT_END);
                this.columnHELF = new global::System.Data.DataColumn("HELF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHELF);
                this.columnBEF_NIGHTAMT = new global::System.Data.DataColumn("BEF_NIGHTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBEF_NIGHTAMT);
                this.columnAFT_NIGHTAMT = new global::System.Data.DataColumn("AFT_NIGHTAMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAFT_NIGHTAMT);
                this.columnFOODRULE = new global::System.Data.DataColumn("FOODRULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFOODRULE);
                this.columnNIGHTRULE = new global::System.Data.DataColumn("NIGHTRULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNIGHTRULE);
                this.columnSPECRULE = new global::System.Data.DataColumn("SPECRULE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSPECRULE);
                this.columnSORT = new global::System.Data.DataColumn("SORT", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSORT);
                this.columnROTE_DISP = new global::System.Data.DataColumn("ROTE_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROTE_DISP);
                this.columnHOLIDAY_ADDMIN = new global::System.Data.DataColumn("HOLIDAY_ADDMIN", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLIDAY_ADDMIN);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnROTE}, true));
                this.columnROTE.AllowDBNull = false;
                this.columnROTE.Unique = true;
                this.columnROTE.MaxLength = 50;
                this.columnROTENAME.AllowDBNull = false;
                this.columnROTENAME.MaxLength = 50;
                this.columnON_TIME.AllowDBNull = false;
                this.columnON_TIME.MaxLength = 50;
                this.columnOFF_TIME.AllowDBNull = false;
                this.columnOFF_TIME.MaxLength = 50;
                this.columnRES_B_TIME.AllowDBNull = false;
                this.columnRES_B_TIME.MaxLength = 50;
                this.columnRES_E_TIME.AllowDBNull = false;
                this.columnRES_E_TIME.MaxLength = 50;
                this.columnWK_HRS.AllowDBNull = false;
                this.columnDK_HRS.AllowDBNull = false;
                this.columnMO_HRS.AllowDBNull = false;
                this.columnOFFTIME2.AllowDBNull = false;
                this.columnOFFTIME2.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnOVERDAY.AllowDBNull = false;
                this.columnNIGHT.AllowDBNull = false;
                this.columnHOLI_MINS.AllowDBNull = false;
                this.columnWR_HRSA.AllowDBNull = false;
                this.columnWR_HRSB.AllowDBNull = false;
                this.columnFCOLOR.AllowDBNull = false;
                this.columnBCOLOR.AllowDBNull = false;
                this.columnOT.AllowDBNull = false;
                this.columnRES_B1_TIME.AllowDBNull = false;
                this.columnRES_B1_TIME.MaxLength = 50;
                this.columnRES_E1_TIME.AllowDBNull = false;
                this.columnRES_E1_TIME.MaxLength = 50;
                this.columnRES_B2_TIME.AllowDBNull = false;
                this.columnRES_B2_TIME.MaxLength = 50;
                this.columnRES_E2_TIME.AllowDBNull = false;
                this.columnRES_E2_TIME.MaxLength = 50;
                this.columnRES_B3_TIME.AllowDBNull = false;
                this.columnRES_B3_TIME.MaxLength = 50;
                this.columnRES_E3_TIME.AllowDBNull = false;
                this.columnRES_E3_TIME.MaxLength = 50;
                this.columnRES_B4_TIME.AllowDBNull = false;
                this.columnRES_B4_TIME.MaxLength = 50;
                this.columnRES_E4_TIME.AllowDBNull = false;
                this.columnRES_E4_TIME.MaxLength = 50;
                this.columnYRREST_HRS.AllowDBNull = false;
                this.columnRATE2.AllowDBNull = false;
                this.columnEARAWARD.AllowDBNull = false;
                this.columnFOODSALCD.AllowDBNull = false;
                this.columnFOODSALCD.MaxLength = 50;
                this.columnFOODAMT.AllowDBNull = false;
                this.columnNIGHTSALCD.AllowDBNull = false;
                this.columnNIGHTSALCD.MaxLength = 50;
                this.columnNIGHTAMT.AllowDBNull = false;
                this.columnNIGHTAMT1.AllowDBNull = false;
                this.columnNOTFOOD.AllowDBNull = false;
                this.columnFOODAMT1.AllowDBNull = false;
                this.columnWK_HRSA.AllowDBNull = false;
                this.columnWK_HRSB.AllowDBNull = false;
                this.columnALLLATES.AllowDBNull = false;
                this.columnOT_BEGIN.AllowDBNull = false;
                this.columnOT_BEGIN.MaxLength = 50;
                this.columnDD.AllowDBNull = false;
                this.columnDD.MaxLength = 50;
                this.columnCALOT.AllowDBNull = false;
                this.columnCALOT.MaxLength = 50;
                this.columnFOODAMTO.AllowDBNull = false;
                this.columnOVER_TIME.AllowDBNull = false;
                this.columnOVER_TIME.MaxLength = 50;
                this.columnSTR_TIME.AllowDBNull = false;
                this.columnSTR_TIME.MaxLength = 50;
                this.columnSPECSALCD.AllowDBNull = false;
                this.columnSPECSALCD.MaxLength = 50;
                this.columnSPECAMT.AllowDBNull = false;
                this.columnSPECAMT1.AllowDBNull = false;
                this.columnSPECAMT2.AllowDBNull = false;
                this.columnALLLATES1.AllowDBNull = false;
                this.columnATT_END.AllowDBNull = false;
                this.columnATT_END.MaxLength = 50;
                this.columnHELF.AllowDBNull = false;
                this.columnBEF_NIGHTAMT.AllowDBNull = false;
                this.columnAFT_NIGHTAMT.AllowDBNull = false;
                this.columnFOODRULE.AllowDBNull = false;
                this.columnFOODRULE.MaxLength = 50;
                this.columnNIGHTRULE.AllowDBNull = false;
                this.columnNIGHTRULE.MaxLength = 50;
                this.columnSPECRULE.AllowDBNull = false;
                this.columnSPECRULE.MaxLength = 50;
                this.columnSORT.AllowDBNull = false;
                this.columnROTE_DISP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROTERow NewROTERow() {
                return ((ROTERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ROTERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ROTERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ROTERowChanged != null)) {
                    this.ROTERowChanged(this, new ROTERowChangeEvent(((ROTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ROTERowChanging != null)) {
                    this.ROTERowChanging(this, new ROTERowChangeEvent(((ROTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ROTERowDeleted != null)) {
                    this.ROTERowDeleted(this, new ROTERowChangeEvent(((ROTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ROTERowDeleting != null)) {
                    this.ROTERowDeleting(this, new ROTERowChangeEvent(((ROTERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveROTERow(ROTERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                extDS ds = new extDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ROTEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FAMILYDataTable : global::System.Data.TypedTableBase<FAMILYRow> {
            
            private global::System.Data.DataColumn columnFA_IDNO;
            
            private global::System.Data.DataColumn columnFA_NAME;
            
            private global::System.Data.DataColumn columnREL_CODE;
            
            private global::System.Data.DataColumn columnFA_BIRDT;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnADDR;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnGSM;
            
            private global::System.Data.DataColumn columnBBC;
            
            private global::System.Data.DataColumn columnTAX;
            
            private global::System.Data.DataColumn columnAUTOINSLAB;
            
            private global::System.Data.DataColumn columnLIVE;
            
            private global::System.Data.DataColumn columnEDUCODE;
            
            private global::System.Data.DataColumn columnCOMPNY;
            
            private global::System.Data.DataColumn columnTITLE;
            
            private global::System.Data.DataColumn columnFAMFORN;
            
            private global::System.Data.DataColumn columnAUTOINSGRF;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FAMILYDataTable() {
                this.TableName = "FAMILY";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FAMILYDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected FAMILYDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_IDNOColumn {
                get {
                    return this.columnFA_IDNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_NAMEColumn {
                get {
                    return this.columnFA_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn REL_CODEColumn {
                get {
                    return this.columnREL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FA_BIRDTColumn {
                get {
                    return this.columnFA_BIRDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADDRColumn {
                get {
                    return this.columnADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GSMColumn {
                get {
                    return this.columnGSM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn BBCColumn {
                get {
                    return this.columnBBC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TAXColumn {
                get {
                    return this.columnTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOINSLABColumn {
                get {
                    return this.columnAUTOINSLAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LIVEColumn {
                get {
                    return this.columnLIVE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EDUCODEColumn {
                get {
                    return this.columnEDUCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn COMPNYColumn {
                get {
                    return this.columnCOMPNY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn TITLEColumn {
                get {
                    return this.columnTITLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn FAMFORNColumn {
                get {
                    return this.columnFAMFORN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AUTOINSGRFColumn {
                get {
                    return this.columnAUTOINSGRF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FAMILYRow this[int index] {
                get {
                    return ((FAMILYRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event FAMILYRowChangeEventHandler FAMILYRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddFAMILYRow(FAMILYRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FAMILYRow AddFAMILYRow(
                        string FA_IDNO, 
                        string FA_NAME, 
                        string REL_CODE, 
                        System.DateTime FA_BIRDT, 
                        string NOBR, 
                        System.DateTime KEY_DATE, 
                        string KEY_MAN, 
                        string ADDR, 
                        string TEL, 
                        string GSM, 
                        string BBC, 
                        bool TAX, 
                        bool AUTOINSLAB, 
                        bool LIVE, 
                        string EDUCODE, 
                        string COMPNY, 
                        string TITLE, 
                        bool FAMFORN, 
                        bool AUTOINSGRF) {
                FAMILYRow rowFAMILYRow = ((FAMILYRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        FA_IDNO,
                        FA_NAME,
                        REL_CODE,
                        FA_BIRDT,
                        NOBR,
                        KEY_DATE,
                        KEY_MAN,
                        ADDR,
                        TEL,
                        GSM,
                        BBC,
                        TAX,
                        AUTOINSLAB,
                        LIVE,
                        EDUCODE,
                        COMPNY,
                        TITLE,
                        FAMFORN,
                        AUTOINSGRF};
                rowFAMILYRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFAMILYRow);
                return rowFAMILYRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FAMILYRow FindByFA_IDNONOBR(string FA_IDNO, string NOBR) {
                return ((FAMILYRow)(this.Rows.Find(new object[] {
                            FA_IDNO,
                            NOBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FAMILYDataTable cln = ((FAMILYDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FAMILYDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnFA_IDNO = base.Columns["FA_IDNO"];
                this.columnFA_NAME = base.Columns["FA_NAME"];
                this.columnREL_CODE = base.Columns["REL_CODE"];
                this.columnFA_BIRDT = base.Columns["FA_BIRDT"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnADDR = base.Columns["ADDR"];
                this.columnTEL = base.Columns["TEL"];
                this.columnGSM = base.Columns["GSM"];
                this.columnBBC = base.Columns["BBC"];
                this.columnTAX = base.Columns["TAX"];
                this.columnAUTOINSLAB = base.Columns["AUTOINSLAB"];
                this.columnLIVE = base.Columns["LIVE"];
                this.columnEDUCODE = base.Columns["EDUCODE"];
                this.columnCOMPNY = base.Columns["COMPNY"];
                this.columnTITLE = base.Columns["TITLE"];
                this.columnFAMFORN = base.Columns["FAMFORN"];
                this.columnAUTOINSGRF = base.Columns["AUTOINSGRF"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnFA_IDNO = new global::System.Data.DataColumn("FA_IDNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_IDNO);
                this.columnFA_NAME = new global::System.Data.DataColumn("FA_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_NAME);
                this.columnREL_CODE = new global::System.Data.DataColumn("REL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnREL_CODE);
                this.columnFA_BIRDT = new global::System.Data.DataColumn("FA_BIRDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFA_BIRDT);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnADDR = new global::System.Data.DataColumn("ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnGSM = new global::System.Data.DataColumn("GSM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSM);
                this.columnBBC = new global::System.Data.DataColumn("BBC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBBC);
                this.columnTAX = new global::System.Data.DataColumn("TAX", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX);
                this.columnAUTOINSLAB = new global::System.Data.DataColumn("AUTOINSLAB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOINSLAB);
                this.columnLIVE = new global::System.Data.DataColumn("LIVE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLIVE);
                this.columnEDUCODE = new global::System.Data.DataColumn("EDUCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEDUCODE);
                this.columnCOMPNY = new global::System.Data.DataColumn("COMPNY", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPNY);
                this.columnTITLE = new global::System.Data.DataColumn("TITLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTITLE);
                this.columnFAMFORN = new global::System.Data.DataColumn("FAMFORN", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAMFORN);
                this.columnAUTOINSGRF = new global::System.Data.DataColumn("AUTOINSGRF", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAUTOINSGRF);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFA_IDNO,
                                this.columnNOBR}, true));
                this.columnFA_IDNO.AllowDBNull = false;
                this.columnFA_IDNO.MaxLength = 50;
                this.columnFA_NAME.AllowDBNull = false;
                this.columnFA_NAME.MaxLength = 50;
                this.columnREL_CODE.AllowDBNull = false;
                this.columnREL_CODE.MaxLength = 50;
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnADDR.AllowDBNull = false;
                this.columnADDR.MaxLength = 60;
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 50;
                this.columnGSM.AllowDBNull = false;
                this.columnGSM.MaxLength = 50;
                this.columnBBC.AllowDBNull = false;
                this.columnBBC.MaxLength = 50;
                this.columnTAX.AllowDBNull = false;
                this.columnAUTOINSLAB.ReadOnly = true;
                this.columnLIVE.AllowDBNull = false;
                this.columnEDUCODE.AllowDBNull = false;
                this.columnEDUCODE.MaxLength = 50;
                this.columnCOMPNY.MaxLength = 50;
                this.columnTITLE.AllowDBNull = false;
                this.columnTITLE.MaxLength = 50;
                this.columnFAMFORN.AllowDBNull = false;
                this.columnAUTOINSGRF.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FAMILYRow NewFAMILYRow() {
                return ((FAMILYRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FAMILYRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FAMILYRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FAMILYRowChanged != null)) {
                    this.FAMILYRowChanged(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FAMILYRowChanging != null)) {
                    this.FAMILYRowChanging(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FAMILYRowDeleted != null)) {
                    this.FAMILYRowDeleted(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FAMILYRowDeleting != null)) {
                    this.FAMILYRowDeleting(this, new FAMILYRowChangeEvent(((FAMILYRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveFAMILYRow(FAMILYRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                extDS ds = new extDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FAMILYDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPTDataTable : global::System.Data.TypedTableBase<DEPTRow> {
            
            private global::System.Data.DataColumn columnD_NO;
            
            private global::System.Data.DataColumn columnD_NAME;
            
            private global::System.Data.DataColumn columnD_ENAME;
            
            private global::System.Data.DataColumn columnPNS;
            
            private global::System.Data.DataColumn columnDEPT_TREE;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnOLD_DEPT;
            
            private global::System.Data.DataColumn columnNEW_DEPT;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnDEPT_GROUP;
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnAMT;
            
            private global::System.Data.DataColumn columnEMAIL;
            
            private global::System.Data.DataColumn columnRES;
            
            private global::System.Data.DataColumn columnD_NO_DISP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DEPTDataTable() {
                this.TableName = "DEPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DEPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected DEPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D_NOColumn {
                get {
                    return this.columnD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D_NAMEColumn {
                get {
                    return this.columnD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D_ENAMEColumn {
                get {
                    return this.columnD_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PNSColumn {
                get {
                    return this.columnPNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_TREEColumn {
                get {
                    return this.columnDEPT_TREE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn OLD_DEPTColumn {
                get {
                    return this.columnOLD_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NEW_DEPTColumn {
                get {
                    return this.columnNEW_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn DEPT_GROUPColumn {
                get {
                    return this.columnDEPT_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn AMTColumn {
                get {
                    return this.columnAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn RESColumn {
                get {
                    return this.columnRES;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn D_NO_DISPColumn {
                get {
                    return this.columnD_NO_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DEPTRow this[int index] {
                get {
                    return ((DEPTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddDEPTRow(DEPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DEPTRow AddDEPTRow(
                        string D_NO, 
                        string D_NAME, 
                        string D_ENAME, 
                        decimal PNS, 
                        string DEPT_TREE, 
                        System.DateTime KEY_DATE, 
                        string KEY_MAN, 
                        string OLD_DEPT, 
                        string NEW_DEPT, 
                        System.DateTime ADATE, 
                        System.DateTime DDATE, 
                        string DEPT_GROUP, 
                        string NOBR, 
                        decimal AMT, 
                        string EMAIL, 
                        bool RES, 
                        string D_NO_DISP) {
                DEPTRow rowDEPTRow = ((DEPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        D_NO,
                        D_NAME,
                        D_ENAME,
                        PNS,
                        DEPT_TREE,
                        KEY_DATE,
                        KEY_MAN,
                        OLD_DEPT,
                        NEW_DEPT,
                        ADATE,
                        DDATE,
                        DEPT_GROUP,
                        NOBR,
                        AMT,
                        EMAIL,
                        RES,
                        D_NO_DISP};
                rowDEPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPTRow);
                return rowDEPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DEPTRow FindByD_NO(string D_NO) {
                return ((DEPTRow)(this.Rows.Find(new object[] {
                            D_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEPTDataTable cln = ((DEPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnD_NO = base.Columns["D_NO"];
                this.columnD_NAME = base.Columns["D_NAME"];
                this.columnD_ENAME = base.Columns["D_ENAME"];
                this.columnPNS = base.Columns["PNS"];
                this.columnDEPT_TREE = base.Columns["DEPT_TREE"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnOLD_DEPT = base.Columns["OLD_DEPT"];
                this.columnNEW_DEPT = base.Columns["NEW_DEPT"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnDEPT_GROUP = base.Columns["DEPT_GROUP"];
                this.columnNOBR = base.Columns["NOBR"];
                this.columnAMT = base.Columns["AMT"];
                this.columnEMAIL = base.Columns["EMAIL"];
                this.columnRES = base.Columns["RES"];
                this.columnD_NO_DISP = base.Columns["D_NO_DISP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnD_NO = new global::System.Data.DataColumn("D_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NO);
                this.columnD_NAME = new global::System.Data.DataColumn("D_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NAME);
                this.columnD_ENAME = new global::System.Data.DataColumn("D_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_ENAME);
                this.columnPNS = new global::System.Data.DataColumn("PNS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNS);
                this.columnDEPT_TREE = new global::System.Data.DataColumn("DEPT_TREE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_TREE);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnOLD_DEPT = new global::System.Data.DataColumn("OLD_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_DEPT);
                this.columnNEW_DEPT = new global::System.Data.DataColumn("NEW_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEW_DEPT);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnDEPT_GROUP = new global::System.Data.DataColumn("DEPT_GROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_GROUP);
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnAMT = new global::System.Data.DataColumn("AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAMT);
                this.columnEMAIL = new global::System.Data.DataColumn("EMAIL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMAIL);
                this.columnRES = new global::System.Data.DataColumn("RES", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRES);
                this.columnD_NO_DISP = new global::System.Data.DataColumn("D_NO_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NO_DISP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnD_NO}, true));
                this.columnD_NO.AllowDBNull = false;
                this.columnD_NO.Unique = true;
                this.columnD_NO.MaxLength = 50;
                this.columnD_NAME.AllowDBNull = false;
                this.columnD_NAME.MaxLength = 50;
                this.columnD_ENAME.AllowDBNull = false;
                this.columnD_ENAME.MaxLength = 50;
                this.columnDEPT_TREE.MaxLength = 50;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnOLD_DEPT.MaxLength = 50;
                this.columnNEW_DEPT.MaxLength = 50;
                this.columnDEPT_GROUP.MaxLength = 50;
                this.columnNOBR.MaxLength = 50;
                this.columnEMAIL.MaxLength = 500;
                this.columnD_NO_DISP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DEPTRow NewDEPTRow() {
                return ((DEPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPTRowChanged != null)) {
                    this.DEPTRowChanged(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPTRowChanging != null)) {
                    this.DEPTRowChanging(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPTRowDeleted != null)) {
                    this.DEPTRowDeleted(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPTRowDeleting != null)) {
                    this.DEPTRowDeleting(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveDEPTRow(DEPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                extDS ds = new extDS();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSGRLVRow : global::System.Data.DataRow {
            
            private INSGRLVDataTable tableINSGRLV;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal INSGRLVRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSGRLV = ((INSGRLVDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal B_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.B_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.B_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal E_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.E_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.E_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXPA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPAColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXPB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPBColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXPC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPCColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXPD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXPDColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXPDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXTA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTAColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXTB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTBColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXTC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTCColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXTD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXTDColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSGRLV.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSGRLV.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRLV.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSGRLV.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PLAN_NO {
                get {
                    return ((string)(this[this.tableINSGRLV.PLAN_NOColumn]));
                }
                set {
                    this[this.tableINSGRLV.PLAN_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PLAN_NO_DISP {
                get {
                    return ((string)(this[this.tableINSGRLV.PLAN_NO_DISPColumn]));
                }
                set {
                    this[this.tableINSGRLV.PLAN_NO_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ACCI_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.ACCI_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.ACCI_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXPA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPAColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXPB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPBColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXPC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPCColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXPD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXPDColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXPDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXTA {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTAColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXTB {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTBColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXTC {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTCColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COM_EXTD {
                get {
                    return ((decimal)(this[this.tableINSGRLV.COM_EXTDColumn]));
                }
                set {
                    this[this.tableINSGRLV.COM_EXTDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXP_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXP_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXT_AMT {
                get {
                    return ((decimal)(this[this.tableINSGRLV.EXT_AMTColumn]));
                }
                set {
                    this[this.tableINSGRLV.EXT_AMTColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class INSGRPRow : global::System.Data.DataRow {
            
            private INSGRPDataTable tableINSGRP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal INSGRPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableINSGRP = ((INSGRPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableINSGRP.NOBRColumn]));
                }
                set {
                    this[this.tableINSGRP.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableINSGRP.FA_IDNOColumn]));
                }
                set {
                    this[this.tableINSGRP.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime IN_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRP.IN_DATEColumn]));
                }
                set {
                    this[this.tableINSGRP.IN_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime OUT_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRP.OUT_DATEColumn]));
                }
                set {
                    this[this.tableINSGRP.OUT_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CODE {
                get {
                    return ((string)(this[this.tableINSGRP.CODEColumn]));
                }
                set {
                    this[this.tableINSGRP.CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT1 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT1Column]));
                }
                set {
                    this[this.tableINSGRP.AMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP1 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP1Column]));
                }
                set {
                    this[this.tableINSGRP.EXP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COP1 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP1Column]));
                }
                set {
                    this[this.tableINSGRP.COP1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT2 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT2Column]));
                }
                set {
                    this[this.tableINSGRP.AMT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP2 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP2Column]));
                }
                set {
                    this[this.tableINSGRP.EXP2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COP2 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP2Column]));
                }
                set {
                    this[this.tableINSGRP.COP2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT3 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT3Column]));
                }
                set {
                    this[this.tableINSGRP.AMT3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP3 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP3Column]));
                }
                set {
                    this[this.tableINSGRP.EXP3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COP3 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP3Column]));
                }
                set {
                    this[this.tableINSGRP.COP3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT4 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT4Column]));
                }
                set {
                    this[this.tableINSGRP.AMT4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP4 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP4Column]));
                }
                set {
                    this[this.tableINSGRP.EXP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COP4 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP4Column]));
                }
                set {
                    this[this.tableINSGRP.COP4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT5 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT5Column]));
                }
                set {
                    this[this.tableINSGRP.AMT5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP5 {
                get {
                    return ((decimal)(this[this.tableINSGRP.EXP5Column]));
                }
                set {
                    this[this.tableINSGRP.EXP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COP5 {
                get {
                    return ((decimal)(this[this.tableINSGRP.COP5Column]));
                }
                set {
                    this[this.tableINSGRP.COP5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableINSGRP.KEY_MANColumn]));
                }
                set {
                    this[this.tableINSGRP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableINSGRP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableINSGRP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT6 {
                get {
                    return ((decimal)(this[this.tableINSGRP.AMT6Column]));
                }
                set {
                    this[this.tableINSGRP.AMT6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TOTEXP {
                get {
                    return ((decimal)(this[this.tableINSGRP.TOTEXPColumn]));
                }
                set {
                    this[this.tableINSGRP.TOTEXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COPEXP {
                get {
                    return ((decimal)(this[this.tableINSGRP.COPEXPColumn]));
                }
                set {
                    this[this.tableINSGRP.COPEXPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SEQ {
                get {
                    return ((string)(this[this.tableINSGRP.SEQColumn]));
                }
                set {
                    this[this.tableINSGRP.SEQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EXP3CAL {
                get {
                    return ((bool)(this[this.tableINSGRP.EXP3CALColumn]));
                }
                set {
                    this[this.tableINSGRP.EXP3CALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EXP1CAL {
                get {
                    return ((bool)(this[this.tableINSGRP.EXP1CALColumn]));
                }
                set {
                    this[this.tableINSGRP.EXP1CALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EXP2CAL {
                get {
                    return ((bool)(this[this.tableINSGRP.EXP2CALColumn]));
                }
                set {
                    this[this.tableINSGRP.EXP2CALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GRP_TYPE {
                get {
                    return ((string)(this[this.tableINSGRP.GRP_TYPEColumn]));
                }
                set {
                    this[this.tableINSGRP.GRP_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PAN {
                get {
                    return ((string)(this[this.tableINSGRP.PANColumn]));
                }
                set {
                    this[this.tableINSGRP.PANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal EXP6 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSGRP.EXP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSGRP\' 中資料行 \'EXP6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSGRP.EXP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal COP6 {
                get {
                    try {
                        return ((decimal)(this[this.tableINSGRP.COP6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSGRP\' 中資料行 \'COP6\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSGRP.COP6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableINSGRP.NAME_CColumn]));
                }
                set {
                    this[this.tableINSGRP.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime BIRDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableINSGRP.BIRDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'INSGRP\' 中資料行 \'BIRDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableINSGRP.BIRDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string IDNO {
                get {
                    return ((string)(this[this.tableINSGRP.IDNOColumn]));
                }
                set {
                    this[this.tableINSGRP.IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEXP6Null() {
                return this.IsNull(this.tableINSGRP.EXP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEXP6Null() {
                this[this.tableINSGRP.EXP6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCOP6Null() {
                return this.IsNull(this.tableINSGRP.COP6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCOP6Null() {
                this[this.tableINSGRP.COP6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsBIRDTNull() {
                return this.IsNull(this.tableINSGRP.BIRDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetBIRDTNull() {
                this[this.tableINSGRP.BIRDTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALCODERow : global::System.Data.DataRow {
            
            private SALCODEDataTable tableSALCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SALCODERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALCODE = ((SALCODEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_ATTR {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_ATTRColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_ATTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALCODE.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALCODE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALCODE.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALCODE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SOS_ID {
                get {
                    return ((string)(this[this.tableSALCODE.SOS_IDColumn]));
                }
                set {
                    this[this.tableSALCODE.SOS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool WEL {
                get {
                    return ((bool)(this[this.tableSALCODE.WELColumn]));
                }
                set {
                    this[this.tableSALCODE.WELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OT {
                get {
                    return ((bool)(this[this.tableSALCODE.OTColumn]));
                }
                set {
                    this[this.tableSALCODE.OTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MAX_AMT {
                get {
                    return ((decimal)(this[this.tableSALCODE.MAX_AMTColumn]));
                }
                set {
                    this[this.tableSALCODE.MAX_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MIN_AMT {
                get {
                    return ((decimal)(this[this.tableSALCODE.MIN_AMTColumn]));
                }
                set {
                    this[this.tableSALCODE.MIN_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CAL_FREQ {
                get {
                    return ((string)(this[this.tableSALCODE.CAL_FREQColumn]));
                }
                set {
                    this[this.tableSALCODE.CAL_FREQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CAL_TYPE {
                get {
                    return ((string)(this[this.tableSALCODE.CAL_TYPEColumn]));
                }
                set {
                    this[this.tableSALCODE.CAL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HRS {
                get {
                    return ((decimal)(this[this.tableSALCODE.HRSColumn]));
                }
                set {
                    this[this.tableSALCODE.HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MONTHTYPE {
                get {
                    return ((string)(this[this.tableSALCODE.MONTHTYPEColumn]));
                }
                set {
                    this[this.tableSALCODE.MONTHTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DEFINEDAYS {
                get {
                    return ((decimal)(this[this.tableSALCODE.DEFINEDAYSColumn]));
                }
                set {
                    this[this.tableSALCODE.DEFINEDAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ADVPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.ADVPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.ADVPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ACCCD {
                get {
                    return ((string)(this[this.tableSALCODE.ACCCDColumn]));
                }
                set {
                    this[this.tableSALCODE.ACCCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ATT {
                get {
                    return ((bool)(this[this.tableSALCODE.ATTColumn]));
                }
                set {
                    this[this.tableSALCODE.ATTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool DAILY {
                get {
                    return ((bool)(this[this.tableSALCODE.DAILYColumn]));
                }
                set {
                    this[this.tableSALCODE.DAILYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RETIRE {
                get {
                    return ((bool)(this[this.tableSALCODE.RETIREColumn]));
                }
                set {
                    this[this.tableSALCODE.RETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FORBANK {
                get {
                    return ((bool)(this[this.tableSALCODE.FORBANKColumn]));
                }
                set {
                    this[this.tableSALCODE.FORBANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FORCASH {
                get {
                    return ((bool)(this[this.tableSALCODE.FORCASHColumn]));
                }
                set {
                    this[this.tableSALCODE.FORCASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTFREQ {
                get {
                    return ((bool)(this[this.tableSALCODE.NOTFREQColumn]));
                }
                set {
                    this[this.tableSALCODE.NOTFREQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal TAXRATE {
                get {
                    return ((decimal)(this[this.tableSALCODE.TAXRATEColumn]));
                }
                set {
                    this[this.tableSALCODE.TAXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool YEARPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.YEARPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.YEARPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool ABSPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.ABSPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.ABSPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool INSLAB {
                get {
                    return ((bool)(this[this.tableSALCODE.INSLABColumn]));
                }
                set {
                    this[this.tableSALCODE.INSLABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LATER {
                get {
                    return ((bool)(this[this.tableSALCODE.LATERColumn]));
                }
                set {
                    this[this.tableSALCODE.LATERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_ENAME {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_ENAMEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OLDRETIRE {
                get {
                    return ((bool)(this[this.tableSALCODE.OLDRETIREColumn]));
                }
                set {
                    this[this.tableSALCODE.OLDRETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool SALBASD1 {
                get {
                    return ((bool)(this[this.tableSALCODE.SALBASD1Column]));
                }
                set {
                    this[this.tableSALCODE.SALBASD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SAL_CODE_DISP {
                get {
                    try {
                        return ((string)(this[this.tableSALCODE.SAL_CODE_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALCODE\' 中資料行 \'SAL_CODE_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALCODE.SAL_CODE_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsSAL_CODE_DISPNull() {
                return this.IsNull(this.tableSALCODE.SAL_CODE_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetSAL_CODE_DISPNull() {
                this[this.tableSALCODE.SAL_CODE_DISPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ROTERow : global::System.Data.DataRow {
            
            private ROTEDataTable tableROTE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ROTERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableROTE = ((ROTEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROTE {
                get {
                    return ((string)(this[this.tableROTE.ROTEColumn]));
                }
                set {
                    this[this.tableROTE.ROTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROTENAME {
                get {
                    return ((string)(this[this.tableROTE.ROTENAMEColumn]));
                }
                set {
                    this[this.tableROTE.ROTENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ON_TIME {
                get {
                    return ((string)(this[this.tableROTE.ON_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.ON_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OFF_TIME {
                get {
                    return ((string)(this[this.tableROTE.OFF_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.OFF_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_B_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_B_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_B_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_E_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_E_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_E_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WK_HRS {
                get {
                    return ((decimal)(this[this.tableROTE.WK_HRSColumn]));
                }
                set {
                    this[this.tableROTE.WK_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal DK_HRS {
                get {
                    return ((decimal)(this[this.tableROTE.DK_HRSColumn]));
                }
                set {
                    this[this.tableROTE.DK_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal MO_HRS {
                get {
                    return ((decimal)(this[this.tableROTE.MO_HRSColumn]));
                }
                set {
                    this[this.tableROTE.MO_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OFFTIME2 {
                get {
                    return ((string)(this[this.tableROTE.OFFTIME2Column]));
                }
                set {
                    this[this.tableROTE.OFFTIME2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableROTE.KEY_MANColumn]));
                }
                set {
                    this[this.tableROTE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableROTE.KEY_DATEColumn]));
                }
                set {
                    this[this.tableROTE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OVERDAY {
                get {
                    return ((bool)(this[this.tableROTE.OVERDAYColumn]));
                }
                set {
                    this[this.tableROTE.OVERDAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NIGHT {
                get {
                    return ((bool)(this[this.tableROTE.NIGHTColumn]));
                }
                set {
                    this[this.tableROTE.NIGHTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal HOLI_MINS {
                get {
                    return ((decimal)(this[this.tableROTE.HOLI_MINSColumn]));
                }
                set {
                    this[this.tableROTE.HOLI_MINSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WR_HRSA {
                get {
                    return ((decimal)(this[this.tableROTE.WR_HRSAColumn]));
                }
                set {
                    this[this.tableROTE.WR_HRSAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WR_HRSB {
                get {
                    return ((decimal)(this[this.tableROTE.WR_HRSBColumn]));
                }
                set {
                    this[this.tableROTE.WR_HRSBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FCOLOR {
                get {
                    return ((decimal)(this[this.tableROTE.FCOLORColumn]));
                }
                set {
                    this[this.tableROTE.FCOLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BCOLOR {
                get {
                    return ((decimal)(this[this.tableROTE.BCOLORColumn]));
                }
                set {
                    this[this.tableROTE.BCOLORColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool OT {
                get {
                    return ((bool)(this[this.tableROTE.OTColumn]));
                }
                set {
                    this[this.tableROTE.OTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_B1_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_B1_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_B1_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_E1_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_E1_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_E1_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_B2_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_B2_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_B2_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_E2_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_E2_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_E2_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_B3_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_B3_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_B3_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_E3_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_E3_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_E3_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_B4_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_B4_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_B4_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string RES_E4_TIME {
                get {
                    return ((string)(this[this.tableROTE.RES_E4_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.RES_E4_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal YRREST_HRS {
                get {
                    return ((decimal)(this[this.tableROTE.YRREST_HRSColumn]));
                }
                set {
                    this[this.tableROTE.YRREST_HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RATE2 {
                get {
                    return ((bool)(this[this.tableROTE.RATE2Column]));
                }
                set {
                    this[this.tableROTE.RATE2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool EARAWARD {
                get {
                    return ((bool)(this[this.tableROTE.EARAWARDColumn]));
                }
                set {
                    this[this.tableROTE.EARAWARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FOODSALCD {
                get {
                    return ((string)(this[this.tableROTE.FOODSALCDColumn]));
                }
                set {
                    this[this.tableROTE.FOODSALCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FOODAMT {
                get {
                    return ((decimal)(this[this.tableROTE.FOODAMTColumn]));
                }
                set {
                    this[this.tableROTE.FOODAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NIGHTSALCD {
                get {
                    return ((string)(this[this.tableROTE.NIGHTSALCDColumn]));
                }
                set {
                    this[this.tableROTE.NIGHTSALCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NIGHTAMT {
                get {
                    return ((decimal)(this[this.tableROTE.NIGHTAMTColumn]));
                }
                set {
                    this[this.tableROTE.NIGHTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal NIGHTAMT1 {
                get {
                    return ((decimal)(this[this.tableROTE.NIGHTAMT1Column]));
                }
                set {
                    this[this.tableROTE.NIGHTAMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool NOTFOOD {
                get {
                    return ((bool)(this[this.tableROTE.NOTFOODColumn]));
                }
                set {
                    this[this.tableROTE.NOTFOODColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FOODAMT1 {
                get {
                    return ((decimal)(this[this.tableROTE.FOODAMT1Column]));
                }
                set {
                    this[this.tableROTE.FOODAMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WK_HRSA {
                get {
                    return ((decimal)(this[this.tableROTE.WK_HRSAColumn]));
                }
                set {
                    this[this.tableROTE.WK_HRSAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal WK_HRSB {
                get {
                    return ((decimal)(this[this.tableROTE.WK_HRSBColumn]));
                }
                set {
                    this[this.tableROTE.WK_HRSBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ALLLATES {
                get {
                    return ((decimal)(this[this.tableROTE.ALLLATESColumn]));
                }
                set {
                    this[this.tableROTE.ALLLATESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OT_BEGIN {
                get {
                    return ((string)(this[this.tableROTE.OT_BEGINColumn]));
                }
                set {
                    this[this.tableROTE.OT_BEGINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DD {
                get {
                    return ((string)(this[this.tableROTE.DDColumn]));
                }
                set {
                    this[this.tableROTE.DDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string CALOT {
                get {
                    return ((string)(this[this.tableROTE.CALOTColumn]));
                }
                set {
                    this[this.tableROTE.CALOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal FOODAMTO {
                get {
                    return ((decimal)(this[this.tableROTE.FOODAMTOColumn]));
                }
                set {
                    this[this.tableROTE.FOODAMTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OVER_TIME {
                get {
                    return ((string)(this[this.tableROTE.OVER_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.OVER_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string STR_TIME {
                get {
                    return ((string)(this[this.tableROTE.STR_TIMEColumn]));
                }
                set {
                    this[this.tableROTE.STR_TIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SPECSALCD {
                get {
                    return ((string)(this[this.tableROTE.SPECSALCDColumn]));
                }
                set {
                    this[this.tableROTE.SPECSALCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SPECAMT {
                get {
                    return ((decimal)(this[this.tableROTE.SPECAMTColumn]));
                }
                set {
                    this[this.tableROTE.SPECAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SPECAMT1 {
                get {
                    return ((decimal)(this[this.tableROTE.SPECAMT1Column]));
                }
                set {
                    this[this.tableROTE.SPECAMT1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal SPECAMT2 {
                get {
                    return ((decimal)(this[this.tableROTE.SPECAMT2Column]));
                }
                set {
                    this[this.tableROTE.SPECAMT2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal ALLLATES1 {
                get {
                    return ((decimal)(this[this.tableROTE.ALLLATES1Column]));
                }
                set {
                    this[this.tableROTE.ALLLATES1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ATT_END {
                get {
                    return ((string)(this[this.tableROTE.ATT_ENDColumn]));
                }
                set {
                    this[this.tableROTE.ATT_ENDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool HELF {
                get {
                    return ((bool)(this[this.tableROTE.HELFColumn]));
                }
                set {
                    this[this.tableROTE.HELFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal BEF_NIGHTAMT {
                get {
                    return ((decimal)(this[this.tableROTE.BEF_NIGHTAMTColumn]));
                }
                set {
                    this[this.tableROTE.BEF_NIGHTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AFT_NIGHTAMT {
                get {
                    return ((decimal)(this[this.tableROTE.AFT_NIGHTAMTColumn]));
                }
                set {
                    this[this.tableROTE.AFT_NIGHTAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FOODRULE {
                get {
                    return ((string)(this[this.tableROTE.FOODRULEColumn]));
                }
                set {
                    this[this.tableROTE.FOODRULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NIGHTRULE {
                get {
                    return ((string)(this[this.tableROTE.NIGHTRULEColumn]));
                }
                set {
                    this[this.tableROTE.NIGHTRULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string SPECRULE {
                get {
                    return ((string)(this[this.tableROTE.SPECRULEColumn]));
                }
                set {
                    this[this.tableROTE.SPECRULEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int SORT {
                get {
                    return ((int)(this[this.tableROTE.SORTColumn]));
                }
                set {
                    this[this.tableROTE.SORTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ROTE_DISP {
                get {
                    try {
                        return ((string)(this[this.tableROTE.ROTE_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ROTE\' 中資料行 \'ROTE_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableROTE.ROTE_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int HOLIDAY_ADDMIN {
                get {
                    try {
                        return ((int)(this[this.tableROTE.HOLIDAY_ADDMINColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'ROTE\' 中資料行 \'HOLIDAY_ADDMIN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableROTE.HOLIDAY_ADDMINColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsROTE_DISPNull() {
                return this.IsNull(this.tableROTE.ROTE_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetROTE_DISPNull() {
                this[this.tableROTE.ROTE_DISPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsHOLIDAY_ADDMINNull() {
                return this.IsNull(this.tableROTE.HOLIDAY_ADDMINColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetHOLIDAY_ADDMINNull() {
                this[this.tableROTE.HOLIDAY_ADDMINColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FAMILYRow : global::System.Data.DataRow {
            
            private FAMILYDataTable tableFAMILY;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal FAMILYRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFAMILY = ((FAMILYDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FA_IDNO {
                get {
                    return ((string)(this[this.tableFAMILY.FA_IDNOColumn]));
                }
                set {
                    this[this.tableFAMILY.FA_IDNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string FA_NAME {
                get {
                    return ((string)(this[this.tableFAMILY.FA_NAMEColumn]));
                }
                set {
                    this[this.tableFAMILY.FA_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string REL_CODE {
                get {
                    return ((string)(this[this.tableFAMILY.REL_CODEColumn]));
                }
                set {
                    this[this.tableFAMILY.REL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime FA_BIRDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFAMILY.FA_BIRDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FAMILY\' 中資料行 \'FA_BIRDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFAMILY.FA_BIRDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableFAMILY.NOBRColumn]));
                }
                set {
                    this[this.tableFAMILY.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableFAMILY.KEY_DATEColumn]));
                }
                set {
                    this[this.tableFAMILY.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableFAMILY.KEY_MANColumn]));
                }
                set {
                    this[this.tableFAMILY.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ADDR {
                get {
                    return ((string)(this[this.tableFAMILY.ADDRColumn]));
                }
                set {
                    this[this.tableFAMILY.ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TEL {
                get {
                    return ((string)(this[this.tableFAMILY.TELColumn]));
                }
                set {
                    this[this.tableFAMILY.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string GSM {
                get {
                    return ((string)(this[this.tableFAMILY.GSMColumn]));
                }
                set {
                    this[this.tableFAMILY.GSMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string BBC {
                get {
                    return ((string)(this[this.tableFAMILY.BBCColumn]));
                }
                set {
                    this[this.tableFAMILY.BBCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool TAX {
                get {
                    return ((bool)(this[this.tableFAMILY.TAXColumn]));
                }
                set {
                    this[this.tableFAMILY.TAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AUTOINSLAB {
                get {
                    try {
                        return ((bool)(this[this.tableFAMILY.AUTOINSLABColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FAMILY\' 中資料行 \'AUTOINSLAB\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFAMILY.AUTOINSLABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool LIVE {
                get {
                    return ((bool)(this[this.tableFAMILY.LIVEColumn]));
                }
                set {
                    this[this.tableFAMILY.LIVEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EDUCODE {
                get {
                    return ((string)(this[this.tableFAMILY.EDUCODEColumn]));
                }
                set {
                    this[this.tableFAMILY.EDUCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string COMPNY {
                get {
                    try {
                        return ((string)(this[this.tableFAMILY.COMPNYColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FAMILY\' 中資料行 \'COMPNY\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFAMILY.COMPNYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string TITLE {
                get {
                    return ((string)(this[this.tableFAMILY.TITLEColumn]));
                }
                set {
                    this[this.tableFAMILY.TITLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool FAMFORN {
                get {
                    return ((bool)(this[this.tableFAMILY.FAMFORNColumn]));
                }
                set {
                    this[this.tableFAMILY.FAMFORNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool AUTOINSGRF {
                get {
                    try {
                        return ((bool)(this[this.tableFAMILY.AUTOINSGRFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'FAMILY\' 中資料行 \'AUTOINSGRF\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableFAMILY.AUTOINSGRFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsFA_BIRDTNull() {
                return this.IsNull(this.tableFAMILY.FA_BIRDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetFA_BIRDTNull() {
                this[this.tableFAMILY.FA_BIRDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAUTOINSLABNull() {
                return this.IsNull(this.tableFAMILY.AUTOINSLABColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAUTOINSLABNull() {
                this[this.tableFAMILY.AUTOINSLABColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsCOMPNYNull() {
                return this.IsNull(this.tableFAMILY.COMPNYColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetCOMPNYNull() {
                this[this.tableFAMILY.COMPNYColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAUTOINSGRFNull() {
                return this.IsNull(this.tableFAMILY.AUTOINSGRFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAUTOINSGRFNull() {
                this[this.tableFAMILY.AUTOINSGRFColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEPTRow : global::System.Data.DataRow {
            
            private DEPTDataTable tableDEPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal DEPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPT = ((DEPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D_NO {
                get {
                    return ((string)(this[this.tableDEPT.D_NOColumn]));
                }
                set {
                    this[this.tableDEPT.D_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D_NAME {
                get {
                    return ((string)(this[this.tableDEPT.D_NAMEColumn]));
                }
                set {
                    this[this.tableDEPT.D_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D_ENAME {
                get {
                    return ((string)(this[this.tableDEPT.D_ENAMEColumn]));
                }
                set {
                    this[this.tableDEPT.D_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal PNS {
                get {
                    try {
                        return ((decimal)(this[this.tableDEPT.PNSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'PNS\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.PNSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_TREE {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.DEPT_TREEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DEPT_TREE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DEPT_TREEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT.KEY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'KEY_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string KEY_MAN {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.KEY_MANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'KEY_MAN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string OLD_DEPT {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.OLD_DEPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'OLD_DEPT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.OLD_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NEW_DEPT {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.NEW_DEPTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'NEW_DEPT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.NEW_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime ADATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT.ADATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'ADATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime DDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableDEPT.DDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string DEPT_GROUP {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.DEPT_GROUPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'DEPT_GROUP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.DEPT_GROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string NOBR {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.NOBRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'NOBR\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public decimal AMT {
                get {
                    try {
                        return ((decimal)(this[this.tableDEPT.AMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'AMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.EMAILColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'EMAIL\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.EMAILColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool RES {
                get {
                    try {
                        return ((bool)(this[this.tableDEPT.RESColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'RES\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.RESColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string D_NO_DISP {
                get {
                    try {
                        return ((string)(this[this.tableDEPT.D_NO_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'DEPT\' 中資料行 \'D_NO_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableDEPT.D_NO_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPNSNull() {
                return this.IsNull(this.tableDEPT.PNSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPNSNull() {
                this[this.tableDEPT.PNSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_TREENull() {
                return this.IsNull(this.tableDEPT.DEPT_TREEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_TREENull() {
                this[this.tableDEPT.DEPT_TREEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKEY_DATENull() {
                return this.IsNull(this.tableDEPT.KEY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKEY_DATENull() {
                this[this.tableDEPT.KEY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsKEY_MANNull() {
                return this.IsNull(this.tableDEPT.KEY_MANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetKEY_MANNull() {
                this[this.tableDEPT.KEY_MANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsOLD_DEPTNull() {
                return this.IsNull(this.tableDEPT.OLD_DEPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetOLD_DEPTNull() {
                this[this.tableDEPT.OLD_DEPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNEW_DEPTNull() {
                return this.IsNull(this.tableDEPT.NEW_DEPTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNEW_DEPTNull() {
                this[this.tableDEPT.NEW_DEPTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsADATENull() {
                return this.IsNull(this.tableDEPT.ADATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetADATENull() {
                this[this.tableDEPT.ADATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDDATENull() {
                return this.IsNull(this.tableDEPT.DDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDDATENull() {
                this[this.tableDEPT.DDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsDEPT_GROUPNull() {
                return this.IsNull(this.tableDEPT.DEPT_GROUPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetDEPT_GROUPNull() {
                this[this.tableDEPT.DEPT_GROUPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsNOBRNull() {
                return this.IsNull(this.tableDEPT.NOBRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetNOBRNull() {
                this[this.tableDEPT.NOBRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsAMTNull() {
                return this.IsNull(this.tableDEPT.AMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetAMTNull() {
                this[this.tableDEPT.AMTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsEMAILNull() {
                return this.IsNull(this.tableDEPT.EMAILColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetEMAILNull() {
                this[this.tableDEPT.EMAILColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsRESNull() {
                return this.IsNull(this.tableDEPT.RESColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetRESNull() {
                this[this.tableDEPT.RESColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsD_NO_DISPNull() {
                return this.IsNull(this.tableDEPT.D_NO_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetD_NO_DISPNull() {
                this[this.tableDEPT.D_NO_DISPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class INSGRLVRowChangeEvent : global::System.EventArgs {
            
            private INSGRLVRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRLVRowChangeEvent(INSGRLVRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRLVRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class INSGRPRowChangeEvent : global::System.EventArgs {
            
            private INSGRPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRPRowChangeEvent(INSGRPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public INSGRPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class SALCODERowChangeEvent : global::System.EventArgs {
            
            private SALCODERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERowChangeEvent(SALCODERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public SALCODERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ROTERowChangeEvent : global::System.EventArgs {
            
            private ROTERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROTERowChangeEvent(ROTERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ROTERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class FAMILYRowChangeEvent : global::System.EventArgs {
            
            private FAMILYRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FAMILYRowChangeEvent(FAMILYRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public FAMILYRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class DEPTRowChangeEvent : global::System.EventArgs {
            
            private DEPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DEPTRowChangeEvent(DEPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public DEPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JBHR.Ins.extDSTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSGRLVTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public INSGRLVTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSGRLV";
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("B_AMT", "B_AMT");
            tableMapping.ColumnMappings.Add("E_AMT", "E_AMT");
            tableMapping.ColumnMappings.Add("EXPA", "EXPA");
            tableMapping.ColumnMappings.Add("EXPB", "EXPB");
            tableMapping.ColumnMappings.Add("EXPC", "EXPC");
            tableMapping.ColumnMappings.Add("EXPD", "EXPD");
            tableMapping.ColumnMappings.Add("EXTA", "EXTA");
            tableMapping.ColumnMappings.Add("EXTB", "EXTB");
            tableMapping.ColumnMappings.Add("EXTC", "EXTC");
            tableMapping.ColumnMappings.Add("EXTD", "EXTD");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("PLAN_NO", "PLAN_NO");
            tableMapping.ColumnMappings.Add("PLAN_NO_DISP", "PLAN_NO_DISP");
            tableMapping.ColumnMappings.Add("ACCI_AMT", "ACCI_AMT");
            tableMapping.ColumnMappings.Add("COM_EXPA", "COM_EXPA");
            tableMapping.ColumnMappings.Add("COM_EXPB", "COM_EXPB");
            tableMapping.ColumnMappings.Add("COM_EXPC", "COM_EXPC");
            tableMapping.ColumnMappings.Add("COM_EXPD", "COM_EXPD");
            tableMapping.ColumnMappings.Add("COM_EXTA", "COM_EXTA");
            tableMapping.ColumnMappings.Add("COM_EXTB", "COM_EXTB");
            tableMapping.ColumnMappings.Add("COM_EXTC", "COM_EXTC");
            tableMapping.ColumnMappings.Add("COM_EXTD", "COM_EXTD");
            tableMapping.ColumnMappings.Add("EXP_AMT", "EXP_AMT");
            tableMapping.ColumnMappings.Add("EXT_AMT", "EXT_AMT");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [INSGRLV] WHERE (([PLAN_NO] = @Original_PLAN_NO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [INSGRLV] ([AMT], [B_AMT], [E_AMT], [EXPA], [EXPB], [EXPC], [EXPD], [EXTA], [EXTB], [EXTC], [EXTD], [KEY_MAN], [KEY_DATE], [PLAN_NO], [PLAN_NO_DISP], [ACCI_AMT], [COM_EXPA], [COM_EXPB], [COM_EXPC], [COM_EXPD], [COM_EXTA], [COM_EXTB], [COM_EXTC], [COM_EXTD], [EXP_AMT], [EXT_AMT]) VALUES (@AMT, @B_AMT, @E_AMT, @EXPA, @EXPB, @EXPC, @EXPD, @EXTA, @EXTB, @EXTC, @EXTD, @KEY_MAN, @KEY_DATE, @PLAN_NO, @PLAN_NO_DISP, @ACCI_AMT, @COM_EXPA, @COM_EXPB, @COM_EXPC, @COM_EXPD, @COM_EXTA, @COM_EXTB, @COM_EXTC, @COM_EXTD, @EXP_AMT, @EXT_AMT);
SELECT AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KEY_DATE, PLAN_NO, PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD, COM_EXTA, COM_EXTB, COM_EXTC, COM_EXTD, EXP_AMT, EXT_AMT FROM INSGRLV WHERE (PLAN_NO = @PLAN_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "B_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "E_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCI_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "ACCI_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXT_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [INSGRLV] SET [AMT] = @AMT, [B_AMT] = @B_AMT, [E_AMT] = @E_AMT, [EXPA] = @EXPA, [EXPB] = @EXPB, [EXPC] = @EXPC, [EXPD] = @EXPD, [EXTA] = @EXTA, [EXTB] = @EXTB, [EXTC] = @EXTC, [EXTD] = @EXTD, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [PLAN_NO] = @PLAN_NO, [PLAN_NO_DISP] = @PLAN_NO_DISP, [ACCI_AMT] = @ACCI_AMT, [COM_EXPA] = @COM_EXPA, [COM_EXPB] = @COM_EXPB, [COM_EXPC] = @COM_EXPC, [COM_EXPD] = @COM_EXPD, [COM_EXTA] = @COM_EXTA, [COM_EXTB] = @COM_EXTB, [COM_EXTC] = @COM_EXTC, [COM_EXTD] = @COM_EXTD, [EXP_AMT] = @EXP_AMT, [EXT_AMT] = @EXT_AMT WHERE (([PLAN_NO] = @Original_PLAN_NO));
SELECT AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KEY_DATE, PLAN_NO, PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD, COM_EXTA, COM_EXTB, COM_EXTC, COM_EXTD, EXP_AMT, EXT_AMT FROM INSGRLV WHERE (PLAN_NO = @PLAN_NO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "B_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "E_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PLAN_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCI_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "ACCI_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXPD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXPD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTC", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COM_EXTD", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "COM_EXTD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXT_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 14, 4, "EXT_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PLAN_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PLAN_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KEY_DATE, PLAN_NO, 
                            PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD, COM_EXTA, COM_EXTB, COM_EXTC, 
                            COM_EXTD, EXP_AMT, EXT_AMT
FROM              INSGRLV";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(extDS.INSGRLVDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual extDS.INSGRLVDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            extDS.INSGRLVDataTable dataTable = new extDS.INSGRLVDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS.INSGRLVDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS dataSet) {
            return this.Adapter.Update(dataSet, "INSGRLV");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_PLAN_NO) {
            if ((Original_PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PLAN_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_PLAN_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    decimal AMT, 
                    decimal B_AMT, 
                    decimal E_AMT, 
                    decimal EXPA, 
                    decimal EXPB, 
                    decimal EXPC, 
                    decimal EXPD, 
                    decimal EXTA, 
                    decimal EXTB, 
                    decimal EXTC, 
                    decimal EXTD, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string PLAN_NO, 
                    string PLAN_NO_DISP, 
                    decimal ACCI_AMT, 
                    decimal COM_EXPA, 
                    decimal COM_EXPB, 
                    decimal COM_EXPC, 
                    decimal COM_EXPD, 
                    decimal COM_EXTA, 
                    decimal COM_EXTB, 
                    decimal COM_EXTC, 
                    decimal COM_EXTD, 
                    decimal EXP_AMT, 
                    decimal EXT_AMT) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(AMT));
            this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(B_AMT));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(E_AMT));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(EXPA));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(EXPB));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(EXPC));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(EXPD));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(EXTA));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(EXTB));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EXTC));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(EXTD));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((System.DateTime)(KEY_DATE));
            if ((PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(PLAN_NO));
            }
            if ((PLAN_NO_DISP == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO_DISP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PLAN_NO_DISP));
            }
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(ACCI_AMT));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(COM_EXPA));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(COM_EXPB));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(COM_EXPC));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(COM_EXPD));
            this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(COM_EXTA));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(COM_EXTB));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(COM_EXTC));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(COM_EXTD));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(EXP_AMT));
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(EXT_AMT));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal AMT, 
                    decimal B_AMT, 
                    decimal E_AMT, 
                    decimal EXPA, 
                    decimal EXPB, 
                    decimal EXPC, 
                    decimal EXPD, 
                    decimal EXTA, 
                    decimal EXTB, 
                    decimal EXTC, 
                    decimal EXTD, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string PLAN_NO, 
                    string PLAN_NO_DISP, 
                    decimal ACCI_AMT, 
                    decimal COM_EXPA, 
                    decimal COM_EXPB, 
                    decimal COM_EXPC, 
                    decimal COM_EXPD, 
                    decimal COM_EXTA, 
                    decimal COM_EXTB, 
                    decimal COM_EXTC, 
                    decimal COM_EXTD, 
                    decimal EXP_AMT, 
                    decimal EXT_AMT, 
                    string Original_PLAN_NO) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(AMT));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(B_AMT));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(E_AMT));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(EXPA));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(EXPB));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(EXPC));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(EXPD));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(EXTA));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(EXTB));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EXTC));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(EXTD));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(KEY_DATE));
            if ((PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(PLAN_NO));
            }
            if ((PLAN_NO_DISP == null)) {
                throw new global::System.ArgumentNullException("PLAN_NO_DISP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(PLAN_NO_DISP));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(ACCI_AMT));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(COM_EXPA));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(COM_EXPB));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(COM_EXPC));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(COM_EXPD));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(COM_EXTA));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(COM_EXTB));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(COM_EXTC));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(COM_EXTD));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(EXP_AMT));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(EXT_AMT));
            if ((Original_PLAN_NO == null)) {
                throw new global::System.ArgumentNullException("Original_PLAN_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_PLAN_NO));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal AMT, 
                    decimal B_AMT, 
                    decimal E_AMT, 
                    decimal EXPA, 
                    decimal EXPB, 
                    decimal EXPC, 
                    decimal EXPD, 
                    decimal EXTA, 
                    decimal EXTB, 
                    decimal EXTC, 
                    decimal EXTD, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string PLAN_NO_DISP, 
                    decimal ACCI_AMT, 
                    decimal COM_EXPA, 
                    decimal COM_EXPB, 
                    decimal COM_EXPC, 
                    decimal COM_EXPD, 
                    decimal COM_EXTA, 
                    decimal COM_EXTB, 
                    decimal COM_EXTC, 
                    decimal COM_EXTD, 
                    decimal EXP_AMT, 
                    decimal EXT_AMT, 
                    string Original_PLAN_NO) {
            return this.Update(AMT, B_AMT, E_AMT, EXPA, EXPB, EXPC, EXPD, EXTA, EXTB, EXTC, EXTD, KEY_MAN, KEY_DATE, Original_PLAN_NO, PLAN_NO_DISP, ACCI_AMT, COM_EXPA, COM_EXPB, COM_EXPC, COM_EXPD, COM_EXTA, COM_EXTB, COM_EXTC, COM_EXTD, EXP_AMT, EXT_AMT, Original_PLAN_NO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class INSGRPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public INSGRPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "INSGRP";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("IN_DATE", "IN_DATE");
            tableMapping.ColumnMappings.Add("OUT_DATE", "OUT_DATE");
            tableMapping.ColumnMappings.Add("CODE", "CODE");
            tableMapping.ColumnMappings.Add("AMT1", "AMT1");
            tableMapping.ColumnMappings.Add("EXP1", "EXP1");
            tableMapping.ColumnMappings.Add("COP1", "COP1");
            tableMapping.ColumnMappings.Add("AMT2", "AMT2");
            tableMapping.ColumnMappings.Add("EXP2", "EXP2");
            tableMapping.ColumnMappings.Add("COP2", "COP2");
            tableMapping.ColumnMappings.Add("AMT3", "AMT3");
            tableMapping.ColumnMappings.Add("EXP3", "EXP3");
            tableMapping.ColumnMappings.Add("COP3", "COP3");
            tableMapping.ColumnMappings.Add("AMT4", "AMT4");
            tableMapping.ColumnMappings.Add("EXP4", "EXP4");
            tableMapping.ColumnMappings.Add("COP4", "COP4");
            tableMapping.ColumnMappings.Add("AMT5", "AMT5");
            tableMapping.ColumnMappings.Add("EXP5", "EXP5");
            tableMapping.ColumnMappings.Add("COP5", "COP5");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("AMT6", "AMT6");
            tableMapping.ColumnMappings.Add("TOTEXP", "TOTEXP");
            tableMapping.ColumnMappings.Add("COPEXP", "COPEXP");
            tableMapping.ColumnMappings.Add("SEQ", "SEQ");
            tableMapping.ColumnMappings.Add("EXP3CAL", "EXP3CAL");
            tableMapping.ColumnMappings.Add("EXP1CAL", "EXP1CAL");
            tableMapping.ColumnMappings.Add("EXP2CAL", "EXP2CAL");
            tableMapping.ColumnMappings.Add("GRP_TYPE", "GRP_TYPE");
            tableMapping.ColumnMappings.Add("PAN", "PAN");
            tableMapping.ColumnMappings.Add("EXP6", "EXP6");
            tableMapping.ColumnMappings.Add("COP6", "COP6");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("BIRDT", "BIRDT");
            tableMapping.ColumnMappings.Add("IDNO", "IDNO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[INSGRP] WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Ori" +
                "ginal_FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE) AND ([OUT_DATE] = @Original_O" +
                "UT_DATE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[INSGRP] ([NOBR], [FA_IDNO], [IN_DATE], [OUT_DATE], [CODE], [AMT1], [EXP1], [COP1], [AMT2], [EXP2], [COP2], [AMT3], [EXP3], [COP3], [AMT4], [EXP4], [COP4], [AMT5], [EXP5], [COP5], [KEY_MAN], [KEY_DATE], [AMT6], [TOTEXP], [COPEXP], [SEQ], [EXP3CAL], [EXP1CAL], [EXP2CAL], [GRP_TYPE], [PAN], [EXP6], [COP6]) VALUES (@NOBR, @FA_IDNO, @IN_DATE, @OUT_DATE, @CODE, @AMT1, @EXP1, @COP1, @AMT2, @EXP2, @COP2, @AMT3, @EXP3, @COP3, @AMT4, @EXP4, @COP4, @AMT5, @EXP5, @COP5, @KEY_MAN, @KEY_DATE, @AMT6, @TOTEXP, @COPEXP, @SEQ, @EXP3CAL, @EXP1CAL, @EXP2CAL, @GRP_TYPE, @PAN, @EXP6, @COP6);
SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, CODE, AMT1, EXP1, COP1, AMT2, EXP2, COP2, AMT3, EXP3, COP3, AMT4, EXP4, COP4, AMT5, EXP5, COP5, KEY_MAN, KEY_DATE, AMT6, TOTEXP, COPEXP, SEQ, EXP3CAL, EXP1CAL, EXP2CAL, GRP_TYPE, PAN, EXP6, COP6 FROM INSGRP WHERE (FA_IDNO = @FA_IDNO) AND (IN_DATE = @IN_DATE) AND (NOBR = @NOBR) AND (OUT_DATE = @OUT_DATE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOTEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COPEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COPEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP3CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP1CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP2CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[INSGRP] SET [NOBR] = @NOBR, [FA_IDNO] = @FA_IDNO, [IN_DATE] = @IN_DATE, [OUT_DATE] = @OUT_DATE, [CODE] = @CODE, [AMT1] = @AMT1, [EXP1] = @EXP1, [COP1] = @COP1, [AMT2] = @AMT2, [EXP2] = @EXP2, [COP2] = @COP2, [AMT3] = @AMT3, [EXP3] = @EXP3, [COP3] = @COP3, [AMT4] = @AMT4, [EXP4] = @EXP4, [COP4] = @COP4, [AMT5] = @AMT5, [EXP5] = @EXP5, [COP5] = @COP5, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [AMT6] = @AMT6, [TOTEXP] = @TOTEXP, [COPEXP] = @COPEXP, [SEQ] = @SEQ, [EXP3CAL] = @EXP3CAL, [EXP1CAL] = @EXP1CAL, [EXP2CAL] = @EXP2CAL, [GRP_TYPE] = @GRP_TYPE, [PAN] = @PAN, [EXP6] = @EXP6, [COP6] = @COP6 WHERE (([NOBR] = @Original_NOBR) AND ([FA_IDNO] = @Original_FA_IDNO) AND ([IN_DATE] = @Original_IN_DATE) AND ([OUT_DATE] = @Original_OUT_DATE));
SELECT NOBR, FA_IDNO, IN_DATE, OUT_DATE, CODE, AMT1, EXP1, COP1, AMT2, EXP2, COP2, AMT3, EXP3, COP3, AMT4, EXP4, COP4, AMT5, EXP5, COP5, KEY_MAN, KEY_DATE, AMT6, TOTEXP, COPEXP, SEQ, EXP3CAL, EXP1CAL, EXP2CAL, GRP_TYPE, PAN, EXP6, COP6 FROM INSGRP WHERE (FA_IDNO = @FA_IDNO) AND (IN_DATE = @IN_DATE) AND (NOBR = @NOBR) AND (OUT_DATE = @OUT_DATE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP3", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP4", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP4", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP5", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP5", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TOTEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TOTEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COPEXP", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COPEXP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SEQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SEQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP3CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP3CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP1CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP1CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP2CAL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EXP2CAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GRP_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EXP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "EXP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COP6", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "COP6", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IN_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IN_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUT_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUT_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          INSGRP.NOBR, INSGRP.FA_IDNO, INSGRP.IN_DATE, INSGRP.OUT_DATE, INSGRP.CODE, INSGRP.AMT1, 
                            INSGRP.EXP1, INSGRP.COP1, INSGRP.AMT2, INSGRP.EXP2, INSGRP.COP2, INSGRP.AMT3, INSGRP.EXP3, 
                            INSGRP.COP3, INSGRP.AMT4, INSGRP.EXP4, INSGRP.COP4, INSGRP.AMT5, INSGRP.EXP5, INSGRP.COP5, 
                            INSGRP.KEY_MAN, INSGRP.KEY_DATE, INSGRP.AMT6, INSGRP.TOTEXP, INSGRP.COPEXP, INSGRP.SEQ, 
                            INSGRP.EXP3CAL, INSGRP.EXP1CAL, INSGRP.EXP2CAL, INSGRP.GRP_TYPE, INSGRP.PAN, INSGRP.EXP6, 
                            INSGRP.COP6, BASE.NAME_C, BASE.BIRDT, BASE.IDNO
FROM              INSGRP INNER JOIN
                            BASE ON INSGRP.NOBR = BASE.NOBR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT          INSGRP.NOBR, INSGRP.FA_IDNO, INSGRP.IN_DATE, INSGRP.OUT_DATE, INSGRP.CODE, INSGRP.AMT1, 
                            INSGRP.EXP1, INSGRP.COP1, INSGRP.AMT2, INSGRP.EXP2, INSGRP.COP2, INSGRP.AMT3, INSGRP.EXP3, 
                            INSGRP.COP3, INSGRP.AMT4, INSGRP.EXP4, INSGRP.COP4, INSGRP.AMT5, INSGRP.EXP5, INSGRP.COP5, 
                            INSGRP.KEY_MAN, INSGRP.KEY_DATE, INSGRP.AMT6, INSGRP.TOTEXP, INSGRP.COPEXP, INSGRP.SEQ, 
                            INSGRP.EXP3CAL, INSGRP.EXP1CAL, INSGRP.EXP2CAL, INSGRP.GRP_TYPE, INSGRP.PAN, INSGRP.EXP6, 
                            INSGRP.COP6, BASE.NAME_C, BASE.BIRDT, BASE.IDNO
FROM              INSGRP INNER JOIN
                            BASE ON INSGRP.NOBR = BASE.NOBR
where 1=0";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(extDS.INSGRPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual extDS.INSGRPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            extDS.INSGRPDataTable dataTable = new extDS.INSGRPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByInit(extDS.INSGRPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual extDS.INSGRPDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            extDS.INSGRPDataTable dataTable = new extDS.INSGRPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS.INSGRPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS dataSet) {
            return this.Adapter.Update(dataSet, "INSGRP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_FA_IDNO, System.DateTime Original_IN_DATE, System.DateTime Original_OUT_DATE) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_IN_DATE));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_OUT_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NOBR, 
                    string FA_IDNO, 
                    System.DateTime IN_DATE, 
                    System.DateTime OUT_DATE, 
                    string CODE, 
                    decimal AMT1, 
                    decimal EXP1, 
                    decimal COP1, 
                    decimal AMT2, 
                    decimal EXP2, 
                    decimal COP2, 
                    decimal AMT3, 
                    decimal EXP3, 
                    decimal COP3, 
                    decimal AMT4, 
                    decimal EXP4, 
                    decimal COP4, 
                    decimal AMT5, 
                    decimal EXP5, 
                    decimal COP5, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal AMT6, 
                    decimal TOTEXP, 
                    decimal COPEXP, 
                    string SEQ, 
                    bool EXP3CAL, 
                    bool EXP1CAL, 
                    bool EXP2CAL, 
                    string GRP_TYPE, 
                    string PAN, 
                    global::System.Nullable<decimal> EXP6, 
                    global::System.Nullable<decimal> COP6) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(OUT_DATE));
            if ((CODE == null)) {
                throw new global::System.ArgumentNullException("CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(CODE));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(AMT1));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(EXP1));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(COP1));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(AMT2));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(EXP2));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(COP2));
            this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(AMT3));
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(EXP3));
            this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(COP3));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(AMT4));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(EXP4));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(COP4));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(AMT5));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(EXP5));
            this.Adapter.InsertCommand.Parameters[19].Value = ((decimal)(COP5));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[21].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(AMT6));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(TOTEXP));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(COPEXP));
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(SEQ));
            }
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(EXP3CAL));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(EXP1CAL));
            this.Adapter.InsertCommand.Parameters[28].Value = ((bool)(EXP2CAL));
            if ((GRP_TYPE == null)) {
                throw new global::System.ArgumentNullException("GRP_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = ((string)(GRP_TYPE));
            }
            if ((PAN == null)) {
                throw new global::System.ArgumentNullException("PAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(PAN));
            }
            if ((EXP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((decimal)(EXP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((COP6.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(COP6.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    string FA_IDNO, 
                    System.DateTime IN_DATE, 
                    System.DateTime OUT_DATE, 
                    string CODE, 
                    decimal AMT1, 
                    decimal EXP1, 
                    decimal COP1, 
                    decimal AMT2, 
                    decimal EXP2, 
                    decimal COP2, 
                    decimal AMT3, 
                    decimal EXP3, 
                    decimal COP3, 
                    decimal AMT4, 
                    decimal EXP4, 
                    decimal COP4, 
                    decimal AMT5, 
                    decimal EXP5, 
                    decimal COP5, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal AMT6, 
                    decimal TOTEXP, 
                    decimal COPEXP, 
                    string SEQ, 
                    bool EXP3CAL, 
                    bool EXP1CAL, 
                    bool EXP2CAL, 
                    string GRP_TYPE, 
                    string PAN, 
                    global::System.Nullable<decimal> EXP6, 
                    global::System.Nullable<decimal> COP6, 
                    string Original_NOBR, 
                    string Original_FA_IDNO, 
                    System.DateTime Original_IN_DATE, 
                    System.DateTime Original_OUT_DATE) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(IN_DATE));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(OUT_DATE));
            if ((CODE == null)) {
                throw new global::System.ArgumentNullException("CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(CODE));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(AMT1));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(EXP1));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(COP1));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(AMT2));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(EXP2));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(COP2));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(AMT3));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(EXP3));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(COP3));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(AMT4));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(EXP4));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(COP4));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(AMT5));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(EXP5));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(COP5));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(AMT6));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(TOTEXP));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(COPEXP));
            if ((SEQ == null)) {
                throw new global::System.ArgumentNullException("SEQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(SEQ));
            }
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(EXP3CAL));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(EXP1CAL));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((bool)(EXP2CAL));
            if ((GRP_TYPE == null)) {
                throw new global::System.ArgumentNullException("GRP_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(GRP_TYPE));
            }
            if ((PAN == null)) {
                throw new global::System.ArgumentNullException("PAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(PAN));
            }
            if ((EXP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(EXP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((COP6.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(COP6.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_NOBR));
            }
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_FA_IDNO));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_IN_DATE));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_OUT_DATE));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CODE, 
                    decimal AMT1, 
                    decimal EXP1, 
                    decimal COP1, 
                    decimal AMT2, 
                    decimal EXP2, 
                    decimal COP2, 
                    decimal AMT3, 
                    decimal EXP3, 
                    decimal COP3, 
                    decimal AMT4, 
                    decimal EXP4, 
                    decimal COP4, 
                    decimal AMT5, 
                    decimal EXP5, 
                    decimal COP5, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    decimal AMT6, 
                    decimal TOTEXP, 
                    decimal COPEXP, 
                    string SEQ, 
                    bool EXP3CAL, 
                    bool EXP1CAL, 
                    bool EXP2CAL, 
                    string GRP_TYPE, 
                    string PAN, 
                    global::System.Nullable<decimal> EXP6, 
                    global::System.Nullable<decimal> COP6, 
                    string Original_NOBR, 
                    string Original_FA_IDNO, 
                    System.DateTime Original_IN_DATE, 
                    System.DateTime Original_OUT_DATE) {
            return this.Update(Original_NOBR, Original_FA_IDNO, Original_IN_DATE, Original_OUT_DATE, CODE, AMT1, EXP1, COP1, AMT2, EXP2, COP2, AMT3, EXP3, COP3, AMT4, EXP4, COP4, AMT5, EXP5, COP5, KEY_MAN, KEY_DATE, AMT6, TOTEXP, COPEXP, SEQ, EXP3CAL, EXP1CAL, EXP2CAL, GRP_TYPE, PAN, EXP6, COP6, Original_NOBR, Original_FA_IDNO, Original_IN_DATE, Original_OUT_DATE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALCODETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public SALCODETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALCODE";
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            tableMapping.ColumnMappings.Add("SAL_ATTR", "SAL_ATTR");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("SOS_ID", "SOS_ID");
            tableMapping.ColumnMappings.Add("WEL", "WEL");
            tableMapping.ColumnMappings.Add("OT", "OT");
            tableMapping.ColumnMappings.Add("MAX_AMT", "MAX_AMT");
            tableMapping.ColumnMappings.Add("MIN_AMT", "MIN_AMT");
            tableMapping.ColumnMappings.Add("CAL_FREQ", "CAL_FREQ");
            tableMapping.ColumnMappings.Add("CAL_TYPE", "CAL_TYPE");
            tableMapping.ColumnMappings.Add("HRS", "HRS");
            tableMapping.ColumnMappings.Add("MONTHTYPE", "MONTHTYPE");
            tableMapping.ColumnMappings.Add("DEFINEDAYS", "DEFINEDAYS");
            tableMapping.ColumnMappings.Add("ADVPAY", "ADVPAY");
            tableMapping.ColumnMappings.Add("ACCCD", "ACCCD");
            tableMapping.ColumnMappings.Add("ATT", "ATT");
            tableMapping.ColumnMappings.Add("DAILY", "DAILY");
            tableMapping.ColumnMappings.Add("RETIRE", "RETIRE");
            tableMapping.ColumnMappings.Add("FORBANK", "FORBANK");
            tableMapping.ColumnMappings.Add("FORCASH", "FORCASH");
            tableMapping.ColumnMappings.Add("NOTFREQ", "NOTFREQ");
            tableMapping.ColumnMappings.Add("TAXRATE", "TAXRATE");
            tableMapping.ColumnMappings.Add("YEARPAY", "YEARPAY");
            tableMapping.ColumnMappings.Add("ABSPAY", "ABSPAY");
            tableMapping.ColumnMappings.Add("INSLAB", "INSLAB");
            tableMapping.ColumnMappings.Add("LATER", "LATER");
            tableMapping.ColumnMappings.Add("SAL_ENAME", "SAL_ENAME");
            tableMapping.ColumnMappings.Add("OLDRETIRE", "OLDRETIRE");
            tableMapping.ColumnMappings.Add("SALBASD1", "SALBASD1");
            tableMapping.ColumnMappings.Add("SAL_CODE_DISP", "SAL_CODE_DISP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SALCODE] WHERE (([SAL_CODE] = @Original_SAL_CODE) AND ([SAL_NAME] = @Original_SAL_NAME) AND ([SAL_ATTR] = @Original_SAL_ATTR) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([SOS_ID] = @Original_SOS_ID) AND ([WEL] = @Original_WEL) AND ([OT] = @Original_OT) AND ([MAX_AMT] = @Original_MAX_AMT) AND ([MIN_AMT] = @Original_MIN_AMT) AND ([CAL_FREQ] = @Original_CAL_FREQ) AND ([CAL_TYPE] = @Original_CAL_TYPE) AND ([HRS] = @Original_HRS) AND ([MONTHTYPE] = @Original_MONTHTYPE) AND ([DEFINEDAYS] = @Original_DEFINEDAYS) AND ([ADVPAY] = @Original_ADVPAY) AND ([ACCCD] = @Original_ACCCD) AND ([ATT] = @Original_ATT) AND ([DAILY] = @Original_DAILY) AND ([RETIRE] = @Original_RETIRE) AND ([FORBANK] = @Original_FORBANK) AND ([FORCASH] = @Original_FORCASH) AND ([NOTFREQ] = @Original_NOTFREQ) AND ([TAXRATE] = @Original_TAXRATE) AND ([YEARPAY] = @Original_YEARPAY) AND ([ABSPAY] = @Original_ABSPAY) AND ([INSLAB] = @Original_INSLAB) AND ([LATER] = @Original_LATER) AND ([SAL_ENAME] = @Original_SAL_ENAME) AND ([OLDRETIRE] = @Original_OLDRETIRE) AND ([SALBASD1] = @Original_SALBASD1) AND ((@IsNull_SAL_CODE_DISP = 1 AND [SAL_CODE_DISP] IS NULL) OR ([SAL_CODE_DISP] = @Original_SAL_CODE_DISP)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAL_CODE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SALCODE] ([SAL_CODE], [SAL_NAME], [SAL_ATTR], [KEY_MAN], [KEY_DATE], [SOS_ID], [WEL], [OT], [MAX_AMT], [MIN_AMT], [CAL_FREQ], [CAL_TYPE], [HRS], [MONTHTYPE], [DEFINEDAYS], [ADVPAY], [ACCCD], [ATT], [DAILY], [RETIRE], [FORBANK], [FORCASH], [NOTFREQ], [TAXRATE], [YEARPAY], [ABSPAY], [INSLAB], [LATER], [SAL_ENAME], [OLDRETIRE], [SALBASD1], [SAL_CODE_DISP]) VALUES (@SAL_CODE, @SAL_NAME, @SAL_ATTR, @KEY_MAN, @KEY_DATE, @SOS_ID, @WEL, @OT, @MAX_AMT, @MIN_AMT, @CAL_FREQ, @CAL_TYPE, @HRS, @MONTHTYPE, @DEFINEDAYS, @ADVPAY, @ACCCD, @ATT, @DAILY, @RETIRE, @FORBANK, @FORCASH, @NOTFREQ, @TAXRATE, @YEARPAY, @ABSPAY, @INSLAB, @LATER, @SAL_ENAME, @OLDRETIRE, @SALBASD1, @SAL_CODE_DISP);
SELECT SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP FROM SALCODE WHERE (SAL_CODE = @SAL_CODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[SALCODE] SET [SAL_CODE] = @SAL_CODE, [SAL_NAME] = @SAL_NAME, [SAL_A" +
                "TTR] = @SAL_ATTR, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [SOS_ID] = @SOS_" +
                "ID, [WEL] = @WEL, [OT] = @OT, [MAX_AMT] = @MAX_AMT, [MIN_AMT] = @MIN_AMT, [CAL_F" +
                "REQ] = @CAL_FREQ, [CAL_TYPE] = @CAL_TYPE, [HRS] = @HRS, [MONTHTYPE] = @MONTHTYPE" +
                ", [DEFINEDAYS] = @DEFINEDAYS, [ADVPAY] = @ADVPAY, [ACCCD] = @ACCCD, [ATT] = @ATT" +
                ", [DAILY] = @DAILY, [RETIRE] = @RETIRE, [FORBANK] = @FORBANK, [FORCASH] = @FORCA" +
                "SH, [NOTFREQ] = @NOTFREQ, [TAXRATE] = @TAXRATE, [YEARPAY] = @YEARPAY, [ABSPAY] =" +
                " @ABSPAY, [INSLAB] = @INSLAB, [LATER] = @LATER, [SAL_ENAME] = @SAL_ENAME, [OLDRE" +
                "TIRE] = @OLDRETIRE, [SALBASD1] = @SALBASD1, [SAL_CODE_DISP] = @SAL_CODE_DISP WHE" +
                "RE (([SAL_CODE] = @Original_SAL_CODE) AND ([SAL_NAME] = @Original_SAL_NAME) AND " +
                "([SAL_ATTR] = @Original_SAL_ATTR) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_" +
                "DATE] = @Original_KEY_DATE) AND ([SOS_ID] = @Original_SOS_ID) AND ([WEL] = @Orig" +
                "inal_WEL) AND ([OT] = @Original_OT) AND ([MAX_AMT] = @Original_MAX_AMT) AND ([MI" +
                "N_AMT] = @Original_MIN_AMT) AND ([CAL_FREQ] = @Original_CAL_FREQ) AND ([CAL_TYPE" +
                "] = @Original_CAL_TYPE) AND ([HRS] = @Original_HRS) AND ([MONTHTYPE] = @Original" +
                "_MONTHTYPE) AND ([DEFINEDAYS] = @Original_DEFINEDAYS) AND ([ADVPAY] = @Original_" +
                "ADVPAY) AND ([ACCCD] = @Original_ACCCD) AND ([ATT] = @Original_ATT) AND ([DAILY]" +
                " = @Original_DAILY) AND ([RETIRE] = @Original_RETIRE) AND ([FORBANK] = @Original" +
                "_FORBANK) AND ([FORCASH] = @Original_FORCASH) AND ([NOTFREQ] = @Original_NOTFREQ" +
                ") AND ([TAXRATE] = @Original_TAXRATE) AND ([YEARPAY] = @Original_YEARPAY) AND ([" +
                "ABSPAY] = @Original_ABSPAY) AND ([INSLAB] = @Original_INSLAB) AND ([LATER] = @Or" +
                "iginal_LATER) AND ([SAL_ENAME] = @Original_SAL_ENAME) AND ([OLDRETIRE] = @Origin" +
                "al_OLDRETIRE) AND ([SALBASD1] = @Original_SALBASD1) AND ((@IsNull_SAL_CODE_DISP " +
                "= 1 AND [SAL_CODE_DISP] IS NULL) OR ([SAL_CODE_DISP] = @Original_SAL_CODE_DISP))" +
                ");\r\nSELECT SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX" +
                "_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, AT" +
                "T, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, L" +
                "ATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP FROM SALCODE WHERE (SAL_CODE" +
                " = @SAL_CODE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAL_CODE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP FROM dbo.SALCODE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(extDS.SALCODEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual extDS.SALCODEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            extDS.SALCODEDataTable dataTable = new extDS.SALCODEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS.SALCODEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS dataSet) {
            return this.Adapter.Update(dataSet, "SALCODE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP) {
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SAL_CODE));
            }
            if ((Original_SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SAL_NAME));
            }
            if ((Original_SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ATTR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SAL_ATTR));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_SOS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SOS_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SOS_ID));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_WEL));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_OT));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_MAX_AMT));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_MIN_AMT));
            if ((Original_CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_FREQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CAL_FREQ));
            }
            if ((Original_CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CAL_TYPE));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_HRS));
            if ((Original_MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_MONTHTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_MONTHTYPE));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_DEFINEDAYS));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_ADVPAY));
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ACCCD));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_ATT));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_DAILY));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_RETIRE));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_FORBANK));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_FORCASH));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_NOTFREQ));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_TAXRATE));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_YEARPAY));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_ABSPAY));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_INSLAB));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_LATER));
            if ((Original_SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_SAL_ENAME));
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_OLDRETIRE));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_SALBASD1));
            if ((Original_SAL_CODE_DISP == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_SAL_CODE_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SAL_CODE, 
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP) {
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SAL_CODE));
            }
            if ((SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SAL_NAME));
            }
            if ((SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("SAL_ATTR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SAL_ATTR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((SOS_ID == null)) {
                throw new global::System.ArgumentNullException("SOS_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SOS_ID));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(WEL));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(OT));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(MAX_AMT));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(MIN_AMT));
            if ((CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("CAL_FREQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CAL_FREQ));
            }
            if ((CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("CAL_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CAL_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(HRS));
            if ((MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("MONTHTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MONTHTYPE));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(DEFINEDAYS));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(ADVPAY));
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ACCCD));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(ATT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(DAILY));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(RETIRE));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(FORBANK));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(FORCASH));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(NOTFREQ));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(TAXRATE));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(YEARPAY));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(ABSPAY));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(INSLAB));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(LATER));
            if ((SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("SAL_ENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(SAL_ENAME));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(OLDRETIRE));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(SALBASD1));
            if ((SAL_CODE_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(SAL_CODE_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAL_CODE, 
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP, 
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP) {
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SAL_CODE));
            }
            if ((SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SAL_NAME));
            }
            if ((SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("SAL_ATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SAL_ATTR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((SOS_ID == null)) {
                throw new global::System.ArgumentNullException("SOS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SOS_ID));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(WEL));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(OT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(MAX_AMT));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(MIN_AMT));
            if ((CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("CAL_FREQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CAL_FREQ));
            }
            if ((CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("CAL_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CAL_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(HRS));
            if ((MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("MONTHTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MONTHTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(DEFINEDAYS));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(ADVPAY));
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ACCCD));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(ATT));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(DAILY));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(RETIRE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(FORBANK));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(FORCASH));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(NOTFREQ));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(TAXRATE));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(YEARPAY));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(ABSPAY));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(INSLAB));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(LATER));
            if ((SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("SAL_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(SAL_ENAME));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(OLDRETIRE));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(SALBASD1));
            if ((SAL_CODE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(SAL_CODE_DISP));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_SAL_CODE));
            }
            if ((Original_SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_SAL_NAME));
            }
            if ((Original_SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_SAL_ATTR));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_SOS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SOS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_SOS_ID));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(Original_WEL));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_OT));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_MAX_AMT));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_MIN_AMT));
            if ((Original_CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_FREQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_CAL_FREQ));
            }
            if ((Original_CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_CAL_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_HRS));
            if ((Original_MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_MONTHTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_MONTHTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_DEFINEDAYS));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_ADVPAY));
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ACCCD));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_ATT));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(Original_DAILY));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_RETIRE));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(Original_FORBANK));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(Original_FORCASH));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(Original_NOTFREQ));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(Original_TAXRATE));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_YEARPAY));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_ABSPAY));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_INSLAB));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_LATER));
            if ((Original_SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_SAL_ENAME));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_OLDRETIRE));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_SALBASD1));
            if ((Original_SAL_CODE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_SAL_CODE_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP, 
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP) {
            return this.Update(Original_SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP, Original_SAL_CODE, Original_SAL_NAME, Original_SAL_ATTR, Original_KEY_MAN, Original_KEY_DATE, Original_SOS_ID, Original_WEL, Original_OT, Original_MAX_AMT, Original_MIN_AMT, Original_CAL_FREQ, Original_CAL_TYPE, Original_HRS, Original_MONTHTYPE, Original_DEFINEDAYS, Original_ADVPAY, Original_ACCCD, Original_ATT, Original_DAILY, Original_RETIRE, Original_FORBANK, Original_FORCASH, Original_NOTFREQ, Original_TAXRATE, Original_YEARPAY, Original_ABSPAY, Original_INSLAB, Original_LATER, Original_SAL_ENAME, Original_OLDRETIRE, Original_SALBASD1, Original_SAL_CODE_DISP);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ROTETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ROTETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ROTE";
            tableMapping.ColumnMappings.Add("ROTE", "ROTE");
            tableMapping.ColumnMappings.Add("ROTENAME", "ROTENAME");
            tableMapping.ColumnMappings.Add("ON_TIME", "ON_TIME");
            tableMapping.ColumnMappings.Add("OFF_TIME", "OFF_TIME");
            tableMapping.ColumnMappings.Add("RES_B_TIME", "RES_B_TIME");
            tableMapping.ColumnMappings.Add("RES_E_TIME", "RES_E_TIME");
            tableMapping.ColumnMappings.Add("WK_HRS", "WK_HRS");
            tableMapping.ColumnMappings.Add("DK_HRS", "DK_HRS");
            tableMapping.ColumnMappings.Add("MO_HRS", "MO_HRS");
            tableMapping.ColumnMappings.Add("OFFTIME2", "OFFTIME2");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("OVERDAY", "OVERDAY");
            tableMapping.ColumnMappings.Add("NIGHT", "NIGHT");
            tableMapping.ColumnMappings.Add("HOLI_MINS", "HOLI_MINS");
            tableMapping.ColumnMappings.Add("WR_HRSA", "WR_HRSA");
            tableMapping.ColumnMappings.Add("WR_HRSB", "WR_HRSB");
            tableMapping.ColumnMappings.Add("FCOLOR", "FCOLOR");
            tableMapping.ColumnMappings.Add("BCOLOR", "BCOLOR");
            tableMapping.ColumnMappings.Add("OT", "OT");
            tableMapping.ColumnMappings.Add("RES_B1_TIME", "RES_B1_TIME");
            tableMapping.ColumnMappings.Add("RES_E1_TIME", "RES_E1_TIME");
            tableMapping.ColumnMappings.Add("RES_B2_TIME", "RES_B2_TIME");
            tableMapping.ColumnMappings.Add("RES_E2_TIME", "RES_E2_TIME");
            tableMapping.ColumnMappings.Add("RES_B3_TIME", "RES_B3_TIME");
            tableMapping.ColumnMappings.Add("RES_E3_TIME", "RES_E3_TIME");
            tableMapping.ColumnMappings.Add("RES_B4_TIME", "RES_B4_TIME");
            tableMapping.ColumnMappings.Add("RES_E4_TIME", "RES_E4_TIME");
            tableMapping.ColumnMappings.Add("YRREST_HRS", "YRREST_HRS");
            tableMapping.ColumnMappings.Add("RATE2", "RATE2");
            tableMapping.ColumnMappings.Add("EARAWARD", "EARAWARD");
            tableMapping.ColumnMappings.Add("FOODSALCD", "FOODSALCD");
            tableMapping.ColumnMappings.Add("FOODAMT", "FOODAMT");
            tableMapping.ColumnMappings.Add("NIGHTSALCD", "NIGHTSALCD");
            tableMapping.ColumnMappings.Add("NIGHTAMT", "NIGHTAMT");
            tableMapping.ColumnMappings.Add("NIGHTAMT1", "NIGHTAMT1");
            tableMapping.ColumnMappings.Add("NOTFOOD", "NOTFOOD");
            tableMapping.ColumnMappings.Add("FOODAMT1", "FOODAMT1");
            tableMapping.ColumnMappings.Add("WK_HRSA", "WK_HRSA");
            tableMapping.ColumnMappings.Add("WK_HRSB", "WK_HRSB");
            tableMapping.ColumnMappings.Add("ALLLATES", "ALLLATES");
            tableMapping.ColumnMappings.Add("OT_BEGIN", "OT_BEGIN");
            tableMapping.ColumnMappings.Add("DD", "DD");
            tableMapping.ColumnMappings.Add("CALOT", "CALOT");
            tableMapping.ColumnMappings.Add("FOODAMTO", "FOODAMTO");
            tableMapping.ColumnMappings.Add("OVER_TIME", "OVER_TIME");
            tableMapping.ColumnMappings.Add("STR_TIME", "STR_TIME");
            tableMapping.ColumnMappings.Add("SPECSALCD", "SPECSALCD");
            tableMapping.ColumnMappings.Add("SPECAMT", "SPECAMT");
            tableMapping.ColumnMappings.Add("SPECAMT1", "SPECAMT1");
            tableMapping.ColumnMappings.Add("SPECAMT2", "SPECAMT2");
            tableMapping.ColumnMappings.Add("ALLLATES1", "ALLLATES1");
            tableMapping.ColumnMappings.Add("ATT_END", "ATT_END");
            tableMapping.ColumnMappings.Add("HELF", "HELF");
            tableMapping.ColumnMappings.Add("BEF_NIGHTAMT", "BEF_NIGHTAMT");
            tableMapping.ColumnMappings.Add("AFT_NIGHTAMT", "AFT_NIGHTAMT");
            tableMapping.ColumnMappings.Add("FOODRULE", "FOODRULE");
            tableMapping.ColumnMappings.Add("NIGHTRULE", "NIGHTRULE");
            tableMapping.ColumnMappings.Add("SPECRULE", "SPECRULE");
            tableMapping.ColumnMappings.Add("SORT", "SORT");
            tableMapping.ColumnMappings.Add("ROTE_DISP", "ROTE_DISP");
            tableMapping.ColumnMappings.Add("HOLIDAY_ADDMIN", "HOLIDAY_ADDMIN");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ROTE] WHERE (([ROTE] = @Original_ROTE))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ROTE] ([ROTE], [ROTENAME], [ON_TIME], [OFF_TIME], [RES_B_TIME]" +
                ", [RES_E_TIME], [WK_HRS], [DK_HRS], [MO_HRS], [OFFTIME2], [KEY_MAN], [KEY_DATE]," +
                " [OVERDAY], [NIGHT], [HOLI_MINS], [WR_HRSA], [WR_HRSB], [FCOLOR], [BCOLOR], [OT]" +
                ", [RES_B1_TIME], [RES_E1_TIME], [RES_B2_TIME], [RES_E2_TIME], [RES_B3_TIME], [RE" +
                "S_E3_TIME], [RES_B4_TIME], [RES_E4_TIME], [YRREST_HRS], [RATE2], [EARAWARD], [FO" +
                "ODSALCD], [FOODAMT], [NIGHTSALCD], [NIGHTAMT], [NIGHTAMT1], [NOTFOOD], [FOODAMT1" +
                "], [WK_HRSA], [WK_HRSB], [ALLLATES], [OT_BEGIN], [DD], [CALOT], [FOODAMTO], [OVE" +
                "R_TIME], [STR_TIME], [SPECSALCD], [SPECAMT], [SPECAMT1], [SPECAMT2], [ALLLATES1]" +
                ", [ATT_END], [HELF], [BEF_NIGHTAMT], [AFT_NIGHTAMT], [FOODRULE], [NIGHTRULE], [S" +
                "PECRULE], [SORT], [ROTE_DISP], [HOLIDAY_ADDMIN]) VALUES (@ROTE, @ROTENAME, @ON_T" +
                "IME, @OFF_TIME, @RES_B_TIME, @RES_E_TIME, @WK_HRS, @DK_HRS, @MO_HRS, @OFFTIME2, " +
                "@KEY_MAN, @KEY_DATE, @OVERDAY, @NIGHT, @HOLI_MINS, @WR_HRSA, @WR_HRSB, @FCOLOR, " +
                "@BCOLOR, @OT, @RES_B1_TIME, @RES_E1_TIME, @RES_B2_TIME, @RES_E2_TIME, @RES_B3_TI" +
                "ME, @RES_E3_TIME, @RES_B4_TIME, @RES_E4_TIME, @YRREST_HRS, @RATE2, @EARAWARD, @F" +
                "OODSALCD, @FOODAMT, @NIGHTSALCD, @NIGHTAMT, @NIGHTAMT1, @NOTFOOD, @FOODAMT1, @WK" +
                "_HRSA, @WK_HRSB, @ALLLATES, @OT_BEGIN, @DD, @CALOT, @FOODAMTO, @OVER_TIME, @STR_" +
                "TIME, @SPECSALCD, @SPECAMT, @SPECAMT1, @SPECAMT2, @ALLLATES1, @ATT_END, @HELF, @" +
                "BEF_NIGHTAMT, @AFT_NIGHTAMT, @FOODRULE, @NIGHTRULE, @SPECRULE, @SORT, @ROTE_DISP" +
                ", @HOLIDAY_ADDMIN);\r\nSELECT ROTE, ROTENAME, ON_TIME, OFF_TIME, RES_B_TIME, RES_E" +
                "_TIME, WK_HRS, DK_HRS, MO_HRS, OFFTIME2, KEY_MAN, KEY_DATE, OVERDAY, NIGHT, HOLI" +
                "_MINS, WR_HRSA, WR_HRSB, FCOLOR, BCOLOR, OT, RES_B1_TIME, RES_E1_TIME, RES_B2_TI" +
                "ME, RES_E2_TIME, RES_B3_TIME, RES_E3_TIME, RES_B4_TIME, RES_E4_TIME, YRREST_HRS," +
                " RATE2, EARAWARD, FOODSALCD, FOODAMT, NIGHTSALCD, NIGHTAMT, NIGHTAMT1, NOTFOOD, " +
                "FOODAMT1, WK_HRSA, WK_HRSB, ALLLATES, OT_BEGIN, DD, CALOT, FOODAMTO, OVER_TIME, " +
                "STR_TIME, SPECSALCD, SPECAMT, SPECAMT1, SPECAMT2, ALLLATES1, ATT_END, HELF, BEF_" +
                "NIGHTAMT, AFT_NIGHTAMT, FOODRULE, NIGHTRULE, SPECRULE, SORT, ROTE_DISP, HOLIDAY_" +
                "ADDMIN FROM ROTE WHERE (ROTE = @ROTE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ON_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ON_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OFF_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OFF_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DK_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DK_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MO_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MO_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OFFTIME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OFFTIME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVERDAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVERDAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIGHT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLI_MINS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOLI_MINS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WR_HRSA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WR_HRSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WR_HRSB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WR_HRSB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FCOLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "BCOLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B1_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B1_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E1_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E1_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B2_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B2_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E2_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E2_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B3_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B3_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E3_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E3_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B4_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B4_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E4_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E4_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YRREST_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YRREST_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EARAWARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EARAWARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODSALCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOODSALCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOODAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTSALCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIGHTSALCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NIGHTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTAMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NIGHTAMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFOOD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODAMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOODAMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_HRSA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_HRSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_HRSB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_HRSB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLLATES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ALLLATES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_BEGIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT_BEGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODAMTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOODAMTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVER_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVER_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STR_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STR_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECSALCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPECSALCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SPECAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECAMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SPECAMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECAMT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SPECAMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLLATES1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ALLLATES1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT_END", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT_END", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BEF_NIGHTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "BEF_NIGHTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFT_NIGHTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AFT_NIGHTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODRULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOODRULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTRULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIGHTRULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECRULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPECRULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLIDAY_ADDMIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLIDAY_ADDMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ROTE] SET [ROTE] = @ROTE, [ROTENAME] = @ROTENAME, [ON_TIME] = @ON_T" +
                "IME, [OFF_TIME] = @OFF_TIME, [RES_B_TIME] = @RES_B_TIME, [RES_E_TIME] = @RES_E_T" +
                "IME, [WK_HRS] = @WK_HRS, [DK_HRS] = @DK_HRS, [MO_HRS] = @MO_HRS, [OFFTIME2] = @O" +
                "FFTIME2, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [OVERDAY] = @OVERDAY, [NI" +
                "GHT] = @NIGHT, [HOLI_MINS] = @HOLI_MINS, [WR_HRSA] = @WR_HRSA, [WR_HRSB] = @WR_H" +
                "RSB, [FCOLOR] = @FCOLOR, [BCOLOR] = @BCOLOR, [OT] = @OT, [RES_B1_TIME] = @RES_B1" +
                "_TIME, [RES_E1_TIME] = @RES_E1_TIME, [RES_B2_TIME] = @RES_B2_TIME, [RES_E2_TIME]" +
                " = @RES_E2_TIME, [RES_B3_TIME] = @RES_B3_TIME, [RES_E3_TIME] = @RES_E3_TIME, [RE" +
                "S_B4_TIME] = @RES_B4_TIME, [RES_E4_TIME] = @RES_E4_TIME, [YRREST_HRS] = @YRREST_" +
                "HRS, [RATE2] = @RATE2, [EARAWARD] = @EARAWARD, [FOODSALCD] = @FOODSALCD, [FOODAM" +
                "T] = @FOODAMT, [NIGHTSALCD] = @NIGHTSALCD, [NIGHTAMT] = @NIGHTAMT, [NIGHTAMT1] =" +
                " @NIGHTAMT1, [NOTFOOD] = @NOTFOOD, [FOODAMT1] = @FOODAMT1, [WK_HRSA] = @WK_HRSA," +
                " [WK_HRSB] = @WK_HRSB, [ALLLATES] = @ALLLATES, [OT_BEGIN] = @OT_BEGIN, [DD] = @D" +
                "D, [CALOT] = @CALOT, [FOODAMTO] = @FOODAMTO, [OVER_TIME] = @OVER_TIME, [STR_TIME" +
                "] = @STR_TIME, [SPECSALCD] = @SPECSALCD, [SPECAMT] = @SPECAMT, [SPECAMT1] = @SPE" +
                "CAMT1, [SPECAMT2] = @SPECAMT2, [ALLLATES1] = @ALLLATES1, [ATT_END] = @ATT_END, [" +
                "HELF] = @HELF, [BEF_NIGHTAMT] = @BEF_NIGHTAMT, [AFT_NIGHTAMT] = @AFT_NIGHTAMT, [" +
                "FOODRULE] = @FOODRULE, [NIGHTRULE] = @NIGHTRULE, [SPECRULE] = @SPECRULE, [SORT] " +
                "= @SORT, [ROTE_DISP] = @ROTE_DISP, [HOLIDAY_ADDMIN] = @HOLIDAY_ADDMIN WHERE (([R" +
                "OTE] = @Original_ROTE));\r\nSELECT ROTE, ROTENAME, ON_TIME, OFF_TIME, RES_B_TIME, " +
                "RES_E_TIME, WK_HRS, DK_HRS, MO_HRS, OFFTIME2, KEY_MAN, KEY_DATE, OVERDAY, NIGHT," +
                " HOLI_MINS, WR_HRSA, WR_HRSB, FCOLOR, BCOLOR, OT, RES_B1_TIME, RES_E1_TIME, RES_" +
                "B2_TIME, RES_E2_TIME, RES_B3_TIME, RES_E3_TIME, RES_B4_TIME, RES_E4_TIME, YRREST" +
                "_HRS, RATE2, EARAWARD, FOODSALCD, FOODAMT, NIGHTSALCD, NIGHTAMT, NIGHTAMT1, NOTF" +
                "OOD, FOODAMT1, WK_HRSA, WK_HRSB, ALLLATES, OT_BEGIN, DD, CALOT, FOODAMTO, OVER_T" +
                "IME, STR_TIME, SPECSALCD, SPECAMT, SPECAMT1, SPECAMT2, ALLLATES1, ATT_END, HELF," +
                " BEF_NIGHTAMT, AFT_NIGHTAMT, FOODRULE, NIGHTRULE, SPECRULE, SORT, ROTE_DISP, HOL" +
                "IDAY_ADDMIN FROM ROTE WHERE (ROTE = @ROTE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ON_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ON_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OFF_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OFF_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DK_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DK_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MO_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MO_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OFFTIME2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OFFTIME2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVERDAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVERDAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIGHT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLI_MINS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HOLI_MINS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WR_HRSA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WR_HRSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WR_HRSB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WR_HRSB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FCOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FCOLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BCOLOR", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "BCOLOR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B1_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B1_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E1_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E1_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B2_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B2_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E2_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E2_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B3_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B3_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E3_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E3_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_B4_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_B4_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES_E4_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES_E4_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YRREST_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YRREST_HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RATE2", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RATE2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EARAWARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EARAWARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODSALCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOODSALCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOODAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTSALCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIGHTSALCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NIGHTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTAMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "NIGHTAMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFOOD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFOOD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODAMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOODAMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_HRSA", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_HRSA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_HRSB", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_HRSB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLLATES", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ALLLATES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT_BEGIN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT_BEGIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODAMTO", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "FOODAMTO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OVER_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OVER_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STR_TIME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STR_TIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECSALCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPECSALCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SPECAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECAMT1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SPECAMT1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECAMT2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "SPECAMT2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ALLLATES1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "ALLLATES1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT_END", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT_END", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HELF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HELF", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BEF_NIGHTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "BEF_NIGHTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AFT_NIGHTAMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AFT_NIGHTAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FOODRULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FOODRULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NIGHTRULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NIGHTRULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SPECRULE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SPECRULE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SORT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SORT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLIDAY_ADDMIN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLIDAY_ADDMIN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT ROTE, ROTENAME, ON_TIME, OFF_TIME, RES_B_TIME, RES_E_TIME, WK_HRS, DK_HRS, MO_HRS, OFFTIME2, KEY_MAN, KEY_DATE, OVERDAY, NIGHT, HOLI_MINS, WR_HRSA, WR_HRSB, FCOLOR, BCOLOR, OT, RES_B1_TIME, RES_E1_TIME, RES_B2_TIME, RES_E2_TIME, RES_B3_TIME, RES_E3_TIME, RES_B4_TIME, RES_E4_TIME, YRREST_HRS, RATE2, EARAWARD, FOODSALCD, FOODAMT, NIGHTSALCD, NIGHTAMT, NIGHTAMT1, NOTFOOD, FOODAMT1, WK_HRSA, WK_HRSB, ALLLATES, OT_BEGIN, DD, CALOT, FOODAMTO, OVER_TIME, STR_TIME, SPECSALCD, SPECAMT, SPECAMT1, SPECAMT2, ALLLATES1, ATT_END, HELF, BEF_NIGHTAMT, AFT_NIGHTAMT, FOODRULE, NIGHTRULE, SPECRULE, SORT, ROTE_DISP, HOLIDAY_ADDMIN FROM dbo.ROTE
 ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(extDS.ROTEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual extDS.ROTEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            extDS.ROTEDataTable dataTable = new extDS.ROTEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS.ROTEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS dataSet) {
            return this.Adapter.Update(dataSet, "ROTE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ROTE) {
            if ((Original_ROTE == null)) {
                throw new global::System.ArgumentNullException("Original_ROTE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ROTE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string ROTE, 
                    string ROTENAME, 
                    string ON_TIME, 
                    string OFF_TIME, 
                    string RES_B_TIME, 
                    string RES_E_TIME, 
                    decimal WK_HRS, 
                    decimal DK_HRS, 
                    decimal MO_HRS, 
                    string OFFTIME2, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool OVERDAY, 
                    bool NIGHT, 
                    decimal HOLI_MINS, 
                    decimal WR_HRSA, 
                    decimal WR_HRSB, 
                    decimal FCOLOR, 
                    decimal BCOLOR, 
                    bool OT, 
                    string RES_B1_TIME, 
                    string RES_E1_TIME, 
                    string RES_B2_TIME, 
                    string RES_E2_TIME, 
                    string RES_B3_TIME, 
                    string RES_E3_TIME, 
                    string RES_B4_TIME, 
                    string RES_E4_TIME, 
                    decimal YRREST_HRS, 
                    bool RATE2, 
                    bool EARAWARD, 
                    string FOODSALCD, 
                    decimal FOODAMT, 
                    string NIGHTSALCD, 
                    decimal NIGHTAMT, 
                    decimal NIGHTAMT1, 
                    bool NOTFOOD, 
                    decimal FOODAMT1, 
                    decimal WK_HRSA, 
                    decimal WK_HRSB, 
                    decimal ALLLATES, 
                    string OT_BEGIN, 
                    string DD, 
                    string CALOT, 
                    decimal FOODAMTO, 
                    string OVER_TIME, 
                    string STR_TIME, 
                    string SPECSALCD, 
                    decimal SPECAMT, 
                    decimal SPECAMT1, 
                    decimal SPECAMT2, 
                    decimal ALLLATES1, 
                    string ATT_END, 
                    bool HELF, 
                    decimal BEF_NIGHTAMT, 
                    decimal AFT_NIGHTAMT, 
                    string FOODRULE, 
                    string NIGHTRULE, 
                    string SPECRULE, 
                    int SORT, 
                    string ROTE_DISP, 
                    global::System.Nullable<int> HOLIDAY_ADDMIN) {
            if ((ROTE == null)) {
                throw new global::System.ArgumentNullException("ROTE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ROTE));
            }
            if ((ROTENAME == null)) {
                throw new global::System.ArgumentNullException("ROTENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ROTENAME));
            }
            if ((ON_TIME == null)) {
                throw new global::System.ArgumentNullException("ON_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ON_TIME));
            }
            if ((OFF_TIME == null)) {
                throw new global::System.ArgumentNullException("OFF_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(OFF_TIME));
            }
            if ((RES_B_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(RES_B_TIME));
            }
            if ((RES_E_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(RES_E_TIME));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(WK_HRS));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(DK_HRS));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(MO_HRS));
            if ((OFFTIME2 == null)) {
                throw new global::System.ArgumentNullException("OFFTIME2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(OFFTIME2));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(OVERDAY));
            this.Adapter.InsertCommand.Parameters[13].Value = ((bool)(NIGHT));
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(HOLI_MINS));
            this.Adapter.InsertCommand.Parameters[15].Value = ((decimal)(WR_HRSA));
            this.Adapter.InsertCommand.Parameters[16].Value = ((decimal)(WR_HRSB));
            this.Adapter.InsertCommand.Parameters[17].Value = ((decimal)(FCOLOR));
            this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(BCOLOR));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(OT));
            if ((RES_B1_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B1_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = ((string)(RES_B1_TIME));
            }
            if ((RES_E1_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E1_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = ((string)(RES_E1_TIME));
            }
            if ((RES_B2_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B2_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = ((string)(RES_B2_TIME));
            }
            if ((RES_E2_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E2_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(RES_E2_TIME));
            }
            if ((RES_B3_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B3_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(RES_B3_TIME));
            }
            if ((RES_E3_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E3_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(RES_E3_TIME));
            }
            if ((RES_B4_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B4_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(RES_B4_TIME));
            }
            if ((RES_E4_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E4_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(RES_E4_TIME));
            }
            this.Adapter.InsertCommand.Parameters[28].Value = ((decimal)(YRREST_HRS));
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(RATE2));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(EARAWARD));
            if ((FOODSALCD == null)) {
                throw new global::System.ArgumentNullException("FOODSALCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(FOODSALCD));
            }
            this.Adapter.InsertCommand.Parameters[32].Value = ((decimal)(FOODAMT));
            if ((NIGHTSALCD == null)) {
                throw new global::System.ArgumentNullException("NIGHTSALCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(NIGHTSALCD));
            }
            this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(NIGHTAMT));
            this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(NIGHTAMT1));
            this.Adapter.InsertCommand.Parameters[36].Value = ((bool)(NOTFOOD));
            this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(FOODAMT1));
            this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(WK_HRSA));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(WK_HRSB));
            this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(ALLLATES));
            if ((OT_BEGIN == null)) {
                throw new global::System.ArgumentNullException("OT_BEGIN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(OT_BEGIN));
            }
            if ((DD == null)) {
                throw new global::System.ArgumentNullException("DD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(DD));
            }
            if ((CALOT == null)) {
                throw new global::System.ArgumentNullException("CALOT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(CALOT));
            }
            this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(FOODAMTO));
            if ((OVER_TIME == null)) {
                throw new global::System.ArgumentNullException("OVER_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(OVER_TIME));
            }
            if ((STR_TIME == null)) {
                throw new global::System.ArgumentNullException("STR_TIME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(STR_TIME));
            }
            if ((SPECSALCD == null)) {
                throw new global::System.ArgumentNullException("SPECSALCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(SPECSALCD));
            }
            this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(SPECAMT));
            this.Adapter.InsertCommand.Parameters[49].Value = ((decimal)(SPECAMT1));
            this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(SPECAMT2));
            this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(ALLLATES1));
            if ((ATT_END == null)) {
                throw new global::System.ArgumentNullException("ATT_END");
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(ATT_END));
            }
            this.Adapter.InsertCommand.Parameters[53].Value = ((bool)(HELF));
            this.Adapter.InsertCommand.Parameters[54].Value = ((decimal)(BEF_NIGHTAMT));
            this.Adapter.InsertCommand.Parameters[55].Value = ((decimal)(AFT_NIGHTAMT));
            if ((FOODRULE == null)) {
                throw new global::System.ArgumentNullException("FOODRULE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[56].Value = ((string)(FOODRULE));
            }
            if ((NIGHTRULE == null)) {
                throw new global::System.ArgumentNullException("NIGHTRULE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = ((string)(NIGHTRULE));
            }
            if ((SPECRULE == null)) {
                throw new global::System.ArgumentNullException("SPECRULE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[58].Value = ((string)(SPECRULE));
            }
            this.Adapter.InsertCommand.Parameters[59].Value = ((int)(SORT));
            if ((ROTE_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[60].Value = ((string)(ROTE_DISP));
            }
            if ((HOLIDAY_ADDMIN.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[61].Value = ((int)(HOLIDAY_ADDMIN.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ROTE, 
                    string ROTENAME, 
                    string ON_TIME, 
                    string OFF_TIME, 
                    string RES_B_TIME, 
                    string RES_E_TIME, 
                    decimal WK_HRS, 
                    decimal DK_HRS, 
                    decimal MO_HRS, 
                    string OFFTIME2, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool OVERDAY, 
                    bool NIGHT, 
                    decimal HOLI_MINS, 
                    decimal WR_HRSA, 
                    decimal WR_HRSB, 
                    decimal FCOLOR, 
                    decimal BCOLOR, 
                    bool OT, 
                    string RES_B1_TIME, 
                    string RES_E1_TIME, 
                    string RES_B2_TIME, 
                    string RES_E2_TIME, 
                    string RES_B3_TIME, 
                    string RES_E3_TIME, 
                    string RES_B4_TIME, 
                    string RES_E4_TIME, 
                    decimal YRREST_HRS, 
                    bool RATE2, 
                    bool EARAWARD, 
                    string FOODSALCD, 
                    decimal FOODAMT, 
                    string NIGHTSALCD, 
                    decimal NIGHTAMT, 
                    decimal NIGHTAMT1, 
                    bool NOTFOOD, 
                    decimal FOODAMT1, 
                    decimal WK_HRSA, 
                    decimal WK_HRSB, 
                    decimal ALLLATES, 
                    string OT_BEGIN, 
                    string DD, 
                    string CALOT, 
                    decimal FOODAMTO, 
                    string OVER_TIME, 
                    string STR_TIME, 
                    string SPECSALCD, 
                    decimal SPECAMT, 
                    decimal SPECAMT1, 
                    decimal SPECAMT2, 
                    decimal ALLLATES1, 
                    string ATT_END, 
                    bool HELF, 
                    decimal BEF_NIGHTAMT, 
                    decimal AFT_NIGHTAMT, 
                    string FOODRULE, 
                    string NIGHTRULE, 
                    string SPECRULE, 
                    int SORT, 
                    string ROTE_DISP, 
                    global::System.Nullable<int> HOLIDAY_ADDMIN, 
                    string Original_ROTE) {
            if ((ROTE == null)) {
                throw new global::System.ArgumentNullException("ROTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ROTE));
            }
            if ((ROTENAME == null)) {
                throw new global::System.ArgumentNullException("ROTENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ROTENAME));
            }
            if ((ON_TIME == null)) {
                throw new global::System.ArgumentNullException("ON_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ON_TIME));
            }
            if ((OFF_TIME == null)) {
                throw new global::System.ArgumentNullException("OFF_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(OFF_TIME));
            }
            if ((RES_B_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(RES_B_TIME));
            }
            if ((RES_E_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(RES_E_TIME));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(WK_HRS));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(DK_HRS));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(MO_HRS));
            if ((OFFTIME2 == null)) {
                throw new global::System.ArgumentNullException("OFFTIME2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(OFFTIME2));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(OVERDAY));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(NIGHT));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(HOLI_MINS));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(WR_HRSA));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(WR_HRSB));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(FCOLOR));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(BCOLOR));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(OT));
            if ((RES_B1_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B1_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(RES_B1_TIME));
            }
            if ((RES_E1_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E1_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(RES_E1_TIME));
            }
            if ((RES_B2_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B2_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(RES_B2_TIME));
            }
            if ((RES_E2_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E2_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(RES_E2_TIME));
            }
            if ((RES_B3_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B3_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(RES_B3_TIME));
            }
            if ((RES_E3_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E3_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(RES_E3_TIME));
            }
            if ((RES_B4_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_B4_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(RES_B4_TIME));
            }
            if ((RES_E4_TIME == null)) {
                throw new global::System.ArgumentNullException("RES_E4_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(RES_E4_TIME));
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((decimal)(YRREST_HRS));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(RATE2));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(EARAWARD));
            if ((FOODSALCD == null)) {
                throw new global::System.ArgumentNullException("FOODSALCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(FOODSALCD));
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((decimal)(FOODAMT));
            if ((NIGHTSALCD == null)) {
                throw new global::System.ArgumentNullException("NIGHTSALCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(NIGHTSALCD));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(NIGHTAMT));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(NIGHTAMT1));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((bool)(NOTFOOD));
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(FOODAMT1));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(WK_HRSA));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(WK_HRSB));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(ALLLATES));
            if ((OT_BEGIN == null)) {
                throw new global::System.ArgumentNullException("OT_BEGIN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(OT_BEGIN));
            }
            if ((DD == null)) {
                throw new global::System.ArgumentNullException("DD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(DD));
            }
            if ((CALOT == null)) {
                throw new global::System.ArgumentNullException("CALOT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(CALOT));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(FOODAMTO));
            if ((OVER_TIME == null)) {
                throw new global::System.ArgumentNullException("OVER_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(OVER_TIME));
            }
            if ((STR_TIME == null)) {
                throw new global::System.ArgumentNullException("STR_TIME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(STR_TIME));
            }
            if ((SPECSALCD == null)) {
                throw new global::System.ArgumentNullException("SPECSALCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(SPECSALCD));
            }
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(SPECAMT));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((decimal)(SPECAMT1));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(SPECAMT2));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(ALLLATES1));
            if ((ATT_END == null)) {
                throw new global::System.ArgumentNullException("ATT_END");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(ATT_END));
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(HELF));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((decimal)(BEF_NIGHTAMT));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(AFT_NIGHTAMT));
            if ((FOODRULE == null)) {
                throw new global::System.ArgumentNullException("FOODRULE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((string)(FOODRULE));
            }
            if ((NIGHTRULE == null)) {
                throw new global::System.ArgumentNullException("NIGHTRULE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((string)(NIGHTRULE));
            }
            if ((SPECRULE == null)) {
                throw new global::System.ArgumentNullException("SPECRULE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((string)(SPECRULE));
            }
            this.Adapter.UpdateCommand.Parameters[59].Value = ((int)(SORT));
            if ((ROTE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(ROTE_DISP));
            }
            if ((HOLIDAY_ADDMIN.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((int)(HOLIDAY_ADDMIN.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_ROTE == null)) {
                throw new global::System.ArgumentNullException("Original_ROTE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(Original_ROTE));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ROTENAME, 
                    string ON_TIME, 
                    string OFF_TIME, 
                    string RES_B_TIME, 
                    string RES_E_TIME, 
                    decimal WK_HRS, 
                    decimal DK_HRS, 
                    decimal MO_HRS, 
                    string OFFTIME2, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool OVERDAY, 
                    bool NIGHT, 
                    decimal HOLI_MINS, 
                    decimal WR_HRSA, 
                    decimal WR_HRSB, 
                    decimal FCOLOR, 
                    decimal BCOLOR, 
                    bool OT, 
                    string RES_B1_TIME, 
                    string RES_E1_TIME, 
                    string RES_B2_TIME, 
                    string RES_E2_TIME, 
                    string RES_B3_TIME, 
                    string RES_E3_TIME, 
                    string RES_B4_TIME, 
                    string RES_E4_TIME, 
                    decimal YRREST_HRS, 
                    bool RATE2, 
                    bool EARAWARD, 
                    string FOODSALCD, 
                    decimal FOODAMT, 
                    string NIGHTSALCD, 
                    decimal NIGHTAMT, 
                    decimal NIGHTAMT1, 
                    bool NOTFOOD, 
                    decimal FOODAMT1, 
                    decimal WK_HRSA, 
                    decimal WK_HRSB, 
                    decimal ALLLATES, 
                    string OT_BEGIN, 
                    string DD, 
                    string CALOT, 
                    decimal FOODAMTO, 
                    string OVER_TIME, 
                    string STR_TIME, 
                    string SPECSALCD, 
                    decimal SPECAMT, 
                    decimal SPECAMT1, 
                    decimal SPECAMT2, 
                    decimal ALLLATES1, 
                    string ATT_END, 
                    bool HELF, 
                    decimal BEF_NIGHTAMT, 
                    decimal AFT_NIGHTAMT, 
                    string FOODRULE, 
                    string NIGHTRULE, 
                    string SPECRULE, 
                    int SORT, 
                    string ROTE_DISP, 
                    global::System.Nullable<int> HOLIDAY_ADDMIN, 
                    string Original_ROTE) {
            return this.Update(Original_ROTE, ROTENAME, ON_TIME, OFF_TIME, RES_B_TIME, RES_E_TIME, WK_HRS, DK_HRS, MO_HRS, OFFTIME2, KEY_MAN, KEY_DATE, OVERDAY, NIGHT, HOLI_MINS, WR_HRSA, WR_HRSB, FCOLOR, BCOLOR, OT, RES_B1_TIME, RES_E1_TIME, RES_B2_TIME, RES_E2_TIME, RES_B3_TIME, RES_E3_TIME, RES_B4_TIME, RES_E4_TIME, YRREST_HRS, RATE2, EARAWARD, FOODSALCD, FOODAMT, NIGHTSALCD, NIGHTAMT, NIGHTAMT1, NOTFOOD, FOODAMT1, WK_HRSA, WK_HRSB, ALLLATES, OT_BEGIN, DD, CALOT, FOODAMTO, OVER_TIME, STR_TIME, SPECSALCD, SPECAMT, SPECAMT1, SPECAMT2, ALLLATES1, ATT_END, HELF, BEF_NIGHTAMT, AFT_NIGHTAMT, FOODRULE, NIGHTRULE, SPECRULE, SORT, ROTE_DISP, HOLIDAY_ADDMIN, Original_ROTE);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FAMILYTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public FAMILYTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FAMILY";
            tableMapping.ColumnMappings.Add("FA_IDNO", "FA_IDNO");
            tableMapping.ColumnMappings.Add("FA_NAME", "FA_NAME");
            tableMapping.ColumnMappings.Add("REL_CODE", "REL_CODE");
            tableMapping.ColumnMappings.Add("FA_BIRDT", "FA_BIRDT");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("ADDR", "ADDR");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("GSM", "GSM");
            tableMapping.ColumnMappings.Add("BBC", "BBC");
            tableMapping.ColumnMappings.Add("TAX", "TAX");
            tableMapping.ColumnMappings.Add("AUTOINSLAB", "AUTOINSLAB");
            tableMapping.ColumnMappings.Add("LIVE", "LIVE");
            tableMapping.ColumnMappings.Add("EDUCODE", "EDUCODE");
            tableMapping.ColumnMappings.Add("COMPNY", "COMPNY");
            tableMapping.ColumnMappings.Add("TITLE", "TITLE");
            tableMapping.ColumnMappings.Add("FAMFORN", "FAMFORN");
            tableMapping.ColumnMappings.Add("AUTOINSGRF", "AUTOINSGRF");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[FAMILY] WHERE (([FA_IDNO] = @Original_FA_IDNO) AND ([FA_NAME] = @Original_FA_NAME) AND ([REL_CODE] = @Original_REL_CODE) AND ((@IsNull_FA_BIRDT = 1 AND [FA_BIRDT] IS NULL) OR ([FA_BIRDT] = @Original_FA_BIRDT)) AND ([NOBR] = @Original_NOBR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([ADDR] = @Original_ADDR) AND ([TEL] = @Original_TEL) AND ([GSM] = @Original_GSM) AND ([BBC] = @Original_BBC) AND ([TAX] = @Original_TAX) AND ((@IsNull_AUTOINSLAB = 1 AND [AUTOINSLAB] IS NULL) OR ([AUTOINSLAB] = @Original_AUTOINSLAB)) AND ([LIVE] = @Original_LIVE) AND ([EDUCODE] = @Original_EDUCODE) AND ((@IsNull_COMPNY = 1 AND [COMPNY] IS NULL) OR ([COMPNY] = @Original_COMPNY)) AND ([TITLE] = @Original_TITLE) AND ([FAMFORN] = @Original_FAMFORN) AND ((@IsNull_AUTOINSGRF = 1 AND [AUTOINSGRF] IS NULL) OR ([AUTOINSGRF] = @Original_AUTOINSGRF)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FA_BIRDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTOINSLAB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPNY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTOINSGRF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSGRF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSGRF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSGRF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FAMILY] ([FA_IDNO], [FA_NAME], [REL_CODE], [FA_BIRDT], [NOBR], [KEY_DATE], [KEY_MAN], [ADDR], [TEL], [GSM], [BBC], [TAX], [LIVE], [EDUCODE], [COMPNY], [TITLE], [FAMFORN]) VALUES (@FA_IDNO, @FA_NAME, @REL_CODE, @FA_BIRDT, @NOBR, @KEY_DATE, @KEY_MAN, @ADDR, @TEL, @GSM, @BBC, @TAX, @LIVE, @EDUCODE, @COMPNY, @TITLE, @FAMFORN);
SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN, AUTOINSGRF FROM FAMILY WHERE (FA_IDNO = @FA_IDNO) AND (NOBR = @NOBR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[FAMILY] SET [FA_IDNO] = @FA_IDNO, [FA_NAME] = @FA_NAME, [REL_CODE] = @REL_CODE, [FA_BIRDT] = @FA_BIRDT, [NOBR] = @NOBR, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [ADDR] = @ADDR, [TEL] = @TEL, [GSM] = @GSM, [BBC] = @BBC, [TAX] = @TAX, [LIVE] = @LIVE, [EDUCODE] = @EDUCODE, [COMPNY] = @COMPNY, [TITLE] = @TITLE, [FAMFORN] = @FAMFORN WHERE (([FA_IDNO] = @Original_FA_IDNO) AND ([FA_NAME] = @Original_FA_NAME) AND ([REL_CODE] = @Original_REL_CODE) AND ((@IsNull_FA_BIRDT = 1 AND [FA_BIRDT] IS NULL) OR ([FA_BIRDT] = @Original_FA_BIRDT)) AND ([NOBR] = @Original_NOBR) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([ADDR] = @Original_ADDR) AND ([TEL] = @Original_TEL) AND ([GSM] = @Original_GSM) AND ([BBC] = @Original_BBC) AND ([TAX] = @Original_TAX) AND ((@IsNull_AUTOINSLAB = 1 AND [AUTOINSLAB] IS NULL) OR ([AUTOINSLAB] = @Original_AUTOINSLAB)) AND ([LIVE] = @Original_LIVE) AND ([EDUCODE] = @Original_EDUCODE) AND ((@IsNull_COMPNY = 1 AND [COMPNY] IS NULL) OR ([COMPNY] = @Original_COMPNY)) AND ([TITLE] = @Original_TITLE) AND ([FAMFORN] = @Original_FAMFORN) AND ((@IsNull_AUTOINSGRF = 1 AND [AUTOINSGRF] IS NULL) OR ([AUTOINSGRF] = @Original_AUTOINSGRF)));
SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN, AUTOINSGRF FROM FAMILY WHERE (FA_IDNO = @FA_IDNO) AND (NOBR = @NOBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_IDNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_IDNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_REL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "REL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FA_BIRDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FA_BIRDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FA_BIRDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GSM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "GSM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BBC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BBC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTOINSLAB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LIVE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LIVE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EDUCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EDUCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_COMPNY", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMPNY", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPNY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TITLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TITLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FAMFORN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAMFORN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AUTOINSGRF", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSGRF", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AUTOINSGRF", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AUTOINSGRF", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, " +
                "GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN, AUTOINSGRF FRO" +
                "M dbo.FAMILY";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT DISTINCT FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, NOBR, KEY_DATE, KEY_MAN, AD" +
                "DR, TEL, GSM, BBC, TAX, AUTOINSLAB, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN, AUTOI" +
                "NSGRF FROM dbo.FAMILY\r\nWHERE LEN(FA_IDNO) != 0 ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(extDS.FAMILYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual extDS.FAMILYDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            extDS.FAMILYDataTable dataTable = new extDS.FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNotNull(extDS.FAMILYDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual extDS.FAMILYDataTable GetDataBy() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            extDS.FAMILYDataTable dataTable = new extDS.FAMILYDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS.FAMILYDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS dataSet) {
            return this.Adapter.Update(dataSet, "FAMILY");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    global::System.Nullable<global::System.DateTime> Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    global::System.Nullable<bool> Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN, 
                    global::System.Nullable<bool> Original_AUTOINSGRF) {
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_FA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_FA_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_FA_NAME));
            }
            if ((Original_REL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_REL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_REL_CODE));
            }
            if ((Original_FA_BIRDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_FA_BIRDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_NOBR));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ADDR));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_TEL));
            }
            if ((Original_GSM == null)) {
                throw new global::System.ArgumentNullException("Original_GSM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_GSM));
            }
            if ((Original_BBC == null)) {
                throw new global::System.ArgumentNullException("Original_BBC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_BBC));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((bool)(Original_TAX));
            if ((Original_AUTOINSLAB.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((bool)(Original_AUTOINSLAB.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_LIVE));
            if ((Original_EDUCODE == null)) {
                throw new global::System.ArgumentNullException("Original_EDUCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_EDUCODE));
            }
            if ((Original_COMPNY == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_COMPNY));
            }
            if ((Original_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_TITLE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_TITLE));
            }
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_FAMFORN));
            if ((Original_AUTOINSGRF.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_AUTOINSGRF.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FA_IDNO, 
                    string FA_NAME, 
                    string REL_CODE, 
                    global::System.Nullable<global::System.DateTime> FA_BIRDT, 
                    string NOBR, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN) {
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FA_IDNO));
            }
            if ((FA_NAME == null)) {
                throw new global::System.ArgumentNullException("FA_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FA_NAME));
            }
            if ((REL_CODE == null)) {
                throw new global::System.ArgumentNullException("REL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(REL_CODE));
            }
            if ((FA_BIRDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(FA_BIRDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(ADDR));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(TEL));
            }
            if ((GSM == null)) {
                throw new global::System.ArgumentNullException("GSM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(GSM));
            }
            if ((BBC == null)) {
                throw new global::System.ArgumentNullException("BBC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(BBC));
            }
            this.Adapter.InsertCommand.Parameters[11].Value = ((bool)(TAX));
            this.Adapter.InsertCommand.Parameters[12].Value = ((bool)(LIVE));
            if ((EDUCODE == null)) {
                throw new global::System.ArgumentNullException("EDUCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(EDUCODE));
            }
            if ((COMPNY == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(COMPNY));
            }
            if ((TITLE == null)) {
                throw new global::System.ArgumentNullException("TITLE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(TITLE));
            }
            this.Adapter.InsertCommand.Parameters[16].Value = ((bool)(FAMFORN));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FA_IDNO, 
                    string FA_NAME, 
                    string REL_CODE, 
                    global::System.Nullable<global::System.DateTime> FA_BIRDT, 
                    string NOBR, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN, 
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    global::System.Nullable<global::System.DateTime> Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    global::System.Nullable<bool> Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN, 
                    global::System.Nullable<bool> Original_AUTOINSGRF) {
            if ((FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FA_IDNO));
            }
            if ((FA_NAME == null)) {
                throw new global::System.ArgumentNullException("FA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FA_NAME));
            }
            if ((REL_CODE == null)) {
                throw new global::System.ArgumentNullException("REL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(REL_CODE));
            }
            if ((FA_BIRDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(FA_BIRDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(ADDR));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(TEL));
            }
            if ((GSM == null)) {
                throw new global::System.ArgumentNullException("GSM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(GSM));
            }
            if ((BBC == null)) {
                throw new global::System.ArgumentNullException("BBC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(BBC));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((bool)(TAX));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((bool)(LIVE));
            if ((EDUCODE == null)) {
                throw new global::System.ArgumentNullException("EDUCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(EDUCODE));
            }
            if ((COMPNY == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(COMPNY));
            }
            if ((TITLE == null)) {
                throw new global::System.ArgumentNullException("TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(TITLE));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((bool)(FAMFORN));
            if ((Original_FA_IDNO == null)) {
                throw new global::System.ArgumentNullException("Original_FA_IDNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_FA_IDNO));
            }
            if ((Original_FA_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_FA_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_FA_NAME));
            }
            if ((Original_REL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_REL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_REL_CODE));
            }
            if ((Original_FA_BIRDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_FA_BIRDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_ADDR == null)) {
                throw new global::System.ArgumentNullException("Original_ADDR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_ADDR));
            }
            if ((Original_TEL == null)) {
                throw new global::System.ArgumentNullException("Original_TEL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_TEL));
            }
            if ((Original_GSM == null)) {
                throw new global::System.ArgumentNullException("Original_GSM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_GSM));
            }
            if ((Original_BBC == null)) {
                throw new global::System.ArgumentNullException("Original_BBC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_BBC));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(Original_TAX));
            if ((Original_AUTOINSLAB.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(Original_AUTOINSLAB.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_LIVE));
            if ((Original_EDUCODE == null)) {
                throw new global::System.ArgumentNullException("Original_EDUCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_EDUCODE));
            }
            if ((Original_COMPNY == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_COMPNY));
            }
            if ((Original_TITLE == null)) {
                throw new global::System.ArgumentNullException("Original_TITLE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_TITLE));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_FAMFORN));
            if ((Original_AUTOINSGRF.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_AUTOINSGRF.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FA_NAME, 
                    string REL_CODE, 
                    global::System.Nullable<global::System.DateTime> FA_BIRDT, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string ADDR, 
                    string TEL, 
                    string GSM, 
                    string BBC, 
                    bool TAX, 
                    bool LIVE, 
                    string EDUCODE, 
                    string COMPNY, 
                    string TITLE, 
                    bool FAMFORN, 
                    string Original_FA_IDNO, 
                    string Original_FA_NAME, 
                    string Original_REL_CODE, 
                    global::System.Nullable<global::System.DateTime> Original_FA_BIRDT, 
                    string Original_NOBR, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_ADDR, 
                    string Original_TEL, 
                    string Original_GSM, 
                    string Original_BBC, 
                    bool Original_TAX, 
                    global::System.Nullable<bool> Original_AUTOINSLAB, 
                    bool Original_LIVE, 
                    string Original_EDUCODE, 
                    string Original_COMPNY, 
                    string Original_TITLE, 
                    bool Original_FAMFORN, 
                    global::System.Nullable<bool> Original_AUTOINSGRF) {
            return this.Update(Original_FA_IDNO, FA_NAME, REL_CODE, FA_BIRDT, Original_NOBR, KEY_DATE, KEY_MAN, ADDR, TEL, GSM, BBC, TAX, LIVE, EDUCODE, COMPNY, TITLE, FAMFORN, Original_FA_IDNO, Original_FA_NAME, Original_REL_CODE, Original_FA_BIRDT, Original_NOBR, Original_KEY_DATE, Original_KEY_MAN, Original_ADDR, Original_TEL, Original_GSM, Original_BBC, Original_TAX, Original_AUTOINSLAB, Original_LIVE, Original_EDUCODE, Original_COMPNY, Original_TITLE, Original_FAMFORN, Original_AUTOINSGRF);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public DEPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPT";
            tableMapping.ColumnMappings.Add("D_NO", "D_NO");
            tableMapping.ColumnMappings.Add("D_NAME", "D_NAME");
            tableMapping.ColumnMappings.Add("D_ENAME", "D_ENAME");
            tableMapping.ColumnMappings.Add("PNS", "PNS");
            tableMapping.ColumnMappings.Add("DEPT_TREE", "DEPT_TREE");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("OLD_DEPT", "OLD_DEPT");
            tableMapping.ColumnMappings.Add("NEW_DEPT", "NEW_DEPT");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("DEPT_GROUP", "DEPT_GROUP");
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("AMT", "AMT");
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL");
            tableMapping.ColumnMappings.Add("RES", "RES");
            tableMapping.ColumnMappings.Add("D_NO_DISP", "D_NO_DISP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[DEPT] WHERE (([D_NO] = @Original_D_NO) AND ([D_NAME] = @Original_D_NAME) AND ([D_ENAME] = @Original_D_ENAME) AND ((@IsNull_PNS = 1 AND [PNS] IS NULL) OR ([PNS] = @Original_PNS)) AND ((@IsNull_DEPT_TREE = 1 AND [DEPT_TREE] IS NULL) OR ([DEPT_TREE] = @Original_DEPT_TREE)) AND ((@IsNull_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_MAN)) AND ((@IsNull_OLD_DEPT = 1 AND [OLD_DEPT] IS NULL) OR ([OLD_DEPT] = @Original_OLD_DEPT)) AND ((@IsNull_NEW_DEPT = 1 AND [NEW_DEPT] IS NULL) OR ([NEW_DEPT] = @Original_NEW_DEPT)) AND ((@IsNull_ADATE = 1 AND [ADATE] IS NULL) OR ([ADATE] = @Original_ADATE)) AND ((@IsNull_DDATE = 1 AND [DDATE] IS NULL) OR ([DDATE] = @Original_DDATE)) AND ((@IsNull_DEPT_GROUP = 1 AND [DEPT_GROUP] IS NULL) OR ([DEPT_GROUP] = @Original_DEPT_GROUP)) AND ((@IsNull_NOBR = 1 AND [NOBR] IS NULL) OR ([NOBR] = @Original_NOBR)) AND ((@IsNull_AMT = 1 AND [AMT] IS NULL) OR ([AMT] = @Original_AMT)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_RES = 1 AND [RES] IS NULL) OR ([RES] = @Original_RES)) AND ((@IsNull_D_NO_DISP = 1 AND [D_NO_DISP] IS NULL) OR ([D_NO_DISP] = @Original_D_NO_DISP)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEPT_TREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OLD_DEPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NEW_DEPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEPT_GROUP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOBR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AMT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RES", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_D_NO_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[DEPT] ([D_NO], [D_NAME], [D_ENAME], [PNS], [DEPT_TREE], [KEY_DATE], [KEY_MAN], [OLD_DEPT], [NEW_DEPT], [ADATE], [DDATE], [DEPT_GROUP], [NOBR], [AMT], [EMAIL], [RES], [D_NO_DISP]) VALUES (@D_NO, @D_NAME, @D_ENAME, @PNS, @DEPT_TREE, @KEY_DATE, @KEY_MAN, @OLD_DEPT, @NEW_DEPT, @ADATE, @DDATE, @DEPT_GROUP, @NOBR, @AMT, @EMAIL, @RES, @D_NO_DISP);
SELECT D_NO, D_NAME, D_ENAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP, NOBR, AMT, EMAIL, RES, D_NO_DISP FROM DEPT WHERE (D_NO = @D_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[DEPT] SET [D_NO] = @D_NO, [D_NAME] = @D_NAME, [D_ENAME] = @D_ENAME," +
                " [PNS] = @PNS, [DEPT_TREE] = @DEPT_TREE, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KE" +
                "Y_MAN, [OLD_DEPT] = @OLD_DEPT, [NEW_DEPT] = @NEW_DEPT, [ADATE] = @ADATE, [DDATE]" +
                " = @DDATE, [DEPT_GROUP] = @DEPT_GROUP, [NOBR] = @NOBR, [AMT] = @AMT, [EMAIL] = @" +
                "EMAIL, [RES] = @RES, [D_NO_DISP] = @D_NO_DISP WHERE (([D_NO] = @Original_D_NO) A" +
                "ND ([D_NAME] = @Original_D_NAME) AND ([D_ENAME] = @Original_D_ENAME) AND ((@IsNu" +
                "ll_PNS = 1 AND [PNS] IS NULL) OR ([PNS] = @Original_PNS)) AND ((@IsNull_DEPT_TRE" +
                "E = 1 AND [DEPT_TREE] IS NULL) OR ([DEPT_TREE] = @Original_DEPT_TREE)) AND ((@Is" +
                "Null_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) " +
                "AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_M" +
                "AN)) AND ((@IsNull_OLD_DEPT = 1 AND [OLD_DEPT] IS NULL) OR ([OLD_DEPT] = @Origin" +
                "al_OLD_DEPT)) AND ((@IsNull_NEW_DEPT = 1 AND [NEW_DEPT] IS NULL) OR ([NEW_DEPT] " +
                "= @Original_NEW_DEPT)) AND ((@IsNull_ADATE = 1 AND [ADATE] IS NULL) OR ([ADATE] " +
                "= @Original_ADATE)) AND ((@IsNull_DDATE = 1 AND [DDATE] IS NULL) OR ([DDATE] = @" +
                "Original_DDATE)) AND ((@IsNull_DEPT_GROUP = 1 AND [DEPT_GROUP] IS NULL) OR ([DEP" +
                "T_GROUP] = @Original_DEPT_GROUP)) AND ((@IsNull_NOBR = 1 AND [NOBR] IS NULL) OR " +
                "([NOBR] = @Original_NOBR)) AND ((@IsNull_AMT = 1 AND [AMT] IS NULL) OR ([AMT] = " +
                "@Original_AMT)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Orig" +
                "inal_EMAIL)) AND ((@IsNull_RES = 1 AND [RES] IS NULL) OR ([RES] = @Original_RES)" +
                ") AND ((@IsNull_D_NO_DISP = 1 AND [D_NO_DISP] IS NULL) OR ([D_NO_DISP] = @Origin" +
                "al_D_NO_DISP)));\r\nSELECT D_NO, D_NAME, D_ENAME, PNS, DEPT_TREE, KEY_DATE, KEY_MA" +
                "N, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP, NOBR, AMT, EMAIL, RES, D_NO_DIS" +
                "P FROM DEPT WHERE (D_NO = @D_NO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RES", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PNS", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PNS", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEPT_TREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OLD_DEPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NEW_DEPT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ADATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DEPT_GROUP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NOBR", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AMT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AMT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMAIL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMAIL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RES", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RES", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RES", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_D_NO_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT D_NO, D_NAME, D_ENAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DE" +
                "PT, ADATE, DDATE, DEPT_GROUP, NOBR, AMT, EMAIL, RES, D_NO_DISP FROM dbo.DEPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(extDS.DEPTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual extDS.DEPTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            extDS.DEPTDataTable dataTable = new extDS.DEPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS.DEPTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(extDS dataSet) {
            return this.Adapter.Update(dataSet, "DEPT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    string Original_D_ENAME, 
                    global::System.Nullable<decimal> Original_PNS, 
                    string Original_DEPT_TREE, 
                    global::System.Nullable<global::System.DateTime> Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_DEPT, 
                    string Original_NEW_DEPT, 
                    global::System.Nullable<global::System.DateTime> Original_ADATE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    string Original_DEPT_GROUP, 
                    string Original_NOBR, 
                    global::System.Nullable<decimal> Original_AMT, 
                    string Original_EMAIL, 
                    global::System.Nullable<bool> Original_RES, 
                    string Original_D_NO_DISP) {
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_D_NAME));
            }
            if ((Original_D_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_ENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_D_ENAME));
            }
            if ((Original_PNS.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_PNS.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_DEPT_TREE == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DEPT_TREE));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_DEPT == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_NEW_DEPT == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_NEW_DEPT));
            }
            if ((Original_ADATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_ADATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_DDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_DDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_DEPT_GROUP == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_DEPT_GROUP));
            }
            if ((Original_NOBR == null)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_NOBR));
            }
            if ((Original_AMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_AMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((string)(Original_EMAIL));
            }
            if ((Original_RES.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((bool)(Original_RES.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_D_NO_DISP == null)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_D_NO_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string D_NO, 
                    string D_NAME, 
                    string D_ENAME, 
                    global::System.Nullable<decimal> PNS, 
                    string DEPT_TREE, 
                    global::System.Nullable<global::System.DateTime> KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_DEPT, 
                    string NEW_DEPT, 
                    global::System.Nullable<global::System.DateTime> ADATE, 
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    string DEPT_GROUP, 
                    string NOBR, 
                    global::System.Nullable<decimal> AMT, 
                    string EMAIL, 
                    global::System.Nullable<bool> RES, 
                    string D_NO_DISP) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            if ((D_ENAME == null)) {
                throw new global::System.ArgumentNullException("D_ENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(D_ENAME));
            }
            if ((PNS.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(PNS.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DEPT_TREE == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DEPT_TREE));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((OLD_DEPT == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(OLD_DEPT));
            }
            if ((NEW_DEPT == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(NEW_DEPT));
            }
            if ((ADATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(ADATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((System.DateTime)(DDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DEPT_GROUP == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(DEPT_GROUP));
            }
            if ((NOBR == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(NOBR));
            }
            if ((AMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((decimal)(AMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((EMAIL == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(EMAIL));
            }
            if ((RES.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(RES.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((D_NO_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(D_NO_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NO, 
                    string D_NAME, 
                    string D_ENAME, 
                    global::System.Nullable<decimal> PNS, 
                    string DEPT_TREE, 
                    global::System.Nullable<global::System.DateTime> KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_DEPT, 
                    string NEW_DEPT, 
                    global::System.Nullable<global::System.DateTime> ADATE, 
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    string DEPT_GROUP, 
                    string NOBR, 
                    global::System.Nullable<decimal> AMT, 
                    string EMAIL, 
                    global::System.Nullable<bool> RES, 
                    string D_NO_DISP, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    string Original_D_ENAME, 
                    global::System.Nullable<decimal> Original_PNS, 
                    string Original_DEPT_TREE, 
                    global::System.Nullable<global::System.DateTime> Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_DEPT, 
                    string Original_NEW_DEPT, 
                    global::System.Nullable<global::System.DateTime> Original_ADATE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    string Original_DEPT_GROUP, 
                    string Original_NOBR, 
                    global::System.Nullable<decimal> Original_AMT, 
                    string Original_EMAIL, 
                    global::System.Nullable<bool> Original_RES, 
                    string Original_D_NO_DISP) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            if ((D_ENAME == null)) {
                throw new global::System.ArgumentNullException("D_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(D_ENAME));
            }
            if ((PNS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(PNS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DEPT_TREE == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DEPT_TREE));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            if ((OLD_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(OLD_DEPT));
            }
            if ((NEW_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(NEW_DEPT));
            }
            if ((ADATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(ADATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((DDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(DDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((DEPT_GROUP == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(DEPT_GROUP));
            }
            if ((NOBR == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(NOBR));
            }
            if ((AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(EMAIL));
            }
            if ((RES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(RES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((D_NO_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(D_NO_DISP));
            }
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_D_NAME));
            }
            if ((Original_D_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_D_ENAME));
            }
            if ((Original_PNS.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_PNS.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_DEPT_TREE == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_DEPT_TREE));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_NEW_DEPT == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_NEW_DEPT));
            }
            if ((Original_ADATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(Original_ADATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_DDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_DDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_DEPT_GROUP == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_DEPT_GROUP));
            }
            if ((Original_NOBR == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_NOBR));
            }
            if ((Original_AMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_AMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_EMAIL == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_EMAIL));
            }
            if ((Original_RES.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((bool)(Original_RES.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_D_NO_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(Original_D_NO_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NAME, 
                    string D_ENAME, 
                    global::System.Nullable<decimal> PNS, 
                    string DEPT_TREE, 
                    global::System.Nullable<global::System.DateTime> KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_DEPT, 
                    string NEW_DEPT, 
                    global::System.Nullable<global::System.DateTime> ADATE, 
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    string DEPT_GROUP, 
                    string NOBR, 
                    global::System.Nullable<decimal> AMT, 
                    string EMAIL, 
                    global::System.Nullable<bool> RES, 
                    string D_NO_DISP, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    string Original_D_ENAME, 
                    global::System.Nullable<decimal> Original_PNS, 
                    string Original_DEPT_TREE, 
                    global::System.Nullable<global::System.DateTime> Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_DEPT, 
                    string Original_NEW_DEPT, 
                    global::System.Nullable<global::System.DateTime> Original_ADATE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    string Original_DEPT_GROUP, 
                    string Original_NOBR, 
                    global::System.Nullable<decimal> Original_AMT, 
                    string Original_EMAIL, 
                    global::System.Nullable<bool> Original_RES, 
                    string Original_D_NO_DISP) {
            return this.Update(Original_D_NO, D_NAME, D_ENAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP, NOBR, AMT, EMAIL, RES, D_NO_DISP, Original_D_NO, Original_D_NAME, Original_D_ENAME, Original_PNS, Original_DEPT_TREE, Original_KEY_DATE, Original_KEY_MAN, Original_OLD_DEPT, Original_NEW_DEPT, Original_ADATE, Original_DDATE, Original_DEPT_GROUP, Original_NOBR, Original_AMT, Original_EMAIL, Original_RES, Original_D_NO_DISP);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private INSGRLVTableAdapter _iNSGRLVTableAdapter;
        
        private INSGRPTableAdapter _iNSGRPTableAdapter;
        
        private SALCODETableAdapter _sALCODETableAdapter;
        
        private ROTETableAdapter _rOTETableAdapter;
        
        private FAMILYTableAdapter _fAMILYTableAdapter;
        
        private DEPTTableAdapter _dEPTTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSGRLVTableAdapter INSGRLVTableAdapter {
            get {
                return this._iNSGRLVTableAdapter;
            }
            set {
                this._iNSGRLVTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public INSGRPTableAdapter INSGRPTableAdapter {
            get {
                return this._iNSGRPTableAdapter;
            }
            set {
                this._iNSGRPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALCODETableAdapter SALCODETableAdapter {
            get {
                return this._sALCODETableAdapter;
            }
            set {
                this._sALCODETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ROTETableAdapter ROTETableAdapter {
            get {
                return this._rOTETableAdapter;
            }
            set {
                this._rOTETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public FAMILYTableAdapter FAMILYTableAdapter {
            get {
                return this._fAMILYTableAdapter;
            }
            set {
                this._fAMILYTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DEPTTableAdapter DEPTTableAdapter {
            get {
                return this._dEPTTableAdapter;
            }
            set {
                this._dEPTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._iNSGRLVTableAdapter != null) 
                            && (this._iNSGRLVTableAdapter.Connection != null))) {
                    return this._iNSGRLVTableAdapter.Connection;
                }
                if (((this._iNSGRPTableAdapter != null) 
                            && (this._iNSGRPTableAdapter.Connection != null))) {
                    return this._iNSGRPTableAdapter.Connection;
                }
                if (((this._sALCODETableAdapter != null) 
                            && (this._sALCODETableAdapter.Connection != null))) {
                    return this._sALCODETableAdapter.Connection;
                }
                if (((this._rOTETableAdapter != null) 
                            && (this._rOTETableAdapter.Connection != null))) {
                    return this._rOTETableAdapter.Connection;
                }
                if (((this._fAMILYTableAdapter != null) 
                            && (this._fAMILYTableAdapter.Connection != null))) {
                    return this._fAMILYTableAdapter.Connection;
                }
                if (((this._dEPTTableAdapter != null) 
                            && (this._dEPTTableAdapter.Connection != null))) {
                    return this._dEPTTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._iNSGRLVTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._iNSGRPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALCODETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._rOTETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fAMILYTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dEPTTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateUpdatedRows(extDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iNSGRLVTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSGRLV.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSGRLVTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._iNSGRPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.INSGRP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._iNSGRPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._rOTETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ROTE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._rOTETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateInsertedRows(extDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._iNSGRLVTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSGRLV.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSGRLVTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._iNSGRPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.INSGRP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._iNSGRPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._rOTETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ROTE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._rOTETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private int UpdateDeletedRows(extDS dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fAMILYTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.FAMILY.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fAMILYTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._rOTETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ROTE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._rOTETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSGRPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSGRP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSGRPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._iNSGRLVTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.INSGRLV.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._iNSGRLVTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public virtual int UpdateAll(extDS dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._iNSGRLVTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSGRLVTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._iNSGRPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._iNSGRPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALCODETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALCODETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._rOTETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._rOTETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._fAMILYTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fAMILYTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._dEPTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._iNSGRLVTableAdapter != null)) {
                    revertConnections.Add(this._iNSGRLVTableAdapter, this._iNSGRLVTableAdapter.Connection);
                    this._iNSGRLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSGRLVTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSGRLVTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSGRLVTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSGRLVTableAdapter.Adapter);
                    }
                }
                if ((this._iNSGRPTableAdapter != null)) {
                    revertConnections.Add(this._iNSGRPTableAdapter, this._iNSGRPTableAdapter.Connection);
                    this._iNSGRPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._iNSGRPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._iNSGRPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._iNSGRPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._iNSGRPTableAdapter.Adapter);
                    }
                }
                if ((this._sALCODETableAdapter != null)) {
                    revertConnections.Add(this._sALCODETableAdapter, this._sALCODETableAdapter.Connection);
                    this._sALCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALCODETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALCODETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALCODETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALCODETableAdapter.Adapter);
                    }
                }
                if ((this._rOTETableAdapter != null)) {
                    revertConnections.Add(this._rOTETableAdapter, this._rOTETableAdapter.Connection);
                    this._rOTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._rOTETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._rOTETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._rOTETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._rOTETableAdapter.Adapter);
                    }
                }
                if ((this._fAMILYTableAdapter != null)) {
                    revertConnections.Add(this._fAMILYTableAdapter, this._fAMILYTableAdapter.Connection);
                    this._fAMILYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._fAMILYTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._fAMILYTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fAMILYTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fAMILYTableAdapter.Adapter);
                    }
                }
                if ((this._dEPTTableAdapter != null)) {
                    revertConnections.Add(this._dEPTTableAdapter, this._dEPTTableAdapter.Connection);
                    this._dEPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dEPTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPTTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._iNSGRLVTableAdapter != null)) {
                    this._iNSGRLVTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSGRLVTableAdapter]));
                    this._iNSGRLVTableAdapter.Transaction = null;
                }
                if ((this._iNSGRPTableAdapter != null)) {
                    this._iNSGRPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._iNSGRPTableAdapter]));
                    this._iNSGRPTableAdapter.Transaction = null;
                }
                if ((this._sALCODETableAdapter != null)) {
                    this._sALCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALCODETableAdapter]));
                    this._sALCODETableAdapter.Transaction = null;
                }
                if ((this._rOTETableAdapter != null)) {
                    this._rOTETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._rOTETableAdapter]));
                    this._rOTETableAdapter.Transaction = null;
                }
                if ((this._fAMILYTableAdapter != null)) {
                    this._fAMILYTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._fAMILYTableAdapter]));
                    this._fAMILYTableAdapter.Transaction = null;
                }
                if ((this._dEPTTableAdapter != null)) {
                    this._dEPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dEPTTableAdapter]));
                    this._dEPTTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591