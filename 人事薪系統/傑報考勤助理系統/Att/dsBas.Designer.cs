//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.18033
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JBHR.Att {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsBas")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsBas : global::System.Data.DataSet {
        
        private BASEDataTable tableBASE;
        
        private COMPDataTable tableCOMP;
        
        private DEPTDataTable tableDEPT;
        
        private DEPTSDataTable tableDEPTS;
        
        private JOBDataTable tableJOB;
        
        private JOBLDataTable tableJOBL;
        
        private BASETTSDataTable tableBASETTS;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsBas() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsBas(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["BASE"] != null)) {
                    base.Tables.Add(new BASEDataTable(ds.Tables["BASE"]));
                }
                if ((ds.Tables["COMP"] != null)) {
                    base.Tables.Add(new COMPDataTable(ds.Tables["COMP"]));
                }
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                if ((ds.Tables["DEPTS"] != null)) {
                    base.Tables.Add(new DEPTSDataTable(ds.Tables["DEPTS"]));
                }
                if ((ds.Tables["JOB"] != null)) {
                    base.Tables.Add(new JOBDataTable(ds.Tables["JOB"]));
                }
                if ((ds.Tables["JOBL"] != null)) {
                    base.Tables.Add(new JOBLDataTable(ds.Tables["JOBL"]));
                }
                if ((ds.Tables["BASETTS"] != null)) {
                    base.Tables.Add(new BASETTSDataTable(ds.Tables["BASETTS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BASEDataTable BASE {
            get {
                return this.tableBASE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public COMPDataTable COMP {
            get {
                return this.tableCOMP;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPTDataTable DEPT {
            get {
                return this.tableDEPT;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DEPTSDataTable DEPTS {
            get {
                return this.tableDEPTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JOBDataTable JOB {
            get {
                return this.tableJOB;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JOBLDataTable JOBL {
            get {
                return this.tableJOBL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BASETTSDataTable BASETTS {
            get {
                return this.tableBASETTS;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsBas cln = ((dsBas)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["BASE"] != null)) {
                    base.Tables.Add(new BASEDataTable(ds.Tables["BASE"]));
                }
                if ((ds.Tables["COMP"] != null)) {
                    base.Tables.Add(new COMPDataTable(ds.Tables["COMP"]));
                }
                if ((ds.Tables["DEPT"] != null)) {
                    base.Tables.Add(new DEPTDataTable(ds.Tables["DEPT"]));
                }
                if ((ds.Tables["DEPTS"] != null)) {
                    base.Tables.Add(new DEPTSDataTable(ds.Tables["DEPTS"]));
                }
                if ((ds.Tables["JOB"] != null)) {
                    base.Tables.Add(new JOBDataTable(ds.Tables["JOB"]));
                }
                if ((ds.Tables["JOBL"] != null)) {
                    base.Tables.Add(new JOBLDataTable(ds.Tables["JOBL"]));
                }
                if ((ds.Tables["BASETTS"] != null)) {
                    base.Tables.Add(new BASETTSDataTable(ds.Tables["BASETTS"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableBASE = ((BASEDataTable)(base.Tables["BASE"]));
            if ((initTable == true)) {
                if ((this.tableBASE != null)) {
                    this.tableBASE.InitVars();
                }
            }
            this.tableCOMP = ((COMPDataTable)(base.Tables["COMP"]));
            if ((initTable == true)) {
                if ((this.tableCOMP != null)) {
                    this.tableCOMP.InitVars();
                }
            }
            this.tableDEPT = ((DEPTDataTable)(base.Tables["DEPT"]));
            if ((initTable == true)) {
                if ((this.tableDEPT != null)) {
                    this.tableDEPT.InitVars();
                }
            }
            this.tableDEPTS = ((DEPTSDataTable)(base.Tables["DEPTS"]));
            if ((initTable == true)) {
                if ((this.tableDEPTS != null)) {
                    this.tableDEPTS.InitVars();
                }
            }
            this.tableJOB = ((JOBDataTable)(base.Tables["JOB"]));
            if ((initTable == true)) {
                if ((this.tableJOB != null)) {
                    this.tableJOB.InitVars();
                }
            }
            this.tableJOBL = ((JOBLDataTable)(base.Tables["JOBL"]));
            if ((initTable == true)) {
                if ((this.tableJOBL != null)) {
                    this.tableJOBL.InitVars();
                }
            }
            this.tableBASETTS = ((BASETTSDataTable)(base.Tables["BASETTS"]));
            if ((initTable == true)) {
                if ((this.tableBASETTS != null)) {
                    this.tableBASETTS.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsBas";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsBas.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableBASE = new BASEDataTable();
            base.Tables.Add(this.tableBASE);
            this.tableCOMP = new COMPDataTable();
            base.Tables.Add(this.tableCOMP);
            this.tableDEPT = new DEPTDataTable();
            base.Tables.Add(this.tableDEPT);
            this.tableDEPTS = new DEPTSDataTable();
            base.Tables.Add(this.tableDEPTS);
            this.tableJOB = new JOBDataTable();
            base.Tables.Add(this.tableJOB);
            this.tableJOBL = new JOBLDataTable();
            base.Tables.Add(this.tableJOBL);
            this.tableBASETTS = new BASETTSDataTable();
            base.Tables.Add(this.tableBASETTS);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBASE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCOMP() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDEPT() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDEPTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJOB() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJOBL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBASETTS() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsBas ds = new dsBas();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BASERowChangeEventHandler(object sender, BASERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void COMPRowChangeEventHandler(object sender, COMPRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DEPTRowChangeEventHandler(object sender, DEPTRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DEPTSRowChangeEventHandler(object sender, DEPTSRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JOBRowChangeEventHandler(object sender, JOBRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JOBLRowChangeEventHandler(object sender, JOBLRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BASETTSRowChangeEventHandler(object sender, BASETTSRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BASEDataTable : global::System.Data.TypedTableBase<BASERow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnNAME_C;
            
            private global::System.Data.DataColumn columnNAME_E;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASEDataTable() {
                this.TableName = "BASE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BASEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BASEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAME_CColumn {
                get {
                    return this.columnNAME_C;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NAME_EColumn {
                get {
                    return this.columnNAME_E;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASERow this[int index] {
                get {
                    return ((BASERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASERowChangeEventHandler BASERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASERowChangeEventHandler BASERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASERowChangeEventHandler BASERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASERowChangeEventHandler BASERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBASERow(BASERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASERow AddBASERow(string NOBR, string NAME_C, string NAME_E) {
                BASERow rowBASERow = ((BASERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        NAME_C,
                        NAME_E};
                rowBASERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBASERow);
                return rowBASERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASERow FindByNOBR(string NOBR) {
                return ((BASERow)(this.Rows.Find(new object[] {
                            NOBR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BASEDataTable cln = ((BASEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BASEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnNAME_C = base.Columns["NAME_C"];
                this.columnNAME_E = base.Columns["NAME_E"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnNAME_C = new global::System.Data.DataColumn("NAME_C", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_C);
                this.columnNAME_E = new global::System.Data.DataColumn("NAME_E", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNAME_E);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.Unique = true;
                this.columnNOBR.Caption = "員工編號";
                this.columnNOBR.MaxLength = 50;
                this.columnNAME_C.AllowDBNull = false;
                this.columnNAME_C.Caption = "中文姓名";
                this.columnNAME_C.MaxLength = 50;
                this.columnNAME_E.AllowDBNull = false;
                this.columnNAME_E.Caption = "英文姓名";
                this.columnNAME_E.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASERow NewBASERow() {
                return ((BASERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BASERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BASERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BASERowChanged != null)) {
                    this.BASERowChanged(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BASERowChanging != null)) {
                    this.BASERowChanging(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BASERowDeleted != null)) {
                    this.BASERowDeleted(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BASERowDeleting != null)) {
                    this.BASERowDeleting(this, new BASERowChangeEvent(((BASERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBASERow(BASERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBas ds = new dsBas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BASEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class COMPDataTable : global::System.Data.TypedTableBase<COMPRow> {
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnCOMPNAME;
            
            private global::System.Data.DataColumn columnCHAIRMAN;
            
            private global::System.Data.DataColumn columnCOMPID;
            
            private global::System.Data.DataColumn columnTEL;
            
            private global::System.Data.DataColumn columnFAX;
            
            private global::System.Data.DataColumn columnADDR;
            
            private global::System.Data.DataColumn columnHOUSEID;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnF0103;
            
            private global::System.Data.DataColumn columnF0407;
            
            private global::System.Data.DataColumn columnWORKCD;
            
            private global::System.Data.DataColumn columnTAXID;
            
            private global::System.Data.DataColumn columnACCOUNT;
            
            private global::System.Data.DataColumn columnACCR;
            
            private global::System.Data.DataColumn columnDEFA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPDataTable() {
                this.TableName = "COMP";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal COMPDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected COMPDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPNAMEColumn {
                get {
                    return this.columnCOMPNAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CHAIRMANColumn {
                get {
                    return this.columnCHAIRMAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPIDColumn {
                get {
                    return this.columnCOMPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TELColumn {
                get {
                    return this.columnTEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FAXColumn {
                get {
                    return this.columnFAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRColumn {
                get {
                    return this.columnADDR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HOUSEIDColumn {
                get {
                    return this.columnHOUSEID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F0103Column {
                get {
                    return this.columnF0103;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn F0407Column {
                get {
                    return this.columnF0407;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WORKCDColumn {
                get {
                    return this.columnWORKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXIDColumn {
                get {
                    return this.columnTAXID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCOUNTColumn {
                get {
                    return this.columnACCOUNT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCRColumn {
                get {
                    return this.columnACCR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEFAColumn {
                get {
                    return this.columnDEFA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow this[int index] {
                get {
                    return ((COMPRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event COMPRowChangeEventHandler COMPRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCOMPRow(COMPRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow AddCOMPRow(
                        string COMP, 
                        string COMPNAME, 
                        string CHAIRMAN, 
                        string COMPID, 
                        string TEL, 
                        string FAX, 
                        string ADDR, 
                        string HOUSEID, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string F0103, 
                        string F0407, 
                        string WORKCD, 
                        string TAXID, 
                        string ACCOUNT, 
                        string ACCR, 
                        bool DEFA) {
                COMPRow rowCOMPRow = ((COMPRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        COMP,
                        COMPNAME,
                        CHAIRMAN,
                        COMPID,
                        TEL,
                        FAX,
                        ADDR,
                        HOUSEID,
                        KEY_MAN,
                        KEY_DATE,
                        F0103,
                        F0407,
                        WORKCD,
                        TAXID,
                        ACCOUNT,
                        ACCR,
                        DEFA};
                rowCOMPRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCOMPRow);
                return rowCOMPRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow FindByCOMP(string COMP) {
                return ((COMPRow)(this.Rows.Find(new object[] {
                            COMP})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                COMPDataTable cln = ((COMPDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new COMPDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCOMP = base.Columns["COMP"];
                this.columnCOMPNAME = base.Columns["COMPNAME"];
                this.columnCHAIRMAN = base.Columns["CHAIRMAN"];
                this.columnCOMPID = base.Columns["COMPID"];
                this.columnTEL = base.Columns["TEL"];
                this.columnFAX = base.Columns["FAX"];
                this.columnADDR = base.Columns["ADDR"];
                this.columnHOUSEID = base.Columns["HOUSEID"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnF0103 = base.Columns["F0103"];
                this.columnF0407 = base.Columns["F0407"];
                this.columnWORKCD = base.Columns["WORKCD"];
                this.columnTAXID = base.Columns["TAXID"];
                this.columnACCOUNT = base.Columns["ACCOUNT"];
                this.columnACCR = base.Columns["ACCR"];
                this.columnDEFA = base.Columns["DEFA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnCOMPNAME = new global::System.Data.DataColumn("COMPNAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPNAME);
                this.columnCHAIRMAN = new global::System.Data.DataColumn("CHAIRMAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCHAIRMAN);
                this.columnCOMPID = new global::System.Data.DataColumn("COMPID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMPID);
                this.columnTEL = new global::System.Data.DataColumn("TEL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTEL);
                this.columnFAX = new global::System.Data.DataColumn("FAX", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFAX);
                this.columnADDR = new global::System.Data.DataColumn("ADDR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDR);
                this.columnHOUSEID = new global::System.Data.DataColumn("HOUSEID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOUSEID);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnF0103 = new global::System.Data.DataColumn("F0103", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF0103);
                this.columnF0407 = new global::System.Data.DataColumn("F0407", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF0407);
                this.columnWORKCD = new global::System.Data.DataColumn("WORKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKCD);
                this.columnTAXID = new global::System.Data.DataColumn("TAXID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXID);
                this.columnACCOUNT = new global::System.Data.DataColumn("ACCOUNT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCOUNT);
                this.columnACCR = new global::System.Data.DataColumn("ACCR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCR);
                this.columnDEFA = new global::System.Data.DataColumn("DEFA", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCOMP}, true));
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.Unique = true;
                this.columnCOMP.MaxLength = 50;
                this.columnCOMPNAME.MaxLength = 50;
                this.columnCHAIRMAN.AllowDBNull = false;
                this.columnCHAIRMAN.MaxLength = 50;
                this.columnCOMPID.AllowDBNull = false;
                this.columnCOMPID.MaxLength = 50;
                this.columnTEL.AllowDBNull = false;
                this.columnTEL.MaxLength = 50;
                this.columnFAX.AllowDBNull = false;
                this.columnFAX.MaxLength = 50;
                this.columnADDR.AllowDBNull = false;
                this.columnADDR.MaxLength = 120;
                this.columnHOUSEID.AllowDBNull = false;
                this.columnHOUSEID.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnF0103.AllowDBNull = false;
                this.columnF0103.MaxLength = 50;
                this.columnF0407.AllowDBNull = false;
                this.columnF0407.MaxLength = 50;
                this.columnWORKCD.AllowDBNull = false;
                this.columnWORKCD.MaxLength = 50;
                this.columnTAXID.AllowDBNull = false;
                this.columnTAXID.MaxLength = 50;
                this.columnACCOUNT.AllowDBNull = false;
                this.columnACCOUNT.MaxLength = 50;
                this.columnACCR.AllowDBNull = false;
                this.columnACCR.MaxLength = 50;
                this.columnDEFA.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow NewCOMPRow() {
                return ((COMPRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new COMPRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(COMPRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.COMPRowChanged != null)) {
                    this.COMPRowChanged(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.COMPRowChanging != null)) {
                    this.COMPRowChanging(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.COMPRowDeleted != null)) {
                    this.COMPRowDeleted(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.COMPRowDeleting != null)) {
                    this.COMPRowDeleting(this, new COMPRowChangeEvent(((COMPRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCOMPRow(COMPRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBas ds = new dsBas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "COMPDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPTDataTable : global::System.Data.TypedTableBase<DEPTRow> {
            
            private global::System.Data.DataColumn columnD_NO;
            
            private global::System.Data.DataColumn columnD_NAME;
            
            private global::System.Data.DataColumn columnPNS;
            
            private global::System.Data.DataColumn columnDEPT_TREE;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnOLD_DEPT;
            
            private global::System.Data.DataColumn columnNEW_DEPT;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnDEPT_GROUP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTDataTable() {
                this.TableName = "DEPT";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEPTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DEPTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D_NOColumn {
                get {
                    return this.columnD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D_NAMEColumn {
                get {
                    return this.columnD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PNSColumn {
                get {
                    return this.columnPNS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPT_TREEColumn {
                get {
                    return this.columnDEPT_TREE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_DEPTColumn {
                get {
                    return this.columnOLD_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NEW_DEPTColumn {
                get {
                    return this.columnNEW_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPT_GROUPColumn {
                get {
                    return this.columnDEPT_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow this[int index] {
                get {
                    return ((DEPTRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTRowChangeEventHandler DEPTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDEPTRow(DEPTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow AddDEPTRow(string D_NO, string D_NAME, decimal PNS, string DEPT_TREE, System.DateTime KEY_DATE, string KEY_MAN, string OLD_DEPT, string NEW_DEPT, System.DateTime ADATE, System.DateTime DDATE, string DEPT_GROUP) {
                DEPTRow rowDEPTRow = ((DEPTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        D_NO,
                        D_NAME,
                        PNS,
                        DEPT_TREE,
                        KEY_DATE,
                        KEY_MAN,
                        OLD_DEPT,
                        NEW_DEPT,
                        ADATE,
                        DDATE,
                        DEPT_GROUP};
                rowDEPTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPTRow);
                return rowDEPTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow FindByD_NO(string D_NO) {
                return ((DEPTRow)(this.Rows.Find(new object[] {
                            D_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEPTDataTable cln = ((DEPTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnD_NO = base.Columns["D_NO"];
                this.columnD_NAME = base.Columns["D_NAME"];
                this.columnPNS = base.Columns["PNS"];
                this.columnDEPT_TREE = base.Columns["DEPT_TREE"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnOLD_DEPT = base.Columns["OLD_DEPT"];
                this.columnNEW_DEPT = base.Columns["NEW_DEPT"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnDEPT_GROUP = base.Columns["DEPT_GROUP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnD_NO = new global::System.Data.DataColumn("D_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NO);
                this.columnD_NAME = new global::System.Data.DataColumn("D_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NAME);
                this.columnPNS = new global::System.Data.DataColumn("PNS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPNS);
                this.columnDEPT_TREE = new global::System.Data.DataColumn("DEPT_TREE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_TREE);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnOLD_DEPT = new global::System.Data.DataColumn("OLD_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_DEPT);
                this.columnNEW_DEPT = new global::System.Data.DataColumn("NEW_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNEW_DEPT);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnDEPT_GROUP = new global::System.Data.DataColumn("DEPT_GROUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT_GROUP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnD_NO}, true));
                this.columnD_NO.AllowDBNull = false;
                this.columnD_NO.Unique = true;
                this.columnD_NO.Caption = "部門代碼";
                this.columnD_NO.MaxLength = 50;
                this.columnD_NAME.AllowDBNull = false;
                this.columnD_NAME.Caption = "部門名稱";
                this.columnD_NAME.MaxLength = 50;
                this.columnPNS.AllowDBNull = false;
                this.columnDEPT_TREE.AllowDBNull = false;
                this.columnDEPT_TREE.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnOLD_DEPT.AllowDBNull = false;
                this.columnOLD_DEPT.MaxLength = 50;
                this.columnNEW_DEPT.AllowDBNull = false;
                this.columnNEW_DEPT.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnDDATE.AllowDBNull = false;
                this.columnDEPT_GROUP.AllowDBNull = false;
                this.columnDEPT_GROUP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow NewDEPTRow() {
                return ((DEPTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEPTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPTRowChanged != null)) {
                    this.DEPTRowChanged(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPTRowChanging != null)) {
                    this.DEPTRowChanging(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPTRowDeleted != null)) {
                    this.DEPTRowDeleted(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPTRowDeleting != null)) {
                    this.DEPTRowDeleting(this, new DEPTRowChangeEvent(((DEPTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDEPTRow(DEPTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBas ds = new dsBas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DEPTSDataTable : global::System.Data.TypedTableBase<DEPTSRow> {
            
            private global::System.Data.DataColumn columnD_NO;
            
            private global::System.Data.DataColumn columnD_NAME;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnDR_ACNO;
            
            private global::System.Data.DataColumn columnCR_ACNO;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnOLD_DEPT;
            
            private global::System.Data.DataColumn columnSUBS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTSDataTable() {
                this.TableName = "DEPTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEPTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DEPTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D_NOColumn {
                get {
                    return this.columnD_NO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn D_NAMEColumn {
                get {
                    return this.columnD_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DR_ACNOColumn {
                get {
                    return this.columnDR_ACNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CR_ACNOColumn {
                get {
                    return this.columnCR_ACNO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_DEPTColumn {
                get {
                    return this.columnOLD_DEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SUBSColumn {
                get {
                    return this.columnSUBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTSRow this[int index] {
                get {
                    return ((DEPTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTSRowChangeEventHandler DEPTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTSRowChangeEventHandler DEPTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTSRowChangeEventHandler DEPTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DEPTSRowChangeEventHandler DEPTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDEPTSRow(DEPTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTSRow AddDEPTSRow(string D_NO, string D_NAME, System.DateTime KEY_DATE, string KEY_MAN, string DR_ACNO, string CR_ACNO, System.DateTime ADATE, System.DateTime DDATE, string OLD_DEPT, string SUBS) {
                DEPTSRow rowDEPTSRow = ((DEPTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        D_NO,
                        D_NAME,
                        KEY_DATE,
                        KEY_MAN,
                        DR_ACNO,
                        CR_ACNO,
                        ADATE,
                        DDATE,
                        OLD_DEPT,
                        SUBS};
                rowDEPTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDEPTSRow);
                return rowDEPTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTSRow FindByD_NO(string D_NO) {
                return ((DEPTSRow)(this.Rows.Find(new object[] {
                            D_NO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DEPTSDataTable cln = ((DEPTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DEPTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnD_NO = base.Columns["D_NO"];
                this.columnD_NAME = base.Columns["D_NAME"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnDR_ACNO = base.Columns["DR_ACNO"];
                this.columnCR_ACNO = base.Columns["CR_ACNO"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnOLD_DEPT = base.Columns["OLD_DEPT"];
                this.columnSUBS = base.Columns["SUBS"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnD_NO = new global::System.Data.DataColumn("D_NO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NO);
                this.columnD_NAME = new global::System.Data.DataColumn("D_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnD_NAME);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnDR_ACNO = new global::System.Data.DataColumn("DR_ACNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDR_ACNO);
                this.columnCR_ACNO = new global::System.Data.DataColumn("CR_ACNO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCR_ACNO);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnOLD_DEPT = new global::System.Data.DataColumn("OLD_DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_DEPT);
                this.columnSUBS = new global::System.Data.DataColumn("SUBS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSUBS);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnD_NO}, true));
                this.columnD_NO.AllowDBNull = false;
                this.columnD_NO.Unique = true;
                this.columnD_NO.MaxLength = 50;
                this.columnD_NAME.AllowDBNull = false;
                this.columnD_NAME.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnDR_ACNO.AllowDBNull = false;
                this.columnDR_ACNO.MaxLength = 50;
                this.columnCR_ACNO.AllowDBNull = false;
                this.columnCR_ACNO.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnDDATE.AllowDBNull = false;
                this.columnOLD_DEPT.AllowDBNull = false;
                this.columnOLD_DEPT.MaxLength = 50;
                this.columnSUBS.AllowDBNull = false;
                this.columnSUBS.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTSRow NewDEPTSRow() {
                return ((DEPTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DEPTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DEPTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DEPTSRowChanged != null)) {
                    this.DEPTSRowChanged(this, new DEPTSRowChangeEvent(((DEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DEPTSRowChanging != null)) {
                    this.DEPTSRowChanging(this, new DEPTSRowChangeEvent(((DEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DEPTSRowDeleted != null)) {
                    this.DEPTSRowDeleted(this, new DEPTSRowChangeEvent(((DEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DEPTSRowDeleting != null)) {
                    this.DEPTSRowDeleting(this, new DEPTSRowChangeEvent(((DEPTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDEPTSRow(DEPTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBas ds = new dsBas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DEPTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JOBDataTable : global::System.Data.TypedTableBase<JOBRow> {
            
            private global::System.Data.DataColumn columnJOB;
            
            private global::System.Data.DataColumn columnJOB_NAME;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnJOB_TREE;
            
            private global::System.Data.DataColumn columnJOBL;
            
            private global::System.Data.DataColumn columnJOBLB;
            
            private global::System.Data.DataColumn columnJOBLE;
            
            private global::System.Data.DataColumn columnOLD_JOB;
            
            private global::System.Data.DataColumn columnWORKAMT;
            
            private global::System.Data.DataColumn columnJOB_ENAME;
            
            private global::System.Data.DataColumn columnJOB_DISP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBDataTable() {
                this.TableName = "JOB";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JOBDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JOBDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBColumn {
                get {
                    return this.columnJOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NAMEColumn {
                get {
                    return this.columnJOB_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_TREEColumn {
                get {
                    return this.columnJOB_TREE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBLColumn {
                get {
                    return this.columnJOBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBLBColumn {
                get {
                    return this.columnJOBLB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBLEColumn {
                get {
                    return this.columnJOBLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_JOBColumn {
                get {
                    return this.columnOLD_JOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WORKAMTColumn {
                get {
                    return this.columnWORKAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_ENAMEColumn {
                get {
                    return this.columnJOB_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_DISPColumn {
                get {
                    return this.columnJOB_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBRow this[int index] {
                get {
                    return ((JOBRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBRowChangeEventHandler JOBRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBRowChangeEventHandler JOBRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBRowChangeEventHandler JOBRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBRowChangeEventHandler JOBRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJOBRow(JOBRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBRow AddJOBRow(string JOB, string JOB_NAME, System.DateTime KEY_DATE, string KEY_MAN, string JOB_TREE, string JOBL, string JOBLB, string JOBLE, string OLD_JOB, bool WORKAMT, string JOB_ENAME, string JOB_DISP) {
                JOBRow rowJOBRow = ((JOBRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JOB,
                        JOB_NAME,
                        KEY_DATE,
                        KEY_MAN,
                        JOB_TREE,
                        JOBL,
                        JOBLB,
                        JOBLE,
                        OLD_JOB,
                        WORKAMT,
                        JOB_ENAME,
                        JOB_DISP};
                rowJOBRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJOBRow);
                return rowJOBRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBRow FindByJOB(string JOB) {
                return ((JOBRow)(this.Rows.Find(new object[] {
                            JOB})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JOBDataTable cln = ((JOBDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JOBDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJOB = base.Columns["JOB"];
                this.columnJOB_NAME = base.Columns["JOB_NAME"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnJOB_TREE = base.Columns["JOB_TREE"];
                this.columnJOBL = base.Columns["JOBL"];
                this.columnJOBLB = base.Columns["JOBLB"];
                this.columnJOBLE = base.Columns["JOBLE"];
                this.columnOLD_JOB = base.Columns["OLD_JOB"];
                this.columnWORKAMT = base.Columns["WORKAMT"];
                this.columnJOB_ENAME = base.Columns["JOB_ENAME"];
                this.columnJOB_DISP = base.Columns["JOB_DISP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJOB = new global::System.Data.DataColumn("JOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB);
                this.columnJOB_NAME = new global::System.Data.DataColumn("JOB_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NAME);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnJOB_TREE = new global::System.Data.DataColumn("JOB_TREE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_TREE);
                this.columnJOBL = new global::System.Data.DataColumn("JOBL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBL);
                this.columnJOBLB = new global::System.Data.DataColumn("JOBLB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBLB);
                this.columnJOBLE = new global::System.Data.DataColumn("JOBLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBLE);
                this.columnOLD_JOB = new global::System.Data.DataColumn("OLD_JOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_JOB);
                this.columnWORKAMT = new global::System.Data.DataColumn("WORKAMT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKAMT);
                this.columnJOB_ENAME = new global::System.Data.DataColumn("JOB_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_ENAME);
                this.columnJOB_DISP = new global::System.Data.DataColumn("JOB_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_DISP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJOB}, true));
                this.columnJOB.AllowDBNull = false;
                this.columnJOB.Unique = true;
                this.columnJOB.MaxLength = 50;
                this.columnJOB_NAME.AllowDBNull = false;
                this.columnJOB_NAME.MaxLength = 50;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnJOB_TREE.MaxLength = 50;
                this.columnJOBL.MaxLength = 50;
                this.columnJOBLB.MaxLength = 50;
                this.columnJOBLE.MaxLength = 50;
                this.columnOLD_JOB.MaxLength = 50;
                this.columnJOB_ENAME.AllowDBNull = false;
                this.columnJOB_ENAME.MaxLength = 50;
                this.columnJOB_DISP.AllowDBNull = false;
                this.columnJOB_DISP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBRow NewJOBRow() {
                return ((JOBRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JOBRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JOBRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JOBRowChanged != null)) {
                    this.JOBRowChanged(this, new JOBRowChangeEvent(((JOBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JOBRowChanging != null)) {
                    this.JOBRowChanging(this, new JOBRowChangeEvent(((JOBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JOBRowDeleted != null)) {
                    this.JOBRowDeleted(this, new JOBRowChangeEvent(((JOBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JOBRowDeleting != null)) {
                    this.JOBRowDeleting(this, new JOBRowChangeEvent(((JOBRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJOBRow(JOBRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBas ds = new dsBas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JOBDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JOBLDataTable : global::System.Data.TypedTableBase<JOBLRow> {
            
            private global::System.Data.DataColumn columnJOBL;
            
            private global::System.Data.DataColumn columnJOB_NAME;
            
            private global::System.Data.DataColumn columnB_SAL;
            
            private global::System.Data.DataColumn columnE_SAL;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnOLD_JOBL;
            
            private global::System.Data.DataColumn columnB_SAL1;
            
            private global::System.Data.DataColumn columnB_SAL2;
            
            private global::System.Data.DataColumn columnE_SAL1;
            
            private global::System.Data.DataColumn columnE_SAL2;
            
            private global::System.Data.DataColumn columnJOBL_GRUP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLDataTable() {
                this.TableName = "JOBL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JOBLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JOBLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBLColumn {
                get {
                    return this.columnJOBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOB_NAMEColumn {
                get {
                    return this.columnJOB_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn B_SALColumn {
                get {
                    return this.columnB_SAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn E_SALColumn {
                get {
                    return this.columnE_SAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLD_JOBLColumn {
                get {
                    return this.columnOLD_JOBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn B_SAL1Column {
                get {
                    return this.columnB_SAL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn B_SAL2Column {
                get {
                    return this.columnB_SAL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn E_SAL1Column {
                get {
                    return this.columnE_SAL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn E_SAL2Column {
                get {
                    return this.columnE_SAL2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBL_GRUPColumn {
                get {
                    return this.columnJOBL_GRUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow this[int index] {
                get {
                    return ((JOBLRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JOBLRowChangeEventHandler JOBLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJOBLRow(JOBLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow AddJOBLRow(string JOBL, string JOB_NAME, decimal B_SAL, decimal E_SAL, System.DateTime KEY_DATE, string KEY_MAN, string OLD_JOBL, decimal B_SAL1, decimal B_SAL2, decimal E_SAL1, decimal E_SAL2, string JOBL_GRUP) {
                JOBLRow rowJOBLRow = ((JOBLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JOBL,
                        JOB_NAME,
                        B_SAL,
                        E_SAL,
                        KEY_DATE,
                        KEY_MAN,
                        OLD_JOBL,
                        B_SAL1,
                        B_SAL2,
                        E_SAL1,
                        E_SAL2,
                        JOBL_GRUP};
                rowJOBLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJOBLRow);
                return rowJOBLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow FindByJOBL(string JOBL) {
                return ((JOBLRow)(this.Rows.Find(new object[] {
                            JOBL})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JOBLDataTable cln = ((JOBLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JOBLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnJOBL = base.Columns["JOBL"];
                this.columnJOB_NAME = base.Columns["JOB_NAME"];
                this.columnB_SAL = base.Columns["B_SAL"];
                this.columnE_SAL = base.Columns["E_SAL"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnOLD_JOBL = base.Columns["OLD_JOBL"];
                this.columnB_SAL1 = base.Columns["B_SAL1"];
                this.columnB_SAL2 = base.Columns["B_SAL2"];
                this.columnE_SAL1 = base.Columns["E_SAL1"];
                this.columnE_SAL2 = base.Columns["E_SAL2"];
                this.columnJOBL_GRUP = base.Columns["JOBL_GRUP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnJOBL = new global::System.Data.DataColumn("JOBL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBL);
                this.columnJOB_NAME = new global::System.Data.DataColumn("JOB_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB_NAME);
                this.columnB_SAL = new global::System.Data.DataColumn("B_SAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_SAL);
                this.columnE_SAL = new global::System.Data.DataColumn("E_SAL", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_SAL);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnOLD_JOBL = new global::System.Data.DataColumn("OLD_JOBL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLD_JOBL);
                this.columnB_SAL1 = new global::System.Data.DataColumn("B_SAL1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_SAL1);
                this.columnB_SAL2 = new global::System.Data.DataColumn("B_SAL2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnB_SAL2);
                this.columnE_SAL1 = new global::System.Data.DataColumn("E_SAL1", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_SAL1);
                this.columnE_SAL2 = new global::System.Data.DataColumn("E_SAL2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnE_SAL2);
                this.columnJOBL_GRUP = new global::System.Data.DataColumn("JOBL_GRUP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBL_GRUP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnJOBL}, true));
                this.columnJOBL.AllowDBNull = false;
                this.columnJOBL.Unique = true;
                this.columnJOBL.MaxLength = 50;
                this.columnJOB_NAME.AllowDBNull = false;
                this.columnJOB_NAME.MaxLength = 50;
                this.columnB_SAL.AllowDBNull = false;
                this.columnE_SAL.AllowDBNull = false;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnOLD_JOBL.AllowDBNull = false;
                this.columnOLD_JOBL.MaxLength = 50;
                this.columnB_SAL1.AllowDBNull = false;
                this.columnB_SAL2.AllowDBNull = false;
                this.columnE_SAL1.AllowDBNull = false;
                this.columnE_SAL2.AllowDBNull = false;
                this.columnJOBL_GRUP.AllowDBNull = false;
                this.columnJOBL_GRUP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow NewJOBLRow() {
                return ((JOBLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JOBLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JOBLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JOBLRowChanged != null)) {
                    this.JOBLRowChanged(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JOBLRowChanging != null)) {
                    this.JOBLRowChanging(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JOBLRowDeleted != null)) {
                    this.JOBLRowDeleted(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JOBLRowDeleting != null)) {
                    this.JOBLRowDeleting(this, new JOBLRowChangeEvent(((JOBLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJOBLRow(JOBLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBas ds = new dsBas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JOBLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BASETTSDataTable : global::System.Data.TypedTableBase<BASETTSRow> {
            
            private global::System.Data.DataColumn columnNOBR;
            
            private global::System.Data.DataColumn columnADATE;
            
            private global::System.Data.DataColumn columnTTSCODE;
            
            private global::System.Data.DataColumn columnDDATE;
            
            private global::System.Data.DataColumn columnINDT;
            
            private global::System.Data.DataColumn columnCINDT;
            
            private global::System.Data.DataColumn columnOUDT;
            
            private global::System.Data.DataColumn columnSTDT;
            
            private global::System.Data.DataColumn columnSTINDT;
            
            private global::System.Data.DataColumn columnSTOUDT;
            
            private global::System.Data.DataColumn columnCOMP;
            
            private global::System.Data.DataColumn columnDEPT;
            
            private global::System.Data.DataColumn columnDEPTS;
            
            private global::System.Data.DataColumn columnJOB;
            
            private global::System.Data.DataColumn columnJOBL;
            
            private global::System.Data.DataColumn columnCARD;
            
            private global::System.Data.DataColumn columnROTET;
            
            private global::System.Data.DataColumn columnDI;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnMANG;
            
            private global::System.Data.DataColumn columnYR_DAYS;
            
            private global::System.Data.DataColumn columnWK_YRS;
            
            private global::System.Data.DataColumn columnSALTP;
            
            private global::System.Data.DataColumn columnJOBS;
            
            private global::System.Data.DataColumn columnWORKCD;
            
            private global::System.Data.DataColumn columnCARCD;
            
            private global::System.Data.DataColumn columnEMPCD;
            
            private global::System.Data.DataColumn columnOUTCD;
            
            private global::System.Data.DataColumn columnCALABS;
            
            private global::System.Data.DataColumn columnCALOT;
            
            private global::System.Data.DataColumn columnFULATT;
            
            private global::System.Data.DataColumn columnNOTER;
            
            private global::System.Data.DataColumn columnNOWEL;
            
            private global::System.Data.DataColumn columnNORET;
            
            private global::System.Data.DataColumn columnNOTLATE;
            
            private global::System.Data.DataColumn columnHOLI_CODE;
            
            private global::System.Data.DataColumn columnNOOT;
            
            private global::System.Data.DataColumn columnNOSPEC;
            
            private global::System.Data.DataColumn columnNOCARD;
            
            private global::System.Data.DataColumn columnNOEAT;
            
            private global::System.Data.DataColumn columnAPGRPCD;
            
            private global::System.Data.DataColumn columnDEPTM;
            
            private global::System.Data.DataColumn columnTTSCD;
            
            private global::System.Data.DataColumn columnMENO;
            
            private global::System.Data.DataColumn columnSALADR;
            
            private global::System.Data.DataColumn columnNOWAGE;
            
            private global::System.Data.DataColumn columnMANGE;
            
            private global::System.Data.DataColumn columnRETRATE;
            
            private global::System.Data.DataColumn columnRETDATE;
            
            private global::System.Data.DataColumn columnRETCHOO;
            
            private global::System.Data.DataColumn columnRETDATE1;
            
            private global::System.Data.DataColumn columnONLYONTIME;
            
            private global::System.Data.DataColumn columnJOBO;
            
            private global::System.Data.DataColumn columnCOUNT_PASS;
            
            private global::System.Data.DataColumn columnPASS_DATE;
            
            private global::System.Data.DataColumn columnMANG1;
            
            private global::System.Data.DataColumn columnAP_DATE;
            
            private global::System.Data.DataColumn columnGRP_AMT;
            
            private global::System.Data.DataColumn columnTAX_DATE;
            
            private global::System.Data.DataColumn columnNOSPAMT;
            
            private global::System.Data.DataColumn columnFIXRATE;
            
            private global::System.Data.DataColumn columnTAX_EDATE;
            
            private global::System.Data.DataColumn columnIS_SELFOUT;
            
            private global::System.Data.DataColumn columnINSG_TYPE;
            
            private global::System.Data.DataColumn columnOldSaladr;
            
            private global::System.Data.DataColumn columnSTATION;
            
            private global::System.Data.DataColumn columnCardJobName;
            
            private global::System.Data.DataColumn columnCardJobEnName;
            
            private global::System.Data.DataColumn columnOilSubsidy;
            
            private global::System.Data.DataColumn columnCardID;
            
            private global::System.Data.DataColumn columnDoorGuard;
            
            private global::System.Data.DataColumn columnOutPost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASETTSDataTable() {
                this.TableName = "BASETTS";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BASETTSDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BASETTSDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOBRColumn {
                get {
                    return this.columnNOBR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADATEColumn {
                get {
                    return this.columnADATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TTSCODEColumn {
                get {
                    return this.columnTTSCODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DDATEColumn {
                get {
                    return this.columnDDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INDTColumn {
                get {
                    return this.columnINDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CINDTColumn {
                get {
                    return this.columnCINDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OUDTColumn {
                get {
                    return this.columnOUDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STDTColumn {
                get {
                    return this.columnSTDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STINDTColumn {
                get {
                    return this.columnSTINDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STOUDTColumn {
                get {
                    return this.columnSTOUDT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COMPColumn {
                get {
                    return this.columnCOMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTColumn {
                get {
                    return this.columnDEPT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTSColumn {
                get {
                    return this.columnDEPTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBColumn {
                get {
                    return this.columnJOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBLColumn {
                get {
                    return this.columnJOBL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CARDColumn {
                get {
                    return this.columnCARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ROTETColumn {
                get {
                    return this.columnROTET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DIColumn {
                get {
                    return this.columnDI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MANGColumn {
                get {
                    return this.columnMANG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YR_DAYSColumn {
                get {
                    return this.columnYR_DAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WK_YRSColumn {
                get {
                    return this.columnWK_YRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALTPColumn {
                get {
                    return this.columnSALTP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBSColumn {
                get {
                    return this.columnJOBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WORKCDColumn {
                get {
                    return this.columnWORKCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CARCDColumn {
                get {
                    return this.columnCARCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMPCDColumn {
                get {
                    return this.columnEMPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OUTCDColumn {
                get {
                    return this.columnOUTCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CALABSColumn {
                get {
                    return this.columnCALABS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CALOTColumn {
                get {
                    return this.columnCALOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FULATTColumn {
                get {
                    return this.columnFULATT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOTERColumn {
                get {
                    return this.columnNOTER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOWELColumn {
                get {
                    return this.columnNOWEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NORETColumn {
                get {
                    return this.columnNORET;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOTLATEColumn {
                get {
                    return this.columnNOTLATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HOLI_CODEColumn {
                get {
                    return this.columnHOLI_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOOTColumn {
                get {
                    return this.columnNOOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOSPECColumn {
                get {
                    return this.columnNOSPEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOCARDColumn {
                get {
                    return this.columnNOCARD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOEATColumn {
                get {
                    return this.columnNOEAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APGRPCDColumn {
                get {
                    return this.columnAPGRPCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEPTMColumn {
                get {
                    return this.columnDEPTM;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TTSCDColumn {
                get {
                    return this.columnTTSCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MENOColumn {
                get {
                    return this.columnMENO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALADRColumn {
                get {
                    return this.columnSALADR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOWAGEColumn {
                get {
                    return this.columnNOWAGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MANGEColumn {
                get {
                    return this.columnMANGE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RETRATEColumn {
                get {
                    return this.columnRETRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RETDATEColumn {
                get {
                    return this.columnRETDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RETCHOOColumn {
                get {
                    return this.columnRETCHOO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RETDATE1Column {
                get {
                    return this.columnRETDATE1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ONLYONTIMEColumn {
                get {
                    return this.columnONLYONTIME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JOBOColumn {
                get {
                    return this.columnJOBO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn COUNT_PASSColumn {
                get {
                    return this.columnCOUNT_PASS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PASS_DATEColumn {
                get {
                    return this.columnPASS_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MANG1Column {
                get {
                    return this.columnMANG1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AP_DATEColumn {
                get {
                    return this.columnAP_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GRP_AMTColumn {
                get {
                    return this.columnGRP_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAX_DATEColumn {
                get {
                    return this.columnTAX_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOSPAMTColumn {
                get {
                    return this.columnNOSPAMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FIXRATEColumn {
                get {
                    return this.columnFIXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAX_EDATEColumn {
                get {
                    return this.columnTAX_EDATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IS_SELFOUTColumn {
                get {
                    return this.columnIS_SELFOUT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSG_TYPEColumn {
                get {
                    return this.columnINSG_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OldSaladrColumn {
                get {
                    return this.columnOldSaladr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn STATIONColumn {
                get {
                    return this.columnSTATION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardJobNameColumn {
                get {
                    return this.columnCardJobName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardJobEnNameColumn {
                get {
                    return this.columnCardJobEnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OilSubsidyColumn {
                get {
                    return this.columnOilSubsidy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CardIDColumn {
                get {
                    return this.columnCardID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DoorGuardColumn {
                get {
                    return this.columnDoorGuard;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OutPostColumn {
                get {
                    return this.columnOutPost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASETTSRow this[int index] {
                get {
                    return ((BASETTSRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BASETTSRowChangeEventHandler BASETTSRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBASETTSRow(BASETTSRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASETTSRow AddBASETTSRow(
                        string NOBR, 
                        System.DateTime ADATE, 
                        string TTSCODE, 
                        System.DateTime DDATE, 
                        System.DateTime INDT, 
                        System.DateTime CINDT, 
                        System.DateTime OUDT, 
                        System.DateTime STDT, 
                        System.DateTime STINDT, 
                        System.DateTime STOUDT, 
                        string COMP, 
                        string DEPT, 
                        string DEPTS, 
                        string JOB, 
                        string JOBL, 
                        string CARD, 
                        string ROTET, 
                        string DI, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        bool MANG, 
                        decimal YR_DAYS, 
                        decimal WK_YRS, 
                        string SALTP, 
                        string JOBS, 
                        string WORKCD, 
                        string CARCD, 
                        string EMPCD, 
                        string OUTCD, 
                        bool CALABS, 
                        string CALOT, 
                        bool FULATT, 
                        bool NOTER, 
                        bool NOWEL, 
                        bool NORET, 
                        bool NOTLATE, 
                        string HOLI_CODE, 
                        bool NOOT, 
                        bool NOSPEC, 
                        bool NOCARD, 
                        bool NOEAT, 
                        string APGRPCD, 
                        string DEPTM, 
                        string TTSCD, 
                        string MENO, 
                        string SALADR, 
                        bool NOWAGE, 
                        bool MANGE, 
                        decimal RETRATE, 
                        System.DateTime RETDATE, 
                        string RETCHOO, 
                        System.DateTime RETDATE1, 
                        bool ONLYONTIME, 
                        string JOBO, 
                        bool COUNT_PASS, 
                        System.DateTime PASS_DATE, 
                        bool MANG1, 
                        System.DateTime AP_DATE, 
                        decimal GRP_AMT, 
                        System.DateTime TAX_DATE, 
                        bool NOSPAMT, 
                        bool FIXRATE, 
                        System.DateTime TAX_EDATE, 
                        bool IS_SELFOUT, 
                        string INSG_TYPE, 
                        string OldSaladr, 
                        string STATION, 
                        string CardJobName, 
                        string CardJobEnName, 
                        string OilSubsidy, 
                        string CardID, 
                        string DoorGuard, 
                        string OutPost) {
                BASETTSRow rowBASETTSRow = ((BASETTSRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NOBR,
                        ADATE,
                        TTSCODE,
                        DDATE,
                        INDT,
                        CINDT,
                        OUDT,
                        STDT,
                        STINDT,
                        STOUDT,
                        COMP,
                        DEPT,
                        DEPTS,
                        JOB,
                        JOBL,
                        CARD,
                        ROTET,
                        DI,
                        KEY_MAN,
                        KEY_DATE,
                        MANG,
                        YR_DAYS,
                        WK_YRS,
                        SALTP,
                        JOBS,
                        WORKCD,
                        CARCD,
                        EMPCD,
                        OUTCD,
                        CALABS,
                        CALOT,
                        FULATT,
                        NOTER,
                        NOWEL,
                        NORET,
                        NOTLATE,
                        HOLI_CODE,
                        NOOT,
                        NOSPEC,
                        NOCARD,
                        NOEAT,
                        APGRPCD,
                        DEPTM,
                        TTSCD,
                        MENO,
                        SALADR,
                        NOWAGE,
                        MANGE,
                        RETRATE,
                        RETDATE,
                        RETCHOO,
                        RETDATE1,
                        ONLYONTIME,
                        JOBO,
                        COUNT_PASS,
                        PASS_DATE,
                        MANG1,
                        AP_DATE,
                        GRP_AMT,
                        TAX_DATE,
                        NOSPAMT,
                        FIXRATE,
                        TAX_EDATE,
                        IS_SELFOUT,
                        INSG_TYPE,
                        OldSaladr,
                        STATION,
                        CardJobName,
                        CardJobEnName,
                        OilSubsidy,
                        CardID,
                        DoorGuard,
                        OutPost};
                rowBASETTSRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBASETTSRow);
                return rowBASETTSRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASETTSRow FindByNOBRADATETTSCODE(string NOBR, System.DateTime ADATE, string TTSCODE) {
                return ((BASETTSRow)(this.Rows.Find(new object[] {
                            NOBR,
                            ADATE,
                            TTSCODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BASETTSDataTable cln = ((BASETTSDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BASETTSDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNOBR = base.Columns["NOBR"];
                this.columnADATE = base.Columns["ADATE"];
                this.columnTTSCODE = base.Columns["TTSCODE"];
                this.columnDDATE = base.Columns["DDATE"];
                this.columnINDT = base.Columns["INDT"];
                this.columnCINDT = base.Columns["CINDT"];
                this.columnOUDT = base.Columns["OUDT"];
                this.columnSTDT = base.Columns["STDT"];
                this.columnSTINDT = base.Columns["STINDT"];
                this.columnSTOUDT = base.Columns["STOUDT"];
                this.columnCOMP = base.Columns["COMP"];
                this.columnDEPT = base.Columns["DEPT"];
                this.columnDEPTS = base.Columns["DEPTS"];
                this.columnJOB = base.Columns["JOB"];
                this.columnJOBL = base.Columns["JOBL"];
                this.columnCARD = base.Columns["CARD"];
                this.columnROTET = base.Columns["ROTET"];
                this.columnDI = base.Columns["DI"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnMANG = base.Columns["MANG"];
                this.columnYR_DAYS = base.Columns["YR_DAYS"];
                this.columnWK_YRS = base.Columns["WK_YRS"];
                this.columnSALTP = base.Columns["SALTP"];
                this.columnJOBS = base.Columns["JOBS"];
                this.columnWORKCD = base.Columns["WORKCD"];
                this.columnCARCD = base.Columns["CARCD"];
                this.columnEMPCD = base.Columns["EMPCD"];
                this.columnOUTCD = base.Columns["OUTCD"];
                this.columnCALABS = base.Columns["CALABS"];
                this.columnCALOT = base.Columns["CALOT"];
                this.columnFULATT = base.Columns["FULATT"];
                this.columnNOTER = base.Columns["NOTER"];
                this.columnNOWEL = base.Columns["NOWEL"];
                this.columnNORET = base.Columns["NORET"];
                this.columnNOTLATE = base.Columns["NOTLATE"];
                this.columnHOLI_CODE = base.Columns["HOLI_CODE"];
                this.columnNOOT = base.Columns["NOOT"];
                this.columnNOSPEC = base.Columns["NOSPEC"];
                this.columnNOCARD = base.Columns["NOCARD"];
                this.columnNOEAT = base.Columns["NOEAT"];
                this.columnAPGRPCD = base.Columns["APGRPCD"];
                this.columnDEPTM = base.Columns["DEPTM"];
                this.columnTTSCD = base.Columns["TTSCD"];
                this.columnMENO = base.Columns["MENO"];
                this.columnSALADR = base.Columns["SALADR"];
                this.columnNOWAGE = base.Columns["NOWAGE"];
                this.columnMANGE = base.Columns["MANGE"];
                this.columnRETRATE = base.Columns["RETRATE"];
                this.columnRETDATE = base.Columns["RETDATE"];
                this.columnRETCHOO = base.Columns["RETCHOO"];
                this.columnRETDATE1 = base.Columns["RETDATE1"];
                this.columnONLYONTIME = base.Columns["ONLYONTIME"];
                this.columnJOBO = base.Columns["JOBO"];
                this.columnCOUNT_PASS = base.Columns["COUNT_PASS"];
                this.columnPASS_DATE = base.Columns["PASS_DATE"];
                this.columnMANG1 = base.Columns["MANG1"];
                this.columnAP_DATE = base.Columns["AP_DATE"];
                this.columnGRP_AMT = base.Columns["GRP_AMT"];
                this.columnTAX_DATE = base.Columns["TAX_DATE"];
                this.columnNOSPAMT = base.Columns["NOSPAMT"];
                this.columnFIXRATE = base.Columns["FIXRATE"];
                this.columnTAX_EDATE = base.Columns["TAX_EDATE"];
                this.columnIS_SELFOUT = base.Columns["IS_SELFOUT"];
                this.columnINSG_TYPE = base.Columns["INSG_TYPE"];
                this.columnOldSaladr = base.Columns["OldSaladr"];
                this.columnSTATION = base.Columns["STATION"];
                this.columnCardJobName = base.Columns["CardJobName"];
                this.columnCardJobEnName = base.Columns["CardJobEnName"];
                this.columnOilSubsidy = base.Columns["OilSubsidy"];
                this.columnCardID = base.Columns["CardID"];
                this.columnDoorGuard = base.Columns["DoorGuard"];
                this.columnOutPost = base.Columns["OutPost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNOBR = new global::System.Data.DataColumn("NOBR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOBR);
                this.columnADATE = new global::System.Data.DataColumn("ADATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADATE);
                this.columnTTSCODE = new global::System.Data.DataColumn("TTSCODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTSCODE);
                this.columnDDATE = new global::System.Data.DataColumn("DDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDDATE);
                this.columnINDT = new global::System.Data.DataColumn("INDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINDT);
                this.columnCINDT = new global::System.Data.DataColumn("CINDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCINDT);
                this.columnOUDT = new global::System.Data.DataColumn("OUDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUDT);
                this.columnSTDT = new global::System.Data.DataColumn("STDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTDT);
                this.columnSTINDT = new global::System.Data.DataColumn("STINDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTINDT);
                this.columnSTOUDT = new global::System.Data.DataColumn("STOUDT", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTOUDT);
                this.columnCOMP = new global::System.Data.DataColumn("COMP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOMP);
                this.columnDEPT = new global::System.Data.DataColumn("DEPT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPT);
                this.columnDEPTS = new global::System.Data.DataColumn("DEPTS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTS);
                this.columnJOB = new global::System.Data.DataColumn("JOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOB);
                this.columnJOBL = new global::System.Data.DataColumn("JOBL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBL);
                this.columnCARD = new global::System.Data.DataColumn("CARD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARD);
                this.columnROTET = new global::System.Data.DataColumn("ROTET", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnROTET);
                this.columnDI = new global::System.Data.DataColumn("DI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDI);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnMANG = new global::System.Data.DataColumn("MANG", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANG);
                this.columnYR_DAYS = new global::System.Data.DataColumn("YR_DAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYR_DAYS);
                this.columnWK_YRS = new global::System.Data.DataColumn("WK_YRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWK_YRS);
                this.columnSALTP = new global::System.Data.DataColumn("SALTP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALTP);
                this.columnJOBS = new global::System.Data.DataColumn("JOBS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBS);
                this.columnWORKCD = new global::System.Data.DataColumn("WORKCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWORKCD);
                this.columnCARCD = new global::System.Data.DataColumn("CARCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCARCD);
                this.columnEMPCD = new global::System.Data.DataColumn("EMPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMPCD);
                this.columnOUTCD = new global::System.Data.DataColumn("OUTCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOUTCD);
                this.columnCALABS = new global::System.Data.DataColumn("CALABS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALABS);
                this.columnCALOT = new global::System.Data.DataColumn("CALOT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCALOT);
                this.columnFULATT = new global::System.Data.DataColumn("FULATT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFULATT);
                this.columnNOTER = new global::System.Data.DataColumn("NOTER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTER);
                this.columnNOWEL = new global::System.Data.DataColumn("NOWEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOWEL);
                this.columnNORET = new global::System.Data.DataColumn("NORET", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNORET);
                this.columnNOTLATE = new global::System.Data.DataColumn("NOTLATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTLATE);
                this.columnHOLI_CODE = new global::System.Data.DataColumn("HOLI_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHOLI_CODE);
                this.columnNOOT = new global::System.Data.DataColumn("NOOT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOOT);
                this.columnNOSPEC = new global::System.Data.DataColumn("NOSPEC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOSPEC);
                this.columnNOCARD = new global::System.Data.DataColumn("NOCARD", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOCARD);
                this.columnNOEAT = new global::System.Data.DataColumn("NOEAT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOEAT);
                this.columnAPGRPCD = new global::System.Data.DataColumn("APGRPCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPGRPCD);
                this.columnDEPTM = new global::System.Data.DataColumn("DEPTM", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEPTM);
                this.columnTTSCD = new global::System.Data.DataColumn("TTSCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTTSCD);
                this.columnMENO = new global::System.Data.DataColumn("MENO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMENO);
                this.columnSALADR = new global::System.Data.DataColumn("SALADR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALADR);
                this.columnNOWAGE = new global::System.Data.DataColumn("NOWAGE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOWAGE);
                this.columnMANGE = new global::System.Data.DataColumn("MANGE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANGE);
                this.columnRETRATE = new global::System.Data.DataColumn("RETRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETRATE);
                this.columnRETDATE = new global::System.Data.DataColumn("RETDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETDATE);
                this.columnRETCHOO = new global::System.Data.DataColumn("RETCHOO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETCHOO);
                this.columnRETDATE1 = new global::System.Data.DataColumn("RETDATE1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETDATE1);
                this.columnONLYONTIME = new global::System.Data.DataColumn("ONLYONTIME", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnONLYONTIME);
                this.columnJOBO = new global::System.Data.DataColumn("JOBO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJOBO);
                this.columnCOUNT_PASS = new global::System.Data.DataColumn("COUNT_PASS", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCOUNT_PASS);
                this.columnPASS_DATE = new global::System.Data.DataColumn("PASS_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPASS_DATE);
                this.columnMANG1 = new global::System.Data.DataColumn("MANG1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMANG1);
                this.columnAP_DATE = new global::System.Data.DataColumn("AP_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAP_DATE);
                this.columnGRP_AMT = new global::System.Data.DataColumn("GRP_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGRP_AMT);
                this.columnTAX_DATE = new global::System.Data.DataColumn("TAX_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX_DATE);
                this.columnNOSPAMT = new global::System.Data.DataColumn("NOSPAMT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOSPAMT);
                this.columnFIXRATE = new global::System.Data.DataColumn("FIXRATE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFIXRATE);
                this.columnTAX_EDATE = new global::System.Data.DataColumn("TAX_EDATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX_EDATE);
                this.columnIS_SELFOUT = new global::System.Data.DataColumn("IS_SELFOUT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIS_SELFOUT);
                this.columnINSG_TYPE = new global::System.Data.DataColumn("INSG_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSG_TYPE);
                this.columnOldSaladr = new global::System.Data.DataColumn("OldSaladr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldSaladr);
                this.columnSTATION = new global::System.Data.DataColumn("STATION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSTATION);
                this.columnCardJobName = new global::System.Data.DataColumn("CardJobName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardJobName);
                this.columnCardJobEnName = new global::System.Data.DataColumn("CardJobEnName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardJobEnName);
                this.columnOilSubsidy = new global::System.Data.DataColumn("OilSubsidy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOilSubsidy);
                this.columnCardID = new global::System.Data.DataColumn("CardID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCardID);
                this.columnDoorGuard = new global::System.Data.DataColumn("DoorGuard", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDoorGuard);
                this.columnOutPost = new global::System.Data.DataColumn("OutPost", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutPost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNOBR,
                                this.columnADATE,
                                this.columnTTSCODE}, true));
                this.columnNOBR.AllowDBNull = false;
                this.columnNOBR.MaxLength = 50;
                this.columnADATE.AllowDBNull = false;
                this.columnTTSCODE.AllowDBNull = false;
                this.columnTTSCODE.MaxLength = 50;
                this.columnCOMP.AllowDBNull = false;
                this.columnCOMP.MaxLength = 50;
                this.columnDEPT.AllowDBNull = false;
                this.columnDEPT.MaxLength = 50;
                this.columnDEPTS.AllowDBNull = false;
                this.columnDEPTS.MaxLength = 50;
                this.columnJOB.AllowDBNull = false;
                this.columnJOB.MaxLength = 50;
                this.columnJOBL.AllowDBNull = false;
                this.columnJOBL.MaxLength = 50;
                this.columnCARD.AllowDBNull = false;
                this.columnCARD.MaxLength = 50;
                this.columnROTET.AllowDBNull = false;
                this.columnROTET.MaxLength = 50;
                this.columnDI.AllowDBNull = false;
                this.columnDI.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnMANG.AllowDBNull = false;
                this.columnYR_DAYS.AllowDBNull = false;
                this.columnWK_YRS.AllowDBNull = false;
                this.columnSALTP.AllowDBNull = false;
                this.columnSALTP.MaxLength = 50;
                this.columnJOBS.AllowDBNull = false;
                this.columnJOBS.MaxLength = 50;
                this.columnWORKCD.AllowDBNull = false;
                this.columnWORKCD.MaxLength = 50;
                this.columnCARCD.AllowDBNull = false;
                this.columnCARCD.MaxLength = 50;
                this.columnEMPCD.AllowDBNull = false;
                this.columnEMPCD.MaxLength = 50;
                this.columnOUTCD.AllowDBNull = false;
                this.columnOUTCD.MaxLength = 50;
                this.columnCALABS.AllowDBNull = false;
                this.columnCALOT.AllowDBNull = false;
                this.columnCALOT.MaxLength = 50;
                this.columnFULATT.AllowDBNull = false;
                this.columnNOTER.AllowDBNull = false;
                this.columnNOWEL.AllowDBNull = false;
                this.columnNORET.AllowDBNull = false;
                this.columnNOTLATE.AllowDBNull = false;
                this.columnHOLI_CODE.AllowDBNull = false;
                this.columnHOLI_CODE.MaxLength = 50;
                this.columnNOOT.AllowDBNull = false;
                this.columnNOSPEC.AllowDBNull = false;
                this.columnNOCARD.AllowDBNull = false;
                this.columnNOEAT.AllowDBNull = false;
                this.columnAPGRPCD.AllowDBNull = false;
                this.columnAPGRPCD.MaxLength = 50;
                this.columnDEPTM.AllowDBNull = false;
                this.columnDEPTM.MaxLength = 50;
                this.columnTTSCD.AllowDBNull = false;
                this.columnTTSCD.MaxLength = 50;
                this.columnMENO.AllowDBNull = false;
                this.columnMENO.MaxLength = 180;
                this.columnSALADR.AllowDBNull = false;
                this.columnSALADR.MaxLength = 50;
                this.columnNOWAGE.AllowDBNull = false;
                this.columnMANGE.AllowDBNull = false;
                this.columnRETRATE.AllowDBNull = false;
                this.columnRETCHOO.AllowDBNull = false;
                this.columnRETCHOO.MaxLength = 50;
                this.columnONLYONTIME.AllowDBNull = false;
                this.columnJOBO.AllowDBNull = false;
                this.columnJOBO.MaxLength = 50;
                this.columnCOUNT_PASS.AllowDBNull = false;
                this.columnMANG1.AllowDBNull = false;
                this.columnGRP_AMT.AllowDBNull = false;
                this.columnNOSPAMT.AllowDBNull = false;
                this.columnFIXRATE.AllowDBNull = false;
                this.columnIS_SELFOUT.AllowDBNull = false;
                this.columnINSG_TYPE.AllowDBNull = false;
                this.columnINSG_TYPE.MaxLength = 50;
                this.columnOldSaladr.MaxLength = 50;
                this.columnSTATION.MaxLength = 50;
                this.columnCardJobName.MaxLength = 50;
                this.columnCardJobEnName.MaxLength = 50;
                this.columnOilSubsidy.MaxLength = 50;
                this.columnCardID.MaxLength = 50;
                this.columnDoorGuard.MaxLength = 50;
                this.columnOutPost.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASETTSRow NewBASETTSRow() {
                return ((BASETTSRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BASETTSRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BASETTSRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BASETTSRowChanged != null)) {
                    this.BASETTSRowChanged(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BASETTSRowChanging != null)) {
                    this.BASETTSRowChanging(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BASETTSRowDeleted != null)) {
                    this.BASETTSRowDeleted(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BASETTSRowDeleting != null)) {
                    this.BASETTSRowDeleting(this, new BASETTSRowChangeEvent(((BASETTSRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBASETTSRow(BASETTSRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsBas ds = new dsBas();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BASETTSDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BASERow : global::System.Data.DataRow {
            
            private BASEDataTable tableBASE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BASERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBASE = ((BASEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableBASE.NOBRColumn]));
                }
                set {
                    this[this.tableBASE.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME_C {
                get {
                    return ((string)(this[this.tableBASE.NAME_CColumn]));
                }
                set {
                    this[this.tableBASE.NAME_CColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NAME_E {
                get {
                    return ((string)(this[this.tableBASE.NAME_EColumn]));
                }
                set {
                    this[this.tableBASE.NAME_EColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class COMPRow : global::System.Data.DataRow {
            
            private COMPDataTable tableCOMP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal COMPRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCOMP = ((COMPDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMP {
                get {
                    return ((string)(this[this.tableCOMP.COMPColumn]));
                }
                set {
                    this[this.tableCOMP.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPNAME {
                get {
                    try {
                        return ((string)(this[this.tableCOMP.COMPNAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'COMP\' 中資料行 \'COMPNAME\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableCOMP.COMPNAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CHAIRMAN {
                get {
                    return ((string)(this[this.tableCOMP.CHAIRMANColumn]));
                }
                set {
                    this[this.tableCOMP.CHAIRMANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMPID {
                get {
                    return ((string)(this[this.tableCOMP.COMPIDColumn]));
                }
                set {
                    this[this.tableCOMP.COMPIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TEL {
                get {
                    return ((string)(this[this.tableCOMP.TELColumn]));
                }
                set {
                    this[this.tableCOMP.TELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FAX {
                get {
                    return ((string)(this[this.tableCOMP.FAXColumn]));
                }
                set {
                    this[this.tableCOMP.FAXColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDR {
                get {
                    return ((string)(this[this.tableCOMP.ADDRColumn]));
                }
                set {
                    this[this.tableCOMP.ADDRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HOUSEID {
                get {
                    return ((string)(this[this.tableCOMP.HOUSEIDColumn]));
                }
                set {
                    this[this.tableCOMP.HOUSEIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableCOMP.KEY_MANColumn]));
                }
                set {
                    this[this.tableCOMP.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableCOMP.KEY_DATEColumn]));
                }
                set {
                    this[this.tableCOMP.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F0103 {
                get {
                    return ((string)(this[this.tableCOMP.F0103Column]));
                }
                set {
                    this[this.tableCOMP.F0103Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string F0407 {
                get {
                    return ((string)(this[this.tableCOMP.F0407Column]));
                }
                set {
                    this[this.tableCOMP.F0407Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WORKCD {
                get {
                    return ((string)(this[this.tableCOMP.WORKCDColumn]));
                }
                set {
                    this[this.tableCOMP.WORKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TAXID {
                get {
                    return ((string)(this[this.tableCOMP.TAXIDColumn]));
                }
                set {
                    this[this.tableCOMP.TAXIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCOUNT {
                get {
                    return ((string)(this[this.tableCOMP.ACCOUNTColumn]));
                }
                set {
                    this[this.tableCOMP.ACCOUNTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCR {
                get {
                    return ((string)(this[this.tableCOMP.ACCRColumn]));
                }
                set {
                    this[this.tableCOMP.ACCRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DEFA {
                get {
                    return ((bool)(this[this.tableCOMP.DEFAColumn]));
                }
                set {
                    this[this.tableCOMP.DEFAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCOMPNAMENull() {
                return this.IsNull(this.tableCOMP.COMPNAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCOMPNAMENull() {
                this[this.tableCOMP.COMPNAMEColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEPTRow : global::System.Data.DataRow {
            
            private DEPTDataTable tableDEPT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEPTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPT = ((DEPTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_NO {
                get {
                    return ((string)(this[this.tableDEPT.D_NOColumn]));
                }
                set {
                    this[this.tableDEPT.D_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_NAME {
                get {
                    return ((string)(this[this.tableDEPT.D_NAMEColumn]));
                }
                set {
                    this[this.tableDEPT.D_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PNS {
                get {
                    return ((decimal)(this[this.tableDEPT.PNSColumn]));
                }
                set {
                    this[this.tableDEPT.PNSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPT_TREE {
                get {
                    return ((string)(this[this.tableDEPT.DEPT_TREEColumn]));
                }
                set {
                    this[this.tableDEPT.DEPT_TREEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPT.KEY_DATEColumn]));
                }
                set {
                    this[this.tableDEPT.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableDEPT.KEY_MANColumn]));
                }
                set {
                    this[this.tableDEPT.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLD_DEPT {
                get {
                    return ((string)(this[this.tableDEPT.OLD_DEPTColumn]));
                }
                set {
                    this[this.tableDEPT.OLD_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NEW_DEPT {
                get {
                    return ((string)(this[this.tableDEPT.NEW_DEPTColumn]));
                }
                set {
                    this[this.tableDEPT.NEW_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPT.ADATEColumn]));
                }
                set {
                    this[this.tableDEPT.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPT.DDATEColumn]));
                }
                set {
                    this[this.tableDEPT.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPT_GROUP {
                get {
                    return ((string)(this[this.tableDEPT.DEPT_GROUPColumn]));
                }
                set {
                    this[this.tableDEPT.DEPT_GROUPColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DEPTSRow : global::System.Data.DataRow {
            
            private DEPTSDataTable tableDEPTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DEPTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDEPTS = ((DEPTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_NO {
                get {
                    return ((string)(this[this.tableDEPTS.D_NOColumn]));
                }
                set {
                    this[this.tableDEPTS.D_NOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string D_NAME {
                get {
                    return ((string)(this[this.tableDEPTS.D_NAMEColumn]));
                }
                set {
                    this[this.tableDEPTS.D_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPTS.KEY_DATEColumn]));
                }
                set {
                    this[this.tableDEPTS.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableDEPTS.KEY_MANColumn]));
                }
                set {
                    this[this.tableDEPTS.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DR_ACNO {
                get {
                    return ((string)(this[this.tableDEPTS.DR_ACNOColumn]));
                }
                set {
                    this[this.tableDEPTS.DR_ACNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CR_ACNO {
                get {
                    return ((string)(this[this.tableDEPTS.CR_ACNOColumn]));
                }
                set {
                    this[this.tableDEPTS.CR_ACNOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPTS.ADATEColumn]));
                }
                set {
                    this[this.tableDEPTS.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DDATE {
                get {
                    return ((global::System.DateTime)(this[this.tableDEPTS.DDATEColumn]));
                }
                set {
                    this[this.tableDEPTS.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLD_DEPT {
                get {
                    return ((string)(this[this.tableDEPTS.OLD_DEPTColumn]));
                }
                set {
                    this[this.tableDEPTS.OLD_DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SUBS {
                get {
                    return ((string)(this[this.tableDEPTS.SUBSColumn]));
                }
                set {
                    this[this.tableDEPTS.SUBSColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JOBRow : global::System.Data.DataRow {
            
            private JOBDataTable tableJOB;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JOBRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJOB = ((JOBDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB {
                get {
                    return ((string)(this[this.tableJOB.JOBColumn]));
                }
                set {
                    this[this.tableJOB.JOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_NAME {
                get {
                    return ((string)(this[this.tableJOB.JOB_NAMEColumn]));
                }
                set {
                    this[this.tableJOB.JOB_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableJOB.KEY_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'KEY_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    try {
                        return ((string)(this[this.tableJOB.KEY_MANColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'KEY_MAN\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_TREE {
                get {
                    try {
                        return ((string)(this[this.tableJOB.JOB_TREEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'JOB_TREE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.JOB_TREEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBL {
                get {
                    try {
                        return ((string)(this[this.tableJOB.JOBLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'JOBL\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.JOBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBLB {
                get {
                    try {
                        return ((string)(this[this.tableJOB.JOBLBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'JOBLB\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.JOBLBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBLE {
                get {
                    try {
                        return ((string)(this[this.tableJOB.JOBLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'JOBLE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.JOBLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLD_JOB {
                get {
                    try {
                        return ((string)(this[this.tableJOB.OLD_JOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'OLD_JOB\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.OLD_JOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool WORKAMT {
                get {
                    try {
                        return ((bool)(this[this.tableJOB.WORKAMTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'JOB\' 中資料行 \'WORKAMT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableJOB.WORKAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_ENAME {
                get {
                    return ((string)(this[this.tableJOB.JOB_ENAMEColumn]));
                }
                set {
                    this[this.tableJOB.JOB_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_DISP {
                get {
                    return ((string)(this[this.tableJOB.JOB_DISPColumn]));
                }
                set {
                    this[this.tableJOB.JOB_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKEY_DATENull() {
                return this.IsNull(this.tableJOB.KEY_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKEY_DATENull() {
                this[this.tableJOB.KEY_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsKEY_MANNull() {
                return this.IsNull(this.tableJOB.KEY_MANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetKEY_MANNull() {
                this[this.tableJOB.KEY_MANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJOB_TREENull() {
                return this.IsNull(this.tableJOB.JOB_TREEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJOB_TREENull() {
                this[this.tableJOB.JOB_TREEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJOBLNull() {
                return this.IsNull(this.tableJOB.JOBLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJOBLNull() {
                this[this.tableJOB.JOBLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJOBLBNull() {
                return this.IsNull(this.tableJOB.JOBLBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJOBLBNull() {
                this[this.tableJOB.JOBLBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJOBLENull() {
                return this.IsNull(this.tableJOB.JOBLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJOBLENull() {
                this[this.tableJOB.JOBLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOLD_JOBNull() {
                return this.IsNull(this.tableJOB.OLD_JOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOLD_JOBNull() {
                this[this.tableJOB.OLD_JOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWORKAMTNull() {
                return this.IsNull(this.tableJOB.WORKAMTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWORKAMTNull() {
                this[this.tableJOB.WORKAMTColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JOBLRow : global::System.Data.DataRow {
            
            private JOBLDataTable tableJOBL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JOBLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJOBL = ((JOBLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBL {
                get {
                    return ((string)(this[this.tableJOBL.JOBLColumn]));
                }
                set {
                    this[this.tableJOBL.JOBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB_NAME {
                get {
                    return ((string)(this[this.tableJOBL.JOB_NAMEColumn]));
                }
                set {
                    this[this.tableJOBL.JOB_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal B_SAL {
                get {
                    return ((decimal)(this[this.tableJOBL.B_SALColumn]));
                }
                set {
                    this[this.tableJOBL.B_SALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal E_SAL {
                get {
                    return ((decimal)(this[this.tableJOBL.E_SALColumn]));
                }
                set {
                    this[this.tableJOBL.E_SALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableJOBL.KEY_DATEColumn]));
                }
                set {
                    this[this.tableJOBL.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableJOBL.KEY_MANColumn]));
                }
                set {
                    this[this.tableJOBL.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OLD_JOBL {
                get {
                    return ((string)(this[this.tableJOBL.OLD_JOBLColumn]));
                }
                set {
                    this[this.tableJOBL.OLD_JOBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal B_SAL1 {
                get {
                    return ((decimal)(this[this.tableJOBL.B_SAL1Column]));
                }
                set {
                    this[this.tableJOBL.B_SAL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal B_SAL2 {
                get {
                    return ((decimal)(this[this.tableJOBL.B_SAL2Column]));
                }
                set {
                    this[this.tableJOBL.B_SAL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal E_SAL1 {
                get {
                    return ((decimal)(this[this.tableJOBL.E_SAL1Column]));
                }
                set {
                    this[this.tableJOBL.E_SAL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal E_SAL2 {
                get {
                    return ((decimal)(this[this.tableJOBL.E_SAL2Column]));
                }
                set {
                    this[this.tableJOBL.E_SAL2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBL_GRUP {
                get {
                    return ((string)(this[this.tableJOBL.JOBL_GRUPColumn]));
                }
                set {
                    this[this.tableJOBL.JOBL_GRUPColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BASETTSRow : global::System.Data.DataRow {
            
            private BASETTSDataTable tableBASETTS;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BASETTSRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBASETTS = ((BASETTSDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NOBR {
                get {
                    return ((string)(this[this.tableBASETTS.NOBRColumn]));
                }
                set {
                    this[this.tableBASETTS.NOBRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ADATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBASETTS.ADATEColumn]));
                }
                set {
                    this[this.tableBASETTS.ADATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TTSCODE {
                get {
                    return ((string)(this[this.tableBASETTS.TTSCODEColumn]));
                }
                set {
                    this[this.tableBASETTS.TTSCODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.DDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'DDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.DDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime INDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.INDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'INDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.INDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime CINDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.CINDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CINDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CINDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime OUDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.OUDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OUDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OUDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.STDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STINDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.STINDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STINDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STINDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime STOUDT {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.STOUDTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STOUDT\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STOUDTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string COMP {
                get {
                    return ((string)(this[this.tableBASETTS.COMPColumn]));
                }
                set {
                    this[this.tableBASETTS.COMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPT {
                get {
                    return ((string)(this[this.tableBASETTS.DEPTColumn]));
                }
                set {
                    this[this.tableBASETTS.DEPTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPTS {
                get {
                    return ((string)(this[this.tableBASETTS.DEPTSColumn]));
                }
                set {
                    this[this.tableBASETTS.DEPTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOB {
                get {
                    return ((string)(this[this.tableBASETTS.JOBColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBL {
                get {
                    return ((string)(this[this.tableBASETTS.JOBLColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CARD {
                get {
                    return ((string)(this[this.tableBASETTS.CARDColumn]));
                }
                set {
                    this[this.tableBASETTS.CARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ROTET {
                get {
                    return ((string)(this[this.tableBASETTS.ROTETColumn]));
                }
                set {
                    this[this.tableBASETTS.ROTETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DI {
                get {
                    return ((string)(this[this.tableBASETTS.DIColumn]));
                }
                set {
                    this[this.tableBASETTS.DIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableBASETTS.KEY_MANColumn]));
                }
                set {
                    this[this.tableBASETTS.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableBASETTS.KEY_DATEColumn]));
                }
                set {
                    this[this.tableBASETTS.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MANG {
                get {
                    return ((bool)(this[this.tableBASETTS.MANGColumn]));
                }
                set {
                    this[this.tableBASETTS.MANGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal YR_DAYS {
                get {
                    return ((decimal)(this[this.tableBASETTS.YR_DAYSColumn]));
                }
                set {
                    this[this.tableBASETTS.YR_DAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal WK_YRS {
                get {
                    return ((decimal)(this[this.tableBASETTS.WK_YRSColumn]));
                }
                set {
                    this[this.tableBASETTS.WK_YRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SALTP {
                get {
                    return ((string)(this[this.tableBASETTS.SALTPColumn]));
                }
                set {
                    this[this.tableBASETTS.SALTPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBS {
                get {
                    return ((string)(this[this.tableBASETTS.JOBSColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string WORKCD {
                get {
                    return ((string)(this[this.tableBASETTS.WORKCDColumn]));
                }
                set {
                    this[this.tableBASETTS.WORKCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CARCD {
                get {
                    return ((string)(this[this.tableBASETTS.CARCDColumn]));
                }
                set {
                    this[this.tableBASETTS.CARCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMPCD {
                get {
                    return ((string)(this[this.tableBASETTS.EMPCDColumn]));
                }
                set {
                    this[this.tableBASETTS.EMPCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OUTCD {
                get {
                    return ((string)(this[this.tableBASETTS.OUTCDColumn]));
                }
                set {
                    this[this.tableBASETTS.OUTCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CALABS {
                get {
                    return ((bool)(this[this.tableBASETTS.CALABSColumn]));
                }
                set {
                    this[this.tableBASETTS.CALABSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CALOT {
                get {
                    return ((string)(this[this.tableBASETTS.CALOTColumn]));
                }
                set {
                    this[this.tableBASETTS.CALOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FULATT {
                get {
                    return ((bool)(this[this.tableBASETTS.FULATTColumn]));
                }
                set {
                    this[this.tableBASETTS.FULATTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOTER {
                get {
                    return ((bool)(this[this.tableBASETTS.NOTERColumn]));
                }
                set {
                    this[this.tableBASETTS.NOTERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOWEL {
                get {
                    return ((bool)(this[this.tableBASETTS.NOWELColumn]));
                }
                set {
                    this[this.tableBASETTS.NOWELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NORET {
                get {
                    return ((bool)(this[this.tableBASETTS.NORETColumn]));
                }
                set {
                    this[this.tableBASETTS.NORETColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOTLATE {
                get {
                    return ((bool)(this[this.tableBASETTS.NOTLATEColumn]));
                }
                set {
                    this[this.tableBASETTS.NOTLATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HOLI_CODE {
                get {
                    return ((string)(this[this.tableBASETTS.HOLI_CODEColumn]));
                }
                set {
                    this[this.tableBASETTS.HOLI_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOOT {
                get {
                    return ((bool)(this[this.tableBASETTS.NOOTColumn]));
                }
                set {
                    this[this.tableBASETTS.NOOTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOSPEC {
                get {
                    return ((bool)(this[this.tableBASETTS.NOSPECColumn]));
                }
                set {
                    this[this.tableBASETTS.NOSPECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOCARD {
                get {
                    return ((bool)(this[this.tableBASETTS.NOCARDColumn]));
                }
                set {
                    this[this.tableBASETTS.NOCARDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOEAT {
                get {
                    return ((bool)(this[this.tableBASETTS.NOEATColumn]));
                }
                set {
                    this[this.tableBASETTS.NOEATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string APGRPCD {
                get {
                    return ((string)(this[this.tableBASETTS.APGRPCDColumn]));
                }
                set {
                    this[this.tableBASETTS.APGRPCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DEPTM {
                get {
                    return ((string)(this[this.tableBASETTS.DEPTMColumn]));
                }
                set {
                    this[this.tableBASETTS.DEPTMColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TTSCD {
                get {
                    return ((string)(this[this.tableBASETTS.TTSCDColumn]));
                }
                set {
                    this[this.tableBASETTS.TTSCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MENO {
                get {
                    return ((string)(this[this.tableBASETTS.MENOColumn]));
                }
                set {
                    this[this.tableBASETTS.MENOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SALADR {
                get {
                    return ((string)(this[this.tableBASETTS.SALADRColumn]));
                }
                set {
                    this[this.tableBASETTS.SALADRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOWAGE {
                get {
                    return ((bool)(this[this.tableBASETTS.NOWAGEColumn]));
                }
                set {
                    this[this.tableBASETTS.NOWAGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MANGE {
                get {
                    return ((bool)(this[this.tableBASETTS.MANGEColumn]));
                }
                set {
                    this[this.tableBASETTS.MANGEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RETRATE {
                get {
                    return ((decimal)(this[this.tableBASETTS.RETRATEColumn]));
                }
                set {
                    this[this.tableBASETTS.RETRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RETDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.RETDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'RETDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.RETDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RETCHOO {
                get {
                    return ((string)(this[this.tableBASETTS.RETCHOOColumn]));
                }
                set {
                    this[this.tableBASETTS.RETCHOOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RETDATE1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.RETDATE1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'RETDATE1\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.RETDATE1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ONLYONTIME {
                get {
                    return ((bool)(this[this.tableBASETTS.ONLYONTIMEColumn]));
                }
                set {
                    this[this.tableBASETTS.ONLYONTIMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string JOBO {
                get {
                    return ((string)(this[this.tableBASETTS.JOBOColumn]));
                }
                set {
                    this[this.tableBASETTS.JOBOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool COUNT_PASS {
                get {
                    return ((bool)(this[this.tableBASETTS.COUNT_PASSColumn]));
                }
                set {
                    this[this.tableBASETTS.COUNT_PASSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime PASS_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.PASS_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'PASS_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.PASS_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MANG1 {
                get {
                    return ((bool)(this[this.tableBASETTS.MANG1Column]));
                }
                set {
                    this[this.tableBASETTS.MANG1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime AP_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.AP_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'AP_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.AP_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GRP_AMT {
                get {
                    return ((decimal)(this[this.tableBASETTS.GRP_AMTColumn]));
                }
                set {
                    this[this.tableBASETTS.GRP_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TAX_DATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.TAX_DATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'TAX_DATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.TAX_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOSPAMT {
                get {
                    return ((bool)(this[this.tableBASETTS.NOSPAMTColumn]));
                }
                set {
                    this[this.tableBASETTS.NOSPAMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FIXRATE {
                get {
                    return ((bool)(this[this.tableBASETTS.FIXRATEColumn]));
                }
                set {
                    this[this.tableBASETTS.FIXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TAX_EDATE {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableBASETTS.TAX_EDATEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'TAX_EDATE\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.TAX_EDATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IS_SELFOUT {
                get {
                    return ((bool)(this[this.tableBASETTS.IS_SELFOUTColumn]));
                }
                set {
                    this[this.tableBASETTS.IS_SELFOUTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INSG_TYPE {
                get {
                    return ((string)(this[this.tableBASETTS.INSG_TYPEColumn]));
                }
                set {
                    this[this.tableBASETTS.INSG_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OldSaladr {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.OldSaladrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OldSaladr\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OldSaladrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string STATION {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.STATIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'STATION\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.STATIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CardJobName {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.CardJobNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CardJobName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CardJobNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CardJobEnName {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.CardJobEnNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CardJobEnName\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CardJobEnNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OilSubsidy {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.OilSubsidyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OilSubsidy\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OilSubsidyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CardID {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.CardIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'CardID\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.CardIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DoorGuard {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.DoorGuardColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'DoorGuard\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.DoorGuardColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OutPost {
                get {
                    try {
                        return ((string)(this[this.tableBASETTS.OutPostColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'BASETTS\' 中資料行 \'OutPost\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableBASETTS.OutPostColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDDATENull() {
                return this.IsNull(this.tableBASETTS.DDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDDATENull() {
                this[this.tableBASETTS.DDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINDTNull() {
                return this.IsNull(this.tableBASETTS.INDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINDTNull() {
                this[this.tableBASETTS.INDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCINDTNull() {
                return this.IsNull(this.tableBASETTS.CINDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCINDTNull() {
                this[this.tableBASETTS.CINDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOUDTNull() {
                return this.IsNull(this.tableBASETTS.OUDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOUDTNull() {
                this[this.tableBASETTS.OUDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTDTNull() {
                return this.IsNull(this.tableBASETTS.STDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTDTNull() {
                this[this.tableBASETTS.STDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTINDTNull() {
                return this.IsNull(this.tableBASETTS.STINDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTINDTNull() {
                this[this.tableBASETTS.STINDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTOUDTNull() {
                return this.IsNull(this.tableBASETTS.STOUDTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTOUDTNull() {
                this[this.tableBASETTS.STOUDTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRETDATENull() {
                return this.IsNull(this.tableBASETTS.RETDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRETDATENull() {
                this[this.tableBASETTS.RETDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRETDATE1Null() {
                return this.IsNull(this.tableBASETTS.RETDATE1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRETDATE1Null() {
                this[this.tableBASETTS.RETDATE1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPASS_DATENull() {
                return this.IsNull(this.tableBASETTS.PASS_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPASS_DATENull() {
                this[this.tableBASETTS.PASS_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAP_DATENull() {
                return this.IsNull(this.tableBASETTS.AP_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAP_DATENull() {
                this[this.tableBASETTS.AP_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTAX_DATENull() {
                return this.IsNull(this.tableBASETTS.TAX_DATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTAX_DATENull() {
                this[this.tableBASETTS.TAX_DATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTAX_EDATENull() {
                return this.IsNull(this.tableBASETTS.TAX_EDATEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTAX_EDATENull() {
                this[this.tableBASETTS.TAX_EDATEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOldSaladrNull() {
                return this.IsNull(this.tableBASETTS.OldSaladrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOldSaladrNull() {
                this[this.tableBASETTS.OldSaladrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSTATIONNull() {
                return this.IsNull(this.tableBASETTS.STATIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSTATIONNull() {
                this[this.tableBASETTS.STATIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardJobNameNull() {
                return this.IsNull(this.tableBASETTS.CardJobNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardJobNameNull() {
                this[this.tableBASETTS.CardJobNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardJobEnNameNull() {
                return this.IsNull(this.tableBASETTS.CardJobEnNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardJobEnNameNull() {
                this[this.tableBASETTS.CardJobEnNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOilSubsidyNull() {
                return this.IsNull(this.tableBASETTS.OilSubsidyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOilSubsidyNull() {
                this[this.tableBASETTS.OilSubsidyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCardIDNull() {
                return this.IsNull(this.tableBASETTS.CardIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCardIDNull() {
                this[this.tableBASETTS.CardIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDoorGuardNull() {
                return this.IsNull(this.tableBASETTS.DoorGuardColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDoorGuardNull() {
                this[this.tableBASETTS.DoorGuardColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutPostNull() {
                return this.IsNull(this.tableBASETTS.OutPostColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutPostNull() {
                this[this.tableBASETTS.OutPostColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BASERowChangeEvent : global::System.EventArgs {
            
            private BASERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASERowChangeEvent(BASERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class COMPRowChangeEvent : global::System.EventArgs {
            
            private COMPRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRowChangeEvent(COMPRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public COMPRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DEPTRowChangeEvent : global::System.EventArgs {
            
            private DEPTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRowChangeEvent(DEPTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DEPTSRowChangeEvent : global::System.EventArgs {
            
            private DEPTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTSRowChangeEvent(DEPTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DEPTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JOBRowChangeEvent : global::System.EventArgs {
            
            private JOBRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBRowChangeEvent(JOBRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JOBLRowChangeEvent : global::System.EventArgs {
            
            private JOBLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRowChangeEvent(JOBLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JOBLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BASETTSRowChangeEvent : global::System.EventArgs {
            
            private BASETTSRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASETTSRowChangeEvent(BASETTSRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BASETTSRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JBHR.Att.dsBasTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BASETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BASETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BASE";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("NAME_C", "NAME_C");
            tableMapping.ColumnMappings.Add("NAME_E", "NAME_E");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [BASE] WHERE (([NOBR] = @Original_NOBR) AND ([NAME_C] = @Original_NAM" +
                "E_C) AND ([NAME_E] = @Original_NAME_E))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_E", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [BASE] SET [NOBR] = @NOBR, [NAME_C] = @NAME_C, [NAME_E] = @NAME_E WHERE ((" +
                "[NOBR] = @Original_NOBR) AND ([NAME_C] = @Original_NAME_C) AND ([NAME_E] = @Orig" +
                "inal_NAME_E));\r\nSELECT NOBR, NAME_C, NAME_E FROM BASE WHERE (NOBR = @NOBR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_C", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NAME_E", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_E", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_C", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_C", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NAME_E", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NAME_E", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          NOBR, NAME_C, NAME_E\r\nFROM              BASE";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBas.BASEDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBas.BASEDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsBas.BASEDataTable dataTable = new dsBas.BASEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas.BASEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas dataSet) {
            return this.Adapter.Update(dataSet, "BASE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_NOBR, string Original_NAME_C, string Original_NAME_E) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            if ((Original_NAME_C == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_C");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_NAME_C));
            }
            if ((Original_NAME_E == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_E");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_NAME_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NOBR, string NAME_C, string NAME_E, string Original_NOBR, string Original_NAME_C, string Original_NAME_E) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((NAME_C == null)) {
                throw new global::System.ArgumentNullException("NAME_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(NAME_C));
            }
            if ((NAME_E == null)) {
                throw new global::System.ArgumentNullException("NAME_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(NAME_E));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_NOBR));
            }
            if ((Original_NAME_C == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_C");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_NAME_C));
            }
            if ((Original_NAME_E == null)) {
                throw new global::System.ArgumentNullException("Original_NAME_E");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_NAME_E));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string NAME_C, string NAME_E, string Original_NOBR, string Original_NAME_C, string Original_NAME_E) {
            return this.Update(Original_NOBR, NAME_C, NAME_E, Original_NOBR, Original_NAME_C, Original_NAME_E);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class COMPTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public COMPTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "COMP";
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("COMPNAME", "COMPNAME");
            tableMapping.ColumnMappings.Add("CHAIRMAN", "CHAIRMAN");
            tableMapping.ColumnMappings.Add("COMPID", "COMPID");
            tableMapping.ColumnMappings.Add("TEL", "TEL");
            tableMapping.ColumnMappings.Add("FAX", "FAX");
            tableMapping.ColumnMappings.Add("ADDR", "ADDR");
            tableMapping.ColumnMappings.Add("HOUSEID", "HOUSEID");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("F0103", "F0103");
            tableMapping.ColumnMappings.Add("F0407", "F0407");
            tableMapping.ColumnMappings.Add("WORKCD", "WORKCD");
            tableMapping.ColumnMappings.Add("TAXID", "TAXID");
            tableMapping.ColumnMappings.Add("ACCOUNT", "ACCOUNT");
            tableMapping.ColumnMappings.Add("ACCR", "ACCR");
            tableMapping.ColumnMappings.Add("DEFA", "DEFA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [COMP] ([CHAIRMAN], [COMPID], [TEL], [FAX], [ADDR], [HOUSEID], [KEY_MAN], [KEY_DATE], [F0103], [F0407], [WORKCD], [TAXID], [ACCOUNT], [ACCR], [DEFA]) VALUES (@CHAIRMAN, @COMPID, @TEL, @FAX, @ADDR, @HOUSEID, @KEY_MAN, @KEY_DATE, @F0103, @F0407, @WORKCD, @TAXID, @ACCOUNT, @ACCR, @DEFA)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CHAIRMAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CHAIRMAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMPID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMPID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TEL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FAX", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADDR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADDR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOUSEID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOUSEID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F0103", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0103", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@F0407", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "F0407", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAXID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCOUNT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCOUNT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFA", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEFA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          RTRIM(COMP) AS COMP, RTRIM(COMPNAME) AS COMPNAME, CHAIRMAN, COMPI" +
                "D, TEL, FAX, ADDR, HOUSEID, KEY_MAN, \r\n                            KEY_DATE, F01" +
                "03, F0407, WORKCD, TAXID, ACCOUNT, ACCR, DEFA\r\nFROM              COMP";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBas.COMPDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBas.COMPDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsBas.COMPDataTable dataTable = new dsBas.COMPDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas.COMPDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas dataSet) {
            return this.Adapter.Update(dataSet, "COMP");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string CHAIRMAN, string COMPID, string TEL, string FAX, string ADDR, string HOUSEID, string KEY_MAN, System.DateTime KEY_DATE, string F0103, string F0407, string WORKCD, string TAXID, string ACCOUNT, string ACCR, bool DEFA) {
            if ((CHAIRMAN == null)) {
                throw new global::System.ArgumentNullException("CHAIRMAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(CHAIRMAN));
            }
            if ((COMPID == null)) {
                throw new global::System.ArgumentNullException("COMPID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(COMPID));
            }
            if ((TEL == null)) {
                throw new global::System.ArgumentNullException("TEL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TEL));
            }
            if ((FAX == null)) {
                throw new global::System.ArgumentNullException("FAX");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(FAX));
            }
            if ((ADDR == null)) {
                throw new global::System.ArgumentNullException("ADDR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ADDR));
            }
            if ((HOUSEID == null)) {
                throw new global::System.ArgumentNullException("HOUSEID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(HOUSEID));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(KEY_DATE));
            if ((F0103 == null)) {
                throw new global::System.ArgumentNullException("F0103");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(F0103));
            }
            if ((F0407 == null)) {
                throw new global::System.ArgumentNullException("F0407");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(F0407));
            }
            if ((WORKCD == null)) {
                throw new global::System.ArgumentNullException("WORKCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(WORKCD));
            }
            if ((TAXID == null)) {
                throw new global::System.ArgumentNullException("TAXID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(TAXID));
            }
            if ((ACCOUNT == null)) {
                throw new global::System.ArgumentNullException("ACCOUNT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(ACCOUNT));
            }
            if ((ACCR == null)) {
                throw new global::System.ArgumentNullException("ACCR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(ACCR));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((bool)(DEFA));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPTTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DEPTTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPT";
            tableMapping.ColumnMappings.Add("D_NO", "D_NO");
            tableMapping.ColumnMappings.Add("D_NAME", "D_NAME");
            tableMapping.ColumnMappings.Add("PNS", "PNS");
            tableMapping.ColumnMappings.Add("DEPT_TREE", "DEPT_TREE");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("OLD_DEPT", "OLD_DEPT");
            tableMapping.ColumnMappings.Add("NEW_DEPT", "NEW_DEPT");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("DEPT_GROUP", "DEPT_GROUP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [DEPT] WHERE (([D_NO] = @Original_D_NO) AND ([D_NAME] = @Original_D_NAME) AND ([PNS] = @Original_PNS) AND ([DEPT_TREE] = @Original_DEPT_TREE) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_DEPT] = @Original_OLD_DEPT) AND ([NEW_DEPT] = @Original_NEW_DEPT) AND ([ADATE] = @Original_ADATE) AND ([DDATE] = @Original_DDATE) AND ([DEPT_GROUP] = @Original_DEPT_GROUP))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [DEPT] ([D_NO], [D_NAME], [PNS], [DEPT_TREE], [KEY_DATE], [KEY_MAN], [OLD_DEPT], [NEW_DEPT], [ADATE], [DDATE], [DEPT_GROUP]) VALUES (@D_NO, @D_NAME, @PNS, @DEPT_TREE, @KEY_DATE, @KEY_MAN, @OLD_DEPT, @NEW_DEPT, @ADATE, @DDATE, @DEPT_GROUP);
SELECT D_NO, D_NAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP FROM DEPT WHERE (D_NO = @D_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [DEPT] SET [D_NO] = @D_NO, [D_NAME] = @D_NAME, [PNS] = @PNS, [DEPT_TREE] = @DEPT_TREE, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [OLD_DEPT] = @OLD_DEPT, [NEW_DEPT] = @NEW_DEPT, [ADATE] = @ADATE, [DDATE] = @DDATE, [DEPT_GROUP] = @DEPT_GROUP WHERE (([D_NO] = @Original_D_NO) AND ([D_NAME] = @Original_D_NAME) AND ([PNS] = @Original_PNS) AND ([DEPT_TREE] = @Original_DEPT_TREE) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_DEPT] = @Original_OLD_DEPT) AND ([NEW_DEPT] = @Original_NEW_DEPT) AND ([ADATE] = @Original_ADATE) AND ([DDATE] = @Original_DDATE) AND ([DEPT_GROUP] = @Original_DEPT_GROUP));
SELECT D_NO, D_NAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP FROM DEPT WHERE (D_NO = @D_NO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PNS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "PNS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NEW_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NEW_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT_GROUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT_GROUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          DEPT.*\r\nFROM              DEPT";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBas.DEPTDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBas.DEPTDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsBas.DEPTDataTable dataTable = new dsBas.DEPTDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas.DEPTDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas dataSet) {
            return this.Adapter.Update(dataSet, "DEPT");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_D_NO, string Original_D_NAME, decimal Original_PNS, string Original_DEPT_TREE, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_OLD_DEPT, string Original_NEW_DEPT, System.DateTime Original_ADATE, System.DateTime Original_DDATE, string Original_DEPT_GROUP) {
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_D_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_PNS));
            if ((Original_DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_TREE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_DEPT_TREE));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_DEPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_NEW_DEPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_NEW_DEPT));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ADATE));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((System.DateTime)(Original_DDATE));
            if ((Original_DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_GROUP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DEPT_GROUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string D_NO, string D_NAME, decimal PNS, string DEPT_TREE, System.DateTime KEY_DATE, string KEY_MAN, string OLD_DEPT, string NEW_DEPT, System.DateTime ADATE, System.DateTime DDATE, string DEPT_GROUP) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(PNS));
            if ((DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("DEPT_TREE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DEPT_TREE));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("OLD_DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OLD_DEPT));
            }
            if ((NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("NEW_DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(NEW_DEPT));
            }
            this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(ADATE));
            this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(DDATE));
            if ((DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("DEPT_GROUP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(DEPT_GROUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NO, 
                    string D_NAME, 
                    decimal PNS, 
                    string DEPT_TREE, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_DEPT, 
                    string NEW_DEPT, 
                    System.DateTime ADATE, 
                    System.DateTime DDATE, 
                    string DEPT_GROUP, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    decimal Original_PNS, 
                    string Original_DEPT_TREE, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_DEPT, 
                    string Original_NEW_DEPT, 
                    System.DateTime Original_ADATE, 
                    System.DateTime Original_DDATE, 
                    string Original_DEPT_GROUP) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(PNS));
            if ((DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("DEPT_TREE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DEPT_TREE));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("OLD_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(OLD_DEPT));
            }
            if ((NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("NEW_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(NEW_DEPT));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(ADATE));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(DDATE));
            if ((DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("DEPT_GROUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(DEPT_GROUP));
            }
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_D_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_PNS));
            if ((Original_DEPT_TREE == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_TREE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DEPT_TREE));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_NEW_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_NEW_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_NEW_DEPT));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_ADATE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((System.DateTime)(Original_DDATE));
            if ((Original_DEPT_GROUP == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT_GROUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_DEPT_GROUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NAME, 
                    decimal PNS, 
                    string DEPT_TREE, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_DEPT, 
                    string NEW_DEPT, 
                    System.DateTime ADATE, 
                    System.DateTime DDATE, 
                    string DEPT_GROUP, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    decimal Original_PNS, 
                    string Original_DEPT_TREE, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_DEPT, 
                    string Original_NEW_DEPT, 
                    System.DateTime Original_ADATE, 
                    System.DateTime Original_DDATE, 
                    string Original_DEPT_GROUP) {
            return this.Update(Original_D_NO, D_NAME, PNS, DEPT_TREE, KEY_DATE, KEY_MAN, OLD_DEPT, NEW_DEPT, ADATE, DDATE, DEPT_GROUP, Original_D_NO, Original_D_NAME, Original_PNS, Original_DEPT_TREE, Original_KEY_DATE, Original_KEY_MAN, Original_OLD_DEPT, Original_NEW_DEPT, Original_ADATE, Original_DDATE, Original_DEPT_GROUP);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DEPTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DEPTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "DEPTS";
            tableMapping.ColumnMappings.Add("D_NO", "D_NO");
            tableMapping.ColumnMappings.Add("D_NAME", "D_NAME");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("DR_ACNO", "DR_ACNO");
            tableMapping.ColumnMappings.Add("CR_ACNO", "CR_ACNO");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("OLD_DEPT", "OLD_DEPT");
            tableMapping.ColumnMappings.Add("SUBS", "SUBS");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [DEPTS] WHERE (([D_NO] = @Original_D_NO) AND ([D_NAME] = @Original_D_NAME) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([DR_ACNO] = @Original_DR_ACNO) AND ([CR_ACNO] = @Original_CR_ACNO) AND ([ADATE] = @Original_ADATE) AND ([DDATE] = @Original_DDATE) AND ([OLD_DEPT] = @Original_OLD_DEPT) AND ([SUBS] = @Original_SUBS))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DR_ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CR_ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUBS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [DEPTS] ([D_NO], [D_NAME], [KEY_DATE], [KEY_MAN], [DR_ACNO], [CR_ACNO], [ADATE], [DDATE], [OLD_DEPT], [SUBS]) VALUES (@D_NO, @D_NAME, @KEY_DATE, @KEY_MAN, @DR_ACNO, @CR_ACNO, @ADATE, @DDATE, @OLD_DEPT, @SUBS);
SELECT D_NO, D_NAME, KEY_DATE, KEY_MAN, DR_ACNO, CR_ACNO, ADATE, DDATE, OLD_DEPT, SUBS FROM DEPTS WHERE (D_NO = @D_NO)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DR_ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CR_ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUBS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [DEPTS] SET [D_NO] = @D_NO, [D_NAME] = @D_NAME, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [DR_ACNO] = @DR_ACNO, [CR_ACNO] = @CR_ACNO, [ADATE] = @ADATE, [DDATE] = @DDATE, [OLD_DEPT] = @OLD_DEPT, [SUBS] = @SUBS WHERE (([D_NO] = @Original_D_NO) AND ([D_NAME] = @Original_D_NAME) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([DR_ACNO] = @Original_DR_ACNO) AND ([CR_ACNO] = @Original_CR_ACNO) AND ([ADATE] = @Original_ADATE) AND ([DDATE] = @Original_DDATE) AND ([OLD_DEPT] = @Original_OLD_DEPT) AND ([SUBS] = @Original_SUBS));
SELECT D_NO, D_NAME, KEY_DATE, KEY_MAN, DR_ACNO, CR_ACNO, ADATE, DDATE, OLD_DEPT, SUBS FROM DEPTS WHERE (D_NO = @D_NO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DR_ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CR_ACNO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SUBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUBS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_D_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "D_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DR_ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CR_ACNO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CR_ACNO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SUBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SUBS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          DEPTS.*\r\nFROM              DEPTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBas.DEPTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBas.DEPTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsBas.DEPTSDataTable dataTable = new dsBas.DEPTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas.DEPTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas dataSet) {
            return this.Adapter.Update(dataSet, "DEPTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_D_NO, string Original_D_NAME, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_DR_ACNO, string Original_CR_ACNO, System.DateTime Original_ADATE, System.DateTime Original_DDATE, string Original_OLD_DEPT, string Original_SUBS) {
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_D_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_DR_ACNO == null)) {
                throw new global::System.ArgumentNullException("Original_DR_ACNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_DR_ACNO));
            }
            if ((Original_CR_ACNO == null)) {
                throw new global::System.ArgumentNullException("Original_CR_ACNO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_CR_ACNO));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ADATE));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_DDATE));
            if ((Original_OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_DEPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_SUBS == null)) {
                throw new global::System.ArgumentNullException("Original_SUBS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_SUBS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string D_NO, string D_NAME, System.DateTime KEY_DATE, string KEY_MAN, string DR_ACNO, string CR_ACNO, System.DateTime ADATE, System.DateTime DDATE, string OLD_DEPT, string SUBS) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            if ((DR_ACNO == null)) {
                throw new global::System.ArgumentNullException("DR_ACNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(DR_ACNO));
            }
            if ((CR_ACNO == null)) {
                throw new global::System.ArgumentNullException("CR_ACNO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CR_ACNO));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(ADATE));
            this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(DDATE));
            if ((OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("OLD_DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(OLD_DEPT));
            }
            if ((SUBS == null)) {
                throw new global::System.ArgumentNullException("SUBS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(SUBS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NO, 
                    string D_NAME, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string DR_ACNO, 
                    string CR_ACNO, 
                    System.DateTime ADATE, 
                    System.DateTime DDATE, 
                    string OLD_DEPT, 
                    string SUBS, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_DR_ACNO, 
                    string Original_CR_ACNO, 
                    System.DateTime Original_ADATE, 
                    System.DateTime Original_DDATE, 
                    string Original_OLD_DEPT, 
                    string Original_SUBS) {
            if ((D_NO == null)) {
                throw new global::System.ArgumentNullException("D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(D_NO));
            }
            if ((D_NAME == null)) {
                throw new global::System.ArgumentNullException("D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(D_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            if ((DR_ACNO == null)) {
                throw new global::System.ArgumentNullException("DR_ACNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(DR_ACNO));
            }
            if ((CR_ACNO == null)) {
                throw new global::System.ArgumentNullException("CR_ACNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CR_ACNO));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(ADATE));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(DDATE));
            if ((OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("OLD_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(OLD_DEPT));
            }
            if ((SUBS == null)) {
                throw new global::System.ArgumentNullException("SUBS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(SUBS));
            }
            if ((Original_D_NO == null)) {
                throw new global::System.ArgumentNullException("Original_D_NO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_D_NO));
            }
            if ((Original_D_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_D_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_D_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_DR_ACNO == null)) {
                throw new global::System.ArgumentNullException("Original_DR_ACNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_DR_ACNO));
            }
            if ((Original_CR_ACNO == null)) {
                throw new global::System.ArgumentNullException("Original_CR_ACNO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_CR_ACNO));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_ADATE));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(Original_DDATE));
            if ((Original_OLD_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_OLD_DEPT));
            }
            if ((Original_SUBS == null)) {
                throw new global::System.ArgumentNullException("Original_SUBS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_SUBS));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string D_NAME, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string DR_ACNO, 
                    string CR_ACNO, 
                    System.DateTime ADATE, 
                    System.DateTime DDATE, 
                    string OLD_DEPT, 
                    string SUBS, 
                    string Original_D_NO, 
                    string Original_D_NAME, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_DR_ACNO, 
                    string Original_CR_ACNO, 
                    System.DateTime Original_ADATE, 
                    System.DateTime Original_DDATE, 
                    string Original_OLD_DEPT, 
                    string Original_SUBS) {
            return this.Update(Original_D_NO, D_NAME, KEY_DATE, KEY_MAN, DR_ACNO, CR_ACNO, ADATE, DDATE, OLD_DEPT, SUBS, Original_D_NO, Original_D_NAME, Original_KEY_DATE, Original_KEY_MAN, Original_DR_ACNO, Original_CR_ACNO, Original_ADATE, Original_DDATE, Original_OLD_DEPT, Original_SUBS);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JOBTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JOBTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "JOB";
            tableMapping.ColumnMappings.Add("JOB", "JOB");
            tableMapping.ColumnMappings.Add("JOB_NAME", "JOB_NAME");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("JOB_TREE", "JOB_TREE");
            tableMapping.ColumnMappings.Add("JOBL", "JOBL");
            tableMapping.ColumnMappings.Add("JOBLB", "JOBLB");
            tableMapping.ColumnMappings.Add("JOBLE", "JOBLE");
            tableMapping.ColumnMappings.Add("OLD_JOB", "OLD_JOB");
            tableMapping.ColumnMappings.Add("WORKAMT", "WORKAMT");
            tableMapping.ColumnMappings.Add("JOB_ENAME", "JOB_ENAME");
            tableMapping.ColumnMappings.Add("JOB_DISP", "JOB_DISP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [JOB] WHERE (([JOB] = @Original_JOB) AND ([JOB_NAME] = @Original_JOB_NAME) AND ([JOB_ENAME] = @Original_JOB_ENAME) AND ((@IsNull_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_MAN)) AND ((@IsNull_JOB_TREE = 1 AND [JOB_TREE] IS NULL) OR ([JOB_TREE] = @Original_JOB_TREE)) AND ((@IsNull_JOBL = 1 AND [JOBL] IS NULL) OR ([JOBL] = @Original_JOBL)) AND ((@IsNull_JOBLB = 1 AND [JOBLB] IS NULL) OR ([JOBLB] = @Original_JOBLB)) AND ((@IsNull_JOBLE = 1 AND [JOBLE] IS NULL) OR ([JOBLE] = @Original_JOBLE)) AND ((@IsNull_OLD_JOB = 1 AND [OLD_JOB] IS NULL) OR ([OLD_JOB] = @Original_OLD_JOB)) AND ((@IsNull_WORKAMT = 1 AND [WORKAMT] IS NULL) OR ([WORKAMT] = @Original_WORKAMT)) AND ([JOB_DISP] = @Original_JOB_DISP))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOB_TREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_TREE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOBL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOBLB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBLB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OLD_JOB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WORKAMT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKAMT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_DISP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [JOB] ([JOB], [JOB_NAME], [JOB_ENAME], [KEY_DATE], [KEY_MAN], [JOB_TREE], [JOBL], [JOBLB], [JOBLE], [OLD_JOB], [WORKAMT], [JOB_DISP]) VALUES (@JOB, @JOB_NAME, @JOB_ENAME, @KEY_DATE, @KEY_MAN, @JOB_TREE, @JOBL, @JOBLB, @JOBLE, @OLD_JOB, @WORKAMT, @JOB_DISP);
SELECT JOB, JOB_NAME, JOB_ENAME, KEY_DATE, KEY_MAN, JOB_TREE, JOBL, JOBLB, JOBLE, OLD_JOB, WORKAMT, JOB_DISP FROM JOB WHERE (JOB = @JOB)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBLB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_DISP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [JOB] SET [JOB] = @JOB, [JOB_NAME] = @JOB_NAME, [JOB_ENAME] = @JOB_ENAME, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [JOB_TREE] = @JOB_TREE, [JOBL] = @JOBL, [JOBLB] = @JOBLB, [JOBLE] = @JOBLE, [OLD_JOB] = @OLD_JOB, [WORKAMT] = @WORKAMT, [JOB_DISP] = @JOB_DISP WHERE (([JOB] = @Original_JOB) AND ([JOB_NAME] = @Original_JOB_NAME) AND ([JOB_ENAME] = @Original_JOB_ENAME) AND ((@IsNull_KEY_DATE = 1 AND [KEY_DATE] IS NULL) OR ([KEY_DATE] = @Original_KEY_DATE)) AND ((@IsNull_KEY_MAN = 1 AND [KEY_MAN] IS NULL) OR ([KEY_MAN] = @Original_KEY_MAN)) AND ((@IsNull_JOB_TREE = 1 AND [JOB_TREE] IS NULL) OR ([JOB_TREE] = @Original_JOB_TREE)) AND ((@IsNull_JOBL = 1 AND [JOBL] IS NULL) OR ([JOBL] = @Original_JOBL)) AND ((@IsNull_JOBLB = 1 AND [JOBLB] IS NULL) OR ([JOBLB] = @Original_JOBLB)) AND ((@IsNull_JOBLE = 1 AND [JOBLE] IS NULL) OR ([JOBLE] = @Original_JOBLE)) AND ((@IsNull_OLD_JOB = 1 AND [OLD_JOB] IS NULL) OR ([OLD_JOB] = @Original_OLD_JOB)) AND ((@IsNull_WORKAMT = 1 AND [WORKAMT] IS NULL) OR ([WORKAMT] = @Original_WORKAMT)) AND ([JOB_DISP] = @Original_JOB_DISP));
SELECT JOB, JOB_NAME, JOB_ENAME, KEY_DATE, KEY_MAN, JOB_TREE, JOBL, JOBLB, JOBLE, OLD_JOB, WORKAMT, JOB_DISP FROM JOB WHERE (JOB = @JOB)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_TREE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBLB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_DISP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_KEY_MAN", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOB_TREE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_TREE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_TREE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_TREE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOBL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOBLB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBLB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_JOBLE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBLE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBLE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OLD_JOB", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOB", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_WORKAMT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKAMT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_DISP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          JOB, JOB_NAME, JOB_ENAME, KEY_DATE, KEY_MAN, JOB_TREE, JOBL, JOBL" +
                "B, JOBLE, OLD_JOB, WORKAMT, \r\n                            JOB_DISP\r\nFROM        " +
                "      JOB";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBas.JOBDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBas.JOBDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsBas.JOBDataTable dataTable = new dsBas.JOBDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas.JOBDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas dataSet) {
            return this.Adapter.Update(dataSet, "JOB");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_JOB, string Original_JOB_NAME, string Original_JOB_ENAME, global::System.Nullable<global::System.DateTime> Original_KEY_DATE, string Original_KEY_MAN, string Original_JOB_TREE, string Original_JOBL, string Original_JOBLB, string Original_JOBLE, string Original_OLD_JOB, global::System.Nullable<bool> Original_WORKAMT, string Original_JOB_DISP) {
            if ((Original_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_JOB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_JOB));
            }
            if ((Original_JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_JOB_NAME));
            }
            if ((Original_JOB_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_ENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_JOB_ENAME));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_JOB_TREE == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_JOB_TREE));
            }
            if ((Original_JOBL == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_JOBL));
            }
            if ((Original_JOBLB == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_JOBLB));
            }
            if ((Original_JOBLE == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_JOBLE));
            }
            if ((Original_OLD_JOB == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_OLD_JOB));
            }
            if ((Original_WORKAMT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_WORKAMT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_JOB_DISP == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_DISP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_JOB_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string JOB, string JOB_NAME, string JOB_ENAME, global::System.Nullable<global::System.DateTime> KEY_DATE, string KEY_MAN, string JOB_TREE, string JOBL, string JOBLB, string JOBLE, string OLD_JOB, global::System.Nullable<bool> WORKAMT, string JOB_DISP) {
            if ((JOB == null)) {
                throw new global::System.ArgumentNullException("JOB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(JOB));
            }
            if ((JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("JOB_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(JOB_NAME));
            }
            if ((JOB_ENAME == null)) {
                throw new global::System.ArgumentNullException("JOB_ENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(JOB_ENAME));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            if ((JOB_TREE == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(JOB_TREE));
            }
            if ((JOBL == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(JOBL));
            }
            if ((JOBLB == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(JOBLB));
            }
            if ((JOBLE == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(JOBLE));
            }
            if ((OLD_JOB == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(OLD_JOB));
            }
            if ((WORKAMT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((bool)(WORKAMT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((JOB_DISP == null)) {
                throw new global::System.ArgumentNullException("JOB_DISP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(JOB_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JOB, 
                    string JOB_NAME, 
                    string JOB_ENAME, 
                    global::System.Nullable<global::System.DateTime> KEY_DATE, 
                    string KEY_MAN, 
                    string JOB_TREE, 
                    string JOBL, 
                    string JOBLB, 
                    string JOBLE, 
                    string OLD_JOB, 
                    global::System.Nullable<bool> WORKAMT, 
                    string JOB_DISP, 
                    string Original_JOB, 
                    string Original_JOB_NAME, 
                    string Original_JOB_ENAME, 
                    global::System.Nullable<global::System.DateTime> Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_JOB_TREE, 
                    string Original_JOBL, 
                    string Original_JOBLB, 
                    string Original_JOBLE, 
                    string Original_OLD_JOB, 
                    global::System.Nullable<bool> Original_WORKAMT, 
                    string Original_JOB_DISP) {
            if ((JOB == null)) {
                throw new global::System.ArgumentNullException("JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(JOB));
            }
            if ((JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("JOB_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(JOB_NAME));
            }
            if ((JOB_ENAME == null)) {
                throw new global::System.ArgumentNullException("JOB_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(JOB_ENAME));
            }
            if ((KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(KEY_MAN));
            }
            if ((JOB_TREE == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(JOB_TREE));
            }
            if ((JOBL == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(JOBL));
            }
            if ((JOBLB == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(JOBLB));
            }
            if ((JOBLE == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(JOBLE));
            }
            if ((OLD_JOB == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(OLD_JOB));
            }
            if ((WORKAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(WORKAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((JOB_DISP == null)) {
                throw new global::System.ArgumentNullException("JOB_DISP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(JOB_DISP));
            }
            if ((Original_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_JOB));
            }
            if ((Original_JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_JOB_NAME));
            }
            if ((Original_JOB_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_JOB_ENAME));
            }
            if ((Original_KEY_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_KEY_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_KEY_MAN == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_JOB_TREE == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_JOB_TREE));
            }
            if ((Original_JOBL == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_JOBL));
            }
            if ((Original_JOBLB == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_JOBLB));
            }
            if ((Original_JOBLE == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_JOBLE));
            }
            if ((Original_OLD_JOB == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_OLD_JOB));
            }
            if ((Original_WORKAMT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(Original_WORKAMT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_JOB_DISP == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_DISP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_JOB_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JOB_NAME, 
                    string JOB_ENAME, 
                    global::System.Nullable<global::System.DateTime> KEY_DATE, 
                    string KEY_MAN, 
                    string JOB_TREE, 
                    string JOBL, 
                    string JOBLB, 
                    string JOBLE, 
                    string OLD_JOB, 
                    global::System.Nullable<bool> WORKAMT, 
                    string JOB_DISP, 
                    string Original_JOB, 
                    string Original_JOB_NAME, 
                    string Original_JOB_ENAME, 
                    global::System.Nullable<global::System.DateTime> Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_JOB_TREE, 
                    string Original_JOBL, 
                    string Original_JOBLB, 
                    string Original_JOBLE, 
                    string Original_OLD_JOB, 
                    global::System.Nullable<bool> Original_WORKAMT, 
                    string Original_JOB_DISP) {
            return this.Update(Original_JOB, JOB_NAME, JOB_ENAME, KEY_DATE, KEY_MAN, JOB_TREE, JOBL, JOBLB, JOBLE, OLD_JOB, WORKAMT, JOB_DISP, Original_JOB, Original_JOB_NAME, Original_JOB_ENAME, Original_KEY_DATE, Original_KEY_MAN, Original_JOB_TREE, Original_JOBL, Original_JOBLB, Original_JOBLE, Original_OLD_JOB, Original_WORKAMT, Original_JOB_DISP);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JOBLTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JOBLTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "JOBL";
            tableMapping.ColumnMappings.Add("JOBL", "JOBL");
            tableMapping.ColumnMappings.Add("JOB_NAME", "JOB_NAME");
            tableMapping.ColumnMappings.Add("B_SAL", "B_SAL");
            tableMapping.ColumnMappings.Add("E_SAL", "E_SAL");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("OLD_JOBL", "OLD_JOBL");
            tableMapping.ColumnMappings.Add("B_SAL1", "B_SAL1");
            tableMapping.ColumnMappings.Add("B_SAL2", "B_SAL2");
            tableMapping.ColumnMappings.Add("E_SAL1", "E_SAL1");
            tableMapping.ColumnMappings.Add("E_SAL2", "E_SAL2");
            tableMapping.ColumnMappings.Add("JOBL_GRUP", "JOBL_GRUP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [jobl] WHERE (([JOBL] = @Original_JOBL) AND ([JOB_NAME] = @Original_JOB_NAME) AND ([B_SAL] = @Original_B_SAL) AND ([E_SAL] = @Original_E_SAL) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_JOBL] = @Original_OLD_JOBL) AND ([B_SAL1] = @Original_B_SAL1) AND ([B_SAL2] = @Original_B_SAL2) AND ([E_SAL1] = @Original_E_SAL1) AND ([E_SAL2] = @Original_E_SAL2) AND ([JOBL_GRUP] = @Original_JOBL_GRUP))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [jobl] ([JOBL], [JOB_NAME], [B_SAL], [E_SAL], [KEY_DATE], [KEY_MAN], [OLD_JOBL], [B_SAL1], [B_SAL2], [E_SAL1], [E_SAL2], [JOBL_GRUP]) VALUES (@JOBL, @JOB_NAME, @B_SAL, @E_SAL, @KEY_DATE, @KEY_MAN, @OLD_JOBL, @B_SAL1, @B_SAL2, @E_SAL1, @E_SAL2, @JOBL_GRUP);
SELECT JOBL, JOB_NAME, B_SAL, E_SAL, KEY_DATE, KEY_MAN, OLD_JOBL, B_SAL1, B_SAL2, E_SAL1, E_SAL2, JOBL_GRUP FROM JOBL WHERE (JOBL = @JOBL)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [jobl] SET [JOBL] = @JOBL, [JOB_NAME] = @JOB_NAME, [B_SAL] = @B_SAL, [E_SAL] = @E_SAL, [KEY_DATE] = @KEY_DATE, [KEY_MAN] = @KEY_MAN, [OLD_JOBL] = @OLD_JOBL, [B_SAL1] = @B_SAL1, [B_SAL2] = @B_SAL2, [E_SAL1] = @E_SAL1, [E_SAL2] = @E_SAL2, [JOBL_GRUP] = @JOBL_GRUP WHERE (([JOBL] = @Original_JOBL) AND ([JOB_NAME] = @Original_JOB_NAME) AND ([B_SAL] = @Original_B_SAL) AND ([E_SAL] = @Original_E_SAL) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([OLD_JOBL] = @Original_OLD_JOBL) AND ([B_SAL1] = @Original_B_SAL1) AND ([B_SAL2] = @Original_B_SAL2) AND ([E_SAL1] = @Original_E_SAL1) AND ([E_SAL2] = @Original_E_SAL2) AND ([JOBL_GRUP] = @Original_JOBL_GRUP));
SELECT JOBL, JOB_NAME, B_SAL, E_SAL, KEY_DATE, KEY_MAN, OLD_JOBL, B_SAL1, B_SAL2, E_SAL1, E_SAL2, JOBL_GRUP FROM JOBL WHERE (JOBL = @JOBL)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLD_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLD_JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_B_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "B_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL1", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_E_SAL2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "E_SAL2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL_GRUP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL_GRUP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "select * from jobl";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBas.JOBLDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBas.JOBLDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsBas.JOBLDataTable dataTable = new dsBas.JOBLDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas.JOBLDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas dataSet) {
            return this.Adapter.Update(dataSet, "JOBL");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_JOBL, string Original_JOB_NAME, decimal Original_B_SAL, decimal Original_E_SAL, System.DateTime Original_KEY_DATE, string Original_KEY_MAN, string Original_OLD_JOBL, decimal Original_B_SAL1, decimal Original_B_SAL2, decimal Original_E_SAL1, decimal Original_E_SAL2, string Original_JOBL_GRUP) {
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_JOBL));
            }
            if ((Original_JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_JOB_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_B_SAL));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(Original_E_SAL));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_JOBL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_OLD_JOBL));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(Original_B_SAL1));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_B_SAL2));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_E_SAL1));
            this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_E_SAL2));
            if ((Original_JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL_GRUP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_JOBL_GRUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string JOBL, string JOB_NAME, decimal B_SAL, decimal E_SAL, System.DateTime KEY_DATE, string KEY_MAN, string OLD_JOBL, decimal B_SAL1, decimal B_SAL2, decimal E_SAL1, decimal E_SAL2, string JOBL_GRUP) {
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(JOBL));
            }
            if ((JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("JOB_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(JOB_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(B_SAL));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(E_SAL));
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("OLD_JOBL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(OLD_JOBL));
            }
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(B_SAL1));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(B_SAL2));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(E_SAL1));
            this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(E_SAL2));
            if ((JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("JOBL_GRUP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(JOBL_GRUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JOBL, 
                    string JOB_NAME, 
                    decimal B_SAL, 
                    decimal E_SAL, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_JOBL, 
                    decimal B_SAL1, 
                    decimal B_SAL2, 
                    decimal E_SAL1, 
                    decimal E_SAL2, 
                    string JOBL_GRUP, 
                    string Original_JOBL, 
                    string Original_JOB_NAME, 
                    decimal Original_B_SAL, 
                    decimal Original_E_SAL, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_JOBL, 
                    decimal Original_B_SAL1, 
                    decimal Original_B_SAL2, 
                    decimal Original_E_SAL1, 
                    decimal Original_E_SAL2, 
                    string Original_JOBL_GRUP) {
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(JOBL));
            }
            if ((JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("JOB_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(JOB_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(B_SAL));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(E_SAL));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(KEY_MAN));
            }
            if ((OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("OLD_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(OLD_JOBL));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(B_SAL1));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(B_SAL2));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(E_SAL1));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(E_SAL2));
            if ((JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("JOBL_GRUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(JOBL_GRUP));
            }
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_JOBL));
            }
            if ((Original_JOB_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_JOB_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_JOB_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(Original_B_SAL));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(Original_E_SAL));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_KEY_MAN));
            }
            if ((Original_OLD_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_OLD_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_OLD_JOBL));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((decimal)(Original_B_SAL1));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_B_SAL2));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(Original_E_SAL1));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_E_SAL2));
            if ((Original_JOBL_GRUP == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL_GRUP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_JOBL_GRUP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string JOB_NAME, 
                    decimal B_SAL, 
                    decimal E_SAL, 
                    System.DateTime KEY_DATE, 
                    string KEY_MAN, 
                    string OLD_JOBL, 
                    decimal B_SAL1, 
                    decimal B_SAL2, 
                    decimal E_SAL1, 
                    decimal E_SAL2, 
                    string JOBL_GRUP, 
                    string Original_JOBL, 
                    string Original_JOB_NAME, 
                    decimal Original_B_SAL, 
                    decimal Original_E_SAL, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_KEY_MAN, 
                    string Original_OLD_JOBL, 
                    decimal Original_B_SAL1, 
                    decimal Original_B_SAL2, 
                    decimal Original_E_SAL1, 
                    decimal Original_E_SAL2, 
                    string Original_JOBL_GRUP) {
            return this.Update(Original_JOBL, JOB_NAME, B_SAL, E_SAL, KEY_DATE, KEY_MAN, OLD_JOBL, B_SAL1, B_SAL2, E_SAL1, E_SAL2, JOBL_GRUP, Original_JOBL, Original_JOB_NAME, Original_B_SAL, Original_E_SAL, Original_KEY_DATE, Original_KEY_MAN, Original_OLD_JOBL, Original_B_SAL1, Original_B_SAL2, Original_E_SAL1, Original_E_SAL2, Original_JOBL_GRUP);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BASETTSTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BASETTSTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "BASETTS";
            tableMapping.ColumnMappings.Add("NOBR", "NOBR");
            tableMapping.ColumnMappings.Add("ADATE", "ADATE");
            tableMapping.ColumnMappings.Add("TTSCODE", "TTSCODE");
            tableMapping.ColumnMappings.Add("DDATE", "DDATE");
            tableMapping.ColumnMappings.Add("INDT", "INDT");
            tableMapping.ColumnMappings.Add("CINDT", "CINDT");
            tableMapping.ColumnMappings.Add("OUDT", "OUDT");
            tableMapping.ColumnMappings.Add("STDT", "STDT");
            tableMapping.ColumnMappings.Add("STINDT", "STINDT");
            tableMapping.ColumnMappings.Add("STOUDT", "STOUDT");
            tableMapping.ColumnMappings.Add("COMP", "COMP");
            tableMapping.ColumnMappings.Add("DEPT", "DEPT");
            tableMapping.ColumnMappings.Add("DEPTS", "DEPTS");
            tableMapping.ColumnMappings.Add("JOB", "JOB");
            tableMapping.ColumnMappings.Add("JOBL", "JOBL");
            tableMapping.ColumnMappings.Add("CARD", "CARD");
            tableMapping.ColumnMappings.Add("ROTET", "ROTET");
            tableMapping.ColumnMappings.Add("DI", "DI");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("MANG", "MANG");
            tableMapping.ColumnMappings.Add("YR_DAYS", "YR_DAYS");
            tableMapping.ColumnMappings.Add("WK_YRS", "WK_YRS");
            tableMapping.ColumnMappings.Add("SALTP", "SALTP");
            tableMapping.ColumnMappings.Add("JOBS", "JOBS");
            tableMapping.ColumnMappings.Add("WORKCD", "WORKCD");
            tableMapping.ColumnMappings.Add("CARCD", "CARCD");
            tableMapping.ColumnMappings.Add("EMPCD", "EMPCD");
            tableMapping.ColumnMappings.Add("OUTCD", "OUTCD");
            tableMapping.ColumnMappings.Add("CALABS", "CALABS");
            tableMapping.ColumnMappings.Add("CALOT", "CALOT");
            tableMapping.ColumnMappings.Add("FULATT", "FULATT");
            tableMapping.ColumnMappings.Add("NOTER", "NOTER");
            tableMapping.ColumnMappings.Add("NOWEL", "NOWEL");
            tableMapping.ColumnMappings.Add("NORET", "NORET");
            tableMapping.ColumnMappings.Add("NOTLATE", "NOTLATE");
            tableMapping.ColumnMappings.Add("HOLI_CODE", "HOLI_CODE");
            tableMapping.ColumnMappings.Add("NOOT", "NOOT");
            tableMapping.ColumnMappings.Add("NOSPEC", "NOSPEC");
            tableMapping.ColumnMappings.Add("NOCARD", "NOCARD");
            tableMapping.ColumnMappings.Add("NOEAT", "NOEAT");
            tableMapping.ColumnMappings.Add("APGRPCD", "APGRPCD");
            tableMapping.ColumnMappings.Add("DEPTM", "DEPTM");
            tableMapping.ColumnMappings.Add("TTSCD", "TTSCD");
            tableMapping.ColumnMappings.Add("MENO", "MENO");
            tableMapping.ColumnMappings.Add("SALADR", "SALADR");
            tableMapping.ColumnMappings.Add("NOWAGE", "NOWAGE");
            tableMapping.ColumnMappings.Add("MANGE", "MANGE");
            tableMapping.ColumnMappings.Add("RETRATE", "RETRATE");
            tableMapping.ColumnMappings.Add("RETDATE", "RETDATE");
            tableMapping.ColumnMappings.Add("RETCHOO", "RETCHOO");
            tableMapping.ColumnMappings.Add("RETDATE1", "RETDATE1");
            tableMapping.ColumnMappings.Add("ONLYONTIME", "ONLYONTIME");
            tableMapping.ColumnMappings.Add("JOBO", "JOBO");
            tableMapping.ColumnMappings.Add("COUNT_PASS", "COUNT_PASS");
            tableMapping.ColumnMappings.Add("PASS_DATE", "PASS_DATE");
            tableMapping.ColumnMappings.Add("MANG1", "MANG1");
            tableMapping.ColumnMappings.Add("AP_DATE", "AP_DATE");
            tableMapping.ColumnMappings.Add("GRP_AMT", "GRP_AMT");
            tableMapping.ColumnMappings.Add("TAX_DATE", "TAX_DATE");
            tableMapping.ColumnMappings.Add("NOSPAMT", "NOSPAMT");
            tableMapping.ColumnMappings.Add("FIXRATE", "FIXRATE");
            tableMapping.ColumnMappings.Add("TAX_EDATE", "TAX_EDATE");
            tableMapping.ColumnMappings.Add("IS_SELFOUT", "IS_SELFOUT");
            tableMapping.ColumnMappings.Add("INSG_TYPE", "INSG_TYPE");
            tableMapping.ColumnMappings.Add("OldSaladr", "OldSaladr");
            tableMapping.ColumnMappings.Add("STATION", "STATION");
            tableMapping.ColumnMappings.Add("CardJobName", "CardJobName");
            tableMapping.ColumnMappings.Add("CardJobEnName", "CardJobEnName");
            tableMapping.ColumnMappings.Add("OilSubsidy", "OilSubsidy");
            tableMapping.ColumnMappings.Add("CardID", "CardID");
            tableMapping.ColumnMappings.Add("DoorGuard", "DoorGuard");
            tableMapping.ColumnMappings.Add("OutPost", "OutPost");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[BASETTS] WHERE (([NOBR] = @Original_NOBR) AND ([ADATE] = @Orig" +
                "inal_ADATE) AND ([TTSCODE] = @Original_TTSCODE) AND ((@IsNull_DDATE = 1 AND [DDA" +
                "TE] IS NULL) OR ([DDATE] = @Original_DDATE)) AND ((@IsNull_INDT = 1 AND [INDT] I" +
                "S NULL) OR ([INDT] = @Original_INDT)) AND ((@IsNull_CINDT = 1 AND [CINDT] IS NUL" +
                "L) OR ([CINDT] = @Original_CINDT)) AND ((@IsNull_OUDT = 1 AND [OUDT] IS NULL) OR" +
                " ([OUDT] = @Original_OUDT)) AND ((@IsNull_STDT = 1 AND [STDT] IS NULL) OR ([STDT" +
                "] = @Original_STDT)) AND ((@IsNull_STINDT = 1 AND [STINDT] IS NULL) OR ([STINDT]" +
                " = @Original_STINDT)) AND ((@IsNull_STOUDT = 1 AND [STOUDT] IS NULL) OR ([STOUDT" +
                "] = @Original_STOUDT)) AND ([COMP] = @Original_COMP) AND ([DEPT] = @Original_DEP" +
                "T) AND ([DEPTS] = @Original_DEPTS) AND ([JOB] = @Original_JOB) AND ([JOBL] = @Or" +
                "iginal_JOBL) AND ([CARD] = @Original_CARD) AND ([ROTET] = @Original_ROTET) AND (" +
                "[DI] = @Original_DI) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Orig" +
                "inal_KEY_DATE) AND ([MANG] = @Original_MANG) AND ([YR_DAYS] = @Original_YR_DAYS)" +
                " AND ([WK_YRS] = @Original_WK_YRS) AND ([SALTP] = @Original_SALTP) AND ([JOBS] =" +
                " @Original_JOBS) AND ([WORKCD] = @Original_WORKCD) AND ([CARCD] = @Original_CARC" +
                "D) AND ([EMPCD] = @Original_EMPCD) AND ([OUTCD] = @Original_OUTCD) AND ([CALABS]" +
                " = @Original_CALABS) AND ([CALOT] = @Original_CALOT) AND ([FULATT] = @Original_F" +
                "ULATT) AND ([NOTER] = @Original_NOTER) AND ([NOWEL] = @Original_NOWEL) AND ([NOR" +
                "ET] = @Original_NORET) AND ([NOTLATE] = @Original_NOTLATE) AND ([HOLI_CODE] = @O" +
                "riginal_HOLI_CODE) AND ([NOOT] = @Original_NOOT) AND ([NOSPEC] = @Original_NOSPE" +
                "C) AND ([NOCARD] = @Original_NOCARD) AND ([NOEAT] = @Original_NOEAT) AND ([APGRP" +
                "CD] = @Original_APGRPCD) AND ([DEPTM] = @Original_DEPTM) AND ([TTSCD] = @Origina" +
                "l_TTSCD) AND ([MENO] = @Original_MENO) AND ([SALADR] = @Original_SALADR) AND ([N" +
                "OWAGE] = @Original_NOWAGE) AND ([MANGE] = @Original_MANGE) AND ([RETRATE] = @Ori" +
                "ginal_RETRATE) AND ((@IsNull_RETDATE = 1 AND [RETDATE] IS NULL) OR ([RETDATE] = " +
                "@Original_RETDATE)) AND ([RETCHOO] = @Original_RETCHOO) AND ((@IsNull_RETDATE1 =" +
                " 1 AND [RETDATE1] IS NULL) OR ([RETDATE1] = @Original_RETDATE1)) AND ([ONLYONTIM" +
                "E] = @Original_ONLYONTIME) AND ([JOBO] = @Original_JOBO) AND ([COUNT_PASS] = @Or" +
                "iginal_COUNT_PASS) AND ((@IsNull_PASS_DATE = 1 AND [PASS_DATE] IS NULL) OR ([PAS" +
                "S_DATE] = @Original_PASS_DATE)) AND ([MANG1] = @Original_MANG1) AND ((@IsNull_AP" +
                "_DATE = 1 AND [AP_DATE] IS NULL) OR ([AP_DATE] = @Original_AP_DATE)) AND ([GRP_A" +
                "MT] = @Original_GRP_AMT) AND ((@IsNull_TAX_DATE = 1 AND [TAX_DATE] IS NULL) OR (" +
                "[TAX_DATE] = @Original_TAX_DATE)) AND ([NOSPAMT] = @Original_NOSPAMT) AND ([FIXR" +
                "ATE] = @Original_FIXRATE) AND ((@IsNull_TAX_EDATE = 1 AND [TAX_EDATE] IS NULL) O" +
                "R ([TAX_EDATE] = @Original_TAX_EDATE)) AND ([IS_SELFOUT] = @Original_IS_SELFOUT)" +
                " AND ([INSG_TYPE] = @Original_INSG_TYPE) AND ((@IsNull_OldSaladr = 1 AND [OldSal" +
                "adr] IS NULL) OR ([OldSaladr] = @Original_OldSaladr)) AND ((@IsNull_STATION = 1 " +
                "AND [STATION] IS NULL) OR ([STATION] = @Original_STATION)) AND ((@IsNull_CardJob" +
                "Name = 1 AND [CardJobName] IS NULL) OR ([CardJobName] = @Original_CardJobName)) " +
                "AND ((@IsNull_CardJobEnName = 1 AND [CardJobEnName] IS NULL) OR ([CardJobEnName]" +
                " = @Original_CardJobEnName)) AND ((@IsNull_OilSubsidy = 1 AND [OilSubsidy] IS NU" +
                "LL) OR ([OilSubsidy] = @Original_OilSubsidy)) AND ((@IsNull_CardID = 1 AND [Card" +
                "ID] IS NULL) OR ([CardID] = @Original_CardID)) AND ((@IsNull_DoorGuard = 1 AND [" +
                "DoorGuard] IS NULL) OR ([DoorGuard] = @Original_DoorGuard)) AND ((@IsNull_OutPos" +
                "t = 1 AND [OutPost] IS NULL) OR ([OutPost] = @Original_OutPost)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PASS_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AP_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_EDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldSaladr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STATION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobEnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OilSubsidy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DoorGuard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[BASETTS] ([NOBR], [ADATE], [TTSCODE], [DDATE], [INDT], [CINDT]" +
                ", [OUDT], [STDT], [STINDT], [STOUDT], [COMP], [DEPT], [DEPTS], [JOB], [JOBL], [C" +
                "ARD], [ROTET], [DI], [KEY_MAN], [KEY_DATE], [MANG], [YR_DAYS], [WK_YRS], [SALTP]" +
                ", [JOBS], [WORKCD], [CARCD], [EMPCD], [OUTCD], [CALABS], [CALOT], [FULATT], [NOT" +
                "ER], [NOWEL], [NORET], [NOTLATE], [HOLI_CODE], [NOOT], [NOSPEC], [NOCARD], [NOEA" +
                "T], [APGRPCD], [DEPTM], [TTSCD], [MENO], [SALADR], [NOWAGE], [MANGE], [RETRATE]," +
                " [RETDATE], [RETCHOO], [RETDATE1], [ONLYONTIME], [JOBO], [COUNT_PASS], [PASS_DAT" +
                "E], [MANG1], [AP_DATE], [GRP_AMT], [TAX_DATE], [NOSPAMT], [FIXRATE], [TAX_EDATE]" +
                ", [IS_SELFOUT], [INSG_TYPE], [OldSaladr], [STATION], [CardJobName], [CardJobEnNa" +
                "me], [OilSubsidy], [CardID], [DoorGuard], [OutPost]) VALUES (@NOBR, @ADATE, @TTS" +
                "CODE, @DDATE, @INDT, @CINDT, @OUDT, @STDT, @STINDT, @STOUDT, @COMP, @DEPT, @DEPT" +
                "S, @JOB, @JOBL, @CARD, @ROTET, @DI, @KEY_MAN, @KEY_DATE, @MANG, @YR_DAYS, @WK_YR" +
                "S, @SALTP, @JOBS, @WORKCD, @CARCD, @EMPCD, @OUTCD, @CALABS, @CALOT, @FULATT, @NO" +
                "TER, @NOWEL, @NORET, @NOTLATE, @HOLI_CODE, @NOOT, @NOSPEC, @NOCARD, @NOEAT, @APG" +
                "RPCD, @DEPTM, @TTSCD, @MENO, @SALADR, @NOWAGE, @MANGE, @RETRATE, @RETDATE, @RETC" +
                "HOO, @RETDATE1, @ONLYONTIME, @JOBO, @COUNT_PASS, @PASS_DATE, @MANG1, @AP_DATE, @" +
                "GRP_AMT, @TAX_DATE, @NOSPAMT, @FIXRATE, @TAX_EDATE, @IS_SELFOUT, @INSG_TYPE, @Ol" +
                "dSaladr, @STATION, @CardJobName, @CardJobEnName, @OilSubsidy, @CardID, @DoorGuar" +
                "d, @OutPost);\r\nSELECT NOBR, ADATE, TTSCODE, DDATE, INDT, CINDT, OUDT, STDT, STIN" +
                "DT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, KEY_MAN, KEY_DATE, MA" +
                "NG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUTCD, CALABS, CALOT, FU" +
                "LATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCARD, NOEAT, APGR" +
                "PCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE, RETCHOO, RETDA" +
                "TE1, ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP_AMT, TAX_DATE," +
                " NOSPAMT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, STATION, CardJob" +
                "Name, CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost FROM BASETTS WHERE (" +
                "ADATE = @ADATE) AND (NOBR = @NOBR) AND (TTSCODE = @TTSCODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[BASETTS] SET [NOBR] = @NOBR, [ADATE] = @ADATE, [TTSCODE] = @TTSCODE" +
                ", [DDATE] = @DDATE, [INDT] = @INDT, [CINDT] = @CINDT, [OUDT] = @OUDT, [STDT] = @" +
                "STDT, [STINDT] = @STINDT, [STOUDT] = @STOUDT, [COMP] = @COMP, [DEPT] = @DEPT, [D" +
                "EPTS] = @DEPTS, [JOB] = @JOB, [JOBL] = @JOBL, [CARD] = @CARD, [ROTET] = @ROTET, " +
                "[DI] = @DI, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [MANG] = @MANG, [YR_DA" +
                "YS] = @YR_DAYS, [WK_YRS] = @WK_YRS, [SALTP] = @SALTP, [JOBS] = @JOBS, [WORKCD] =" +
                " @WORKCD, [CARCD] = @CARCD, [EMPCD] = @EMPCD, [OUTCD] = @OUTCD, [CALABS] = @CALA" +
                "BS, [CALOT] = @CALOT, [FULATT] = @FULATT, [NOTER] = @NOTER, [NOWEL] = @NOWEL, [N" +
                "ORET] = @NORET, [NOTLATE] = @NOTLATE, [HOLI_CODE] = @HOLI_CODE, [NOOT] = @NOOT, " +
                "[NOSPEC] = @NOSPEC, [NOCARD] = @NOCARD, [NOEAT] = @NOEAT, [APGRPCD] = @APGRPCD, " +
                "[DEPTM] = @DEPTM, [TTSCD] = @TTSCD, [MENO] = @MENO, [SALADR] = @SALADR, [NOWAGE]" +
                " = @NOWAGE, [MANGE] = @MANGE, [RETRATE] = @RETRATE, [RETDATE] = @RETDATE, [RETCH" +
                "OO] = @RETCHOO, [RETDATE1] = @RETDATE1, [ONLYONTIME] = @ONLYONTIME, [JOBO] = @JO" +
                "BO, [COUNT_PASS] = @COUNT_PASS, [PASS_DATE] = @PASS_DATE, [MANG1] = @MANG1, [AP_" +
                "DATE] = @AP_DATE, [GRP_AMT] = @GRP_AMT, [TAX_DATE] = @TAX_DATE, [NOSPAMT] = @NOS" +
                "PAMT, [FIXRATE] = @FIXRATE, [TAX_EDATE] = @TAX_EDATE, [IS_SELFOUT] = @IS_SELFOUT" +
                ", [INSG_TYPE] = @INSG_TYPE, [OldSaladr] = @OldSaladr, [STATION] = @STATION, [Car" +
                "dJobName] = @CardJobName, [CardJobEnName] = @CardJobEnName, [OilSubsidy] = @OilS" +
                "ubsidy, [CardID] = @CardID, [DoorGuard] = @DoorGuard, [OutPost] = @OutPost WHERE" +
                " (([NOBR] = @Original_NOBR) AND ([ADATE] = @Original_ADATE) AND ([TTSCODE] = @Or" +
                "iginal_TTSCODE) AND ((@IsNull_DDATE = 1 AND [DDATE] IS NULL) OR ([DDATE] = @Orig" +
                "inal_DDATE)) AND ((@IsNull_INDT = 1 AND [INDT] IS NULL) OR ([INDT] = @Original_I" +
                "NDT)) AND ((@IsNull_CINDT = 1 AND [CINDT] IS NULL) OR ([CINDT] = @Original_CINDT" +
                ")) AND ((@IsNull_OUDT = 1 AND [OUDT] IS NULL) OR ([OUDT] = @Original_OUDT)) AND " +
                "((@IsNull_STDT = 1 AND [STDT] IS NULL) OR ([STDT] = @Original_STDT)) AND ((@IsNu" +
                "ll_STINDT = 1 AND [STINDT] IS NULL) OR ([STINDT] = @Original_STINDT)) AND ((@IsN" +
                "ull_STOUDT = 1 AND [STOUDT] IS NULL) OR ([STOUDT] = @Original_STOUDT)) AND ([COM" +
                "P] = @Original_COMP) AND ([DEPT] = @Original_DEPT) AND ([DEPTS] = @Original_DEPT" +
                "S) AND ([JOB] = @Original_JOB) AND ([JOBL] = @Original_JOBL) AND ([CARD] = @Orig" +
                "inal_CARD) AND ([ROTET] = @Original_ROTET) AND ([DI] = @Original_DI) AND ([KEY_M" +
                "AN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([MANG] = @Or" +
                "iginal_MANG) AND ([YR_DAYS] = @Original_YR_DAYS) AND ([WK_YRS] = @Original_WK_YR" +
                "S) AND ([SALTP] = @Original_SALTP) AND ([JOBS] = @Original_JOBS) AND ([WORKCD] =" +
                " @Original_WORKCD) AND ([CARCD] = @Original_CARCD) AND ([EMPCD] = @Original_EMPC" +
                "D) AND ([OUTCD] = @Original_OUTCD) AND ([CALABS] = @Original_CALABS) AND ([CALOT" +
                "] = @Original_CALOT) AND ([FULATT] = @Original_FULATT) AND ([NOTER] = @Original_" +
                "NOTER) AND ([NOWEL] = @Original_NOWEL) AND ([NORET] = @Original_NORET) AND ([NOT" +
                "LATE] = @Original_NOTLATE) AND ([HOLI_CODE] = @Original_HOLI_CODE) AND ([NOOT] =" +
                " @Original_NOOT) AND ([NOSPEC] = @Original_NOSPEC) AND ([NOCARD] = @Original_NOC" +
                "ARD) AND ([NOEAT] = @Original_NOEAT) AND ([APGRPCD] = @Original_APGRPCD) AND ([D" +
                "EPTM] = @Original_DEPTM) AND ([TTSCD] = @Original_TTSCD) AND ([MENO] = @Original" +
                "_MENO) AND ([SALADR] = @Original_SALADR) AND ([NOWAGE] = @Original_NOWAGE) AND (" +
                "[MANGE] = @Original_MANGE) AND ([RETRATE] = @Original_RETRATE) AND ((@IsNull_RET" +
                "DATE = 1 AND [RETDATE] IS NULL) OR ([RETDATE] = @Original_RETDATE)) AND ([RETCHO" +
                "O] = @Original_RETCHOO) AND ((@IsNull_RETDATE1 = 1 AND [RETDATE1] IS NULL) OR ([" +
                "RETDATE1] = @Original_RETDATE1)) AND ([ONLYONTIME] = @Original_ONLYONTIME) AND (" +
                "[JOBO] = @Original_JOBO) AND ([COUNT_PASS] = @Original_COUNT_PASS) AND ((@IsNull" +
                "_PASS_DATE = 1 AND [PASS_DATE] IS NULL) OR ([PASS_DATE] = @Original_PASS_DATE)) " +
                "AND ([MANG1] = @Original_MANG1) AND ((@IsNull_AP_DATE = 1 AND [AP_DATE] IS NULL)" +
                " OR ([AP_DATE] = @Original_AP_DATE)) AND ([GRP_AMT] = @Original_GRP_AMT) AND ((@" +
                "IsNull_TAX_DATE = 1 AND [TAX_DATE] IS NULL) OR ([TAX_DATE] = @Original_TAX_DATE)" +
                ") AND ([NOSPAMT] = @Original_NOSPAMT) AND ([FIXRATE] = @Original_FIXRATE) AND ((" +
                "@IsNull_TAX_EDATE = 1 AND [TAX_EDATE] IS NULL) OR ([TAX_EDATE] = @Original_TAX_E" +
                "DATE)) AND ([IS_SELFOUT] = @Original_IS_SELFOUT) AND ([INSG_TYPE] = @Original_IN" +
                "SG_TYPE) AND ((@IsNull_OldSaladr = 1 AND [OldSaladr] IS NULL) OR ([OldSaladr] = " +
                "@Original_OldSaladr)) AND ((@IsNull_STATION = 1 AND [STATION] IS NULL) OR ([STAT" +
                "ION] = @Original_STATION)) AND ((@IsNull_CardJobName = 1 AND [CardJobName] IS NU" +
                "LL) OR ([CardJobName] = @Original_CardJobName)) AND ((@IsNull_CardJobEnName = 1 " +
                "AND [CardJobEnName] IS NULL) OR ([CardJobEnName] = @Original_CardJobEnName)) AND" +
                " ((@IsNull_OilSubsidy = 1 AND [OilSubsidy] IS NULL) OR ([OilSubsidy] = @Original" +
                "_OilSubsidy)) AND ((@IsNull_CardID = 1 AND [CardID] IS NULL) OR ([CardID] = @Ori" +
                "ginal_CardID)) AND ((@IsNull_DoorGuard = 1 AND [DoorGuard] IS NULL) OR ([DoorGua" +
                "rd] = @Original_DoorGuard)) AND ((@IsNull_OutPost = 1 AND [OutPost] IS NULL) OR " +
                "([OutPost] = @Original_OutPost)));\r\nSELECT NOBR, ADATE, TTSCODE, DDATE, INDT, CI" +
                "NDT, OUDT, STDT, STINDT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, " +
                "KEY_MAN, KEY_DATE, MANG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUT" +
                "CD, CALABS, CALOT, FULATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC" +
                ", NOCARD, NOEAT, APGRPCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RE" +
                "TDATE, RETCHOO, RETDATE1, ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DAT" +
                "E, GRP_AMT, TAX_DATE, NOSPAMT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSal" +
                "adr, STATION, CardJobName, CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost" +
                " FROM BASETTS WHERE (ADATE = @ADATE) AND (NOBR = @NOBR) AND (TTSCODE = @TTSCODE)" +
                "";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOBR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STINDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STINDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STINDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STOUDT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STOUDT", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STOUDT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COMP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOB", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBL", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ROTET", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ROTET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DI", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YR_DAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "YR_DAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WK_YRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "WK_YRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALTP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALTP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBS", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WORKCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WORKCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CARCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CARCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EMPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "EMPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OUTCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OUTCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALABS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALABS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CALOT", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CALOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FULATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FULATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NORET", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NORET", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTLATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTLATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HOLI_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HOLI_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOOT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOOT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPEC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPEC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOCARD", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOCARD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOEAT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOEAT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_APGRPCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "APGRPCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEPTM", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DEPTM", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TTSCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TTSCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MENO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MENO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALADR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALADR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOWAGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOWAGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANGE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANGE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "RETRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETCHOO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETCHOO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_RETDATE1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETDATE1", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETDATE1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ONLYONTIME", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ONLYONTIME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_JOBO", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "JOBO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_COUNT_PASS", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "COUNT_PASS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PASS_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PASS_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PASS_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MANG1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MANG1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_AP_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AP_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "AP_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_GRP_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "GRP_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_DATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOSPAMT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOSPAMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FIXRATE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FIXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TAX_EDATE", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX_EDATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX_EDATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IS_SELFOUT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IS_SELFOUT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSG_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSG_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OldSaladr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OldSaladr", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OldSaladr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_STATION", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_STATION", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "STATION", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardJobEnName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardJobEnName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardJobEnName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OilSubsidy", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OilSubsidy", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OilSubsidy", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CardID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CardID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CardID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DoorGuard", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DoorGuard", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DoorGuard", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_OutPost", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OutPost", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OutPost", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT NOBR, ADATE, TTSCODE, DDATE, INDT, CINDT, OUDT, STDT, STINDT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, KEY_MAN, KEY_DATE, MANG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUTCD, CALABS, CALOT, FULATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCARD, NOEAT, APGRPCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE, RETCHOO, RETDATE1, ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP_AMT, TAX_DATE, NOSPAMT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, STATION, CardJobName, CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost FROM dbo.BASETTS";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT NOBR, ADATE, TTSCODE, DDATE, INDT, CINDT, OUDT, STDT, STINDT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, KEY_MAN, KEY_DATE, MANG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUTCD, CALABS, CALOT, FULATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCARD, NOEAT, APGRPCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE, RETCHOO, RETDATE1, ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP_AMT, TAX_DATE, NOSPAMT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, STATION, CardJobName, CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost FROM dbo.BASETTS
WHERE (NOBR = @NOBR) ORDER BY ADATE";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOBR", global::System.Data.SqlDbType.NVarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, "NOBR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsBas.BASETTSDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsBas.BASETTSDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsBas.BASETTSDataTable dataTable = new dsBas.BASETTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByNobr(dsBas.BASETTSDataTable dataTable, string NOBR) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NOBR));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsBas.BASETTSDataTable GetDataBy(string NOBR) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NOBR));
            }
            dsBas.BASETTSDataTable dataTable = new dsBas.BASETTSDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas.BASETTSDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsBas dataSet) {
            return this.Adapter.Update(dataSet, "BASETTS");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_TTSCODE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    global::System.Nullable<global::System.DateTime> Original_INDT, 
                    global::System.Nullable<global::System.DateTime> Original_CINDT, 
                    global::System.Nullable<global::System.DateTime> Original_OUDT, 
                    global::System.Nullable<global::System.DateTime> Original_STDT, 
                    global::System.Nullable<global::System.DateTime> Original_STINDT, 
                    global::System.Nullable<global::System.DateTime> Original_STOUDT, 
                    string Original_COMP, 
                    string Original_DEPT, 
                    string Original_DEPTS, 
                    string Original_JOB, 
                    string Original_JOBL, 
                    string Original_CARD, 
                    string Original_ROTET, 
                    string Original_DI, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    bool Original_MANG, 
                    decimal Original_YR_DAYS, 
                    decimal Original_WK_YRS, 
                    string Original_SALTP, 
                    string Original_JOBS, 
                    string Original_WORKCD, 
                    string Original_CARCD, 
                    string Original_EMPCD, 
                    string Original_OUTCD, 
                    bool Original_CALABS, 
                    string Original_CALOT, 
                    bool Original_FULATT, 
                    bool Original_NOTER, 
                    bool Original_NOWEL, 
                    bool Original_NORET, 
                    bool Original_NOTLATE, 
                    string Original_HOLI_CODE, 
                    bool Original_NOOT, 
                    bool Original_NOSPEC, 
                    bool Original_NOCARD, 
                    bool Original_NOEAT, 
                    string Original_APGRPCD, 
                    string Original_DEPTM, 
                    string Original_TTSCD, 
                    string Original_MENO, 
                    string Original_SALADR, 
                    bool Original_NOWAGE, 
                    bool Original_MANGE, 
                    decimal Original_RETRATE, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE, 
                    string Original_RETCHOO, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE1, 
                    bool Original_ONLYONTIME, 
                    string Original_JOBO, 
                    bool Original_COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> Original_PASS_DATE, 
                    bool Original_MANG1, 
                    global::System.Nullable<global::System.DateTime> Original_AP_DATE, 
                    decimal Original_GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_DATE, 
                    bool Original_NOSPAMT, 
                    bool Original_FIXRATE, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_EDATE, 
                    bool Original_IS_SELFOUT, 
                    string Original_INSG_TYPE, 
                    string Original_OldSaladr, 
                    string Original_STATION, 
                    string Original_CardJobName, 
                    string Original_CardJobEnName, 
                    string Original_OilSubsidy, 
                    string Original_CardID, 
                    string Original_DoorGuard, 
                    string Original_OutPost) {
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_NOBR));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_TTSCODE == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_TTSCODE));
            }
            if ((Original_DDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_DDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_INDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_INDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_CINDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_CINDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_OUDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_OUDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_STDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_STDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_STINDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((System.DateTime)(Original_STINDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_STOUDT.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_STOUDT.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_COMP));
            }
            if ((Original_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_DEPT));
            }
            if ((Original_DEPTS == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_DEPTS));
            }
            if ((Original_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_JOB");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_JOB));
            }
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_JOBL));
            }
            if ((Original_CARD == null)) {
                throw new global::System.ArgumentNullException("Original_CARD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((string)(Original_CARD));
            }
            if ((Original_ROTET == null)) {
                throw new global::System.ArgumentNullException("Original_ROTET");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_ROTET));
            }
            if ((Original_DI == null)) {
                throw new global::System.ArgumentNullException("Original_DI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_DI));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[26].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_MANG));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((decimal)(Original_YR_DAYS));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_WK_YRS));
            if ((Original_SALTP == null)) {
                throw new global::System.ArgumentNullException("Original_SALTP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((string)(Original_SALTP));
            }
            if ((Original_JOBS == null)) {
                throw new global::System.ArgumentNullException("Original_JOBS");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((string)(Original_JOBS));
            }
            if ((Original_WORKCD == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_WORKCD));
            }
            if ((Original_CARCD == null)) {
                throw new global::System.ArgumentNullException("Original_CARCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((string)(Original_CARCD));
            }
            if ((Original_EMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_EMPCD));
            }
            if ((Original_OUTCD == null)) {
                throw new global::System.ArgumentNullException("Original_OUTCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_OUTCD));
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_CALABS));
            if ((Original_CALOT == null)) {
                throw new global::System.ArgumentNullException("Original_CALOT");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((string)(Original_CALOT));
            }
            this.Adapter.DeleteCommand.Parameters[38].Value = ((bool)(Original_FULATT));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((bool)(Original_NOTER));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((bool)(Original_NOWEL));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((bool)(Original_NORET));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((bool)(Original_NOTLATE));
            if ((Original_HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_HOLI_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((string)(Original_HOLI_CODE));
            }
            this.Adapter.DeleteCommand.Parameters[44].Value = ((bool)(Original_NOOT));
            this.Adapter.DeleteCommand.Parameters[45].Value = ((bool)(Original_NOSPEC));
            this.Adapter.DeleteCommand.Parameters[46].Value = ((bool)(Original_NOCARD));
            this.Adapter.DeleteCommand.Parameters[47].Value = ((bool)(Original_NOEAT));
            if ((Original_APGRPCD == null)) {
                throw new global::System.ArgumentNullException("Original_APGRPCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((string)(Original_APGRPCD));
            }
            if ((Original_DEPTM == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTM");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((string)(Original_DEPTM));
            }
            if ((Original_TTSCD == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((string)(Original_TTSCD));
            }
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((string)(Original_MENO));
            }
            if ((Original_SALADR == null)) {
                throw new global::System.ArgumentNullException("Original_SALADR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((string)(Original_SALADR));
            }
            this.Adapter.DeleteCommand.Parameters[53].Value = ((bool)(Original_NOWAGE));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((bool)(Original_MANGE));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((decimal)(Original_RETRATE));
            if ((Original_RETDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[57].Value = ((System.DateTime)(Original_RETDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_RETCHOO == null)) {
                throw new global::System.ArgumentNullException("Original_RETCHOO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[58].Value = ((string)(Original_RETCHOO));
            }
            if ((Original_RETDATE1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[60].Value = ((System.DateTime)(Original_RETDATE1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[61].Value = ((bool)(Original_ONLYONTIME));
            if ((Original_JOBO == null)) {
                throw new global::System.ArgumentNullException("Original_JOBO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_JOBO));
            }
            this.Adapter.DeleteCommand.Parameters[63].Value = ((bool)(Original_COUNT_PASS));
            if ((Original_PASS_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((System.DateTime)(Original_PASS_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[66].Value = ((bool)(Original_MANG1));
            if ((Original_AP_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[68].Value = ((System.DateTime)(Original_AP_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[69].Value = ((decimal)(Original_GRP_AMT));
            if ((Original_TAX_DATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[71].Value = ((System.DateTime)(Original_TAX_DATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[72].Value = ((bool)(Original_NOSPAMT));
            this.Adapter.DeleteCommand.Parameters[73].Value = ((bool)(Original_FIXRATE));
            if ((Original_TAX_EDATE.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[75].Value = ((System.DateTime)(Original_TAX_EDATE.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[76].Value = ((bool)(Original_IS_SELFOUT));
            if ((Original_INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INSG_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((string)(Original_INSG_TYPE));
            }
            if ((Original_OldSaladr == null)) {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[79].Value = ((string)(Original_OldSaladr));
            }
            if ((Original_STATION == null)) {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[81].Value = ((string)(Original_STATION));
            }
            if ((Original_CardJobName == null)) {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[83].Value = ((string)(Original_CardJobName));
            }
            if ((Original_CardJobEnName == null)) {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[85].Value = ((string)(Original_CardJobEnName));
            }
            if ((Original_OilSubsidy == null)) {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[87].Value = ((string)(Original_OilSubsidy));
            }
            if ((Original_CardID == null)) {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[89].Value = ((string)(Original_CardID));
            }
            if ((Original_DoorGuard == null)) {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[91].Value = ((string)(Original_DoorGuard));
            }
            if ((Original_OutPost == null)) {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[93].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[92].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[93].Value = ((string)(Original_OutPost));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string NOBR, 
                    System.DateTime ADATE, 
                    string TTSCODE, 
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    global::System.Nullable<global::System.DateTime> INDT, 
                    global::System.Nullable<global::System.DateTime> CINDT, 
                    global::System.Nullable<global::System.DateTime> OUDT, 
                    global::System.Nullable<global::System.DateTime> STDT, 
                    global::System.Nullable<global::System.DateTime> STINDT, 
                    global::System.Nullable<global::System.DateTime> STOUDT, 
                    string COMP, 
                    string DEPT, 
                    string DEPTS, 
                    string JOB, 
                    string JOBL, 
                    string CARD, 
                    string ROTET, 
                    string DI, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool MANG, 
                    decimal YR_DAYS, 
                    decimal WK_YRS, 
                    string SALTP, 
                    string JOBS, 
                    string WORKCD, 
                    string CARCD, 
                    string EMPCD, 
                    string OUTCD, 
                    bool CALABS, 
                    string CALOT, 
                    bool FULATT, 
                    bool NOTER, 
                    bool NOWEL, 
                    bool NORET, 
                    bool NOTLATE, 
                    string HOLI_CODE, 
                    bool NOOT, 
                    bool NOSPEC, 
                    bool NOCARD, 
                    bool NOEAT, 
                    string APGRPCD, 
                    string DEPTM, 
                    string TTSCD, 
                    string MENO, 
                    string SALADR, 
                    bool NOWAGE, 
                    bool MANGE, 
                    decimal RETRATE, 
                    global::System.Nullable<global::System.DateTime> RETDATE, 
                    string RETCHOO, 
                    global::System.Nullable<global::System.DateTime> RETDATE1, 
                    bool ONLYONTIME, 
                    string JOBO, 
                    bool COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> PASS_DATE, 
                    bool MANG1, 
                    global::System.Nullable<global::System.DateTime> AP_DATE, 
                    decimal GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> TAX_DATE, 
                    bool NOSPAMT, 
                    bool FIXRATE, 
                    global::System.Nullable<global::System.DateTime> TAX_EDATE, 
                    bool IS_SELFOUT, 
                    string INSG_TYPE, 
                    string OldSaladr, 
                    string STATION, 
                    string CardJobName, 
                    string CardJobEnName, 
                    string OilSubsidy, 
                    string CardID, 
                    string DoorGuard, 
                    string OutPost) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(ADATE));
            if ((TTSCODE == null)) {
                throw new global::System.ArgumentNullException("TTSCODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(TTSCODE));
            }
            if ((DDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(DDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((INDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(INDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CINDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(CINDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OUDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(OUDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((STDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(STDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((STINDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(STINDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((STOUDT.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(STOUDT.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(COMP));
            }
            if ((DEPT == null)) {
                throw new global::System.ArgumentNullException("DEPT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(DEPT));
            }
            if ((DEPTS == null)) {
                throw new global::System.ArgumentNullException("DEPTS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(DEPTS));
            }
            if ((JOB == null)) {
                throw new global::System.ArgumentNullException("JOB");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(JOB));
            }
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(JOBL));
            }
            if ((CARD == null)) {
                throw new global::System.ArgumentNullException("CARD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CARD));
            }
            if ((ROTET == null)) {
                throw new global::System.ArgumentNullException("ROTET");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ROTET));
            }
            if ((DI == null)) {
                throw new global::System.ArgumentNullException("DI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = ((string)(DI));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(MANG));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(YR_DAYS));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(WK_YRS));
            if ((SALTP == null)) {
                throw new global::System.ArgumentNullException("SALTP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = ((string)(SALTP));
            }
            if ((JOBS == null)) {
                throw new global::System.ArgumentNullException("JOBS");
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(JOBS));
            }
            if ((WORKCD == null)) {
                throw new global::System.ArgumentNullException("WORKCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(WORKCD));
            }
            if ((CARCD == null)) {
                throw new global::System.ArgumentNullException("CARCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(CARCD));
            }
            if ((EMPCD == null)) {
                throw new global::System.ArgumentNullException("EMPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(EMPCD));
            }
            if ((OUTCD == null)) {
                throw new global::System.ArgumentNullException("OUTCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(OUTCD));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(CALABS));
            if ((CALOT == null)) {
                throw new global::System.ArgumentNullException("CALOT");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(CALOT));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(FULATT));
            this.Adapter.InsertCommand.Parameters[32].Value = ((bool)(NOTER));
            this.Adapter.InsertCommand.Parameters[33].Value = ((bool)(NOWEL));
            this.Adapter.InsertCommand.Parameters[34].Value = ((bool)(NORET));
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(NOTLATE));
            if ((HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("HOLI_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(HOLI_CODE));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((bool)(NOOT));
            this.Adapter.InsertCommand.Parameters[38].Value = ((bool)(NOSPEC));
            this.Adapter.InsertCommand.Parameters[39].Value = ((bool)(NOCARD));
            this.Adapter.InsertCommand.Parameters[40].Value = ((bool)(NOEAT));
            if ((APGRPCD == null)) {
                throw new global::System.ArgumentNullException("APGRPCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = ((string)(APGRPCD));
            }
            if ((DEPTM == null)) {
                throw new global::System.ArgumentNullException("DEPTM");
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(DEPTM));
            }
            if ((TTSCD == null)) {
                throw new global::System.ArgumentNullException("TTSCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = ((string)(TTSCD));
            }
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = ((string)(MENO));
            }
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(SALADR));
            }
            this.Adapter.InsertCommand.Parameters[46].Value = ((bool)(NOWAGE));
            this.Adapter.InsertCommand.Parameters[47].Value = ((bool)(MANGE));
            this.Adapter.InsertCommand.Parameters[48].Value = ((decimal)(RETRATE));
            if ((RETDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(RETDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((RETCHOO == null)) {
                throw new global::System.ArgumentNullException("RETCHOO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = ((string)(RETCHOO));
            }
            if ((RETDATE1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(RETDATE1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[52].Value = ((bool)(ONLYONTIME));
            if ((JOBO == null)) {
                throw new global::System.ArgumentNullException("JOBO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[53].Value = ((string)(JOBO));
            }
            this.Adapter.InsertCommand.Parameters[54].Value = ((bool)(COUNT_PASS));
            if ((PASS_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[55].Value = ((System.DateTime)(PASS_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[56].Value = ((bool)(MANG1));
            if ((AP_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[57].Value = ((System.DateTime)(AP_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[58].Value = ((decimal)(GRP_AMT));
            if ((TAX_DATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[59].Value = ((System.DateTime)(TAX_DATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[60].Value = ((bool)(NOSPAMT));
            this.Adapter.InsertCommand.Parameters[61].Value = ((bool)(FIXRATE));
            if ((TAX_EDATE.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[62].Value = ((System.DateTime)(TAX_EDATE.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[63].Value = ((bool)(IS_SELFOUT));
            if ((INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSG_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(INSG_TYPE));
            }
            if ((OldSaladr == null)) {
                this.Adapter.InsertCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(OldSaladr));
            }
            if ((STATION == null)) {
                this.Adapter.InsertCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(STATION));
            }
            if ((CardJobName == null)) {
                this.Adapter.InsertCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(CardJobName));
            }
            if ((CardJobEnName == null)) {
                this.Adapter.InsertCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(CardJobEnName));
            }
            if ((OilSubsidy == null)) {
                this.Adapter.InsertCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(OilSubsidy));
            }
            if ((CardID == null)) {
                this.Adapter.InsertCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(CardID));
            }
            if ((DoorGuard == null)) {
                this.Adapter.InsertCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(DoorGuard));
            }
            if ((OutPost == null)) {
                this.Adapter.InsertCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(OutPost));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string NOBR, 
                    System.DateTime ADATE, 
                    string TTSCODE, 
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    global::System.Nullable<global::System.DateTime> INDT, 
                    global::System.Nullable<global::System.DateTime> CINDT, 
                    global::System.Nullable<global::System.DateTime> OUDT, 
                    global::System.Nullable<global::System.DateTime> STDT, 
                    global::System.Nullable<global::System.DateTime> STINDT, 
                    global::System.Nullable<global::System.DateTime> STOUDT, 
                    string COMP, 
                    string DEPT, 
                    string DEPTS, 
                    string JOB, 
                    string JOBL, 
                    string CARD, 
                    string ROTET, 
                    string DI, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool MANG, 
                    decimal YR_DAYS, 
                    decimal WK_YRS, 
                    string SALTP, 
                    string JOBS, 
                    string WORKCD, 
                    string CARCD, 
                    string EMPCD, 
                    string OUTCD, 
                    bool CALABS, 
                    string CALOT, 
                    bool FULATT, 
                    bool NOTER, 
                    bool NOWEL, 
                    bool NORET, 
                    bool NOTLATE, 
                    string HOLI_CODE, 
                    bool NOOT, 
                    bool NOSPEC, 
                    bool NOCARD, 
                    bool NOEAT, 
                    string APGRPCD, 
                    string DEPTM, 
                    string TTSCD, 
                    string MENO, 
                    string SALADR, 
                    bool NOWAGE, 
                    bool MANGE, 
                    decimal RETRATE, 
                    global::System.Nullable<global::System.DateTime> RETDATE, 
                    string RETCHOO, 
                    global::System.Nullable<global::System.DateTime> RETDATE1, 
                    bool ONLYONTIME, 
                    string JOBO, 
                    bool COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> PASS_DATE, 
                    bool MANG1, 
                    global::System.Nullable<global::System.DateTime> AP_DATE, 
                    decimal GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> TAX_DATE, 
                    bool NOSPAMT, 
                    bool FIXRATE, 
                    global::System.Nullable<global::System.DateTime> TAX_EDATE, 
                    bool IS_SELFOUT, 
                    string INSG_TYPE, 
                    string OldSaladr, 
                    string STATION, 
                    string CardJobName, 
                    string CardJobEnName, 
                    string OilSubsidy, 
                    string CardID, 
                    string DoorGuard, 
                    string OutPost, 
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_TTSCODE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    global::System.Nullable<global::System.DateTime> Original_INDT, 
                    global::System.Nullable<global::System.DateTime> Original_CINDT, 
                    global::System.Nullable<global::System.DateTime> Original_OUDT, 
                    global::System.Nullable<global::System.DateTime> Original_STDT, 
                    global::System.Nullable<global::System.DateTime> Original_STINDT, 
                    global::System.Nullable<global::System.DateTime> Original_STOUDT, 
                    string Original_COMP, 
                    string Original_DEPT, 
                    string Original_DEPTS, 
                    string Original_JOB, 
                    string Original_JOBL, 
                    string Original_CARD, 
                    string Original_ROTET, 
                    string Original_DI, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    bool Original_MANG, 
                    decimal Original_YR_DAYS, 
                    decimal Original_WK_YRS, 
                    string Original_SALTP, 
                    string Original_JOBS, 
                    string Original_WORKCD, 
                    string Original_CARCD, 
                    string Original_EMPCD, 
                    string Original_OUTCD, 
                    bool Original_CALABS, 
                    string Original_CALOT, 
                    bool Original_FULATT, 
                    bool Original_NOTER, 
                    bool Original_NOWEL, 
                    bool Original_NORET, 
                    bool Original_NOTLATE, 
                    string Original_HOLI_CODE, 
                    bool Original_NOOT, 
                    bool Original_NOSPEC, 
                    bool Original_NOCARD, 
                    bool Original_NOEAT, 
                    string Original_APGRPCD, 
                    string Original_DEPTM, 
                    string Original_TTSCD, 
                    string Original_MENO, 
                    string Original_SALADR, 
                    bool Original_NOWAGE, 
                    bool Original_MANGE, 
                    decimal Original_RETRATE, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE, 
                    string Original_RETCHOO, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE1, 
                    bool Original_ONLYONTIME, 
                    string Original_JOBO, 
                    bool Original_COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> Original_PASS_DATE, 
                    bool Original_MANG1, 
                    global::System.Nullable<global::System.DateTime> Original_AP_DATE, 
                    decimal Original_GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_DATE, 
                    bool Original_NOSPAMT, 
                    bool Original_FIXRATE, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_EDATE, 
                    bool Original_IS_SELFOUT, 
                    string Original_INSG_TYPE, 
                    string Original_OldSaladr, 
                    string Original_STATION, 
                    string Original_CardJobName, 
                    string Original_CardJobEnName, 
                    string Original_OilSubsidy, 
                    string Original_CardID, 
                    string Original_DoorGuard, 
                    string Original_OutPost) {
            if ((NOBR == null)) {
                throw new global::System.ArgumentNullException("NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(ADATE));
            if ((TTSCODE == null)) {
                throw new global::System.ArgumentNullException("TTSCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(TTSCODE));
            }
            if ((DDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(DDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((INDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(INDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(CINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((OUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(OUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((STDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(STDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((STINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(STINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((STOUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(STOUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(COMP));
            }
            if ((DEPT == null)) {
                throw new global::System.ArgumentNullException("DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(DEPT));
            }
            if ((DEPTS == null)) {
                throw new global::System.ArgumentNullException("DEPTS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(DEPTS));
            }
            if ((JOB == null)) {
                throw new global::System.ArgumentNullException("JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(JOB));
            }
            if ((JOBL == null)) {
                throw new global::System.ArgumentNullException("JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(JOBL));
            }
            if ((CARD == null)) {
                throw new global::System.ArgumentNullException("CARD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CARD));
            }
            if ((ROTET == null)) {
                throw new global::System.ArgumentNullException("ROTET");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ROTET));
            }
            if ((DI == null)) {
                throw new global::System.ArgumentNullException("DI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(DI));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(MANG));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(YR_DAYS));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(WK_YRS));
            if ((SALTP == null)) {
                throw new global::System.ArgumentNullException("SALTP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(SALTP));
            }
            if ((JOBS == null)) {
                throw new global::System.ArgumentNullException("JOBS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(JOBS));
            }
            if ((WORKCD == null)) {
                throw new global::System.ArgumentNullException("WORKCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(WORKCD));
            }
            if ((CARCD == null)) {
                throw new global::System.ArgumentNullException("CARCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(CARCD));
            }
            if ((EMPCD == null)) {
                throw new global::System.ArgumentNullException("EMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(EMPCD));
            }
            if ((OUTCD == null)) {
                throw new global::System.ArgumentNullException("OUTCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(OUTCD));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(CALABS));
            if ((CALOT == null)) {
                throw new global::System.ArgumentNullException("CALOT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(CALOT));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(FULATT));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(NOTER));
            this.Adapter.UpdateCommand.Parameters[33].Value = ((bool)(NOWEL));
            this.Adapter.UpdateCommand.Parameters[34].Value = ((bool)(NORET));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(NOTLATE));
            if ((HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("HOLI_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(HOLI_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(NOOT));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(NOSPEC));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(NOCARD));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((bool)(NOEAT));
            if ((APGRPCD == null)) {
                throw new global::System.ArgumentNullException("APGRPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(APGRPCD));
            }
            if ((DEPTM == null)) {
                throw new global::System.ArgumentNullException("DEPTM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(DEPTM));
            }
            if ((TTSCD == null)) {
                throw new global::System.ArgumentNullException("TTSCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(TTSCD));
            }
            if ((MENO == null)) {
                throw new global::System.ArgumentNullException("MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(MENO));
            }
            if ((SALADR == null)) {
                throw new global::System.ArgumentNullException("SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(SALADR));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((bool)(NOWAGE));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(MANGE));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((decimal)(RETRATE));
            if ((RETDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(RETDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((RETCHOO == null)) {
                throw new global::System.ArgumentNullException("RETCHOO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((string)(RETCHOO));
            }
            if ((RETDATE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(RETDATE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(ONLYONTIME));
            if ((JOBO == null)) {
                throw new global::System.ArgumentNullException("JOBO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(JOBO));
            }
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(COUNT_PASS));
            if ((PASS_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((System.DateTime)(PASS_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(MANG1));
            if ((AP_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((System.DateTime)(AP_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[58].Value = ((decimal)(GRP_AMT));
            if ((TAX_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((System.DateTime)(TAX_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((bool)(NOSPAMT));
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(FIXRATE));
            if ((TAX_EDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((System.DateTime)(TAX_EDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[63].Value = ((bool)(IS_SELFOUT));
            if ((INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("INSG_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(INSG_TYPE));
            }
            if ((OldSaladr == null)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(OldSaladr));
            }
            if ((STATION == null)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(STATION));
            }
            if ((CardJobName == null)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(CardJobName));
            }
            if ((CardJobEnName == null)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(CardJobEnName));
            }
            if ((OilSubsidy == null)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(OilSubsidy));
            }
            if ((CardID == null)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(CardID));
            }
            if ((DoorGuard == null)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(DoorGuard));
            }
            if ((OutPost == null)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(OutPost));
            }
            if ((Original_NOBR == null)) {
                throw new global::System.ArgumentNullException("Original_NOBR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((string)(Original_NOBR));
            }
            this.Adapter.UpdateCommand.Parameters[74].Value = ((System.DateTime)(Original_ADATE));
            if ((Original_TTSCODE == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((string)(Original_TTSCODE));
            }
            if ((Original_DDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((System.DateTime)(Original_DDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_INDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((System.DateTime)(Original_INDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            if ((Original_CINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[81].Value = ((System.DateTime)(Original_CINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[80].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[81].Value = global::System.DBNull.Value;
            }
            if ((Original_OUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[83].Value = ((System.DateTime)(Original_OUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[82].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[83].Value = global::System.DBNull.Value;
            }
            if ((Original_STDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[85].Value = ((System.DateTime)(Original_STDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[85].Value = global::System.DBNull.Value;
            }
            if ((Original_STINDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[87].Value = ((System.DateTime)(Original_STINDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[86].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[87].Value = global::System.DBNull.Value;
            }
            if ((Original_STOUDT.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[89].Value = ((System.DateTime)(Original_STOUDT.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[88].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[89].Value = global::System.DBNull.Value;
            }
            if ((Original_COMP == null)) {
                throw new global::System.ArgumentNullException("Original_COMP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((string)(Original_COMP));
            }
            if ((Original_DEPT == null)) {
                throw new global::System.ArgumentNullException("Original_DEPT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[91].Value = ((string)(Original_DEPT));
            }
            if ((Original_DEPTS == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[92].Value = ((string)(Original_DEPTS));
            }
            if ((Original_JOB == null)) {
                throw new global::System.ArgumentNullException("Original_JOB");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[93].Value = ((string)(Original_JOB));
            }
            if ((Original_JOBL == null)) {
                throw new global::System.ArgumentNullException("Original_JOBL");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[94].Value = ((string)(Original_JOBL));
            }
            if ((Original_CARD == null)) {
                throw new global::System.ArgumentNullException("Original_CARD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[95].Value = ((string)(Original_CARD));
            }
            if ((Original_ROTET == null)) {
                throw new global::System.ArgumentNullException("Original_ROTET");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_ROTET));
            }
            if ((Original_DI == null)) {
                throw new global::System.ArgumentNullException("Original_DI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((string)(Original_DI));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[98].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[99].Value = ((System.DateTime)(Original_KEY_DATE));
            this.Adapter.UpdateCommand.Parameters[100].Value = ((bool)(Original_MANG));
            this.Adapter.UpdateCommand.Parameters[101].Value = ((decimal)(Original_YR_DAYS));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((decimal)(Original_WK_YRS));
            if ((Original_SALTP == null)) {
                throw new global::System.ArgumentNullException("Original_SALTP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[103].Value = ((string)(Original_SALTP));
            }
            if ((Original_JOBS == null)) {
                throw new global::System.ArgumentNullException("Original_JOBS");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[104].Value = ((string)(Original_JOBS));
            }
            if ((Original_WORKCD == null)) {
                throw new global::System.ArgumentNullException("Original_WORKCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[105].Value = ((string)(Original_WORKCD));
            }
            if ((Original_CARCD == null)) {
                throw new global::System.ArgumentNullException("Original_CARCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[106].Value = ((string)(Original_CARCD));
            }
            if ((Original_EMPCD == null)) {
                throw new global::System.ArgumentNullException("Original_EMPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[107].Value = ((string)(Original_EMPCD));
            }
            if ((Original_OUTCD == null)) {
                throw new global::System.ArgumentNullException("Original_OUTCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[108].Value = ((string)(Original_OUTCD));
            }
            this.Adapter.UpdateCommand.Parameters[109].Value = ((bool)(Original_CALABS));
            if ((Original_CALOT == null)) {
                throw new global::System.ArgumentNullException("Original_CALOT");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[110].Value = ((string)(Original_CALOT));
            }
            this.Adapter.UpdateCommand.Parameters[111].Value = ((bool)(Original_FULATT));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((bool)(Original_NOTER));
            this.Adapter.UpdateCommand.Parameters[113].Value = ((bool)(Original_NOWEL));
            this.Adapter.UpdateCommand.Parameters[114].Value = ((bool)(Original_NORET));
            this.Adapter.UpdateCommand.Parameters[115].Value = ((bool)(Original_NOTLATE));
            if ((Original_HOLI_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_HOLI_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[116].Value = ((string)(Original_HOLI_CODE));
            }
            this.Adapter.UpdateCommand.Parameters[117].Value = ((bool)(Original_NOOT));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((bool)(Original_NOSPEC));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((bool)(Original_NOCARD));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((bool)(Original_NOEAT));
            if ((Original_APGRPCD == null)) {
                throw new global::System.ArgumentNullException("Original_APGRPCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[121].Value = ((string)(Original_APGRPCD));
            }
            if ((Original_DEPTM == null)) {
                throw new global::System.ArgumentNullException("Original_DEPTM");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[122].Value = ((string)(Original_DEPTM));
            }
            if ((Original_TTSCD == null)) {
                throw new global::System.ArgumentNullException("Original_TTSCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[123].Value = ((string)(Original_TTSCD));
            }
            if ((Original_MENO == null)) {
                throw new global::System.ArgumentNullException("Original_MENO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[124].Value = ((string)(Original_MENO));
            }
            if ((Original_SALADR == null)) {
                throw new global::System.ArgumentNullException("Original_SALADR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[125].Value = ((string)(Original_SALADR));
            }
            this.Adapter.UpdateCommand.Parameters[126].Value = ((bool)(Original_NOWAGE));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((bool)(Original_MANGE));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((decimal)(Original_RETRATE));
            if ((Original_RETDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[130].Value = ((System.DateTime)(Original_RETDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[129].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[130].Value = global::System.DBNull.Value;
            }
            if ((Original_RETCHOO == null)) {
                throw new global::System.ArgumentNullException("Original_RETCHOO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[131].Value = ((string)(Original_RETCHOO));
            }
            if ((Original_RETDATE1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[133].Value = ((System.DateTime)(Original_RETDATE1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[132].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[133].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[134].Value = ((bool)(Original_ONLYONTIME));
            if ((Original_JOBO == null)) {
                throw new global::System.ArgumentNullException("Original_JOBO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[135].Value = ((string)(Original_JOBO));
            }
            this.Adapter.UpdateCommand.Parameters[136].Value = ((bool)(Original_COUNT_PASS));
            if ((Original_PASS_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[138].Value = ((System.DateTime)(Original_PASS_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[137].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[138].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[139].Value = ((bool)(Original_MANG1));
            if ((Original_AP_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[141].Value = ((System.DateTime)(Original_AP_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[140].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[141].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[142].Value = ((decimal)(Original_GRP_AMT));
            if ((Original_TAX_DATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[144].Value = ((System.DateTime)(Original_TAX_DATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[144].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[145].Value = ((bool)(Original_NOSPAMT));
            this.Adapter.UpdateCommand.Parameters[146].Value = ((bool)(Original_FIXRATE));
            if ((Original_TAX_EDATE.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[148].Value = ((System.DateTime)(Original_TAX_EDATE.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[148].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[149].Value = ((bool)(Original_IS_SELFOUT));
            if ((Original_INSG_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_INSG_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_INSG_TYPE));
            }
            if ((Original_OldSaladr == null)) {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[152].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_OldSaladr));
            }
            if ((Original_STATION == null)) {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[154].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[154].Value = ((string)(Original_STATION));
            }
            if ((Original_CardJobName == null)) {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[156].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[155].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[156].Value = ((string)(Original_CardJobName));
            }
            if ((Original_CardJobEnName == null)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((string)(Original_CardJobEnName));
            }
            if ((Original_OilSubsidy == null)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((string)(Original_OilSubsidy));
            }
            if ((Original_CardID == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(Original_CardID));
            }
            if ((Original_DoorGuard == null)) {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[164].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[163].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[164].Value = ((string)(Original_DoorGuard));
            }
            if ((Original_OutPost == null)) {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[166].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[165].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[166].Value = ((string)(Original_OutPost));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> DDATE, 
                    global::System.Nullable<global::System.DateTime> INDT, 
                    global::System.Nullable<global::System.DateTime> CINDT, 
                    global::System.Nullable<global::System.DateTime> OUDT, 
                    global::System.Nullable<global::System.DateTime> STDT, 
                    global::System.Nullable<global::System.DateTime> STINDT, 
                    global::System.Nullable<global::System.DateTime> STOUDT, 
                    string COMP, 
                    string DEPT, 
                    string DEPTS, 
                    string JOB, 
                    string JOBL, 
                    string CARD, 
                    string ROTET, 
                    string DI, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    bool MANG, 
                    decimal YR_DAYS, 
                    decimal WK_YRS, 
                    string SALTP, 
                    string JOBS, 
                    string WORKCD, 
                    string CARCD, 
                    string EMPCD, 
                    string OUTCD, 
                    bool CALABS, 
                    string CALOT, 
                    bool FULATT, 
                    bool NOTER, 
                    bool NOWEL, 
                    bool NORET, 
                    bool NOTLATE, 
                    string HOLI_CODE, 
                    bool NOOT, 
                    bool NOSPEC, 
                    bool NOCARD, 
                    bool NOEAT, 
                    string APGRPCD, 
                    string DEPTM, 
                    string TTSCD, 
                    string MENO, 
                    string SALADR, 
                    bool NOWAGE, 
                    bool MANGE, 
                    decimal RETRATE, 
                    global::System.Nullable<global::System.DateTime> RETDATE, 
                    string RETCHOO, 
                    global::System.Nullable<global::System.DateTime> RETDATE1, 
                    bool ONLYONTIME, 
                    string JOBO, 
                    bool COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> PASS_DATE, 
                    bool MANG1, 
                    global::System.Nullable<global::System.DateTime> AP_DATE, 
                    decimal GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> TAX_DATE, 
                    bool NOSPAMT, 
                    bool FIXRATE, 
                    global::System.Nullable<global::System.DateTime> TAX_EDATE, 
                    bool IS_SELFOUT, 
                    string INSG_TYPE, 
                    string OldSaladr, 
                    string STATION, 
                    string CardJobName, 
                    string CardJobEnName, 
                    string OilSubsidy, 
                    string CardID, 
                    string DoorGuard, 
                    string OutPost, 
                    string Original_NOBR, 
                    System.DateTime Original_ADATE, 
                    string Original_TTSCODE, 
                    global::System.Nullable<global::System.DateTime> Original_DDATE, 
                    global::System.Nullable<global::System.DateTime> Original_INDT, 
                    global::System.Nullable<global::System.DateTime> Original_CINDT, 
                    global::System.Nullable<global::System.DateTime> Original_OUDT, 
                    global::System.Nullable<global::System.DateTime> Original_STDT, 
                    global::System.Nullable<global::System.DateTime> Original_STINDT, 
                    global::System.Nullable<global::System.DateTime> Original_STOUDT, 
                    string Original_COMP, 
                    string Original_DEPT, 
                    string Original_DEPTS, 
                    string Original_JOB, 
                    string Original_JOBL, 
                    string Original_CARD, 
                    string Original_ROTET, 
                    string Original_DI, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    bool Original_MANG, 
                    decimal Original_YR_DAYS, 
                    decimal Original_WK_YRS, 
                    string Original_SALTP, 
                    string Original_JOBS, 
                    string Original_WORKCD, 
                    string Original_CARCD, 
                    string Original_EMPCD, 
                    string Original_OUTCD, 
                    bool Original_CALABS, 
                    string Original_CALOT, 
                    bool Original_FULATT, 
                    bool Original_NOTER, 
                    bool Original_NOWEL, 
                    bool Original_NORET, 
                    bool Original_NOTLATE, 
                    string Original_HOLI_CODE, 
                    bool Original_NOOT, 
                    bool Original_NOSPEC, 
                    bool Original_NOCARD, 
                    bool Original_NOEAT, 
                    string Original_APGRPCD, 
                    string Original_DEPTM, 
                    string Original_TTSCD, 
                    string Original_MENO, 
                    string Original_SALADR, 
                    bool Original_NOWAGE, 
                    bool Original_MANGE, 
                    decimal Original_RETRATE, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE, 
                    string Original_RETCHOO, 
                    global::System.Nullable<global::System.DateTime> Original_RETDATE1, 
                    bool Original_ONLYONTIME, 
                    string Original_JOBO, 
                    bool Original_COUNT_PASS, 
                    global::System.Nullable<global::System.DateTime> Original_PASS_DATE, 
                    bool Original_MANG1, 
                    global::System.Nullable<global::System.DateTime> Original_AP_DATE, 
                    decimal Original_GRP_AMT, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_DATE, 
                    bool Original_NOSPAMT, 
                    bool Original_FIXRATE, 
                    global::System.Nullable<global::System.DateTime> Original_TAX_EDATE, 
                    bool Original_IS_SELFOUT, 
                    string Original_INSG_TYPE, 
                    string Original_OldSaladr, 
                    string Original_STATION, 
                    string Original_CardJobName, 
                    string Original_CardJobEnName, 
                    string Original_OilSubsidy, 
                    string Original_CardID, 
                    string Original_DoorGuard, 
                    string Original_OutPost) {
            return this.Update(Original_NOBR, Original_ADATE, Original_TTSCODE, DDATE, INDT, CINDT, OUDT, STDT, STINDT, STOUDT, COMP, DEPT, DEPTS, JOB, JOBL, CARD, ROTET, DI, KEY_MAN, KEY_DATE, MANG, YR_DAYS, WK_YRS, SALTP, JOBS, WORKCD, CARCD, EMPCD, OUTCD, CALABS, CALOT, FULATT, NOTER, NOWEL, NORET, NOTLATE, HOLI_CODE, NOOT, NOSPEC, NOCARD, NOEAT, APGRPCD, DEPTM, TTSCD, MENO, SALADR, NOWAGE, MANGE, RETRATE, RETDATE, RETCHOO, RETDATE1, ONLYONTIME, JOBO, COUNT_PASS, PASS_DATE, MANG1, AP_DATE, GRP_AMT, TAX_DATE, NOSPAMT, FIXRATE, TAX_EDATE, IS_SELFOUT, INSG_TYPE, OldSaladr, STATION, CardJobName, CardJobEnName, OilSubsidy, CardID, DoorGuard, OutPost, Original_NOBR, Original_ADATE, Original_TTSCODE, Original_DDATE, Original_INDT, Original_CINDT, Original_OUDT, Original_STDT, Original_STINDT, Original_STOUDT, Original_COMP, Original_DEPT, Original_DEPTS, Original_JOB, Original_JOBL, Original_CARD, Original_ROTET, Original_DI, Original_KEY_MAN, Original_KEY_DATE, Original_MANG, Original_YR_DAYS, Original_WK_YRS, Original_SALTP, Original_JOBS, Original_WORKCD, Original_CARCD, Original_EMPCD, Original_OUTCD, Original_CALABS, Original_CALOT, Original_FULATT, Original_NOTER, Original_NOWEL, Original_NORET, Original_NOTLATE, Original_HOLI_CODE, Original_NOOT, Original_NOSPEC, Original_NOCARD, Original_NOEAT, Original_APGRPCD, Original_DEPTM, Original_TTSCD, Original_MENO, Original_SALADR, Original_NOWAGE, Original_MANGE, Original_RETRATE, Original_RETDATE, Original_RETCHOO, Original_RETDATE1, Original_ONLYONTIME, Original_JOBO, Original_COUNT_PASS, Original_PASS_DATE, Original_MANG1, Original_AP_DATE, Original_GRP_AMT, Original_TAX_DATE, Original_NOSPAMT, Original_FIXRATE, Original_TAX_EDATE, Original_IS_SELFOUT, Original_INSG_TYPE, Original_OldSaladr, Original_STATION, Original_CardJobName, Original_CardJobEnName, Original_OilSubsidy, Original_CardID, Original_DoorGuard, Original_OutPost);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private BASETableAdapter _bASETableAdapter;
        
        private COMPTableAdapter _cOMPTableAdapter;
        
        private DEPTTableAdapter _dEPTTableAdapter;
        
        private DEPTSTableAdapter _dEPTSTableAdapter;
        
        private JOBTableAdapter _jOBTableAdapter;
        
        private JOBLTableAdapter _jOBLTableAdapter;
        
        private BASETTSTableAdapter _bASETTSTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BASETableAdapter BASETableAdapter {
            get {
                return this._bASETableAdapter;
            }
            set {
                this._bASETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public COMPTableAdapter COMPTableAdapter {
            get {
                return this._cOMPTableAdapter;
            }
            set {
                this._cOMPTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DEPTTableAdapter DEPTTableAdapter {
            get {
                return this._dEPTTableAdapter;
            }
            set {
                this._dEPTTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DEPTSTableAdapter DEPTSTableAdapter {
            get {
                return this._dEPTSTableAdapter;
            }
            set {
                this._dEPTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JOBTableAdapter JOBTableAdapter {
            get {
                return this._jOBTableAdapter;
            }
            set {
                this._jOBTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public JOBLTableAdapter JOBLTableAdapter {
            get {
                return this._jOBLTableAdapter;
            }
            set {
                this._jOBLTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public BASETTSTableAdapter BASETTSTableAdapter {
            get {
                return this._bASETTSTableAdapter;
            }
            set {
                this._bASETTSTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._bASETableAdapter != null) 
                            && (this._bASETableAdapter.Connection != null))) {
                    return this._bASETableAdapter.Connection;
                }
                if (((this._cOMPTableAdapter != null) 
                            && (this._cOMPTableAdapter.Connection != null))) {
                    return this._cOMPTableAdapter.Connection;
                }
                if (((this._dEPTTableAdapter != null) 
                            && (this._dEPTTableAdapter.Connection != null))) {
                    return this._dEPTTableAdapter.Connection;
                }
                if (((this._dEPTSTableAdapter != null) 
                            && (this._dEPTSTableAdapter.Connection != null))) {
                    return this._dEPTSTableAdapter.Connection;
                }
                if (((this._jOBTableAdapter != null) 
                            && (this._jOBTableAdapter.Connection != null))) {
                    return this._jOBTableAdapter.Connection;
                }
                if (((this._jOBLTableAdapter != null) 
                            && (this._jOBLTableAdapter.Connection != null))) {
                    return this._jOBLTableAdapter.Connection;
                }
                if (((this._bASETTSTableAdapter != null) 
                            && (this._bASETTSTableAdapter.Connection != null))) {
                    return this._bASETTSTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._bASETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._cOMPTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dEPTTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._dEPTSTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jOBTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._jOBLTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._bASETTSTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsBas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._jOBTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.JOB.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jOBTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._jOBLTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.JOBL.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._jOBLTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bASETTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BASETTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bASETTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEPTSTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPTS.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEPTSTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._bASETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.BASE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._bASETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cOMPTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.COMP.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cOMPTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsBas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._jOBTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.JOB.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jOBTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._jOBLTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.JOBL.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._jOBLTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bASETTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BASETTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bASETTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEPTSTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPTS.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEPTSTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._bASETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.BASE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._bASETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cOMPTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.COMP.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cOMPTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsBas dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._dEPTTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPT.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEPTTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cOMPTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.COMP.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cOMPTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bASETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BASE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bASETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._dEPTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.DEPTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._dEPTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._bASETTSTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.BASETTS.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._bASETTSTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jOBLTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.JOBL.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jOBLTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._jOBTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.JOB.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._jOBTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsBas dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._bASETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bASETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._cOMPTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cOMPTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._dEPTTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPTTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._dEPTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._dEPTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._jOBTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jOBTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._jOBLTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._jOBLTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._bASETTSTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._bASETTSTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始異動。目前的資料連接不支援異動或是目前的狀態不允許異動開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._bASETableAdapter != null)) {
                    revertConnections.Add(this._bASETableAdapter, this._bASETableAdapter.Connection);
                    this._bASETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bASETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bASETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bASETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bASETableAdapter.Adapter);
                    }
                }
                if ((this._cOMPTableAdapter != null)) {
                    revertConnections.Add(this._cOMPTableAdapter, this._cOMPTableAdapter.Connection);
                    this._cOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cOMPTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cOMPTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cOMPTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cOMPTableAdapter.Adapter);
                    }
                }
                if ((this._dEPTTableAdapter != null)) {
                    revertConnections.Add(this._dEPTTableAdapter, this._dEPTTableAdapter.Connection);
                    this._dEPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dEPTTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPTTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPTTableAdapter.Adapter);
                    }
                }
                if ((this._dEPTSTableAdapter != null)) {
                    revertConnections.Add(this._dEPTSTableAdapter, this._dEPTSTableAdapter.Connection);
                    this._dEPTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._dEPTSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._dEPTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._dEPTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._dEPTSTableAdapter.Adapter);
                    }
                }
                if ((this._jOBTableAdapter != null)) {
                    revertConnections.Add(this._jOBTableAdapter, this._jOBTableAdapter.Connection);
                    this._jOBTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._jOBTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._jOBTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jOBTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jOBTableAdapter.Adapter);
                    }
                }
                if ((this._jOBLTableAdapter != null)) {
                    revertConnections.Add(this._jOBLTableAdapter, this._jOBLTableAdapter.Connection);
                    this._jOBLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._jOBLTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._jOBLTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._jOBLTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._jOBLTableAdapter.Adapter);
                    }
                }
                if ((this._bASETTSTableAdapter != null)) {
                    revertConnections.Add(this._bASETTSTableAdapter, this._bASETTSTableAdapter.Connection);
                    this._bASETTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._bASETTSTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._bASETTSTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._bASETTSTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._bASETTSTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._bASETableAdapter != null)) {
                    this._bASETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bASETableAdapter]));
                    this._bASETableAdapter.Transaction = null;
                }
                if ((this._cOMPTableAdapter != null)) {
                    this._cOMPTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cOMPTableAdapter]));
                    this._cOMPTableAdapter.Transaction = null;
                }
                if ((this._dEPTTableAdapter != null)) {
                    this._dEPTTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dEPTTableAdapter]));
                    this._dEPTTableAdapter.Transaction = null;
                }
                if ((this._dEPTSTableAdapter != null)) {
                    this._dEPTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._dEPTSTableAdapter]));
                    this._dEPTSTableAdapter.Transaction = null;
                }
                if ((this._jOBTableAdapter != null)) {
                    this._jOBTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._jOBTableAdapter]));
                    this._jOBTableAdapter.Transaction = null;
                }
                if ((this._jOBLTableAdapter != null)) {
                    this._jOBLTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._jOBLTableAdapter]));
                    this._jOBLTableAdapter.Transaction = null;
                }
                if ((this._bASETTSTableAdapter != null)) {
                    this._bASETTSTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._bASETTSTableAdapter]));
                    this._bASETTSTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591