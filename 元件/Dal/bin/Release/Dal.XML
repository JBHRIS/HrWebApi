<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dal</name>
    </assembly>
    <members>
        <member name="M:Dal.Dao.Att.AbsDao.#ctor(System.Data.IDbConnection)">
            <summary>
            請假資料
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.#ctor(System.String)">
            <summary>
            請假資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetAbs(System.String,System.DateTime,System.DateTime)">
            <summary>
            出勤資料(日期區間)
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始出勤日期</param>
            <param name="dDateE">結束出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetAbs(System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            出勤資料並可依照加減項進行(日期區間)
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始出勤日期</param>
            <param name="dDateE">結束出勤日期</param>
            <param name="bAdd">加減項</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetAbst(System.String,System.DateTime)">
            <summary>
            得假資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">開始出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetAbst(System.String,System.DateTime,System.String)">
            <summary>
            得假資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">開始出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetAbsd(System.String)">
            <summary>
            3.取得請假明細 銷加班有關係
            </summary>
            <param name="sSerno">加項資料</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.DeleteAbs(System.String)">
            <summary>
            刪除請假資料
            </summary>
            <param name="sProcessID">ProcessID</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.DeleteAbs(System.String,System.DateTime,System.String,System.DateTime,System.String,System.String)">
            <summary>
            刪除請假資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始日期</param>
            <param name="sTimeB">結束日期</param>
            <param name="dDateE">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <param name="sHcode">假別</param>
            <returns>int</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetAbsByW(System.String,System.DateTime,System.DateTime,System.String)">
            <summary>
            1.取得得假資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sYearRest">年補休特性</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.SetAbsd(System.String,System.String,System.Decimal,System.String,System.Boolean)">
            <summary>
            2.寫入請假明細
            </summary>
            <param name="sAddSerno">得假序號</param>
            <param name="sSubtractSerno">請假序號</param>
            <param name="iUse">使用時數</param>
            <param name="sKeyMan">登錄者</param>
            <param name="bSave">強迫寫入</param>
            <returns>int</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dal.Dao.Att.AbsDao.ConvertTime24To48(System.String,System.DateTime@,System.DateTime@,System.String@,System.String@)" -->
        <member name="M:Dal.Dao.Att.AbsDao.GetCalculate(System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.String,System.Boolean)">
            <summary>
            計算請假
            </summary>
            <param name="sNobr">工號</param>
            <param name="sHcode">假別</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <param name="bCalculateWorkTime">只計算上班時間</param>
            <param name="bCalculateRes">扣除休息時數</param>
            <param name="iException">例外時數 時數之總合會分配給每一天</param>
            <param name="bFixedCycle">循環固定時間</param>
            <param name="sRoteCode">班別 某些特殊會需要 預設請帶空白</param>
            <param name="bTime24">24小時計算</param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetBalance(System.String,System.DateTime,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Collections.Generic.List{Bll.Att.Vdb.AbsDataTable})">
            <summary>
            請假剩餘
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <param name="sNameA">對沖對象主鍵</param>
            <param name="dDateYB">年計開始日期預設年初</param>
            <param name="dDateYE">年計結束日期預設年底</param>
            <param name="dDateMB">月計開始日期預設月初</param>
            <param name="dDateME">月計結束日期預設月底</param>
            <param name="bProportion">事病假依照比例原則</param>
            <param name="lsAbs">進行中流程的請假資料</param>
            <returns>List AbsBalanceRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetBalanceNew(System.String,System.DateTime,System.String,System.Boolean,System.Collections.Generic.List{Bll.Att.Vdb.BalanceAbsRow})">
            <summary>
            請假剩餘
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <param name="sHcode">假別代碼</param>
            <param name="bProportion">事病假依照比例原則</param>
            <param name="lsAbs">進行中流程的請假資料</param>
            <returns>List AbsBalanceRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetBalanceView(System.String,System.DateTime,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Collections.Generic.List{Bll.Att.Vdb.AbsDataTable})">
            <summary>
            請假剩餘
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <param name="sNameA">對沖對象主鍵</param>
            <param name="dDateYB">年計開始日期預設年初</param>
            <param name="dDateYE">年計結束日期預設年底</param>
            <param name="dDateMB">月計開始日期預設月初</param>
            <param name="dDateME">月計結束日期預設月底</param>
            <param name="bProportion">事病假依照比例原則</param>
            <param name="lsAbs">進行中流程的請假資料</param>
            <returns>List AbsBalanceRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.AbsSave(System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.String)">
            <summary>
            存入
            </summary>
            <param name="sNobr">工號</param>
            <param name="sHcode">假別</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <param name="sNote">備註</param>
            <param name="sKeyMan">登錄者</param>
            <param name="sNameA">對沖對象主鍵</param>
            <param name="sSerno">序號</param>
            <param name="sAbs1Code">公出固定採用代碼</param>
            <param name="sDeptsCode">成本部門代碼</param>
            <param name="bCalculateWorkTime">只計算上班時間</param>
            <param name="bCalculateRes">扣除休息時數</param>
            <param name="iException">例外時數 時數之總合會分配給每一天</param>
            <param name="bFixedCycle">循環固定時間</param>
            <param name="sRoteCode">班別 某些特殊會需要 預設請帶空白</param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.AbsDelete(System.String,System.DateTime,System.String,System.String,System.String,System.String)">
            <summary>
            刪除請假資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sHcode">假別代碼</param>
            <param name="sKeyMan">登錄者</param>
            <param name="sSerno">序號</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.AbsSave(System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.String,System.Boolean)">
            <summary>
            存入
            </summary>
            <param name="sNobr">工號</param>
            <param name="sHcode">假別</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <param name="sNote">備註</param>
            <param name="sKeyMan">登錄者</param>
            <param name="sNameA">對沖對象主鍵</param>
            <param name="sSerno">序號</param>
            <param name="sAbs1Code">公出固定採用代碼</param>
            <param name="sDeptsCode">成本部門代碼</param>
            <param name="bCalculateWorkTime">只計算上班時間</param>
            <param name="bCalculateRes">扣除休息時數</param>
            <param name="iException">例外時數 時數之總合會分配給每一天</param>
            <param name="bFixedCycle">循環固定時間</param>
            <param name="sRoteCode">班別 某些特殊會需要 預設請帶空白</param>
            <param name="bTime24">24小時計算</param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Att.AbsDao.GetAbsByDelete(System.String)">
            <summary>
            取得請假資料 尚未鎖檔的
            </summary>
            <param name="sNobr">工號</param>
            <returns>List AbsDataTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.#ctor(System.Data.IDbConnection)">
            <summary>
            出勤資料
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.#ctor(System.String)">
            <summary>
            出勤資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.GetAttcard(System.String,System.DateTime)">
            <summary>
            出勤刷卡資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">出勤日期</param>
            <returns>List AttcardRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.GetAttcard(System.DateTime)">
            <summary>
            出勤刷卡資料(依日期)
            </summary>
            <param name="dDate">出勤日期</param>
            <returns>List AttcardRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.GetAttcard(System.String,System.DateTime,System.DateTime)">
            <summary>
            出勤刷卡資料(日期區間)
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始出勤日期</param>
            <param name="dDateE">結束出勤日期</param>
            <returns>List AttcardRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.GetAttcard(System.String,System.Collections.Generic.List{System.DateTime})">
            <summary>
            出勤刷卡資料(不規則日期)
            </summary>
            <param name="sNobr">工號</param>
            <param name="lsDate">開始出勤日期</param>
            <returns>List AttcardRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.IsCardTime(System.String,System.DateTime,System.String,System.String)">
            <summary>
            是否為刷卡時間 True = 是刷卡時間
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.IsCardTime(System.String,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            是否為刷卡時間 True = 是刷卡時間
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">日期</param>
            <param name="dDateE">日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttcardDao.GetAttcard(System.Collections.Generic.List{System.String},System.DateTime,System.DateTime)">
            <summary>
            出勤刷卡資料(日期區間)
            </summary>
            <param name="lsNobr">工號</param>
            <param name="dDateB">開始出勤日期</param>
            <param name="dDateE">結束出勤日期</param>
            <returns>List AttcardRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttDao.#ctor(System.Data.IDbConnection)">
            <summary>
            出勤
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.AttDao.#ctor(System.String)">
            <summary>
            出勤
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.AttDao.IsLockSalaryBegin(System.DateTime,System.DateTime,System.String)">
            <summary>
            檢查是否出勤鎖檔
            </summary>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sSaladr">薪資組</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttDao.IsLockSalaryAfter(System.String,System.String,System.String)">
            <summary>
            檢查是否薪資鎖檔
            </summary>
            <param name="sYYMM">計薪年月</param>
            <param name="sSaladr">薪資組</param>
            <param name="sSeq">期別</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.#ctor(System.Data.IDbConnection)">
            <summary>
            出勤資料
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.#ctor(System.String)">
            <summary>
            出勤資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttend(System.String,System.DateTime)">
            <summary>
            出勤資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttendH(System.String,System.DateTime)">
            <summary>
            出勤資料(ROTE_H)
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttendFixedRoteCode(System.String,System.DateTime,System.Boolean)">
            <summary>
            取得可能慣用的班別
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <param name="bLeft">向左第一筆開始找 反之 向右第一筆開始找</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttend(System.String,System.DateTime,System.DateTime)">
            <summary>
            出勤資料(日期區間)
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始出勤日期</param>
            <param name="dDateE">結束出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttend(System.String,System.Collections.Generic.List{System.DateTime})">
            <summary>
            出勤資料(不規則日期)
            </summary>
            <param name="sNobr">工號</param>
            <param name="lsDate">開始出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttendDate(System.String,System.DateTime,System.Int32,System.Int32)">
            <summary>
            尋找出勤正向或反向排序(以日期正負向為準)最近的一個日期
            </summary>
            <param name="Nobr">工號</param>
            <param name="Date">日期</param>
            <param name="Day">加或減幾天</param>
            <param name="SearchRangeDay">搜尋區間天數</param>
            <returns>Dictionary</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttendByForgetNum(System.String,System.DateTime,System.DateTime)">
            <summary>
            取得有忘刷次數的日期
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始出勤日期</param>
            <param name="dDateE">結束出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.SaveAttend(System.String,System.DateTime,System.String)">
            <summary>
            寫入出勤資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <param name="sRoteCodeH">實際出勤班別</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttend(System.Collections.Generic.List{System.String},System.DateTime,System.DateTime)">
            <summary>
            出勤資料(日期區間)
            </summary>
            <param name="lsNobr">工號</param>
            <param name="dDateB">開始出勤日期</param>
            <param name="dDateE">結束出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.AttendDataPass(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            包含出勤鎖檔
            </summary>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sSaladr">薪資群組</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.AttendDao.GetAttend(System.DateTime)">
            <summary>
            出勤資料
            </summary>
            <param name="dDate">出勤日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.CardDao.#ctor(System.Data.IDbConnection)">
            <summary>
            請假資料
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.CardDao.#ctor(System.String)">
            <summary>
            請假資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.CardDao.Save(System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            存入刷卡資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <param name="sTime">時間</param>
            <param name="sReason">忘刷原因</param>
            <param name="sNote">備註</param>
            <param name="sKeyMan">登錄者</param>
            <param name="sSerno">序號</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Att.HcodeDao.#ctor(System.Data.IDbConnection)">
            <summary>
            假別代碼
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.HcodeDao.#ctor(System.String)">
            <summary>
            假別代碼
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.HcodeDao.GetHocde(System.String,System.Boolean)">
            <summary>
            假別代碼資料
            </summary>
            <param name="sCode">假別代碼</param>
            <param name="bDisplay">只列出要顯示的</param>
            <returns>HcodeTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.HcodeDao.GetHocdeDetail(System.String,System.Boolean)">
            <summary>
            假別代碼資料
            </summary>
            <param name="sCode">假別代碼</param>
            <param name="bDisplay">只列出要顯示的</param>
            <returns>HcodeTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.HcodeDao.GetHocdeByFilter(System.String,System.Boolean,System.String,System.Nullable{System.DateTime})">
            <summary>
            假別代碼依資料群組資料
            </summary>
            <param name="sCode">假別代碼</param>
            <param name="bDisplay">只列出要顯示的</param>
             <param name="sNobr">工號</param>
             <param name="dDate">日期</param>
            <returns>HcodeTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.#ctor(System.Data.IDbConnection)">
            <summary>
            請假資料
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.#ctor(System.String)">
            <summary>
            請假資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetOtType(System.String,System.Boolean)">
            <summary>
            取得加班類別代碼
            </summary>
            <param name="sCode">代碼</param>
            <param name="bAllDisplay">是否全部顯示</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetOtType(System.Boolean)">
            <summary>
            取得加班類別代碼
            </summary>
            <param name="bOtType">True = 加班 , False = 津貼</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.DeleteOt(System.String)">
            <summary>
            刪除加班資料
            </summary>
            <param name="sProcessID">ProcessID</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.DeleteOt(System.String,System.DateTime,System.String,System.DateTime,System.String,System.String)">
            <summary>
            刪除加班資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始日期</param>
            <param name="sTimeB">結束日期</param>
            <param name="dDateE">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <param name="sType">加班類別</param>
            <returns>int</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.ConvertTime24To48(System.String,System.DateTime@,System.DateTime@,System.String@,System.String@)">
            <summary>
            轉換成48小時
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sTimeB">開始時日</param>
            <param name="sTimeE">結束時間</param>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetCalculate(System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.String,System.Decimal,System.String,System.Boolean,System.Boolean)">
            <summary>
            加班計算
            </summary>
            <param name="sNobr">工號</param>
            <param name="sOtCat">加班費或補休假</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <param name="sOtrcd">加班原因代碼</param>
            <param name="iException">例外時數</param>
            <param name="sRoteCode">加班班別代碼</param>
            <param name="bCalculateRes">扣除休息時數</param>
            <param name="bTime24">24小時計算</param>
            <returns>decimal</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.OtSave(System.String,System.String,System.DateTime,System.DateTime,System.DateTime,System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            存入
            </summary>
            <param name="sNobr">工號</param>
            <param name="sOtCat">加班費或補休假</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sTimeB">開始時間</param>
            <param name="sTimeE">結束時間</param>
            <param name="iHour">時數</param>
            <param name="sOtrcd">加班原因代碼</param>
            <param name="sRoteCode">加班班別代碼</param>
            <param name="sDeptsCode">成本中心代碼</param>
            <param name="sAbstCode">補休得假代碼</param>
            <param name="sNote">備註</param>
            <param name="sKeyMan">登錄者</param>
            <param name="sSerno">序號</param>
            <param name="bTime24">24小時計算</param>
            <returns>int</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetOt(System.Collections.Generic.List{System.String},System.DateTime,System.DateTime)">
            <summary>
            取得加班資料(區間)
            </summary>
            <param name="lsNobr">工號</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <returns>List OtRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetOt(System.String,System.DateTime,System.DateTime)">
            <summary>
            取得加班資料(區間)
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <returns>List OtRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetOtrcd(System.String)">
            <summary>
            取得加班原因代碼
            </summary>
            <param name="sCode">代碼</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetHoursSum(System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            計算加班時數
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDateB">計算開始日期</param>
            <param name="dDateE">計算結束日期</param>
            <param name="bFor46"></param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetOtrcdByFilter(System.String,System.Boolean,System.String,System.Nullable{System.DateTime})">
            <summary>
            取得加班原因代碼
            </summary>
            <param name="sCode">代碼</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Att.OtDao.GetOt(System.String,System.DateTime)">
            <summary>
            取得加班資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <returns>List OtRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.RoteDao.#ctor(System.Data.IDbConnection)">
            <summary>
            假別代碼
            </summary>
            <param name="conn"></param>
        </member>
        <member name="M:Dal.Dao.Att.RoteDao.#ctor(System.String)">
            <summary>
            假別代碼
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.RoteDao.GetRoteDetail(System.Collections.Generic.List{System.String})">
            <summary>
            取得班表資料
            </summary>
            <param name="lsRoteCode">null = 全部</param>
            <returns>RoteDetailRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.RoteDao.GetRoteRes(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            休息時間
            </summary>
            <param name="sResB1">休息時間</param>
            <param name="sResE1">休息時間</param>
            <param name="sResB2">休息時間</param>
            <param name="sResE2">休息時間</param>
            <param name="sResB3">休息時間</param>
            <param name="sResE3">休息時間</param>
            <param name="sResB4">休息時間</param>
            <param name="sResE4">休息時間</param>
            <param name="sResB5">休息時間</param>
            <param name="sResE5">休息時間</param>
            <returns>RoteResTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.RoteDao.GetRote">
            <summary>
            取得班別資料
            </summary>
            <returns>List RoteRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.RoteDao.GetRoteByOt(System.String,System.Nullable{System.DateTime})">
            <summary>
            取得班別資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">日期</param>
            <returns>List RoteRow</returns>
        </member>
        <member name="M:Dal.Dao.Att.RoteDao.GetRoteByOt">
            <summary>
            取得班別資料
            </summary>
            <returns>List RoteRow</returns>
        </member>
        <member name="T:Dal.Dao.Att.TransCardDao">
            <summary>
            TransCardDao
            </summary>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.#ctor">
            <summary>
            刷卡轉出勤
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.#ctor(System.Data.IDbConnection)">
            <summary>
            刷卡轉出勤
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.#ctor(System.String)">
            <summary>
            刷卡轉出勤
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.GetBaseByNobr(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得員工基本判斷資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.GetRote(System.String[])">
            <summary>
            取得班表資料
            </summary>
            <param name="arrRoteCode">null = 全部</param>
            <returns>RoteTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.GetRoteRes(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            休息時間
            </summary>
            <param name="sResB1">休息時間</param>
            <param name="sResE1">休息時間</param>
            <param name="sResB2">休息時間</param>
            <param name="sResE2">休息時間</param>
            <param name="sResB3">休息時間</param>
            <param name="sResE3">休息時間</param>
            <param name="sResB4">休息時間</param>
            <param name="sResE4">休息時間</param>
            <param name="sResB5">休息時間</param>
            <param name="sResE5">休息時間</param>
            <returns>RoteResTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.GetAbs(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得請假資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>AbsTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.GetOt(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得加班資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>OtTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.GetCard(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得刷卡資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>CardTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.GetAttCard(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得出勤資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>AttCardTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.TransCard(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            刷卡轉出勤 及 判斷異常
            </summary>
            <param name="sNobrB">開始工號</param>
            <param name="sNobrE">結束工號</param>
            <param name="sDeptB">開始部門</param>
            <param name="sDeptE">結束部門</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sKeyMan">登錄者</param>
            <param name="bAttCard">轉換刷卡時間</param>
            <param name="bAttEnd">判斷異常</param>
            <param name="bEzAttCard">簡單轉換True = 簡單(一天多筆的情況，才需要複雜的判斷)</param>
            <param name="sUserID">登入者工號</param>
            <param name="sComp">公司別</param>
            <param name="bAdmin">是否管理權限</param>
            <param name="ThreadCount">啟用多少個執行緒(預設是2)</param>
            <returns>int</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.TransCard(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            刷卡轉出勤 及 判斷異常
            </summary>
            <param name="sNobrB">開始工號</param>
            <param name="sNobrE">結束工號</param>
            <param name="sDeptB">開始部門</param>
            <param name="sDeptE">結束部門</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sRote">判斷班別</param>
            <param name="sKeyMan">登錄者</param>
            <param name="bAttCard">轉換刷卡時間</param>
            <param name="bAttEnd">判斷異常</param>
            <param name="bEzAttCard">簡單轉換True = 簡單(一天多筆的情況，才需要複雜的判斷)</param>
            <param name="sUserID">登入者工號</param>
            <param name="sComp">公司別</param>
            <param name="bAdmin">是否管理權限</param>
            <param name="ThreadCount">啟用多少個執行緒(預設是2)</param>
            <returns>int</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.dcSubmitChanges(JBModule.Data.Linq.HrDBDataContext)">
            <summary>
            
            </summary>
            <param name="dc">dcAttDataContext</param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.TransCardPools.GetRoteCode(System.Collections.Generic.List{JBModule.Data.Linq.ATTEND},System.Collections.Generic.List{Bll.Att.Vdb.RoteTable},System.String,System.DateTime,System.String)">
            <summary>
            尋找客制班別
            </summary>
            <param name="rsATTEND">ATTEND</param>
            <param name="Nobr">工號</param>
            <param name="Date">日期</param>
            <param name="RoteCode">班別</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao.TransCardPools.IsHoliDay(System.Collections.Generic.List{Bll.Att.Vdb.RoteTable},System.String)">
            <summary>
            判斷是否為假日班 True = 是假日
            </summary>
            <param name="rsRote"></param>
            <param name="RoteCode"></param>
            <returns>bool</returns>
        </member>
        <member name="T:Dal.Dao.Att.TransCardDao_NS">
            <summary>
            TransCardDao
            </summary>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.#ctor">
            <summary>
            刷卡轉出勤
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.#ctor(System.Data.IDbConnection)">
            <summary>
            刷卡轉出勤
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.#ctor(System.String)">
            <summary>
            刷卡轉出勤
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.GetBaseByNobr(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得員工基本判斷資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.GetRote(System.String[])">
            <summary>
            取得班表資料
            </summary>
            <param name="arrRoteCode">null = 全部</param>
            <returns>RoteTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.GetRoteRes(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            休息時間
            </summary>
            <param name="sResB1">休息時間</param>
            <param name="sResE1">休息時間</param>
            <param name="sResB2">休息時間</param>
            <param name="sResE2">休息時間</param>
            <param name="sResB3">休息時間</param>
            <param name="sResE3">休息時間</param>
            <param name="sResB4">休息時間</param>
            <param name="sResE4">休息時間</param>
            <param name="sResB5">休息時間</param>
            <param name="sResE5">休息時間</param>
            <returns>RoteResTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.GetAbs(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得請假資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>AbsTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.GetOt(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得加班資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>OtTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.GetCard(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得刷卡資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>CardTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.GetAttCard(Bll.Att.Vdb.TransCardCondition)">
            <summary>
            取得出勤資料
            </summary>
            <param name="Cond">TransCardCondition</param>
            <returns>AttCardTable</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.TransCard(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            刷卡轉出勤 及 判斷異常
            </summary>
            <param name="sNobrB">開始工號</param>
            <param name="sNobrE">結束工號</param>
            <param name="sDeptB">開始部門</param>
            <param name="sDeptE">結束部門</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sKeyMan">登錄者</param>
            <param name="bAttCard">轉換刷卡時間</param>
            <param name="bAttEnd">判斷異常</param>
            <param name="bEzAttCard">簡單轉換True = 簡單(一天多筆的情況，才需要複雜的判斷)</param>
            <param name="sUserID">登入者工號</param>
            <param name="sComp">公司別</param>
            <param name="bAdmin">是否管理權限</param>
            <param name="ThreadCount">啟用多少個執行緒(預設是2)</param>
            <returns>int</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.TransCard(System.String,System.String,System.String,System.String,System.DateTime,System.DateTime,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.Boolean,System.Int32)">
            <summary>
            刷卡轉出勤 及 判斷異常
            </summary>
            <param name="sNobrB">開始工號</param>
            <param name="sNobrE">結束工號</param>
            <param name="sDeptB">開始部門</param>
            <param name="sDeptE">結束部門</param>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sRote">判斷班別</param>
            <param name="sKeyMan">登錄者</param>
            <param name="bAttCard">轉換刷卡時間</param>
            <param name="bAttEnd">判斷異常</param>
            <param name="bEzAttCard">簡單轉換True = 簡單(一天多筆的情況，才需要複雜的判斷)</param>
            <param name="sUserID">登入者工號</param>
            <param name="sComp">公司別</param>
            <param name="bAdmin">是否管理權限</param>
            <param name="ThreadCount">啟用多少個執行緒(預設是2)</param>
            <returns>int</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.dcSubmitChanges(JBModule.Data.Linq.HrDBDataContext)">
            <summary>
            
            </summary>
            <param name="dc">dcAttDataContext</param>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.TransCardPools.GetRoteCode(System.Collections.Generic.List{JBModule.Data.Linq.ATTEND},System.Collections.Generic.List{Bll.Att.Vdb.RoteTable},System.String,System.DateTime,System.String)">
            <summary>
            尋找客制班別
            </summary>
            <param name="rsATTEND">ATTEND</param>
            <param name="Nobr">工號</param>
            <param name="Date">日期</param>
            <param name="RoteCode">班別</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Att.TransCardDao_NS.TransCardPools.IsHoliDay(System.Collections.Generic.List{Bll.Att.Vdb.RoteTable},System.String)">
            <summary>
            判斷是否為假日班 True = 是假日
            </summary>
            <param name="rsRote"></param>
            <param name="RoteCode"></param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.#ctor(System.Data.IDbConnection)">
            <summary>
            員工基本資料
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.#ctor(System.String)">
            <summary>
            員工基本資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBase(System.String,System.Boolean)">
            <summary>
            取得員工基本資料
            </summary>
            <param name="sNobr">工號 空白等於全部</param>
            <param name="bIn">是否一定要在職</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBase(System.String)">
            <summary>
            取得員工基本資料 依工號 包含離職員工
            </summary>
            <param name="sNobr">工號</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBase(System.Collections.Generic.List{System.String})">
            <summary>
            取得員工基本資料 依工號 包含離職員工
            </summary>
            <param name="lsNobr">工號</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBaseByNobr(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            取得員工基本資料 依工號
            </summary>
            <param name="sNobr">工號</param>
            <param name="sDeptCate">1 = 編制部門 , 2 = 簽核部門</param>
            <param name="bDeptDown">部門是否向下</param>
            <param name="bIn">是否一定要在職</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBaseByNobr(System.String,System.DateTime)">
            <summary>
            取得員工基本資料 依工號
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">生效日期</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBaseByNobr(System.Collections.Generic.List{System.String},System.DateTime)">
            <summary>
            取得員工基本資料 依工號
            </summary>
            <param name="lsNobr">工號</param>
            <param name="dDate">生效日期</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBaseByDept(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            取得員工基本資料 依部門
            </summary>
            <param name="sDept">部門</param>
            <param name="sDeptCate">1 = 編制部門 , 2 = 簽核部門</param>
            <param name="bDeptDown">部門是否向下</param>
            <param name="bIn">是否一定要在職</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBasettsByNobr(System.String,System.Nullable{System.DateTime})">
            <summary>
            取得員工異動資料
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">生效日</param>
            <returns>BasettsTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.BasettsSaveByShiftLong(System.String,System.DateTime,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            將調班資料存入HR.BASETTS實體資料表(長調) True = 存入成功
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">(異動)調班日期</param>
            <param name="sRotetCode">輪班序代碼</param>
            <param name="sHoliCode">行事曆代碼</param>
            <param name="sOtRateCode">加班率代碼</param>
            <param name="sNote">備註</param>
            <param name="sKeyMan">登錄者</param>
            <param name="sSerno">表單編號</param>
            <param name="bTransAtt">重新轉換班表</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetWorkcd(System.String)">
            <summary>
            主要駐地城市
            </summary>
            <param name="sCode"></param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetTTSCD(System.String)">
            <summary>
            異動原因
            </summary>
            <param name="sCode"></param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetAllEmp">
            <summary>
            取得所有在職員工
            </summary>
            <param name="dDate"></param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetBaseByName(System.String)">
            <summary>
            取得員工基本資料 依姓名 
            </summary>
            <param name="sNobr">工號</param>
            <returns>BaseTable</returns>
        </member>
        <member name="M:Dal.Dao.Bas.BasDao.GetPortalRoleByNobr(System.String)">
            <summary>
            取得員工入口角色依功號
            </summary>
            <param name="sNobr">工號</param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Bas.DeptDao.#ctor(System.Data.IDbConnection)">
            <summary>
            員工基本資料
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Bas.DeptDao.#ctor(System.String)">
            <summary>
            員工基本資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Bas.DeptDao.GetDepts(System.String,System.Boolean)">
            <summary>
            取得成本部門
            </summary>
        </member>
        <member name="M:Dal.Dao.Bas.IpControlDao.#ctor(System.Data.IDbConnection)">
            <summary>
            員工基本資料
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Bas.IpControlDao.#ctor(System.String)">
            <summary>
            員工基本資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Bas.JobDao.#ctor(System.Data.IDbConnection)">
            <summary>
            員工基本資料
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Bas.JobDao.#ctor(System.String)">
            <summary>
            員工基本資料
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Bas.JobDao.GetJobs(System.String)">
            <summary>
            取得職類
            </summary>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.#ctor(System.Data.IDbConnection)">
            <summary>
            表單資料
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.#ctor(System.String)">
            <summary>
            表單資料
            </summary>
            <param name="ConnectionString">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.GetFlowAbs(System.DateTime,System.DateTime,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            表單請假資料
            </summary>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sCat">請假類別0 = 不分,1 = 請假,2 = 公出</param>
            <param name="lsDept">部門List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsNobr">工號List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsState">狀態List 忽略此條件需傳入null或是0筆資料的物件1=進行中, 2=駁回, 3=完成</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.GetFlowAbs(System.DateTime,System.DateTime,System.String,System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            表單請假資料
            </summary>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sHcode">假別代碼 空白 = 全部</param>
            <param name="sCat">請假類別0 = 不分,1 = 請假,2 = 公出</param>
            <param name="lsDept">部門List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsNobr">工號List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsState">狀態List 忽略此條件需傳入null或是0筆資料的物件1=進行中, 2=駁回, 3=完成</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.GetFlowAbsd(System.String,System.Int32)">
            <summary>
            取得請假明細
            </summary>
            <param name="sAbsd">長字串</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.GetFlowOt(System.DateTime,System.DateTime,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            表單加班資料
            </summary>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="lsDept">部門List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsNobr">工號List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsState">狀態List 忽略此條件需傳入null或是0筆資料的物件1=進行中, 2=駁回, 3=完成</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.GetFlowOt(System.DateTime,System.DateTime,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            表單加班資料
            </summary>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="lsDept">部門List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsNobr">工號List 忽略此條件需傳入null或是0筆資料的物件</param>
            <param name="lsState">狀態List 忽略此條件需傳入null或是0筆資料的物件1=進行中, 2=駁回, 3=完成</param>
            <param name="lsOtType">加班類別List 忽略此條件需傳入null或是0筆資料的物件</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.SetResetFormBegin(System.Int32,System.String@,System.String@,System.String@)">
            <summary>
            重設表單流程(開始步驟)
            </summary>
            <param name="iProcessID">ProcessID</param>
            <param name="RoleID">角色代碼</param>
            <param name="EmpID">工號代碼</param>
            <param name="FlowTreeID">流程樹</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.SetResetFormAfter(System.String,System.Int32,System.Int32)">
            <summary>
            重設表單流程(開始步驟)
            </summary>
            <param name="sProcessID">Guid ProcessID</param>
            <param name="iProcessID">New ProcessID</param>
            <param name="iProcessIDOld">Old ProcessID</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.SetCancelForm(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            設定表單作業
            </summary>
            <param name="lsProcessID">List ProcessID</param>
            <param name="bCancel">True = 取消流程</param>
            <returns>List int</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.SetCancelForm(Bll.Flow.Vdb.FormCategroy,System.String,System.DateTime,System.String,System.String,System.Boolean)">
            <summary>
            設定表單作業
            </summary>
            <param name="FormName">表單類別</param>
            <param name="sNobr">工號</param>
            <param name="dDateB">日期</param>
            <param name="sTimeB">時間</param>
            <param name="sType">假別或加班類別...</param>
            <param name="bCancel">是否取消流程 True = 取消</param>
            <returns>List int</returns>
        </member>
        <member name="M:Dal.Dao.Flow.FlowFormsDao.SetFormSignM(System.Int32,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            存入審核資訊
            </summary>
            <param name="iApParm">iApParmID</param>
            <param name="iProcessID">iProcessID</param>
            <param name="sSignNobr">審核者工號</param>
            <param name="sNote">備註</param>
            <param name="bSign">是否核准</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.#ctor(System.Data.IDbConnection)">
            <summary>
            電子簽核資料
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.#ctor(System.String)">
            <summary>
            電子簽核資料
            </summary>
            <param name="ConnectionString">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFormTreeToTreeView(System.String,System.String)">
            <summary>
            取得申請表單樹
            </summary>
            <param name="sNobr">申請人工號</param>
            <param name="sDeptm">簽核部門</param>
            <returns>TreeView</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFormTreeToHtmlString(System.String,System.String)">
            <summary>
            取得申請表單樹 轉成 HTML
            </summary>
            <param name="sNobr">申請人工號</param>
            <param name="sDeptm">簽核部門</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.ParseTreeViewToHTML(System.Web.UI.WebControls.TreeNodeCollection,System.Text.StringBuilder)">
            <summary>
            HTML展開
            </summary>
            <param name="parentNodes">上層節點</param>
            <param name="sb">連接字串</param>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFormTreeToList(System.String,System.String)">
            <summary>
            取得申請表單樹 轉成 List
            </summary>
            <param name="sNobr">申請人工號</param>
            <param name="sDeptm">簽核部門</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.ParseTreeViewToList(System.Web.UI.WebControls.TreeNodeCollection,System.Text.StringBuilder,System.Collections.Generic.List{Bll.Flow.Vdb.FormTreeTable})">
            <summary>
            
            </summary>
            <param name="parentNodes"></param>
            <param name="sb"></param>
            <param name="Vdb"></param>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowProgressFlow(System.String,System.String)">
            <summary>
            取得目前待審核的表單
            </summary>
            <param name="sNobr">審核者工號</param>
            <param name="sAppNobr">申請者工號</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowProgressFlowCount(System.String,System.String)">
            <summary>
            取得目前待審核的表單的筆數
            </summary>
            <param name="sNobr">審核者工號</param>
            <param name="sAppNobr">申請者工號</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowProgressFlowComplete(System.String)">
            <summary>
            取得曾經審核的表單
            </summary>
            <param name="sNobr">審核者工號</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowParmUrl(System.Int32)">
            <summary>
            取得流程的內容網址
            </summary>
            <param name="iApParmID">檢查表序號</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.SetProcessApParm(System.String,System.Int32,System.Int32)">
            <summary>
            設定更新流程審核表
            </summary>
            <param name="sNobr">申請者工號</param>
            <param name="iApParmID">檢查表序號</param>
            <param name="iProcessCheckAuto">ProcessCheckAuto</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowSearchIng(System.String)">
            <summary>
            取得目前正在進行中的流程
            </summary>
            <param name="sNobr">查詢者工號</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowViewUrl(System.Int32)">
            <summary>
            取得流程的內容網址
            </summary>
            <param name="iApViewID">檢查表序號</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowViewUrlOnlyUrl(System.Int32)">
            <summary>
            取得流程的內容網址
            </summary>
            <param name="iApViewID">檢查表序號</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowHistoryUrl(System.Int32)">
            <summary>
            取得流程的流程圖網址
            </summary>
            <param name="iProcessID">檢查表序號</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetFlowSearchComplete(System.String,System.DateTime,System.DateTime)">
            <summary>
            取得目前完成的流程
            </summary>
            <param name="sNobr">查詢者工號</param>
            <param name="dAppB">查詢開始日期</param>
            <param name="dAppE">查詢結束日期</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.SetCancelProcessFlow(System.Collections.Generic.List{System.Int32},System.Boolean)">
            <summary>
            設定取消流程作業
            </summary>
            <param name="lsProcessID">List ProcessID</param>
            <param name="bCancel">True = 取消流程</param>
            <returns>List int</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetRoles(System.String)">
            <summary>
            取得角色
            </summary>
            <param name="sNobr">工號</param>
            <returns>string</returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.GetAgent(System.String,System.String)">
            <summary>
            取得代理人資訊
            </summary>
            <param name="sNobr">被代理人工號</param>
            <param name="sRole">被代理人角色 空白等於全部取得</param>
            <returns></returns>
        </member>
        <member name="M:Dal.Dao.Flow.MainDao.SetAgent(System.String,System.String,System.String,System.String,System.String,System.DateTime,System.DateTime)">
            <summary>
            代理人設定
            </summary>
            <param name="sNobr">工號</param>
            <param name="sRole">角色</param>
            <param name="sAgentNobr1">代理人1</param>
            <param name="sAgentNobr2">代理人2</param>
            <param name="sAgentNobr3">代理人3</param>
            <param name="dDateB">開始代理日期</param>
            <param name="dDateE">結束代理日期</param>
            <returns>bool</returns>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.#ctor(System.Data.IDbConnection)">
            <summary>
            薪資鎖檔
            </summary>
            <param name="conn">連接字串 沒有等於預設</param>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.#ctor(System.String)">
            <summary>
            薪資鎖檔
            </summary>
            <param name="ConnectionString"></param>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.GetSalaryLockBegin(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String)">
            <summary>
            計薪前鎖檔 包含出勤鎖檔 及 助理鎖檔
            </summary>
            <param name="dDateB">開始日期</param>
            <param name="dDateE">結束日期</param>
            <param name="sSaladr">薪資群組</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.GetSalaryLockAfter(System.String,System.String,System.String,System.String)">
            <summary>
            計薪後鎖檔
            </summary>
            <param name="sYymmB">開始計薪年月</param>
            <param name="sYymmE">結束計薪年月</param>
            <param name="sSeq">期別</param>
            <param name="sSaladr">薪資群組</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.GetSalaryMonthDay(System.String)">
            <summary>
            計薪月份日期最後一天
            </summary>
            <param name="sComp">公司別</param>
            <returns>List</returns>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.GetSalaryYymm(System.Collections.Generic.List{Bll.Sal.Vdb.SalaryDateBE},System.Int32,System.String)">
            <summary>
            計薪年月
            </summary>
            <param name="lsSalaryDateBE">計算區間</param>
            <param name="iSalaryDay">每月計算最後一天</param>
            <param name="sSeq">期別</param>
            <returns>List SalaryYymm</returns>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.GetSalaryYymm(System.String,System.DateTime,System.Int32,System.String)">
            <summary>
            計薪年月
            </summary>
            <param name="sNobr">工號</param>
            <param name="dDate">計期日期</param>
            <param name="iSalaryDay">每月計算最後一天</param>
            <param name="sSeq">期別</param>
            <returns>List SalaryYymm</returns>
        </member>
        <member name="M:Dal.Dao.Sal.SalaryLockDao.GetSalDate(System.DateTime,System.String,System.Int32)">
            <summary>
            取得計薪週期
            </summary>
            <param name="dDate">申請日期</param>
            <param name="sComp">公司別</param>
            <param name="iSalaryDay">判斷日期</param>
            <returns>TwoDateTime</returns>
        </member>
    </members>
</doc>
