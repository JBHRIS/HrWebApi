//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.296
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace JBHR.Att {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsSal")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsSal : global::System.Data.DataSet {
        
        private SALCODEDataTable tableSALCODE;
        
        private SALATTRDataTable tableSALATTR;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsSal() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsSal(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["SALCODE"] != null)) {
                    base.Tables.Add(new SALCODEDataTable(ds.Tables["SALCODE"]));
                }
                if ((ds.Tables["SALATTR"] != null)) {
                    base.Tables.Add(new SALATTRDataTable(ds.Tables["SALATTR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALCODEDataTable SALCODE {
            get {
                return this.tableSALCODE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SALATTRDataTable SALATTR {
            get {
                return this.tableSALATTR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsSal cln = ((dsSal)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["SALCODE"] != null)) {
                    base.Tables.Add(new SALCODEDataTable(ds.Tables["SALCODE"]));
                }
                if ((ds.Tables["SALATTR"] != null)) {
                    base.Tables.Add(new SALATTRDataTable(ds.Tables["SALATTR"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableSALCODE = ((SALCODEDataTable)(base.Tables["SALCODE"]));
            if ((initTable == true)) {
                if ((this.tableSALCODE != null)) {
                    this.tableSALCODE.InitVars();
                }
            }
            this.tableSALATTR = ((SALATTRDataTable)(base.Tables["SALATTR"]));
            if ((initTable == true)) {
                if ((this.tableSALATTR != null)) {
                    this.tableSALATTR.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsSal";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsSal.xsd";
            this.Locale = new global::System.Globalization.CultureInfo("zh-TW");
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableSALCODE = new SALCODEDataTable();
            base.Tables.Add(this.tableSALCODE);
            this.tableSALATTR = new SALATTRDataTable();
            base.Tables.Add(this.tableSALATTR);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSALCODE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSALATTR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsSal ds = new dsSal();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SALCODERowChangeEventHandler(object sender, SALCODERowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SALATTRRowChangeEventHandler(object sender, SALATTRRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALCODEDataTable : global::System.Data.TypedTableBase<SALCODERow> {
            
            private global::System.Data.DataColumn columnSAL_CODE;
            
            private global::System.Data.DataColumn columnSAL_NAME;
            
            private global::System.Data.DataColumn columnSAL_ATTR;
            
            private global::System.Data.DataColumn columnKEY_MAN;
            
            private global::System.Data.DataColumn columnKEY_DATE;
            
            private global::System.Data.DataColumn columnSOS_ID;
            
            private global::System.Data.DataColumn columnWEL;
            
            private global::System.Data.DataColumn columnOT;
            
            private global::System.Data.DataColumn columnMAX_AMT;
            
            private global::System.Data.DataColumn columnMIN_AMT;
            
            private global::System.Data.DataColumn columnCAL_FREQ;
            
            private global::System.Data.DataColumn columnCAL_TYPE;
            
            private global::System.Data.DataColumn columnHRS;
            
            private global::System.Data.DataColumn columnMONTHTYPE;
            
            private global::System.Data.DataColumn columnDEFINEDAYS;
            
            private global::System.Data.DataColumn columnADVPAY;
            
            private global::System.Data.DataColumn columnACCCD;
            
            private global::System.Data.DataColumn columnATT;
            
            private global::System.Data.DataColumn columnDAILY;
            
            private global::System.Data.DataColumn columnRETIRE;
            
            private global::System.Data.DataColumn columnFORBANK;
            
            private global::System.Data.DataColumn columnFORCASH;
            
            private global::System.Data.DataColumn columnNOTFREQ;
            
            private global::System.Data.DataColumn columnTAXRATE;
            
            private global::System.Data.DataColumn columnYEARPAY;
            
            private global::System.Data.DataColumn columnABSPAY;
            
            private global::System.Data.DataColumn columnINSLAB;
            
            private global::System.Data.DataColumn columnLATER;
            
            private global::System.Data.DataColumn columnSAL_ENAME;
            
            private global::System.Data.DataColumn columnBASIC;
            
            private global::System.Data.DataColumn columnOLDRETIRE;
            
            private global::System.Data.DataColumn columnSALBASD1;
            
            private global::System.Data.DataColumn columnSAL_CODE_DISP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALCODEDataTable() {
                this.TableName = "SALCODE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SALCODEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SALCODEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAL_CODEColumn {
                get {
                    return this.columnSAL_CODE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAL_NAMEColumn {
                get {
                    return this.columnSAL_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAL_ATTRColumn {
                get {
                    return this.columnSAL_ATTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_MANColumn {
                get {
                    return this.columnKEY_MAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn KEY_DATEColumn {
                get {
                    return this.columnKEY_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SOS_IDColumn {
                get {
                    return this.columnSOS_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn WELColumn {
                get {
                    return this.columnWEL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OTColumn {
                get {
                    return this.columnOT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MAX_AMTColumn {
                get {
                    return this.columnMAX_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MIN_AMTColumn {
                get {
                    return this.columnMIN_AMT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAL_FREQColumn {
                get {
                    return this.columnCAL_FREQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CAL_TYPEColumn {
                get {
                    return this.columnCAL_TYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HRSColumn {
                get {
                    return this.columnHRS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MONTHTYPEColumn {
                get {
                    return this.columnMONTHTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DEFINEDAYSColumn {
                get {
                    return this.columnDEFINEDAYS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADVPAYColumn {
                get {
                    return this.columnADVPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ACCCDColumn {
                get {
                    return this.columnACCCD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ATTColumn {
                get {
                    return this.columnATT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DAILYColumn {
                get {
                    return this.columnDAILY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RETIREColumn {
                get {
                    return this.columnRETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORBANKColumn {
                get {
                    return this.columnFORBANK;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FORCASHColumn {
                get {
                    return this.columnFORCASH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOTFREQColumn {
                get {
                    return this.columnNOTFREQ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXRATEColumn {
                get {
                    return this.columnTAXRATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn YEARPAYColumn {
                get {
                    return this.columnYEARPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ABSPAYColumn {
                get {
                    return this.columnABSPAY;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INSLABColumn {
                get {
                    return this.columnINSLAB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LATERColumn {
                get {
                    return this.columnLATER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAL_ENAMEColumn {
                get {
                    return this.columnSAL_ENAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BASICColumn {
                get {
                    return this.columnBASIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OLDRETIREColumn {
                get {
                    return this.columnOLDRETIRE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALBASD1Column {
                get {
                    return this.columnSALBASD1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAL_CODE_DISPColumn {
                get {
                    return this.columnSAL_CODE_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALCODERow this[int index] {
                get {
                    return ((SALCODERow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALCODERowChangeEventHandler SALCODERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSALCODERow(SALCODERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALCODERow AddSALCODERow(
                        string SAL_CODE, 
                        string SAL_NAME, 
                        string SAL_ATTR, 
                        string KEY_MAN, 
                        System.DateTime KEY_DATE, 
                        string SOS_ID, 
                        bool WEL, 
                        bool OT, 
                        decimal MAX_AMT, 
                        decimal MIN_AMT, 
                        string CAL_FREQ, 
                        string CAL_TYPE, 
                        decimal HRS, 
                        string MONTHTYPE, 
                        decimal DEFINEDAYS, 
                        bool ADVPAY, 
                        string ACCCD, 
                        bool ATT, 
                        bool DAILY, 
                        bool RETIRE, 
                        bool FORBANK, 
                        bool FORCASH, 
                        bool NOTFREQ, 
                        decimal TAXRATE, 
                        bool YEARPAY, 
                        bool ABSPAY, 
                        bool INSLAB, 
                        bool LATER, 
                        string SAL_ENAME, 
                        bool BASIC, 
                        bool OLDRETIRE, 
                        bool SALBASD1, 
                        string SAL_CODE_DISP) {
                SALCODERow rowSALCODERow = ((SALCODERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SAL_CODE,
                        SAL_NAME,
                        SAL_ATTR,
                        KEY_MAN,
                        KEY_DATE,
                        SOS_ID,
                        WEL,
                        OT,
                        MAX_AMT,
                        MIN_AMT,
                        CAL_FREQ,
                        CAL_TYPE,
                        HRS,
                        MONTHTYPE,
                        DEFINEDAYS,
                        ADVPAY,
                        ACCCD,
                        ATT,
                        DAILY,
                        RETIRE,
                        FORBANK,
                        FORCASH,
                        NOTFREQ,
                        TAXRATE,
                        YEARPAY,
                        ABSPAY,
                        INSLAB,
                        LATER,
                        SAL_ENAME,
                        BASIC,
                        OLDRETIRE,
                        SALBASD1,
                        SAL_CODE_DISP};
                rowSALCODERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALCODERow);
                return rowSALCODERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALCODERow FindBySAL_CODE(string SAL_CODE) {
                return ((SALCODERow)(this.Rows.Find(new object[] {
                            SAL_CODE})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALCODEDataTable cln = ((SALCODEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALCODEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSAL_CODE = base.Columns["SAL_CODE"];
                this.columnSAL_NAME = base.Columns["SAL_NAME"];
                this.columnSAL_ATTR = base.Columns["SAL_ATTR"];
                this.columnKEY_MAN = base.Columns["KEY_MAN"];
                this.columnKEY_DATE = base.Columns["KEY_DATE"];
                this.columnSOS_ID = base.Columns["SOS_ID"];
                this.columnWEL = base.Columns["WEL"];
                this.columnOT = base.Columns["OT"];
                this.columnMAX_AMT = base.Columns["MAX_AMT"];
                this.columnMIN_AMT = base.Columns["MIN_AMT"];
                this.columnCAL_FREQ = base.Columns["CAL_FREQ"];
                this.columnCAL_TYPE = base.Columns["CAL_TYPE"];
                this.columnHRS = base.Columns["HRS"];
                this.columnMONTHTYPE = base.Columns["MONTHTYPE"];
                this.columnDEFINEDAYS = base.Columns["DEFINEDAYS"];
                this.columnADVPAY = base.Columns["ADVPAY"];
                this.columnACCCD = base.Columns["ACCCD"];
                this.columnATT = base.Columns["ATT"];
                this.columnDAILY = base.Columns["DAILY"];
                this.columnRETIRE = base.Columns["RETIRE"];
                this.columnFORBANK = base.Columns["FORBANK"];
                this.columnFORCASH = base.Columns["FORCASH"];
                this.columnNOTFREQ = base.Columns["NOTFREQ"];
                this.columnTAXRATE = base.Columns["TAXRATE"];
                this.columnYEARPAY = base.Columns["YEARPAY"];
                this.columnABSPAY = base.Columns["ABSPAY"];
                this.columnINSLAB = base.Columns["INSLAB"];
                this.columnLATER = base.Columns["LATER"];
                this.columnSAL_ENAME = base.Columns["SAL_ENAME"];
                this.columnBASIC = base.Columns["BASIC"];
                this.columnOLDRETIRE = base.Columns["OLDRETIRE"];
                this.columnSALBASD1 = base.Columns["SALBASD1"];
                this.columnSAL_CODE_DISP = base.Columns["SAL_CODE_DISP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSAL_CODE = new global::System.Data.DataColumn("SAL_CODE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE);
                this.columnSAL_NAME = new global::System.Data.DataColumn("SAL_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_NAME);
                this.columnSAL_ATTR = new global::System.Data.DataColumn("SAL_ATTR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_ATTR);
                this.columnKEY_MAN = new global::System.Data.DataColumn("KEY_MAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_MAN);
                this.columnKEY_DATE = new global::System.Data.DataColumn("KEY_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnKEY_DATE);
                this.columnSOS_ID = new global::System.Data.DataColumn("SOS_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSOS_ID);
                this.columnWEL = new global::System.Data.DataColumn("WEL", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWEL);
                this.columnOT = new global::System.Data.DataColumn("OT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOT);
                this.columnMAX_AMT = new global::System.Data.DataColumn("MAX_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMAX_AMT);
                this.columnMIN_AMT = new global::System.Data.DataColumn("MIN_AMT", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMIN_AMT);
                this.columnCAL_FREQ = new global::System.Data.DataColumn("CAL_FREQ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAL_FREQ);
                this.columnCAL_TYPE = new global::System.Data.DataColumn("CAL_TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCAL_TYPE);
                this.columnHRS = new global::System.Data.DataColumn("HRS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHRS);
                this.columnMONTHTYPE = new global::System.Data.DataColumn("MONTHTYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMONTHTYPE);
                this.columnDEFINEDAYS = new global::System.Data.DataColumn("DEFINEDAYS", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDEFINEDAYS);
                this.columnADVPAY = new global::System.Data.DataColumn("ADVPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADVPAY);
                this.columnACCCD = new global::System.Data.DataColumn("ACCCD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnACCCD);
                this.columnATT = new global::System.Data.DataColumn("ATT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATT);
                this.columnDAILY = new global::System.Data.DataColumn("DAILY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDAILY);
                this.columnRETIRE = new global::System.Data.DataColumn("RETIRE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRETIRE);
                this.columnFORBANK = new global::System.Data.DataColumn("FORBANK", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORBANK);
                this.columnFORCASH = new global::System.Data.DataColumn("FORCASH", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFORCASH);
                this.columnNOTFREQ = new global::System.Data.DataColumn("NOTFREQ", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOTFREQ);
                this.columnTAXRATE = new global::System.Data.DataColumn("TAXRATE", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAXRATE);
                this.columnYEARPAY = new global::System.Data.DataColumn("YEARPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnYEARPAY);
                this.columnABSPAY = new global::System.Data.DataColumn("ABSPAY", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnABSPAY);
                this.columnINSLAB = new global::System.Data.DataColumn("INSLAB", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINSLAB);
                this.columnLATER = new global::System.Data.DataColumn("LATER", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLATER);
                this.columnSAL_ENAME = new global::System.Data.DataColumn("SAL_ENAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_ENAME);
                this.columnBASIC = new global::System.Data.DataColumn("BASIC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASIC);
                this.columnOLDRETIRE = new global::System.Data.DataColumn("OLDRETIRE", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOLDRETIRE);
                this.columnSALBASD1 = new global::System.Data.DataColumn("SALBASD1", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALBASD1);
                this.columnSAL_CODE_DISP = new global::System.Data.DataColumn("SAL_CODE_DISP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAL_CODE_DISP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSAL_CODE}, true));
                this.columnSAL_CODE.AllowDBNull = false;
                this.columnSAL_CODE.Unique = true;
                this.columnSAL_CODE.MaxLength = 50;
                this.columnSAL_NAME.AllowDBNull = false;
                this.columnSAL_NAME.MaxLength = 50;
                this.columnSAL_ATTR.AllowDBNull = false;
                this.columnSAL_ATTR.MaxLength = 50;
                this.columnKEY_MAN.AllowDBNull = false;
                this.columnKEY_MAN.MaxLength = 50;
                this.columnKEY_DATE.AllowDBNull = false;
                this.columnSOS_ID.AllowDBNull = false;
                this.columnSOS_ID.MaxLength = 50;
                this.columnWEL.AllowDBNull = false;
                this.columnOT.AllowDBNull = false;
                this.columnMAX_AMT.AllowDBNull = false;
                this.columnMIN_AMT.AllowDBNull = false;
                this.columnCAL_FREQ.AllowDBNull = false;
                this.columnCAL_FREQ.MaxLength = 50;
                this.columnCAL_TYPE.AllowDBNull = false;
                this.columnCAL_TYPE.MaxLength = 50;
                this.columnHRS.AllowDBNull = false;
                this.columnMONTHTYPE.AllowDBNull = false;
                this.columnMONTHTYPE.MaxLength = 50;
                this.columnDEFINEDAYS.AllowDBNull = false;
                this.columnADVPAY.AllowDBNull = false;
                this.columnACCCD.AllowDBNull = false;
                this.columnACCCD.MaxLength = 50;
                this.columnATT.AllowDBNull = false;
                this.columnDAILY.AllowDBNull = false;
                this.columnRETIRE.AllowDBNull = false;
                this.columnFORBANK.AllowDBNull = false;
                this.columnFORCASH.AllowDBNull = false;
                this.columnNOTFREQ.AllowDBNull = false;
                this.columnTAXRATE.AllowDBNull = false;
                this.columnYEARPAY.AllowDBNull = false;
                this.columnABSPAY.AllowDBNull = false;
                this.columnINSLAB.AllowDBNull = false;
                this.columnLATER.AllowDBNull = false;
                this.columnSAL_ENAME.AllowDBNull = false;
                this.columnSAL_ENAME.MaxLength = 60;
                this.columnOLDRETIRE.AllowDBNull = false;
                this.columnSALBASD1.AllowDBNull = false;
                this.columnSAL_CODE_DISP.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALCODERow NewSALCODERow() {
                return ((SALCODERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALCODERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALCODERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALCODERowChanged != null)) {
                    this.SALCODERowChanged(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALCODERowChanging != null)) {
                    this.SALCODERowChanging(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALCODERowDeleted != null)) {
                    this.SALCODERowDeleted(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALCODERowDeleting != null)) {
                    this.SALCODERowDeleting(this, new SALCODERowChangeEvent(((SALCODERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSALCODERow(SALCODERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSal ds = new dsSal();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALCODEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SALATTRDataTable : global::System.Data.TypedTableBase<SALATTRRow> {
            
            private global::System.Data.DataColumn columnSALATTR;
            
            private global::System.Data.DataColumn columnATTR_NAME;
            
            private global::System.Data.DataColumn columnNOT_DISP;
            
            private global::System.Data.DataColumn columnBASIC;
            
            private global::System.Data.DataColumn columnTYPE;
            
            private global::System.Data.DataColumn columnFLAG;
            
            private global::System.Data.DataColumn columnTAX;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALATTRDataTable() {
                this.TableName = "SALATTR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SALATTRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SALATTRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SALATTRColumn {
                get {
                    return this.columnSALATTR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ATTR_NAMEColumn {
                get {
                    return this.columnATTR_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NOT_DISPColumn {
                get {
                    return this.columnNOT_DISP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BASICColumn {
                get {
                    return this.columnBASIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TYPEColumn {
                get {
                    return this.columnTYPE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FLAGColumn {
                get {
                    return this.columnFLAG;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TAXColumn {
                get {
                    return this.columnTAX;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALATTRRow this[int index] {
                get {
                    return ((SALATTRRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SALATTRRowChangeEventHandler SALATTRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSALATTRRow(SALATTRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALATTRRow AddSALATTRRow(string SALATTR, string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX) {
                SALATTRRow rowSALATTRRow = ((SALATTRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SALATTR,
                        ATTR_NAME,
                        NOT_DISP,
                        BASIC,
                        TYPE,
                        FLAG,
                        TAX};
                rowSALATTRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSALATTRRow);
                return rowSALATTRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALATTRRow FindBySALATTR(string SALATTR) {
                return ((SALATTRRow)(this.Rows.Find(new object[] {
                            SALATTR})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SALATTRDataTable cln = ((SALATTRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SALATTRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSALATTR = base.Columns["SALATTR"];
                this.columnATTR_NAME = base.Columns["ATTR_NAME"];
                this.columnNOT_DISP = base.Columns["NOT_DISP"];
                this.columnBASIC = base.Columns["BASIC"];
                this.columnTYPE = base.Columns["TYPE"];
                this.columnFLAG = base.Columns["FLAG"];
                this.columnTAX = base.Columns["TAX"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSALATTR = new global::System.Data.DataColumn("SALATTR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSALATTR);
                this.columnATTR_NAME = new global::System.Data.DataColumn("ATTR_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnATTR_NAME);
                this.columnNOT_DISP = new global::System.Data.DataColumn("NOT_DISP", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNOT_DISP);
                this.columnBASIC = new global::System.Data.DataColumn("BASIC", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBASIC);
                this.columnTYPE = new global::System.Data.DataColumn("TYPE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTYPE);
                this.columnFLAG = new global::System.Data.DataColumn("FLAG", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFLAG);
                this.columnTAX = new global::System.Data.DataColumn("TAX", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSALATTR}, true));
                this.columnSALATTR.AllowDBNull = false;
                this.columnSALATTR.Unique = true;
                this.columnSALATTR.MaxLength = 50;
                this.columnATTR_NAME.AllowDBNull = false;
                this.columnATTR_NAME.MaxLength = 50;
                this.columnNOT_DISP.AllowDBNull = false;
                this.columnBASIC.AllowDBNull = false;
                this.columnTYPE.AllowDBNull = false;
                this.columnTYPE.MaxLength = 50;
                this.columnFLAG.AllowDBNull = false;
                this.columnFLAG.MaxLength = 50;
                this.columnTAX.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALATTRRow NewSALATTRRow() {
                return ((SALATTRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SALATTRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SALATTRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SALATTRRowChanged != null)) {
                    this.SALATTRRowChanged(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SALATTRRowChanging != null)) {
                    this.SALATTRRowChanging(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SALATTRRowDeleted != null)) {
                    this.SALATTRRowDeleted(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SALATTRRowDeleting != null)) {
                    this.SALATTRRowDeleting(this, new SALATTRRowChangeEvent(((SALATTRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSALATTRRow(SALATTRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsSal ds = new dsSal();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SALATTRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALCODERow : global::System.Data.DataRow {
            
            private SALCODEDataTable tableSALCODE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SALCODERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALCODE = ((SALCODEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAL_CODE {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_CODEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_CODEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAL_NAME {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_NAMEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAL_ATTR {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_ATTRColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_ATTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string KEY_MAN {
                get {
                    return ((string)(this[this.tableSALCODE.KEY_MANColumn]));
                }
                set {
                    this[this.tableSALCODE.KEY_MANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime KEY_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableSALCODE.KEY_DATEColumn]));
                }
                set {
                    this[this.tableSALCODE.KEY_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SOS_ID {
                get {
                    return ((string)(this[this.tableSALCODE.SOS_IDColumn]));
                }
                set {
                    this[this.tableSALCODE.SOS_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool WEL {
                get {
                    return ((bool)(this[this.tableSALCODE.WELColumn]));
                }
                set {
                    this[this.tableSALCODE.WELColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OT {
                get {
                    return ((bool)(this[this.tableSALCODE.OTColumn]));
                }
                set {
                    this[this.tableSALCODE.OTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MAX_AMT {
                get {
                    return ((decimal)(this[this.tableSALCODE.MAX_AMTColumn]));
                }
                set {
                    this[this.tableSALCODE.MAX_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MIN_AMT {
                get {
                    return ((decimal)(this[this.tableSALCODE.MIN_AMTColumn]));
                }
                set {
                    this[this.tableSALCODE.MIN_AMTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CAL_FREQ {
                get {
                    return ((string)(this[this.tableSALCODE.CAL_FREQColumn]));
                }
                set {
                    this[this.tableSALCODE.CAL_FREQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CAL_TYPE {
                get {
                    return ((string)(this[this.tableSALCODE.CAL_TYPEColumn]));
                }
                set {
                    this[this.tableSALCODE.CAL_TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal HRS {
                get {
                    return ((decimal)(this[this.tableSALCODE.HRSColumn]));
                }
                set {
                    this[this.tableSALCODE.HRSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MONTHTYPE {
                get {
                    return ((string)(this[this.tableSALCODE.MONTHTYPEColumn]));
                }
                set {
                    this[this.tableSALCODE.MONTHTYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal DEFINEDAYS {
                get {
                    return ((decimal)(this[this.tableSALCODE.DEFINEDAYSColumn]));
                }
                set {
                    this[this.tableSALCODE.DEFINEDAYSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ADVPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.ADVPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.ADVPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ACCCD {
                get {
                    return ((string)(this[this.tableSALCODE.ACCCDColumn]));
                }
                set {
                    this[this.tableSALCODE.ACCCDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ATT {
                get {
                    return ((bool)(this[this.tableSALCODE.ATTColumn]));
                }
                set {
                    this[this.tableSALCODE.ATTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool DAILY {
                get {
                    return ((bool)(this[this.tableSALCODE.DAILYColumn]));
                }
                set {
                    this[this.tableSALCODE.DAILYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool RETIRE {
                get {
                    return ((bool)(this[this.tableSALCODE.RETIREColumn]));
                }
                set {
                    this[this.tableSALCODE.RETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FORBANK {
                get {
                    return ((bool)(this[this.tableSALCODE.FORBANKColumn]));
                }
                set {
                    this[this.tableSALCODE.FORBANKColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool FORCASH {
                get {
                    return ((bool)(this[this.tableSALCODE.FORCASHColumn]));
                }
                set {
                    this[this.tableSALCODE.FORCASHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOTFREQ {
                get {
                    return ((bool)(this[this.tableSALCODE.NOTFREQColumn]));
                }
                set {
                    this[this.tableSALCODE.NOTFREQColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TAXRATE {
                get {
                    return ((decimal)(this[this.tableSALCODE.TAXRATEColumn]));
                }
                set {
                    this[this.tableSALCODE.TAXRATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool YEARPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.YEARPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.YEARPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool ABSPAY {
                get {
                    return ((bool)(this[this.tableSALCODE.ABSPAYColumn]));
                }
                set {
                    this[this.tableSALCODE.ABSPAYColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool INSLAB {
                get {
                    return ((bool)(this[this.tableSALCODE.INSLABColumn]));
                }
                set {
                    this[this.tableSALCODE.INSLABColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool LATER {
                get {
                    return ((bool)(this[this.tableSALCODE.LATERColumn]));
                }
                set {
                    this[this.tableSALCODE.LATERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAL_ENAME {
                get {
                    return ((string)(this[this.tableSALCODE.SAL_ENAMEColumn]));
                }
                set {
                    this[this.tableSALCODE.SAL_ENAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BASIC {
                get {
                    try {
                        return ((bool)(this[this.tableSALCODE.BASICColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALCODE\' 中資料行 \'BASIC\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALCODE.BASICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool OLDRETIRE {
                get {
                    return ((bool)(this[this.tableSALCODE.OLDRETIREColumn]));
                }
                set {
                    this[this.tableSALCODE.OLDRETIREColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SALBASD1 {
                get {
                    return ((bool)(this[this.tableSALCODE.SALBASD1Column]));
                }
                set {
                    this[this.tableSALCODE.SALBASD1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAL_CODE_DISP {
                get {
                    try {
                        return ((string)(this[this.tableSALCODE.SAL_CODE_DISPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("資料表 \'SALCODE\' 中資料行 \'SAL_CODE_DISP\' 的值是 DBNull。", e);
                    }
                }
                set {
                    this[this.tableSALCODE.SAL_CODE_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBASICNull() {
                return this.IsNull(this.tableSALCODE.BASICColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBASICNull() {
                this[this.tableSALCODE.BASICColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSAL_CODE_DISPNull() {
                return this.IsNull(this.tableSALCODE.SAL_CODE_DISPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSAL_CODE_DISPNull() {
                this[this.tableSALCODE.SAL_CODE_DISPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SALATTRRow : global::System.Data.DataRow {
            
            private SALATTRDataTable tableSALATTR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SALATTRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSALATTR = ((SALATTRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SALATTR {
                get {
                    return ((string)(this[this.tableSALATTR.SALATTRColumn]));
                }
                set {
                    this[this.tableSALATTR.SALATTRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ATTR_NAME {
                get {
                    return ((string)(this[this.tableSALATTR.ATTR_NAMEColumn]));
                }
                set {
                    this[this.tableSALATTR.ATTR_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool NOT_DISP {
                get {
                    return ((bool)(this[this.tableSALATTR.NOT_DISPColumn]));
                }
                set {
                    this[this.tableSALATTR.NOT_DISPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BASIC {
                get {
                    return ((bool)(this[this.tableSALATTR.BASICColumn]));
                }
                set {
                    this[this.tableSALATTR.BASICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TYPE {
                get {
                    return ((string)(this[this.tableSALATTR.TYPEColumn]));
                }
                set {
                    this[this.tableSALATTR.TYPEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FLAG {
                get {
                    return ((string)(this[this.tableSALATTR.FLAGColumn]));
                }
                set {
                    this[this.tableSALATTR.FLAGColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool TAX {
                get {
                    return ((bool)(this[this.tableSALATTR.TAXColumn]));
                }
                set {
                    this[this.tableSALATTR.TAXColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SALCODERowChangeEvent : global::System.EventArgs {
            
            private SALCODERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALCODERowChangeEvent(SALCODERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALCODERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SALATTRRowChangeEvent : global::System.EventArgs {
            
            private SALATTRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALATTRRowChangeEvent(SALATTRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SALATTRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace JBHR.Att.dsSalTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALCODETableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SALCODETableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALCODE";
            tableMapping.ColumnMappings.Add("SAL_CODE", "SAL_CODE");
            tableMapping.ColumnMappings.Add("SAL_NAME", "SAL_NAME");
            tableMapping.ColumnMappings.Add("SAL_ATTR", "SAL_ATTR");
            tableMapping.ColumnMappings.Add("KEY_MAN", "KEY_MAN");
            tableMapping.ColumnMappings.Add("KEY_DATE", "KEY_DATE");
            tableMapping.ColumnMappings.Add("SOS_ID", "SOS_ID");
            tableMapping.ColumnMappings.Add("WEL", "WEL");
            tableMapping.ColumnMappings.Add("OT", "OT");
            tableMapping.ColumnMappings.Add("MAX_AMT", "MAX_AMT");
            tableMapping.ColumnMappings.Add("MIN_AMT", "MIN_AMT");
            tableMapping.ColumnMappings.Add("CAL_FREQ", "CAL_FREQ");
            tableMapping.ColumnMappings.Add("CAL_TYPE", "CAL_TYPE");
            tableMapping.ColumnMappings.Add("HRS", "HRS");
            tableMapping.ColumnMappings.Add("MONTHTYPE", "MONTHTYPE");
            tableMapping.ColumnMappings.Add("DEFINEDAYS", "DEFINEDAYS");
            tableMapping.ColumnMappings.Add("ADVPAY", "ADVPAY");
            tableMapping.ColumnMappings.Add("ACCCD", "ACCCD");
            tableMapping.ColumnMappings.Add("ATT", "ATT");
            tableMapping.ColumnMappings.Add("DAILY", "DAILY");
            tableMapping.ColumnMappings.Add("RETIRE", "RETIRE");
            tableMapping.ColumnMappings.Add("FORBANK", "FORBANK");
            tableMapping.ColumnMappings.Add("FORCASH", "FORCASH");
            tableMapping.ColumnMappings.Add("NOTFREQ", "NOTFREQ");
            tableMapping.ColumnMappings.Add("TAXRATE", "TAXRATE");
            tableMapping.ColumnMappings.Add("YEARPAY", "YEARPAY");
            tableMapping.ColumnMappings.Add("ABSPAY", "ABSPAY");
            tableMapping.ColumnMappings.Add("INSLAB", "INSLAB");
            tableMapping.ColumnMappings.Add("LATER", "LATER");
            tableMapping.ColumnMappings.Add("SAL_ENAME", "SAL_ENAME");
            tableMapping.ColumnMappings.Add("BASIC", "BASIC");
            tableMapping.ColumnMappings.Add("OLDRETIRE", "OLDRETIRE");
            tableMapping.ColumnMappings.Add("SALBASD1", "SALBASD1");
            tableMapping.ColumnMappings.Add("SAL_CODE_DISP", "SAL_CODE_DISP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SALCODE] WHERE (([SAL_CODE] = @Original_SAL_CODE) AND ([SAL_NAME] = @Original_SAL_NAME) AND ([SAL_ATTR] = @Original_SAL_ATTR) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] = @Original_KEY_DATE) AND ([SOS_ID] = @Original_SOS_ID) AND ([WEL] = @Original_WEL) AND ([OT] = @Original_OT) AND ([MAX_AMT] = @Original_MAX_AMT) AND ([MIN_AMT] = @Original_MIN_AMT) AND ([CAL_FREQ] = @Original_CAL_FREQ) AND ([CAL_TYPE] = @Original_CAL_TYPE) AND ([HRS] = @Original_HRS) AND ([MONTHTYPE] = @Original_MONTHTYPE) AND ([DEFINEDAYS] = @Original_DEFINEDAYS) AND ([ADVPAY] = @Original_ADVPAY) AND ([ACCCD] = @Original_ACCCD) AND ([ATT] = @Original_ATT) AND ([DAILY] = @Original_DAILY) AND ([RETIRE] = @Original_RETIRE) AND ([FORBANK] = @Original_FORBANK) AND ([FORCASH] = @Original_FORCASH) AND ([NOTFREQ] = @Original_NOTFREQ) AND ([TAXRATE] = @Original_TAXRATE) AND ([YEARPAY] = @Original_YEARPAY) AND ([ABSPAY] = @Original_ABSPAY) AND ([INSLAB] = @Original_INSLAB) AND ([LATER] = @Original_LATER) AND ([SAL_ENAME] = @Original_SAL_ENAME) AND ([OLDRETIRE] = @Original_OLDRETIRE) AND ([SALBASD1] = @Original_SALBASD1) AND ((@IsNull_SAL_CODE_DISP = 1 AND [SAL_CODE_DISP] IS NULL) OR ([SAL_CODE_DISP] = @Original_SAL_CODE_DISP)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAL_CODE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALCODE] ([SAL_CODE], [SAL_NAME], [SAL_ATTR], [KEY_MAN], [KEY_DATE], [SOS_ID], [WEL], [OT], [MAX_AMT], [MIN_AMT], [CAL_FREQ], [CAL_TYPE], [HRS], [MONTHTYPE], [DEFINEDAYS], [ADVPAY], [ACCCD], [ATT], [DAILY], [RETIRE], [FORBANK], [FORCASH], [NOTFREQ], [TAXRATE], [YEARPAY], [ABSPAY], [INSLAB], [LATER], [SAL_ENAME], [OLDRETIRE], [SALBASD1], [SAL_CODE_DISP]) VALUES (@SAL_CODE, @SAL_NAME, @SAL_ATTR, @KEY_MAN, @KEY_DATE, @SOS_ID, @WEL, @OT, @MAX_AMT, @MIN_AMT, @CAL_FREQ, @CAL_TYPE, @HRS, @MONTHTYPE, @DEFINEDAYS, @ADVPAY, @ACCCD, @ATT, @DAILY, @RETIRE, @FORBANK, @FORCASH, @NOTFREQ, @TAXRATE, @YEARPAY, @ABSPAY, @INSLAB, @LATER, @SAL_ENAME, @OLDRETIRE, @SALBASD1, @SAL_CODE_DISP);
SELECT SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP FROM SALCODE WHERE (SAL_CODE = @SAL_CODE)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [SALCODE] SET [SAL_CODE] = @SAL_CODE, [SAL_NAME] = @SAL_NAME, [SAL_ATTR] =" +
                " @SAL_ATTR, [KEY_MAN] = @KEY_MAN, [KEY_DATE] = @KEY_DATE, [SOS_ID] = @SOS_ID, [W" +
                "EL] = @WEL, [OT] = @OT, [MAX_AMT] = @MAX_AMT, [MIN_AMT] = @MIN_AMT, [CAL_FREQ] =" +
                " @CAL_FREQ, [CAL_TYPE] = @CAL_TYPE, [HRS] = @HRS, [MONTHTYPE] = @MONTHTYPE, [DEF" +
                "INEDAYS] = @DEFINEDAYS, [ADVPAY] = @ADVPAY, [ACCCD] = @ACCCD, [ATT] = @ATT, [DAI" +
                "LY] = @DAILY, [RETIRE] = @RETIRE, [FORBANK] = @FORBANK, [FORCASH] = @FORCASH, [N" +
                "OTFREQ] = @NOTFREQ, [TAXRATE] = @TAXRATE, [YEARPAY] = @YEARPAY, [ABSPAY] = @ABSP" +
                "AY, [INSLAB] = @INSLAB, [LATER] = @LATER, [SAL_ENAME] = @SAL_ENAME, [OLDRETIRE] " +
                "= @OLDRETIRE, [SALBASD1] = @SALBASD1, [SAL_CODE_DISP] = @SAL_CODE_DISP WHERE (([" +
                "SAL_CODE] = @Original_SAL_CODE) AND ([SAL_NAME] = @Original_SAL_NAME) AND ([SAL_" +
                "ATTR] = @Original_SAL_ATTR) AND ([KEY_MAN] = @Original_KEY_MAN) AND ([KEY_DATE] " +
                "= @Original_KEY_DATE) AND ([SOS_ID] = @Original_SOS_ID) AND ([WEL] = @Original_W" +
                "EL) AND ([OT] = @Original_OT) AND ([MAX_AMT] = @Original_MAX_AMT) AND ([MIN_AMT]" +
                " = @Original_MIN_AMT) AND ([CAL_FREQ] = @Original_CAL_FREQ) AND ([CAL_TYPE] = @O" +
                "riginal_CAL_TYPE) AND ([HRS] = @Original_HRS) AND ([MONTHTYPE] = @Original_MONTH" +
                "TYPE) AND ([DEFINEDAYS] = @Original_DEFINEDAYS) AND ([ADVPAY] = @Original_ADVPAY" +
                ") AND ([ACCCD] = @Original_ACCCD) AND ([ATT] = @Original_ATT) AND ([DAILY] = @Or" +
                "iginal_DAILY) AND ([RETIRE] = @Original_RETIRE) AND ([FORBANK] = @Original_FORBA" +
                "NK) AND ([FORCASH] = @Original_FORCASH) AND ([NOTFREQ] = @Original_NOTFREQ) AND " +
                "([TAXRATE] = @Original_TAXRATE) AND ([YEARPAY] = @Original_YEARPAY) AND ([ABSPAY" +
                "] = @Original_ABSPAY) AND ([INSLAB] = @Original_INSLAB) AND ([LATER] = @Original" +
                "_LATER) AND ([SAL_ENAME] = @Original_SAL_ENAME) AND ([OLDRETIRE] = @Original_OLD" +
                "RETIRE) AND ([SALBASD1] = @Original_SALBASD1) AND ((@IsNull_SAL_CODE_DISP = 1 AN" +
                "D [SAL_CODE_DISP] IS NULL) OR ([SAL_CODE_DISP] = @Original_SAL_CODE_DISP)));\r\nSE" +
                "LECT SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, " +
                "MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAI" +
                "LY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, " +
                "SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP FROM SALCODE WHERE (SAL_CODE = @SA" +
                "L_CODE)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_MAN", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_MAN", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_KEY_DATE", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "KEY_DATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SOS_ID", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SOS_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_WEL", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "WEL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MAX_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MAX_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MIN_AMT", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "MIN_AMT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_FREQ", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_FREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CAL_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CAL_TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HRS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "HRS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MONTHTYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MONTHTYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DEFINEDAYS", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "DEFINEDAYS", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ADVPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ADVPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ACCCD", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ACCCD", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATT", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DAILY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DAILY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "RETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORBANK", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORBANK", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FORCASH", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FORCASH", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOTFREQ", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOTFREQ", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAXRATE", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 16, 2, "TAXRATE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_YEARPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "YEARPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ABSPAY", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ABSPAY", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INSLAB", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INSLAB", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LATER", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LATER", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_ENAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_ENAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OLDRETIRE", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OLDRETIRE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALBASD1", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALBASD1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAL_CODE_DISP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAL_CODE_DISP", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAL_CODE_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT          SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, 
                            CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, 
                            NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, 
                            SAL_CODE_DISP
FROM              SALCODE
WHERE          (dbo.GetCodeFilter(N'SALCODE', SAL_CODE, @USERID, @COMP, @ADMIN) = 1)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@USERID", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@COMP", global::System.Data.SqlDbType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ADMIN", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT          SALCODE.SAL_CODE, SALCODE.SAL_NAME, SALCODE.SAL_ATTR, SALCODE.KEY_MAN, SALCODE.KEY_DATE, 
                            SALCODE.SOS_ID, SALCODE.WEL, SALCODE.OT, SALCODE.MAX_AMT, SALCODE.MIN_AMT, SALCODE.CAL_FREQ, 
                            SALCODE.CAL_TYPE, SALCODE.HRS, SALCODE.MONTHTYPE, SALCODE.DEFINEDAYS, SALCODE.ADVPAY, 
                            SALCODE.ACCCD, SALCODE.ATT, SALCODE.DAILY, SALCODE.RETIRE, SALCODE.FORBANK, SALCODE.FORCASH, 
                            SALCODE.NOTFREQ, SALCODE.TAXRATE, SALCODE.YEARPAY, SALCODE.ABSPAY, SALCODE.INSLAB, 
                            SALCODE.LATER, SALCODE.SAL_ENAME, SALATTR.BASIC
FROM              SALCODE INNER JOIN
                            SALATTR ON SALCODE.SAL_ATTR = SALATTR.SALATTR
WHERE          (SALATTR.BASIC = @BASIC) ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASIC", global::System.Data.SqlDbType.Bit, 1, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSal.SALCODEDataTable dataTable, string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSal.SALCODEDataTable GetData(string USERID, string COMP, bool ADMIN) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((USERID == null)) {
                throw new global::System.ArgumentNullException("USERID");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(USERID));
            }
            if ((COMP == null)) {
                throw new global::System.ArgumentNullException("COMP");
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(COMP));
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((bool)(ADMIN));
            dsSal.SALCODEDataTable dataTable = new dsSal.SALCODEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByBASIC(dsSal.SALCODEDataTable dataTable, bool BASIC) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(BASIC));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual dsSal.SALCODEDataTable GetDataByBASIC(bool BASIC) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((bool)(BASIC));
            dsSal.SALCODEDataTable dataTable = new dsSal.SALCODEDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSal.SALCODEDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSal dataSet) {
            return this.Adapter.Update(dataSet, "SALCODE");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP) {
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SAL_CODE));
            }
            if ((Original_SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_SAL_NAME));
            }
            if ((Original_SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ATTR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_SAL_ATTR));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_SOS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SOS_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_SOS_ID));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_WEL));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((bool)(Original_OT));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(Original_MAX_AMT));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(Original_MIN_AMT));
            if ((Original_CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_FREQ");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_CAL_FREQ));
            }
            if ((Original_CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_CAL_TYPE));
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_HRS));
            if ((Original_MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_MONTHTYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_MONTHTYPE));
            }
            this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_DEFINEDAYS));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((bool)(Original_ADVPAY));
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_ACCCD));
            }
            this.Adapter.DeleteCommand.Parameters[17].Value = ((bool)(Original_ATT));
            this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_DAILY));
            this.Adapter.DeleteCommand.Parameters[19].Value = ((bool)(Original_RETIRE));
            this.Adapter.DeleteCommand.Parameters[20].Value = ((bool)(Original_FORBANK));
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_FORCASH));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_NOTFREQ));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_TAXRATE));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((bool)(Original_YEARPAY));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_ABSPAY));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((bool)(Original_INSLAB));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((bool)(Original_LATER));
            if ((Original_SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ENAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((string)(Original_SAL_ENAME));
            }
            this.Adapter.DeleteCommand.Parameters[29].Value = ((bool)(Original_OLDRETIRE));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((bool)(Original_SALBASD1));
            if ((Original_SAL_CODE_DISP == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_SAL_CODE_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string SAL_CODE, 
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP) {
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SAL_CODE));
            }
            if ((SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(SAL_NAME));
            }
            if ((SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("SAL_ATTR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SAL_ATTR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((SOS_ID == null)) {
                throw new global::System.ArgumentNullException("SOS_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(SOS_ID));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(WEL));
            this.Adapter.InsertCommand.Parameters[7].Value = ((bool)(OT));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(MAX_AMT));
            this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(MIN_AMT));
            if ((CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("CAL_FREQ");
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CAL_FREQ));
            }
            if ((CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("CAL_TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CAL_TYPE));
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(HRS));
            if ((MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("MONTHTYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(MONTHTYPE));
            }
            this.Adapter.InsertCommand.Parameters[14].Value = ((decimal)(DEFINEDAYS));
            this.Adapter.InsertCommand.Parameters[15].Value = ((bool)(ADVPAY));
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(ACCCD));
            }
            this.Adapter.InsertCommand.Parameters[17].Value = ((bool)(ATT));
            this.Adapter.InsertCommand.Parameters[18].Value = ((bool)(DAILY));
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(RETIRE));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(FORBANK));
            this.Adapter.InsertCommand.Parameters[21].Value = ((bool)(FORCASH));
            this.Adapter.InsertCommand.Parameters[22].Value = ((bool)(NOTFREQ));
            this.Adapter.InsertCommand.Parameters[23].Value = ((decimal)(TAXRATE));
            this.Adapter.InsertCommand.Parameters[24].Value = ((bool)(YEARPAY));
            this.Adapter.InsertCommand.Parameters[25].Value = ((bool)(ABSPAY));
            this.Adapter.InsertCommand.Parameters[26].Value = ((bool)(INSLAB));
            this.Adapter.InsertCommand.Parameters[27].Value = ((bool)(LATER));
            if ((SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("SAL_ENAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = ((string)(SAL_ENAME));
            }
            this.Adapter.InsertCommand.Parameters[29].Value = ((bool)(OLDRETIRE));
            this.Adapter.InsertCommand.Parameters[30].Value = ((bool)(SALBASD1));
            if ((SAL_CODE_DISP == null)) {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = ((string)(SAL_CODE_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAL_CODE, 
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP, 
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP) {
            if ((SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SAL_CODE));
            }
            if ((SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("SAL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(SAL_NAME));
            }
            if ((SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("SAL_ATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SAL_ATTR));
            }
            if ((KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(KEY_DATE));
            if ((SOS_ID == null)) {
                throw new global::System.ArgumentNullException("SOS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(SOS_ID));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(WEL));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((bool)(OT));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(MAX_AMT));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(MIN_AMT));
            if ((CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("CAL_FREQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CAL_FREQ));
            }
            if ((CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("CAL_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CAL_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(HRS));
            if ((MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("MONTHTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(MONTHTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(DEFINEDAYS));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((bool)(ADVPAY));
            if ((ACCCD == null)) {
                throw new global::System.ArgumentNullException("ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(ACCCD));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((bool)(ATT));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((bool)(DAILY));
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(RETIRE));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(FORBANK));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((bool)(FORCASH));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((bool)(NOTFREQ));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(TAXRATE));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((bool)(YEARPAY));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((bool)(ABSPAY));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((bool)(INSLAB));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((bool)(LATER));
            if ((SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("SAL_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(SAL_ENAME));
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((bool)(OLDRETIRE));
            this.Adapter.UpdateCommand.Parameters[30].Value = ((bool)(SALBASD1));
            if ((SAL_CODE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(SAL_CODE_DISP));
            }
            if ((Original_SAL_CODE == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_CODE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_SAL_CODE));
            }
            if ((Original_SAL_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_SAL_NAME));
            }
            if ((Original_SAL_ATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_SAL_ATTR));
            }
            if ((Original_KEY_MAN == null)) {
                throw new global::System.ArgumentNullException("Original_KEY_MAN");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_KEY_MAN));
            }
            this.Adapter.UpdateCommand.Parameters[36].Value = ((System.DateTime)(Original_KEY_DATE));
            if ((Original_SOS_ID == null)) {
                throw new global::System.ArgumentNullException("Original_SOS_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_SOS_ID));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((bool)(Original_WEL));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((bool)(Original_OT));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(Original_MAX_AMT));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(Original_MIN_AMT));
            if ((Original_CAL_FREQ == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_FREQ");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_CAL_FREQ));
            }
            if ((Original_CAL_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_CAL_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_CAL_TYPE));
            }
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(Original_HRS));
            if ((Original_MONTHTYPE == null)) {
                throw new global::System.ArgumentNullException("Original_MONTHTYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(Original_MONTHTYPE));
            }
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(Original_DEFINEDAYS));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((bool)(Original_ADVPAY));
            if ((Original_ACCCD == null)) {
                throw new global::System.ArgumentNullException("Original_ACCCD");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_ACCCD));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((bool)(Original_ATT));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((bool)(Original_DAILY));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((bool)(Original_RETIRE));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((bool)(Original_FORBANK));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((bool)(Original_FORCASH));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((bool)(Original_NOTFREQ));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((decimal)(Original_TAXRATE));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((bool)(Original_YEARPAY));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(Original_ABSPAY));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((bool)(Original_INSLAB));
            this.Adapter.UpdateCommand.Parameters[59].Value = ((bool)(Original_LATER));
            if ((Original_SAL_ENAME == null)) {
                throw new global::System.ArgumentNullException("Original_SAL_ENAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((string)(Original_SAL_ENAME));
            }
            this.Adapter.UpdateCommand.Parameters[61].Value = ((bool)(Original_OLDRETIRE));
            this.Adapter.UpdateCommand.Parameters[62].Value = ((bool)(Original_SALBASD1));
            if ((Original_SAL_CODE_DISP == null)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(Original_SAL_CODE_DISP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string SAL_NAME, 
                    string SAL_ATTR, 
                    string KEY_MAN, 
                    System.DateTime KEY_DATE, 
                    string SOS_ID, 
                    bool WEL, 
                    bool OT, 
                    decimal MAX_AMT, 
                    decimal MIN_AMT, 
                    string CAL_FREQ, 
                    string CAL_TYPE, 
                    decimal HRS, 
                    string MONTHTYPE, 
                    decimal DEFINEDAYS, 
                    bool ADVPAY, 
                    string ACCCD, 
                    bool ATT, 
                    bool DAILY, 
                    bool RETIRE, 
                    bool FORBANK, 
                    bool FORCASH, 
                    bool NOTFREQ, 
                    decimal TAXRATE, 
                    bool YEARPAY, 
                    bool ABSPAY, 
                    bool INSLAB, 
                    bool LATER, 
                    string SAL_ENAME, 
                    bool OLDRETIRE, 
                    bool SALBASD1, 
                    string SAL_CODE_DISP, 
                    string Original_SAL_CODE, 
                    string Original_SAL_NAME, 
                    string Original_SAL_ATTR, 
                    string Original_KEY_MAN, 
                    System.DateTime Original_KEY_DATE, 
                    string Original_SOS_ID, 
                    bool Original_WEL, 
                    bool Original_OT, 
                    decimal Original_MAX_AMT, 
                    decimal Original_MIN_AMT, 
                    string Original_CAL_FREQ, 
                    string Original_CAL_TYPE, 
                    decimal Original_HRS, 
                    string Original_MONTHTYPE, 
                    decimal Original_DEFINEDAYS, 
                    bool Original_ADVPAY, 
                    string Original_ACCCD, 
                    bool Original_ATT, 
                    bool Original_DAILY, 
                    bool Original_RETIRE, 
                    bool Original_FORBANK, 
                    bool Original_FORCASH, 
                    bool Original_NOTFREQ, 
                    decimal Original_TAXRATE, 
                    bool Original_YEARPAY, 
                    bool Original_ABSPAY, 
                    bool Original_INSLAB, 
                    bool Original_LATER, 
                    string Original_SAL_ENAME, 
                    bool Original_OLDRETIRE, 
                    bool Original_SALBASD1, 
                    string Original_SAL_CODE_DISP) {
            return this.Update(Original_SAL_CODE, SAL_NAME, SAL_ATTR, KEY_MAN, KEY_DATE, SOS_ID, WEL, OT, MAX_AMT, MIN_AMT, CAL_FREQ, CAL_TYPE, HRS, MONTHTYPE, DEFINEDAYS, ADVPAY, ACCCD, ATT, DAILY, RETIRE, FORBANK, FORCASH, NOTFREQ, TAXRATE, YEARPAY, ABSPAY, INSLAB, LATER, SAL_ENAME, OLDRETIRE, SALBASD1, SAL_CODE_DISP, Original_SAL_CODE, Original_SAL_NAME, Original_SAL_ATTR, Original_KEY_MAN, Original_KEY_DATE, Original_SOS_ID, Original_WEL, Original_OT, Original_MAX_AMT, Original_MIN_AMT, Original_CAL_FREQ, Original_CAL_TYPE, Original_HRS, Original_MONTHTYPE, Original_DEFINEDAYS, Original_ADVPAY, Original_ACCCD, Original_ATT, Original_DAILY, Original_RETIRE, Original_FORBANK, Original_FORCASH, Original_NOTFREQ, Original_TAXRATE, Original_YEARPAY, Original_ABSPAY, Original_INSLAB, Original_LATER, Original_SAL_ENAME, Original_OLDRETIRE, Original_SALBASD1, Original_SAL_CODE_DISP);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SALATTRTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SALATTRTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SALATTR";
            tableMapping.ColumnMappings.Add("SALATTR", "SALATTR");
            tableMapping.ColumnMappings.Add("ATTR_NAME", "ATTR_NAME");
            tableMapping.ColumnMappings.Add("NOT_DISP", "NOT_DISP");
            tableMapping.ColumnMappings.Add("BASIC", "BASIC");
            tableMapping.ColumnMappings.Add("TYPE", "TYPE");
            tableMapping.ColumnMappings.Add("FLAG", "FLAG");
            tableMapping.ColumnMappings.Add("TAX", "TAX");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [SALATTR] WHERE (([SALATTR] = @Original_SALATTR) AND ([ATTR_NAME] = @Original_ATTR_NAME) AND ([NOT_DISP] = @Original_NOT_DISP) AND ([BASIC] = @Original_BASIC) AND ([TYPE] = @Original_TYPE) AND ([FLAG] = @Original_FLAG) AND ([TAX] = @Original_TAX))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [SALATTR] ([SALATTR], [ATTR_NAME], [NOT_DISP], [BASIC], [TYPE], [FLAG], [TAX]) VALUES (@SALATTR, @ATTR_NAME, @NOT_DISP, @BASIC, @TYPE, @FLAG, @TAX);
SELECT SALATTR, ATTR_NAME, NOT_DISP, BASIC, TYPE, FLAG, TAX FROM SALATTR WHERE (SALATTR = @SALATTR)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [SALATTR] SET [SALATTR] = @SALATTR, [ATTR_NAME] = @ATTR_NAME, [NOT_DISP] = @NOT_DISP, [BASIC] = @BASIC, [TYPE] = @TYPE, [FLAG] = @FLAG, [TAX] = @TAX WHERE (([SALATTR] = @Original_SALATTR) AND ([ATTR_NAME] = @Original_ATTR_NAME) AND ([NOT_DISP] = @Original_NOT_DISP) AND ([BASIC] = @Original_BASIC) AND ([TYPE] = @Original_TYPE) AND ([FLAG] = @Original_FLAG) AND ([TAX] = @Original_TAX));
SELECT SALATTR, ATTR_NAME, NOT_DISP, BASIC, TYPE, FLAG, TAX FROM SALATTR WHERE (SALATTR = @SALATTR)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SALATTR", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SALATTR", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ATTR_NAME", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ATTR_NAME", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NOT_DISP", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NOT_DISP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_BASIC", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "BASIC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TYPE", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TYPE", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FLAG", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FLAG", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TAX", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TAX", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::JBHR.Properties.Settings.Default.JBHRConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT          SALATTR.*\r\nFROM              SALATTR";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsSal.SALATTRDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsSal.SALATTRDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsSal.SALATTRDataTable dataTable = new dsSal.SALATTRDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSal.SALATTRDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsSal dataSet) {
            return this.Adapter.Update(dataSet, "SALATTR");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_SALATTR, string Original_ATTR_NAME, bool Original_NOT_DISP, bool Original_BASIC, string Original_TYPE, string Original_FLAG, bool Original_TAX) {
            if ((Original_SALATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SALATTR");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_SALATTR));
            }
            if ((Original_ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ATTR_NAME");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ATTR_NAME));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((bool)(Original_NOT_DISP));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_BASIC));
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_TYPE));
            }
            if ((Original_FLAG == null)) {
                throw new global::System.ArgumentNullException("Original_FLAG");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_FLAG));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((bool)(Original_TAX));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string SALATTR, string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX) {
            if ((SALATTR == null)) {
                throw new global::System.ArgumentNullException("SALATTR");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(SALATTR));
            }
            if ((ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("ATTR_NAME");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ATTR_NAME));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(NOT_DISP));
            this.Adapter.InsertCommand.Parameters[3].Value = ((bool)(BASIC));
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(TYPE));
            }
            if ((FLAG == null)) {
                throw new global::System.ArgumentNullException("FLAG");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(FLAG));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((bool)(TAX));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string SALATTR, string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX, string Original_SALATTR, string Original_ATTR_NAME, bool Original_NOT_DISP, bool Original_BASIC, string Original_TYPE, string Original_FLAG, bool Original_TAX) {
            if ((SALATTR == null)) {
                throw new global::System.ArgumentNullException("SALATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(SALATTR));
            }
            if ((ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("ATTR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ATTR_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(NOT_DISP));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((bool)(BASIC));
            if ((TYPE == null)) {
                throw new global::System.ArgumentNullException("TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(TYPE));
            }
            if ((FLAG == null)) {
                throw new global::System.ArgumentNullException("FLAG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(FLAG));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((bool)(TAX));
            if ((Original_SALATTR == null)) {
                throw new global::System.ArgumentNullException("Original_SALATTR");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_SALATTR));
            }
            if ((Original_ATTR_NAME == null)) {
                throw new global::System.ArgumentNullException("Original_ATTR_NAME");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_ATTR_NAME));
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(Original_NOT_DISP));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((bool)(Original_BASIC));
            if ((Original_TYPE == null)) {
                throw new global::System.ArgumentNullException("Original_TYPE");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_TYPE));
            }
            if ((Original_FLAG == null)) {
                throw new global::System.ArgumentNullException("Original_FLAG");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_FLAG));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((bool)(Original_TAX));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ATTR_NAME, bool NOT_DISP, bool BASIC, string TYPE, string FLAG, bool TAX, string Original_SALATTR, string Original_ATTR_NAME, bool Original_NOT_DISP, bool Original_BASIC, string Original_TYPE, string Original_FLAG, bool Original_TAX) {
            return this.Update(Original_SALATTR, ATTR_NAME, NOT_DISP, BASIC, TYPE, FLAG, TAX, Original_SALATTR, Original_ATTR_NAME, Original_NOT_DISP, Original_BASIC, Original_TYPE, Original_FLAG, Original_TAX);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private SALCODETableAdapter _sALCODETableAdapter;
        
        private SALATTRTableAdapter _sALATTRTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALCODETableAdapter SALCODETableAdapter {
            get {
                return this._sALCODETableAdapter;
            }
            set {
                this._sALCODETableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public SALATTRTableAdapter SALATTRTableAdapter {
            get {
                return this._sALATTRTableAdapter;
            }
            set {
                this._sALATTRTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._sALCODETableAdapter != null) 
                            && (this._sALCODETableAdapter.Connection != null))) {
                    return this._sALCODETableAdapter.Connection;
                }
                if (((this._sALATTRTableAdapter != null) 
                            && (this._sALATTRTableAdapter.Connection != null))) {
                    return this._sALATTRTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._sALCODETableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._sALATTRTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsSal dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sALATTRTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALATTR.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALATTRTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsSal dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._sALATTRTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALATTR.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALATTRTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsSal dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._sALCODETableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALCODE.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALCODETableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._sALATTRTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.SALATTR.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._sALATTRTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsSal dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._sALCODETableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALCODETableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            if (((this._sALATTRTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._sALATTRTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("所有以 TableAdapterManager 管理的 TableAdapters 必須使用相同的連接字串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 未包含連接資訊。請將每個 TableAdapterManager 的 TableAdapter 屬性設成有效的 Table" +
                        "Adapter 執行個體。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("無法開始交易。目前的資料連接不支援交易或是目前的狀態不允許交易開始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._sALCODETableAdapter != null)) {
                    revertConnections.Add(this._sALCODETableAdapter, this._sALCODETableAdapter.Connection);
                    this._sALCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALCODETableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALCODETableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALCODETableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALCODETableAdapter.Adapter);
                    }
                }
                if ((this._sALATTRTableAdapter != null)) {
                    revertConnections.Add(this._sALATTRTableAdapter, this._sALATTRTableAdapter.Connection);
                    this._sALATTRTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._sALATTRTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._sALATTRTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._sALATTRTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._sALATTRTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._sALCODETableAdapter != null)) {
                    this._sALCODETableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALCODETableAdapter]));
                    this._sALCODETableAdapter.Transaction = null;
                }
                if ((this._sALATTRTableAdapter != null)) {
                    this._sALATTRTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._sALATTRTableAdapter]));
                    this._sALATTRTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591