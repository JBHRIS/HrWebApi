<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAw
        BgAAAk1TRnQBSQFMAgEBAgEAAQQBAAEEAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEYBgABDCEAA3cBawJqA/oeABv8A+14AAP+A5cBiQEkASEBjwEsAScDyjYAA+14AAO5
        A9gBjAEnASMB4AGzAZUBqAFWAUoBfwFyAXEYAAHfAuABuQGMAYYBuQGMAYYB3wLgCQACjQHKAwAD7XgA
        Az0DugGNASkBJQHcAa0BkQHmAb4BngHKAY4BeAGSATkBNAPvEgAM0QYAAhoB0AIaAdECagG/A+l1AAP2
        A9MDpgGOASoBJQHOAZUBfgHaAakBjQHjAbkBmgHhAbQBlwGhAUoBQAOmGwACiAHIAhoB0QIaAdECFwHF
        AhoB0QKWAaB1AAOMA9wDmgGNASoBJQG+AXsBaAHKAY4BeAHVAaEBhwHfAbIBlQHmAb4BngHCAYEBbQGH
        AVwBWwP9CQAD2AHJAbEBsAHJAbEBsAPYAwACGgG9AqoB1AP+AhoB0QIaAdEClAGecgADVAPeA5QBjAEo
        ASQBrAFeAVABuQFyAWEBxQGFAXEB0AGZAYEB2wGrAY8B5AG6AZsB3QGuAZEBmgE/ATYhAAL9Af4CGgHR
        AhoB0QIdAadsAAbgA98DrgGcAUYBQwG0AXEBawGoAVgBTQGzAWgBWAG/AX0BagHLAZABegHWAaMBiAHg
        AbQBlgHTAZ0BhAkAA+MB0wHAAb4B0wHAAb4D4w8AAXoBZAGKAhoB0QEXARQBrmwAA2AD4QPfBLMBcgFw
        AccBlwGVAbwBgQF+AbYBdQFvAa0BYQFUAbgBcgFgAcYBhwFyAdEBmgGBAdQBngGEAewB5QHiBgAb/gHD
        AZEBfAGEAWkBjQIVAb0B1wG+AbZmAAP+A5kD4wPgA7MB0AGnAaYB4QHHAcYB1QGwAa8ByAGXAZYBvAGB
        AX8BqwFeAVcBrQFeAVABvgF7AWgBygGOAXgBoQFlAWEGAAOZA+ID4AObAbQBdAFyAccBlgGVAboBfgF7
        AbYBdAFsAawBXgFRAbwBdwFlAcoBjwF5AdcBpAGJAZgBRQFBZgADugPmA+MD4AP3AZIBMwExAe0B3gHd
        AeoC2AHhAscB1QGxAbAByAGXAZYBuQF8AXgBnAFDAToBrwFjAVQBkAEvASkGAANiA+MD4AO0AdIBqgGp
        AeQCzAHXAbQBswHIAZcBlgG/AYYBgwGjAVABSAGvAWEBUwHCAYEBbgGcAUEBOWYAAz0D5wPjA+AD3gPk
        A/oB0QG8AbsBiwEoASUB2gK6AeEByAHHAdUBsQGwAcgBmAGWAbsBgQF+AacBWwFXAwAD7QPnA+MD4QPe
        AbYBhgGFAaUBWAFWAewB3QHcAeQBzQHMAdwBvQG8Ac0BoQGgAb0BgwGBAZsBQAE3AZwBQgE5AfYB8wHx
        YwAD3AHgAdYB1QG9AXUBbwHRAbQBsgPfA9wD2wPYA9cD4wP1AacBbAFrAbQBcwFyAdYBsgGxAcgBmAGW
        AwADZgPnA+QD4gPfA9wD2APqAegC5AGrAXMBcQG6AX4BfAHcAb4BvQHNAaIBoQG9AYQBggGpAYwBi2MA
        A54BjgEpASYBlwE3ATIBpgFMAUYBuAFmAV8BygGAAXgD2wPZA9gD1wPWA9UD+wPrAdoBzwHOAwADsAGf
        AUIBPQG2AWMBXAHDAXcBbwHRAYkBgQHCAX4BdwPbA9gG1wPWA9IB3wLXAZoBSQFHAZQBPgE7ZgAB0ALC
        AcQBkAGPAaIBUgFQAYoBJQEiAZABMAEtAeYC5QP6A7YDygPWA8IPAAG/Aq0BrwFrAWkBjAEpASYBiQEi
        AR8BiwEmASIDtQO4BtcD1v8ALQABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEA
        AfgB/wHAAQ8EAAHwAX8B/wHvBAAB8AE/AcMBrwQAAfABDwHDAQ8EAAHgAQcB/AEPBAAB4AEBAcIBBwQA
        AeABAQH/AcMEAAHAAQEBwwHjBAABwAEAAcABAQQAAYABAAHAAQEEAAGAAQABwAEBBAABgAEAAYAFAAGA
        AQABgAUAAYABAAGABQABwAEHAcABDwQABP8EAAs=
</value>
  </data>
  <metadata name="imgList2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>110, 17</value>
  </metadata>
  <data name="imgList2.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAW
        BAAAAk1TRnQBSQFMAwEBAAEEAQABBAEAASABAAEgAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABGAYAATD/AP8A/wD/AP8A/wD/AP8A/wD/AKgAA/f/AH4AA8//AHsAA/wDuv8AewAD2gOo
        /wB4AAP+A8MDqP8AeAAD5QOqA6j/AHgAA84GqP8AeAADrgao/wB4AAOxA60DqwOoA5MD9gb1CQAD8wPy
        CPEE8APvA+4J7QPsBusD6gbpA/X/ACcAA/oDxgPCA78DuAOGA/UJ9AbyBPEB8AHxBvAD7wbuA+0J7ALr
        BOoG6QboA/T/ACcAA/QD0wPPA8sDxAOCBvQG8wPyBvEG8AbvCe0G7APrA+oG6QfoAecB6APz/wAnAAP1
        A+wD6QPlA94DhwPrA/MD8jkAA+YD8/8AJwAD/AP3A/QD8QPqA4wD5gPyBvEG8APvBu4G7QbsA+sE6gXp
        CegD5wbmA/L/ADMAA/4DmwPbA/EG8AbvA+4G7QbsA+sG6gTpAegB6QPoBucD5gnlA/T/ADYAA7gD1Qnw
        Bu4G7QbsA+sG6gbpBugD5wbmBuUD5AP1/wA2AAPkA8oG7xsAA+kG6AbnAeUB5gflCeQD+P8ANgAD5gPE
        A+8D7gbtBuwD6wbqA+kB6ALpEgAG5QbkA+MD+v8ANgAD7QO4Ce0D7AbrA+oJ6QPoBucD5gblCeQD4wbi
        A/wD/f8AMwAD9QOuBuwVAAPoAuYB5wPmBuUJ5AbjA+IG4QP7A/3/ADMAA/sDqAPsBusD6gbpBugG5wPm
        CeUG5AbjA+IJ4QP7A/z/ADYAA58D6wPqAekB6gTpBugG5wbmA+UC5AHlBuQG4wbiBuEG4AP5A/v/ADYA
        A5sD6gbpCegD5wPmAeUB5gTlCeQG4wPiDOEG4AP3A/v/ADYAA/cD8wP4A/YD8QPuA+0D8wPxA+4D7APm
        A+QD4wbiBuEM4APfA/UD+f8ASAAD/APRA8MDvQO8A9AD4gPtA/ED7wPsA+YD4wPhA+AG3wP0A/n/AHIA
        A+gD3QPYA+ID+P8AIQABQgFNAT4HAAE+AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD/wEABP8MAAT/
        DAAE/wwABP8MAAT/DAAB+AFwAocMAAH8AfkBMwGHDAAB9AH5ATMBAwwAAfQBmQEzAQMMAAHkARkBMgFJ
        DAAB5AGZAYYBSQwAAcQB+QL/DAABxAHJAv8MAAHAAQEC/wwAAccD/wwAAcACAAEBDAABgAIAAQEMAAGA
        AgABAQwAAYACAAEBDAABgAIAAQEMAAH4AgABAQwAAfwCAAEBDAAB/AIAAQEMAAH8AgABAQwAAfwPAAH8
        DwAB/A8AAf4PAAH+DwAB/g8AAf8B+A4AA/8B4AwACw==
</value>
  </data>
</root>